/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Expert(TM) in wire load mode
// Version   : P-2019.03-SP5-6
// Date      : Thu May  8 20:14:05 2025
/////////////////////////////////////////////////////////////


module WBUF_ARRAY_SIZE4_DATA_W32_15 ( clk, nRST, WBUF_wr_en, WBUF_data_in, 
        WBUF_data_out );
  input [31:0] WBUF_data_in;
  output [31:0] WBUF_data_out;
  input clk, nRST, WBUF_wr_en;
  wire   n1, n2, n3, n4, n5, n6;

  EDFCNQD1 \WBUF_data_out_reg[31]  ( .D(WBUF_data_in[31]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[31]) );
  EDFCNQD1 \WBUF_data_out_reg[30]  ( .D(WBUF_data_in[30]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[30]) );
  EDFCNQD1 \WBUF_data_out_reg[29]  ( .D(WBUF_data_in[29]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[29]) );
  EDFCNQD1 \WBUF_data_out_reg[28]  ( .D(WBUF_data_in[28]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[28]) );
  EDFCNQD1 \WBUF_data_out_reg[27]  ( .D(WBUF_data_in[27]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[27]) );
  EDFCNQD1 \WBUF_data_out_reg[26]  ( .D(WBUF_data_in[26]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[26]) );
  EDFCNQD1 \WBUF_data_out_reg[25]  ( .D(WBUF_data_in[25]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[25]) );
  EDFCNQD1 \WBUF_data_out_reg[24]  ( .D(WBUF_data_in[24]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[24]) );
  EDFCNQD1 \WBUF_data_out_reg[23]  ( .D(WBUF_data_in[23]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[23]) );
  EDFCNQD1 \WBUF_data_out_reg[22]  ( .D(WBUF_data_in[22]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[22]) );
  EDFCNQD1 \WBUF_data_out_reg[21]  ( .D(WBUF_data_in[21]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[21]) );
  EDFCNQD1 \WBUF_data_out_reg[20]  ( .D(WBUF_data_in[20]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[20]) );
  EDFCNQD1 \WBUF_data_out_reg[19]  ( .D(WBUF_data_in[19]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[19]) );
  EDFCNQD1 \WBUF_data_out_reg[18]  ( .D(WBUF_data_in[18]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[18]) );
  EDFCNQD1 \WBUF_data_out_reg[17]  ( .D(WBUF_data_in[17]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[17]) );
  EDFCNQD1 \WBUF_data_out_reg[16]  ( .D(WBUF_data_in[16]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[16]) );
  EDFCNQD1 \WBUF_data_out_reg[15]  ( .D(WBUF_data_in[15]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[15]) );
  EDFCNQD1 \WBUF_data_out_reg[14]  ( .D(WBUF_data_in[14]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[14]) );
  EDFCNQD1 \WBUF_data_out_reg[13]  ( .D(WBUF_data_in[13]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[13]) );
  EDFCNQD1 \WBUF_data_out_reg[12]  ( .D(WBUF_data_in[12]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[12]) );
  EDFCNQD1 \WBUF_data_out_reg[11]  ( .D(WBUF_data_in[11]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[11]) );
  EDFCNQD1 \WBUF_data_out_reg[10]  ( .D(WBUF_data_in[10]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[10]) );
  EDFCNQD1 \WBUF_data_out_reg[9]  ( .D(WBUF_data_in[9]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[9]) );
  EDFCNQD1 \WBUF_data_out_reg[8]  ( .D(WBUF_data_in[8]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[8]) );
  EDFCNQD1 \WBUF_data_out_reg[7]  ( .D(WBUF_data_in[7]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[7]) );
  EDFCNQD1 \WBUF_data_out_reg[6]  ( .D(WBUF_data_in[6]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[6]) );
  EDFCNQD1 \WBUF_data_out_reg[5]  ( .D(WBUF_data_in[5]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[5]) );
  EDFCNQD1 \WBUF_data_out_reg[4]  ( .D(WBUF_data_in[4]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[4]) );
  EDFCNQD1 \WBUF_data_out_reg[3]  ( .D(WBUF_data_in[3]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[3]) );
  EDFCNQD1 \WBUF_data_out_reg[2]  ( .D(WBUF_data_in[2]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[2]) );
  EDFCNQD1 \WBUF_data_out_reg[1]  ( .D(WBUF_data_in[1]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[1]) );
  EDFCNQD1 \WBUF_data_out_reg[0]  ( .D(WBUF_data_in[0]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[0]) );
  CKBD1 U2 ( .I(WBUF_wr_en), .Z(n5) );
  CKBD1 U3 ( .I(WBUF_wr_en), .Z(n4) );
  CKBD1 U4 ( .I(nRST), .Z(n1) );
  CKBD1 U5 ( .I(nRST), .Z(n2) );
  CKBD1 U6 ( .I(nRST), .Z(n3) );
  CKBD1 U7 ( .I(WBUF_wr_en), .Z(n6) );
endmodule


module w_mux_15 ( clk, nRST, input_bitwidth, rd_en, data_in, data_out );
  input [2:0] input_bitwidth;
  input [31:0] data_in;
  output [31:0] data_out;
  input clk, nRST, rd_en;
  wire   N40, N41, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50,
         n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64,
         n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78,
         n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92,
         n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n1,
         n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n105, n106, n107, n108, n109,
         n110, n111, n112;
  wire   [1:0] rd_ptr;
  wire   [31:0] next_data_out;

  EDFCNQD1 \rd_ptr_reg[0]  ( .D(N40), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[0]) );
  EDFCNQD1 \rd_ptr_reg[1]  ( .D(N41), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[1]) );
  DFCNQD1 \data_out_reg[31]  ( .D(next_data_out[31]), .CP(clk), .CDN(n1), .Q(
        data_out[31]) );
  DFCNQD1 \data_out_reg[30]  ( .D(next_data_out[30]), .CP(clk), .CDN(n3), .Q(
        data_out[30]) );
  DFCNQD1 \data_out_reg[29]  ( .D(next_data_out[29]), .CP(clk), .CDN(n3), .Q(
        data_out[29]) );
  DFCNQD1 \data_out_reg[28]  ( .D(next_data_out[28]), .CP(clk), .CDN(n3), .Q(
        data_out[28]) );
  DFCNQD1 \data_out_reg[27]  ( .D(next_data_out[27]), .CP(clk), .CDN(n3), .Q(
        data_out[27]) );
  DFCNQD1 \data_out_reg[26]  ( .D(next_data_out[26]), .CP(clk), .CDN(n3), .Q(
        data_out[26]) );
  DFCNQD1 \data_out_reg[25]  ( .D(next_data_out[25]), .CP(clk), .CDN(n2), .Q(
        data_out[25]) );
  DFCNQD1 \data_out_reg[24]  ( .D(next_data_out[24]), .CP(clk), .CDN(n2), .Q(
        data_out[24]) );
  DFCNQD1 \data_out_reg[23]  ( .D(next_data_out[23]), .CP(clk), .CDN(n3), .Q(
        data_out[23]) );
  DFCNQD1 \data_out_reg[22]  ( .D(next_data_out[22]), .CP(clk), .CDN(n2), .Q(
        data_out[22]) );
  DFCNQD1 \data_out_reg[21]  ( .D(next_data_out[21]), .CP(clk), .CDN(n2), .Q(
        data_out[21]) );
  DFCNQD1 \data_out_reg[20]  ( .D(next_data_out[20]), .CP(clk), .CDN(n2), .Q(
        data_out[20]) );
  DFCNQD1 \data_out_reg[19]  ( .D(next_data_out[19]), .CP(clk), .CDN(n2), .Q(
        data_out[19]) );
  DFCNQD1 \data_out_reg[18]  ( .D(next_data_out[18]), .CP(clk), .CDN(n2), .Q(
        data_out[18]) );
  DFCNQD1 \data_out_reg[17]  ( .D(next_data_out[17]), .CP(clk), .CDN(n2), .Q(
        data_out[17]) );
  DFCNQD1 \data_out_reg[16]  ( .D(next_data_out[16]), .CP(clk), .CDN(n2), .Q(
        data_out[16]) );
  DFCNQD1 \data_out_reg[15]  ( .D(next_data_out[15]), .CP(clk), .CDN(n2), .Q(
        data_out[15]) );
  DFCNQD1 \data_out_reg[14]  ( .D(next_data_out[14]), .CP(clk), .CDN(n2), .Q(
        data_out[14]) );
  DFCNQD1 \data_out_reg[13]  ( .D(next_data_out[13]), .CP(clk), .CDN(n2), .Q(
        data_out[13]) );
  DFCNQD1 \data_out_reg[12]  ( .D(next_data_out[12]), .CP(clk), .CDN(n1), .Q(
        data_out[12]) );
  DFCNQD1 \data_out_reg[11]  ( .D(next_data_out[11]), .CP(clk), .CDN(n1), .Q(
        data_out[11]) );
  DFCNQD1 \data_out_reg[10]  ( .D(next_data_out[10]), .CP(clk), .CDN(n1), .Q(
        data_out[10]) );
  DFCNQD1 \data_out_reg[9]  ( .D(next_data_out[9]), .CP(clk), .CDN(n1), .Q(
        data_out[9]) );
  DFCNQD1 \data_out_reg[8]  ( .D(next_data_out[8]), .CP(clk), .CDN(n1), .Q(
        data_out[8]) );
  DFCNQD1 \data_out_reg[7]  ( .D(next_data_out[7]), .CP(clk), .CDN(n1), .Q(
        data_out[7]) );
  DFCNQD1 \data_out_reg[6]  ( .D(next_data_out[6]), .CP(clk), .CDN(n1), .Q(
        data_out[6]) );
  DFCNQD1 \data_out_reg[5]  ( .D(next_data_out[5]), .CP(clk), .CDN(n1), .Q(
        data_out[5]) );
  DFCNQD1 \data_out_reg[4]  ( .D(next_data_out[4]), .CP(clk), .CDN(n1), .Q(
        data_out[4]) );
  DFCNQD1 \data_out_reg[3]  ( .D(next_data_out[3]), .CP(clk), .CDN(n1), .Q(
        data_out[3]) );
  DFCNQD1 \data_out_reg[2]  ( .D(next_data_out[2]), .CP(clk), .CDN(n1), .Q(
        data_out[2]) );
  DFCNQD1 \data_out_reg[1]  ( .D(next_data_out[1]), .CP(clk), .CDN(n1), .Q(
        data_out[1]) );
  DFCNQD1 \data_out_reg[0]  ( .D(next_data_out[0]), .CP(clk), .CDN(n2), .Q(
        data_out[0]) );
  OA21D1 U20 ( .A1(n56), .A2(n57), .B(n58), .Z(n47) );
  OA21D1 U23 ( .A1(n61), .A2(n57), .B(n62), .Z(n48) );
  OA21D1 U26 ( .A1(n63), .A2(n57), .B(n64), .Z(n50) );
  OA21D1 U29 ( .A1(n65), .A2(n57), .B(n66), .Z(n51) );
  OA21D1 U32 ( .A1(n67), .A2(n57), .B(n68), .Z(n40) );
  OA21D1 U35 ( .A1(n69), .A2(n57), .B(n70), .Z(n52) );
  OA21D1 U38 ( .A1(n71), .A2(n57), .B(n72), .Z(n53) );
  OA21D1 U41 ( .A1(n73), .A2(n57), .B(n68), .Z(n54) );
  OA21D1 U47 ( .A1(n78), .A2(n57), .B(n79), .Z(n55) );
  OA21D1 U50 ( .A1(n80), .A2(n57), .B(n58), .Z(n42) );
  OA21D1 U56 ( .A1(n83), .A2(n57), .B(n62), .Z(n43) );
  OA21D1 U62 ( .A1(n86), .A2(n57), .B(n64), .Z(n44) );
  OA21D1 U68 ( .A1(n89), .A2(n57), .B(n66), .Z(n45) );
  OA21D1 U74 ( .A1(n92), .A2(n57), .B(n70), .Z(n46) );
  OA21D1 U80 ( .A1(n95), .A2(n57), .B(n72), .Z(n49) );
  OA21D1 U86 ( .A1(n98), .A2(n57), .B(n79), .Z(n41) );
  AN2XD1 U90 ( .A1(rd_ptr[1]), .A2(rd_ptr[0]), .Z(n77) );
  AN4XD1 U91 ( .A1(input_bitwidth[2]), .A2(rd_en), .A3(n5), .A4(n7), .Z(n74)
         );
  MAOI22D1 U97 ( .A1(n102), .A2(n12), .B1(n102), .B2(n103), .ZN(n104) );
  NR2D1 U3 ( .A1(n13), .A2(rd_ptr[1]), .ZN(n59) );
  NR2D1 U4 ( .A1(rd_ptr[0]), .A2(rd_ptr[1]), .ZN(n60) );
  AOI21D1 U5 ( .A1(n12), .A2(n101), .B(n104), .ZN(N41) );
  OAI21D1 U6 ( .A1(n111), .A2(n10), .B(n40), .ZN(next_data_out[1]) );
  OAI21D1 U7 ( .A1(n37), .A2(n10), .B(n40), .ZN(next_data_out[9]) );
  OAI21D1 U8 ( .A1(n8), .A2(n112), .B(n41), .ZN(next_data_out[0]) );
  OAI21D1 U9 ( .A1(n9), .A2(n110), .B(n49), .ZN(next_data_out[2]) );
  OAI21D1 U10 ( .A1(n9), .A2(n109), .B(n46), .ZN(next_data_out[3]) );
  OAI21D1 U11 ( .A1(n9), .A2(n108), .B(n45), .ZN(next_data_out[4]) );
  OAI21D1 U12 ( .A1(n8), .A2(n36), .B(n49), .ZN(next_data_out[10]) );
  OAI21D1 U13 ( .A1(n8), .A2(n35), .B(n46), .ZN(next_data_out[11]) );
  OAI21D1 U14 ( .A1(n8), .A2(n34), .B(n45), .ZN(next_data_out[12]) );
  OAI21D1 U15 ( .A1(n9), .A2(n33), .B(n44), .ZN(next_data_out[13]) );
  OAI21D1 U16 ( .A1(n8), .A2(n32), .B(n43), .ZN(next_data_out[14]) );
  OAI21D1 U17 ( .A1(n8), .A2(n31), .B(n42), .ZN(next_data_out[15]) );
  OAI21D1 U18 ( .A1(n10), .A2(n107), .B(n44), .ZN(next_data_out[5]) );
  OAI21D1 U19 ( .A1(n10), .A2(n106), .B(n43), .ZN(next_data_out[6]) );
  OAI21D1 U21 ( .A1(n10), .A2(n105), .B(n42), .ZN(next_data_out[7]) );
  OAI21D1 U22 ( .A1(n10), .A2(n38), .B(n41), .ZN(next_data_out[8]) );
  CKBD1 U24 ( .I(n39), .Z(n8) );
  CKBD1 U25 ( .I(n39), .Z(n9) );
  CKBD1 U27 ( .I(n39), .Z(n10) );
  INVD1 U28 ( .I(n6), .ZN(n7) );
  INVD1 U30 ( .I(n4), .ZN(n5) );
  INVD1 U31 ( .I(n101), .ZN(n11) );
  INVD1 U33 ( .I(n60), .ZN(n14) );
  INVD1 U34 ( .I(n59), .ZN(n12) );
  ND2D1 U36 ( .A1(n103), .A2(rd_en), .ZN(n39) );
  NR3D0 U37 ( .A1(n4), .A2(input_bitwidth[2]), .A3(n7), .ZN(n102) );
  NR3D0 U39 ( .A1(n6), .A2(input_bitwidth[2]), .A3(n5), .ZN(n103) );
  ND2D1 U40 ( .A1(rd_en), .A2(n102), .ZN(n57) );
  ND2D1 U42 ( .A1(n74), .A2(n99), .ZN(n79) );
  OAI221D0 U43 ( .A1(n12), .A2(n38), .B1(n14), .B2(n112), .C(n100), .ZN(n99)
         );
  AOI22D1 U44 ( .A1(data_in[24]), .A2(n77), .B1(data_in[16]), .B2(n11), .ZN(
        n100) );
  ND2D1 U45 ( .A1(n74), .A2(n75), .ZN(n68) );
  OAI221D0 U46 ( .A1(n12), .A2(n37), .B1(n14), .B2(n111), .C(n76), .ZN(n75) );
  AOI22D1 U48 ( .A1(data_in[25]), .A2(n77), .B1(n11), .B2(data_in[17]), .ZN(
        n76) );
  ND2D1 U49 ( .A1(n74), .A2(n96), .ZN(n72) );
  OAI221D0 U51 ( .A1(n12), .A2(n36), .B1(n14), .B2(n110), .C(n97), .ZN(n96) );
  AOI22D1 U52 ( .A1(data_in[26]), .A2(n77), .B1(data_in[18]), .B2(n11), .ZN(
        n97) );
  ND2D1 U53 ( .A1(n74), .A2(n93), .ZN(n70) );
  OAI221D0 U54 ( .A1(n12), .A2(n35), .B1(n14), .B2(n109), .C(n94), .ZN(n93) );
  AOI22D1 U55 ( .A1(data_in[27]), .A2(n77), .B1(data_in[19]), .B2(n11), .ZN(
        n94) );
  ND2D1 U57 ( .A1(n74), .A2(n90), .ZN(n66) );
  OAI221D0 U58 ( .A1(n12), .A2(n34), .B1(n14), .B2(n108), .C(n91), .ZN(n90) );
  AOI22D1 U59 ( .A1(data_in[28]), .A2(n77), .B1(data_in[20]), .B2(n11), .ZN(
        n91) );
  ND2D1 U60 ( .A1(n74), .A2(n87), .ZN(n64) );
  OAI221D0 U61 ( .A1(n12), .A2(n33), .B1(n14), .B2(n107), .C(n88), .ZN(n87) );
  AOI22D1 U63 ( .A1(data_in[29]), .A2(n77), .B1(data_in[21]), .B2(n11), .ZN(
        n88) );
  ND2D1 U64 ( .A1(n74), .A2(n84), .ZN(n62) );
  OAI221D0 U65 ( .A1(n12), .A2(n32), .B1(n14), .B2(n106), .C(n85), .ZN(n84) );
  AOI22D1 U66 ( .A1(data_in[30]), .A2(n77), .B1(data_in[22]), .B2(n11), .ZN(
        n85) );
  ND2D1 U67 ( .A1(n74), .A2(n81), .ZN(n58) );
  OAI221D0 U69 ( .A1(n12), .A2(n31), .B1(n14), .B2(n105), .C(n82), .ZN(n81) );
  AOI22D1 U70 ( .A1(data_in[31]), .A2(n77), .B1(data_in[23]), .B2(n11), .ZN(
        n82) );
  AOI22D1 U71 ( .A1(data_in[16]), .A2(n59), .B1(data_in[0]), .B2(n60), .ZN(n98) );
  AOI22D1 U72 ( .A1(data_in[17]), .A2(n59), .B1(data_in[1]), .B2(n60), .ZN(n67) );
  AOI22D1 U73 ( .A1(data_in[18]), .A2(n59), .B1(data_in[2]), .B2(n60), .ZN(n95) );
  AOI22D1 U75 ( .A1(data_in[19]), .A2(n59), .B1(data_in[3]), .B2(n60), .ZN(n92) );
  AOI22D1 U76 ( .A1(data_in[20]), .A2(n59), .B1(data_in[4]), .B2(n60), .ZN(n89) );
  AOI22D1 U77 ( .A1(data_in[21]), .A2(n59), .B1(data_in[5]), .B2(n60), .ZN(n86) );
  AOI22D1 U78 ( .A1(data_in[22]), .A2(n59), .B1(data_in[6]), .B2(n60), .ZN(n83) );
  AOI22D1 U79 ( .A1(data_in[23]), .A2(n59), .B1(data_in[7]), .B2(n60), .ZN(n80) );
  AOI22D1 U81 ( .A1(data_in[24]), .A2(n59), .B1(data_in[8]), .B2(n60), .ZN(n78) );
  AOI22D1 U82 ( .A1(data_in[25]), .A2(n59), .B1(data_in[9]), .B2(n60), .ZN(n73) );
  AOI22D1 U83 ( .A1(data_in[26]), .A2(n59), .B1(data_in[10]), .B2(n60), .ZN(
        n71) );
  AOI22D1 U84 ( .A1(data_in[27]), .A2(n59), .B1(data_in[11]), .B2(n60), .ZN(
        n69) );
  AOI22D1 U85 ( .A1(data_in[28]), .A2(n59), .B1(data_in[12]), .B2(n60), .ZN(
        n65) );
  AOI22D1 U87 ( .A1(data_in[29]), .A2(n59), .B1(data_in[13]), .B2(n60), .ZN(
        n63) );
  AOI22D1 U88 ( .A1(data_in[30]), .A2(n59), .B1(data_in[14]), .B2(n60), .ZN(
        n61) );
  AOI22D1 U89 ( .A1(data_in[31]), .A2(n59), .B1(data_in[15]), .B2(n60), .ZN(
        n56) );
  NR2D1 U92 ( .A1(rd_ptr[0]), .A2(n103), .ZN(N40) );
  OAI21D1 U93 ( .A1(n29), .A2(n10), .B(n54), .ZN(next_data_out[17]) );
  INVD1 U94 ( .I(data_in[17]), .ZN(n29) );
  OAI21D1 U95 ( .A1(n8), .A2(n30), .B(n55), .ZN(next_data_out[16]) );
  INVD1 U96 ( .I(data_in[16]), .ZN(n30) );
  OAI21D1 U98 ( .A1(n8), .A2(n28), .B(n53), .ZN(next_data_out[18]) );
  INVD1 U99 ( .I(data_in[18]), .ZN(n28) );
  OAI21D1 U100 ( .A1(n8), .A2(n27), .B(n52), .ZN(next_data_out[19]) );
  INVD1 U101 ( .I(data_in[19]), .ZN(n27) );
  OAI21D1 U102 ( .A1(n8), .A2(n26), .B(n51), .ZN(next_data_out[20]) );
  INVD1 U103 ( .I(data_in[20]), .ZN(n26) );
  OAI21D1 U104 ( .A1(n8), .A2(n25), .B(n50), .ZN(next_data_out[21]) );
  INVD1 U105 ( .I(data_in[21]), .ZN(n25) );
  OAI21D1 U106 ( .A1(n8), .A2(n24), .B(n48), .ZN(next_data_out[22]) );
  INVD1 U107 ( .I(data_in[22]), .ZN(n24) );
  OAI21D1 U108 ( .A1(n9), .A2(n23), .B(n47), .ZN(next_data_out[23]) );
  INVD1 U109 ( .I(data_in[23]), .ZN(n23) );
  OAI21D1 U110 ( .A1(n9), .A2(n22), .B(n55), .ZN(next_data_out[24]) );
  INVD1 U111 ( .I(data_in[24]), .ZN(n22) );
  OAI21D1 U112 ( .A1(n9), .A2(n20), .B(n53), .ZN(next_data_out[26]) );
  INVD1 U113 ( .I(data_in[26]), .ZN(n20) );
  OAI21D1 U114 ( .A1(n9), .A2(n19), .B(n52), .ZN(next_data_out[27]) );
  INVD1 U115 ( .I(data_in[27]), .ZN(n19) );
  OAI21D1 U116 ( .A1(n9), .A2(n18), .B(n51), .ZN(next_data_out[28]) );
  INVD1 U117 ( .I(data_in[28]), .ZN(n18) );
  OAI21D1 U118 ( .A1(n9), .A2(n17), .B(n50), .ZN(next_data_out[29]) );
  INVD1 U119 ( .I(data_in[29]), .ZN(n17) );
  OAI21D1 U120 ( .A1(n9), .A2(n16), .B(n48), .ZN(next_data_out[30]) );
  INVD1 U121 ( .I(data_in[30]), .ZN(n16) );
  OAI21D1 U122 ( .A1(n9), .A2(n15), .B(n47), .ZN(next_data_out[31]) );
  INVD1 U123 ( .I(data_in[31]), .ZN(n15) );
  OAI21D1 U124 ( .A1(n21), .A2(n10), .B(n54), .ZN(next_data_out[25]) );
  INVD1 U125 ( .I(data_in[25]), .ZN(n21) );
  CKBD1 U126 ( .I(input_bitwidth[0]), .Z(n4) );
  CKBD1 U127 ( .I(input_bitwidth[1]), .Z(n6) );
  ND2D1 U128 ( .A1(rd_ptr[1]), .A2(n13), .ZN(n101) );
  INVD1 U129 ( .I(rd_ptr[0]), .ZN(n13) );
  INVD1 U130 ( .I(data_in[1]), .ZN(n111) );
  INVD1 U131 ( .I(data_in[9]), .ZN(n37) );
  INVD1 U132 ( .I(data_in[0]), .ZN(n112) );
  INVD1 U133 ( .I(data_in[2]), .ZN(n110) );
  INVD1 U134 ( .I(data_in[3]), .ZN(n109) );
  INVD1 U135 ( .I(data_in[4]), .ZN(n108) );
  INVD1 U136 ( .I(data_in[5]), .ZN(n107) );
  INVD1 U137 ( .I(data_in[6]), .ZN(n106) );
  INVD1 U138 ( .I(data_in[7]), .ZN(n105) );
  INVD1 U139 ( .I(data_in[8]), .ZN(n38) );
  INVD1 U140 ( .I(data_in[10]), .ZN(n36) );
  INVD1 U141 ( .I(data_in[11]), .ZN(n35) );
  INVD1 U142 ( .I(data_in[12]), .ZN(n34) );
  INVD1 U143 ( .I(data_in[13]), .ZN(n33) );
  INVD1 U144 ( .I(data_in[14]), .ZN(n32) );
  INVD1 U145 ( .I(data_in[15]), .ZN(n31) );
  CKBD1 U146 ( .I(nRST), .Z(n2) );
  CKBD1 U147 ( .I(nRST), .Z(n1) );
  CKBD1 U148 ( .I(nRST), .Z(n3) );
endmodule


module IBUF_ARRAY_SIZE4_DATA_W32_3 ( clk, nRST, IBUF_wr_en, IBUF_data_in, 
        IBUF_data_out );
  input [31:0] IBUF_data_in;
  output [31:0] IBUF_data_out;
  input clk, nRST, IBUF_wr_en;
  wire   n1, n2, n3, n4, n5, n6;

  EDFCNQD1 \IBUF_data_out_reg[31]  ( .D(IBUF_data_in[31]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[31]) );
  EDFCNQD1 \IBUF_data_out_reg[30]  ( .D(IBUF_data_in[30]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[30]) );
  EDFCNQD1 \IBUF_data_out_reg[29]  ( .D(IBUF_data_in[29]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[29]) );
  EDFCNQD1 \IBUF_data_out_reg[28]  ( .D(IBUF_data_in[28]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[28]) );
  EDFCNQD1 \IBUF_data_out_reg[27]  ( .D(IBUF_data_in[27]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[27]) );
  EDFCNQD1 \IBUF_data_out_reg[26]  ( .D(IBUF_data_in[26]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[26]) );
  EDFCNQD1 \IBUF_data_out_reg[25]  ( .D(IBUF_data_in[25]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[25]) );
  EDFCNQD1 \IBUF_data_out_reg[24]  ( .D(IBUF_data_in[24]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[24]) );
  EDFCNQD1 \IBUF_data_out_reg[23]  ( .D(IBUF_data_in[23]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[23]) );
  EDFCNQD1 \IBUF_data_out_reg[22]  ( .D(IBUF_data_in[22]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[22]) );
  EDFCNQD1 \IBUF_data_out_reg[21]  ( .D(IBUF_data_in[21]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[21]) );
  EDFCNQD1 \IBUF_data_out_reg[20]  ( .D(IBUF_data_in[20]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[20]) );
  EDFCNQD1 \IBUF_data_out_reg[19]  ( .D(IBUF_data_in[19]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[19]) );
  EDFCNQD1 \IBUF_data_out_reg[18]  ( .D(IBUF_data_in[18]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[18]) );
  EDFCNQD1 \IBUF_data_out_reg[17]  ( .D(IBUF_data_in[17]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[17]) );
  EDFCNQD1 \IBUF_data_out_reg[16]  ( .D(IBUF_data_in[16]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[16]) );
  EDFCNQD1 \IBUF_data_out_reg[15]  ( .D(IBUF_data_in[15]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[15]) );
  EDFCNQD1 \IBUF_data_out_reg[14]  ( .D(IBUF_data_in[14]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[14]) );
  EDFCNQD1 \IBUF_data_out_reg[13]  ( .D(IBUF_data_in[13]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[13]) );
  EDFCNQD1 \IBUF_data_out_reg[12]  ( .D(IBUF_data_in[12]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[12]) );
  EDFCNQD1 \IBUF_data_out_reg[11]  ( .D(IBUF_data_in[11]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[11]) );
  EDFCNQD1 \IBUF_data_out_reg[10]  ( .D(IBUF_data_in[10]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[10]) );
  EDFCNQD1 \IBUF_data_out_reg[9]  ( .D(IBUF_data_in[9]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[9]) );
  EDFCNQD1 \IBUF_data_out_reg[8]  ( .D(IBUF_data_in[8]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[8]) );
  EDFCNQD1 \IBUF_data_out_reg[7]  ( .D(IBUF_data_in[7]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[7]) );
  EDFCNQD1 \IBUF_data_out_reg[6]  ( .D(IBUF_data_in[6]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[6]) );
  EDFCNQD1 \IBUF_data_out_reg[5]  ( .D(IBUF_data_in[5]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[5]) );
  EDFCNQD1 \IBUF_data_out_reg[4]  ( .D(IBUF_data_in[4]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[4]) );
  EDFCNQD1 \IBUF_data_out_reg[3]  ( .D(IBUF_data_in[3]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[3]) );
  EDFCNQD1 \IBUF_data_out_reg[2]  ( .D(IBUF_data_in[2]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[2]) );
  EDFCNQD1 \IBUF_data_out_reg[1]  ( .D(IBUF_data_in[1]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[1]) );
  EDFCNQD1 \IBUF_data_out_reg[0]  ( .D(IBUF_data_in[0]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[0]) );
  CKBD1 U2 ( .I(IBUF_wr_en), .Z(n5) );
  CKBD1 U3 ( .I(IBUF_wr_en), .Z(n4) );
  CKBD1 U4 ( .I(nRST), .Z(n1) );
  CKBD1 U5 ( .I(nRST), .Z(n2) );
  CKBD1 U6 ( .I(nRST), .Z(n3) );
  CKBD1 U7 ( .I(IBUF_wr_en), .Z(n6) );
endmodule


module in_mux_3 ( clk, nRST, weight_bitwidth, rd_en, data_in, data_out );
  input [2:0] weight_bitwidth;
  input [31:0] data_in;
  output [31:0] data_out;
  input clk, nRST, rd_en;
  wire   N40, N41, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50,
         n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64,
         n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78,
         n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92,
         n93, n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n1,
         n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n105, n106, n107, n108, n109,
         n110, n111, n112;
  wire   [1:0] rd_ptr;
  wire   [31:0] next_data_out;

  EDFCNQD1 \rd_ptr_reg[0]  ( .D(N40), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[0]) );
  EDFCNQD1 \rd_ptr_reg[1]  ( .D(N41), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[1]) );
  DFCNQD1 \data_out_reg[31]  ( .D(next_data_out[31]), .CP(clk), .CDN(n1), .Q(
        data_out[31]) );
  DFCNQD1 \data_out_reg[30]  ( .D(next_data_out[30]), .CP(clk), .CDN(n3), .Q(
        data_out[30]) );
  DFCNQD1 \data_out_reg[29]  ( .D(next_data_out[29]), .CP(clk), .CDN(n3), .Q(
        data_out[29]) );
  DFCNQD1 \data_out_reg[28]  ( .D(next_data_out[28]), .CP(clk), .CDN(n3), .Q(
        data_out[28]) );
  DFCNQD1 \data_out_reg[27]  ( .D(next_data_out[27]), .CP(clk), .CDN(n3), .Q(
        data_out[27]) );
  DFCNQD1 \data_out_reg[26]  ( .D(next_data_out[26]), .CP(clk), .CDN(n3), .Q(
        data_out[26]) );
  DFCNQD1 \data_out_reg[25]  ( .D(next_data_out[25]), .CP(clk), .CDN(n3), .Q(
        data_out[25]) );
  DFCNQD1 \data_out_reg[24]  ( .D(next_data_out[24]), .CP(clk), .CDN(n2), .Q(
        data_out[24]) );
  DFCNQD1 \data_out_reg[23]  ( .D(next_data_out[23]), .CP(clk), .CDN(n2), .Q(
        data_out[23]) );
  DFCNQD1 \data_out_reg[22]  ( .D(next_data_out[22]), .CP(clk), .CDN(n2), .Q(
        data_out[22]) );
  DFCNQD1 \data_out_reg[21]  ( .D(next_data_out[21]), .CP(clk), .CDN(n2), .Q(
        data_out[21]) );
  DFCNQD1 \data_out_reg[20]  ( .D(next_data_out[20]), .CP(clk), .CDN(n2), .Q(
        data_out[20]) );
  DFCNQD1 \data_out_reg[19]  ( .D(next_data_out[19]), .CP(clk), .CDN(n2), .Q(
        data_out[19]) );
  DFCNQD1 \data_out_reg[18]  ( .D(next_data_out[18]), .CP(clk), .CDN(n2), .Q(
        data_out[18]) );
  DFCNQD1 \data_out_reg[17]  ( .D(next_data_out[17]), .CP(clk), .CDN(n2), .Q(
        data_out[17]) );
  DFCNQD1 \data_out_reg[16]  ( .D(next_data_out[16]), .CP(clk), .CDN(n2), .Q(
        data_out[16]) );
  DFCNQD1 \data_out_reg[15]  ( .D(next_data_out[15]), .CP(clk), .CDN(n2), .Q(
        data_out[15]) );
  DFCNQD1 \data_out_reg[14]  ( .D(next_data_out[14]), .CP(clk), .CDN(n2), .Q(
        data_out[14]) );
  DFCNQD1 \data_out_reg[13]  ( .D(next_data_out[13]), .CP(clk), .CDN(n2), .Q(
        data_out[13]) );
  DFCNQD1 \data_out_reg[12]  ( .D(next_data_out[12]), .CP(clk), .CDN(n1), .Q(
        data_out[12]) );
  DFCNQD1 \data_out_reg[11]  ( .D(next_data_out[11]), .CP(clk), .CDN(n1), .Q(
        data_out[11]) );
  DFCNQD1 \data_out_reg[10]  ( .D(next_data_out[10]), .CP(clk), .CDN(n1), .Q(
        data_out[10]) );
  DFCNQD1 \data_out_reg[9]  ( .D(next_data_out[9]), .CP(clk), .CDN(n1), .Q(
        data_out[9]) );
  DFCNQD1 \data_out_reg[8]  ( .D(next_data_out[8]), .CP(clk), .CDN(n1), .Q(
        data_out[8]) );
  DFCNQD1 \data_out_reg[7]  ( .D(next_data_out[7]), .CP(clk), .CDN(n1), .Q(
        data_out[7]) );
  DFCNQD1 \data_out_reg[6]  ( .D(next_data_out[6]), .CP(clk), .CDN(n1), .Q(
        data_out[6]) );
  DFCNQD1 \data_out_reg[5]  ( .D(next_data_out[5]), .CP(clk), .CDN(n1), .Q(
        data_out[5]) );
  DFCNQD1 \data_out_reg[4]  ( .D(next_data_out[4]), .CP(clk), .CDN(n1), .Q(
        data_out[4]) );
  DFCNQD1 \data_out_reg[3]  ( .D(next_data_out[3]), .CP(clk), .CDN(n1), .Q(
        data_out[3]) );
  DFCNQD1 \data_out_reg[2]  ( .D(next_data_out[2]), .CP(clk), .CDN(n1), .Q(
        data_out[2]) );
  DFCNQD1 \data_out_reg[1]  ( .D(next_data_out[1]), .CP(clk), .CDN(n1), .Q(
        data_out[1]) );
  DFCNQD1 \data_out_reg[0]  ( .D(next_data_out[0]), .CP(clk), .CDN(n2), .Q(
        data_out[0]) );
  OA21D1 U8 ( .A1(n44), .A2(n45), .B(n46), .Z(n42) );
  OA21D1 U11 ( .A1(n49), .A2(n45), .B(n50), .Z(n43) );
  OA21D1 U18 ( .A1(n55), .A2(n45), .B(n56), .Z(n52) );
  OA21D1 U21 ( .A1(n57), .A2(n45), .B(n58), .Z(n53) );
  OA21D1 U26 ( .A1(n61), .A2(n45), .B(n56), .Z(n59) );
  OA21D1 U32 ( .A1(n66), .A2(n45), .B(n58), .Z(n60) );
  OA21D1 U40 ( .A1(n71), .A2(n45), .B(n72), .Z(n69) );
  OA21D1 U43 ( .A1(n73), .A2(n45), .B(n74), .Z(n70) );
  OA21D1 U46 ( .A1(n75), .A2(n45), .B(n46), .Z(n51) );
  OA21D1 U54 ( .A1(n80), .A2(n45), .B(n72), .Z(n78) );
  OA21D1 U60 ( .A1(n83), .A2(n45), .B(n74), .Z(n79) );
  OA21D1 U68 ( .A1(n88), .A2(n45), .B(n89), .Z(n86) );
  OA21D1 U71 ( .A1(n90), .A2(n45), .B(n91), .Z(n87) );
  OA21D1 U74 ( .A1(n92), .A2(n45), .B(n89), .Z(n40) );
  OA21D1 U80 ( .A1(n95), .A2(n45), .B(n91), .Z(n41) );
  OA21D1 U86 ( .A1(n98), .A2(n45), .B(n50), .Z(n54) );
  AN2XD1 U90 ( .A1(rd_ptr[1]), .A2(rd_ptr[0]), .Z(n65) );
  AN4XD1 U91 ( .A1(weight_bitwidth[2]), .A2(rd_en), .A3(n5), .A4(n7), .Z(n62)
         );
  MAOI22D1 U97 ( .A1(n102), .A2(n12), .B1(n102), .B2(n103), .ZN(n104) );
  NR2D1 U3 ( .A1(n13), .A2(rd_ptr[1]), .ZN(n47) );
  NR2D1 U4 ( .A1(rd_ptr[0]), .A2(rd_ptr[1]), .ZN(n48) );
  AOI21D1 U5 ( .A1(n12), .A2(n101), .B(n104), .ZN(N41) );
  OAI21D1 U6 ( .A1(n109), .A2(n10), .B(n51), .ZN(next_data_out[3]) );
  OAI21D1 U7 ( .A1(n35), .A2(n10), .B(n40), .ZN(next_data_out[11]) );
  OAI21D1 U9 ( .A1(n9), .A2(n112), .B(n54), .ZN(next_data_out[0]) );
  OAI21D1 U10 ( .A1(n8), .A2(n111), .B(n51), .ZN(next_data_out[1]) );
  OAI21D1 U12 ( .A1(n9), .A2(n110), .B(n54), .ZN(next_data_out[2]) );
  OAI21D1 U13 ( .A1(n9), .A2(n106), .B(n43), .ZN(next_data_out[6]) );
  OAI21D1 U14 ( .A1(n8), .A2(n37), .B(n40), .ZN(next_data_out[9]) );
  OAI21D1 U15 ( .A1(n8), .A2(n36), .B(n41), .ZN(next_data_out[10]) );
  OAI21D1 U16 ( .A1(n8), .A2(n34), .B(n87), .ZN(next_data_out[12]) );
  OAI21D1 U17 ( .A1(n8), .A2(n33), .B(n86), .ZN(next_data_out[13]) );
  OAI21D1 U19 ( .A1(n8), .A2(n32), .B(n87), .ZN(next_data_out[14]) );
  OAI21D1 U20 ( .A1(n8), .A2(n31), .B(n86), .ZN(next_data_out[15]) );
  OAI21D1 U22 ( .A1(n10), .A2(n108), .B(n43), .ZN(next_data_out[4]) );
  OAI21D1 U23 ( .A1(n10), .A2(n107), .B(n42), .ZN(next_data_out[5]) );
  OAI21D1 U24 ( .A1(n10), .A2(n105), .B(n42), .ZN(next_data_out[7]) );
  OAI21D1 U25 ( .A1(n10), .A2(n38), .B(n41), .ZN(next_data_out[8]) );
  CKBD1 U27 ( .I(n39), .Z(n8) );
  CKBD1 U28 ( .I(n39), .Z(n9) );
  CKBD1 U29 ( .I(n39), .Z(n10) );
  INVD1 U30 ( .I(n6), .ZN(n7) );
  INVD1 U31 ( .I(n4), .ZN(n5) );
  INVD1 U33 ( .I(n101), .ZN(n11) );
  INVD1 U34 ( .I(n48), .ZN(n14) );
  INVD1 U35 ( .I(n47), .ZN(n12) );
  ND2D1 U36 ( .A1(n103), .A2(rd_en), .ZN(n39) );
  NR3D0 U37 ( .A1(n4), .A2(weight_bitwidth[2]), .A3(n7), .ZN(n102) );
  NR3D0 U38 ( .A1(n6), .A2(weight_bitwidth[2]), .A3(n5), .ZN(n103) );
  ND2D1 U39 ( .A1(rd_en), .A2(n102), .ZN(n45) );
  ND2D1 U41 ( .A1(n62), .A2(n99), .ZN(n50) );
  OAI221D0 U42 ( .A1(n12), .A2(n38), .B1(n14), .B2(n112), .C(n100), .ZN(n99)
         );
  AOI22D1 U44 ( .A1(data_in[24]), .A2(n65), .B1(data_in[16]), .B2(n11), .ZN(
        n100) );
  ND2D1 U45 ( .A1(n62), .A2(n76), .ZN(n46) );
  OAI221D0 U47 ( .A1(n12), .A2(n37), .B1(n14), .B2(n111), .C(n77), .ZN(n76) );
  AOI22D1 U48 ( .A1(data_in[25]), .A2(n65), .B1(data_in[17]), .B2(n11), .ZN(
        n77) );
  ND2D1 U49 ( .A1(n62), .A2(n96), .ZN(n91) );
  OAI221D0 U50 ( .A1(n12), .A2(n36), .B1(n14), .B2(n110), .C(n97), .ZN(n96) );
  AOI22D1 U51 ( .A1(data_in[26]), .A2(n65), .B1(data_in[18]), .B2(n11), .ZN(
        n97) );
  ND2D1 U52 ( .A1(n62), .A2(n93), .ZN(n89) );
  OAI221D0 U53 ( .A1(n12), .A2(n35), .B1(n14), .B2(n109), .C(n94), .ZN(n93) );
  AOI22D1 U55 ( .A1(data_in[27]), .A2(n65), .B1(n11), .B2(data_in[19]), .ZN(
        n94) );
  ND2D1 U56 ( .A1(n62), .A2(n84), .ZN(n74) );
  OAI221D0 U57 ( .A1(n12), .A2(n34), .B1(n14), .B2(n108), .C(n85), .ZN(n84) );
  AOI22D1 U58 ( .A1(data_in[28]), .A2(n65), .B1(data_in[20]), .B2(n11), .ZN(
        n85) );
  ND2D1 U59 ( .A1(n62), .A2(n81), .ZN(n72) );
  OAI221D0 U61 ( .A1(n12), .A2(n33), .B1(n14), .B2(n107), .C(n82), .ZN(n81) );
  AOI22D1 U62 ( .A1(data_in[29]), .A2(n65), .B1(data_in[21]), .B2(n11), .ZN(
        n82) );
  ND2D1 U63 ( .A1(n62), .A2(n67), .ZN(n58) );
  OAI221D0 U64 ( .A1(n12), .A2(n32), .B1(n14), .B2(n106), .C(n68), .ZN(n67) );
  AOI22D1 U65 ( .A1(data_in[30]), .A2(n65), .B1(data_in[22]), .B2(n11), .ZN(
        n68) );
  ND2D1 U66 ( .A1(n62), .A2(n63), .ZN(n56) );
  OAI221D0 U67 ( .A1(n12), .A2(n31), .B1(n14), .B2(n105), .C(n64), .ZN(n63) );
  AOI22D1 U69 ( .A1(data_in[31]), .A2(n65), .B1(data_in[23]), .B2(n11), .ZN(
        n64) );
  AOI22D1 U70 ( .A1(data_in[16]), .A2(n47), .B1(data_in[0]), .B2(n48), .ZN(n98) );
  AOI22D1 U72 ( .A1(data_in[17]), .A2(n47), .B1(data_in[1]), .B2(n48), .ZN(n75) );
  AOI22D1 U73 ( .A1(data_in[24]), .A2(n47), .B1(data_in[8]), .B2(n48), .ZN(n49) );
  AOI22D1 U75 ( .A1(data_in[25]), .A2(n47), .B1(data_in[9]), .B2(n48), .ZN(n44) );
  AOI22D1 U76 ( .A1(data_in[18]), .A2(n47), .B1(data_in[2]), .B2(n48), .ZN(n95) );
  AOI22D1 U77 ( .A1(data_in[19]), .A2(n47), .B1(data_in[3]), .B2(n48), .ZN(n92) );
  AOI22D1 U78 ( .A1(data_in[26]), .A2(n47), .B1(data_in[10]), .B2(n48), .ZN(
        n90) );
  AOI22D1 U79 ( .A1(data_in[27]), .A2(n47), .B1(data_in[11]), .B2(n48), .ZN(
        n88) );
  AOI22D1 U81 ( .A1(data_in[20]), .A2(n47), .B1(data_in[4]), .B2(n48), .ZN(n83) );
  AOI22D1 U82 ( .A1(data_in[21]), .A2(n47), .B1(data_in[5]), .B2(n48), .ZN(n80) );
  AOI22D1 U83 ( .A1(data_in[28]), .A2(n47), .B1(data_in[12]), .B2(n48), .ZN(
        n73) );
  AOI22D1 U84 ( .A1(data_in[29]), .A2(n47), .B1(data_in[13]), .B2(n48), .ZN(
        n71) );
  AOI22D1 U85 ( .A1(data_in[22]), .A2(n47), .B1(data_in[6]), .B2(n48), .ZN(n66) );
  AOI22D1 U87 ( .A1(data_in[23]), .A2(n47), .B1(data_in[7]), .B2(n48), .ZN(n61) );
  AOI22D1 U88 ( .A1(data_in[30]), .A2(n47), .B1(data_in[14]), .B2(n48), .ZN(
        n57) );
  AOI22D1 U89 ( .A1(data_in[31]), .A2(n47), .B1(data_in[15]), .B2(n48), .ZN(
        n55) );
  NR2D1 U92 ( .A1(rd_ptr[0]), .A2(n103), .ZN(N40) );
  OAI21D1 U93 ( .A1(n27), .A2(n10), .B(n78), .ZN(next_data_out[19]) );
  INVD1 U94 ( .I(data_in[19]), .ZN(n27) );
  OAI21D1 U95 ( .A1(n8), .A2(n30), .B(n79), .ZN(next_data_out[16]) );
  INVD1 U96 ( .I(data_in[16]), .ZN(n30) );
  OAI21D1 U98 ( .A1(n8), .A2(n29), .B(n78), .ZN(next_data_out[17]) );
  INVD1 U99 ( .I(data_in[17]), .ZN(n29) );
  OAI21D1 U100 ( .A1(n8), .A2(n28), .B(n79), .ZN(next_data_out[18]) );
  INVD1 U101 ( .I(data_in[18]), .ZN(n28) );
  OAI21D1 U102 ( .A1(n8), .A2(n26), .B(n70), .ZN(next_data_out[20]) );
  INVD1 U103 ( .I(data_in[20]), .ZN(n26) );
  OAI21D1 U104 ( .A1(n8), .A2(n25), .B(n69), .ZN(next_data_out[21]) );
  INVD1 U105 ( .I(data_in[21]), .ZN(n25) );
  OAI21D1 U106 ( .A1(n9), .A2(n24), .B(n70), .ZN(next_data_out[22]) );
  INVD1 U107 ( .I(data_in[22]), .ZN(n24) );
  OAI21D1 U108 ( .A1(n9), .A2(n23), .B(n69), .ZN(next_data_out[23]) );
  INVD1 U109 ( .I(data_in[23]), .ZN(n23) );
  OAI21D1 U110 ( .A1(n9), .A2(n22), .B(n60), .ZN(next_data_out[24]) );
  INVD1 U111 ( .I(data_in[24]), .ZN(n22) );
  OAI21D1 U112 ( .A1(n9), .A2(n21), .B(n59), .ZN(next_data_out[25]) );
  INVD1 U113 ( .I(data_in[25]), .ZN(n21) );
  OAI21D1 U114 ( .A1(n9), .A2(n20), .B(n60), .ZN(next_data_out[26]) );
  INVD1 U115 ( .I(data_in[26]), .ZN(n20) );
  OAI21D1 U116 ( .A1(n9), .A2(n18), .B(n53), .ZN(next_data_out[28]) );
  INVD1 U117 ( .I(data_in[28]), .ZN(n18) );
  OAI21D1 U118 ( .A1(n9), .A2(n17), .B(n52), .ZN(next_data_out[29]) );
  INVD1 U119 ( .I(data_in[29]), .ZN(n17) );
  OAI21D1 U120 ( .A1(n9), .A2(n16), .B(n53), .ZN(next_data_out[30]) );
  INVD1 U121 ( .I(data_in[30]), .ZN(n16) );
  OAI21D1 U122 ( .A1(n9), .A2(n15), .B(n52), .ZN(next_data_out[31]) );
  INVD1 U123 ( .I(data_in[31]), .ZN(n15) );
  OAI21D1 U124 ( .A1(n19), .A2(n10), .B(n59), .ZN(next_data_out[27]) );
  INVD1 U125 ( .I(data_in[27]), .ZN(n19) );
  CKBD1 U126 ( .I(weight_bitwidth[0]), .Z(n4) );
  CKBD1 U127 ( .I(weight_bitwidth[1]), .Z(n6) );
  ND2D1 U128 ( .A1(rd_ptr[1]), .A2(n13), .ZN(n101) );
  INVD1 U129 ( .I(rd_ptr[0]), .ZN(n13) );
  INVD1 U130 ( .I(data_in[3]), .ZN(n109) );
  INVD1 U131 ( .I(data_in[11]), .ZN(n35) );
  INVD1 U132 ( .I(data_in[0]), .ZN(n112) );
  INVD1 U133 ( .I(data_in[1]), .ZN(n111) );
  INVD1 U134 ( .I(data_in[2]), .ZN(n110) );
  INVD1 U135 ( .I(data_in[4]), .ZN(n108) );
  INVD1 U136 ( .I(data_in[5]), .ZN(n107) );
  INVD1 U137 ( .I(data_in[6]), .ZN(n106) );
  INVD1 U138 ( .I(data_in[7]), .ZN(n105) );
  INVD1 U139 ( .I(data_in[8]), .ZN(n38) );
  INVD1 U140 ( .I(data_in[9]), .ZN(n37) );
  INVD1 U141 ( .I(data_in[10]), .ZN(n36) );
  INVD1 U142 ( .I(data_in[12]), .ZN(n34) );
  INVD1 U143 ( .I(data_in[13]), .ZN(n33) );
  INVD1 U144 ( .I(data_in[14]), .ZN(n32) );
  INVD1 U145 ( .I(data_in[15]), .ZN(n31) );
  CKBD1 U146 ( .I(nRST), .Z(n2) );
  CKBD1 U147 ( .I(nRST), .Z(n1) );
  CKBD1 U148 ( .I(nRST), .Z(n3) );
endmodule


module bit_brick_255 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_254 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_253 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_252 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_251 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_250 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_249 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_248 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_247 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_246 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_245 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_244 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_243 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2D1 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  INVD1 U5 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U6 ( .I(x[1]), .ZN(n6) );
  INVD1 U7 ( .I(y[1]), .ZN(n4) );
  INVD1 U8 ( .I(x[0]), .ZN(n5) );
  INVD1 U9 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U10 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U11 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U13 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U14 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U15 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_242 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_241 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_240 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module shift_add_15_DW01_add_14_DW01_add_259 ( A, B, CI, SUM, CO );
  input [28:0] A;
  input [28:0] B;
  output [28:0] SUM;
  input CI;
  output CO;
  wire   n1, \SUM[18] , n3, n4, n5, n6, n7;
  wire   [28:1] carry;
  assign SUM[27] = \SUM[18] ;
  assign SUM[28] = \SUM[18] ;
  assign SUM[26] = \SUM[18] ;
  assign SUM[25] = \SUM[18] ;
  assign SUM[24] = \SUM[18] ;
  assign SUM[23] = \SUM[18] ;
  assign SUM[22] = \SUM[18] ;
  assign SUM[21] = \SUM[18] ;
  assign SUM[20] = \SUM[18] ;
  assign SUM[19] = \SUM[18] ;
  assign SUM[18] = \SUM[18] ;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  OAI222D1 U1 ( .A1(n5), .A2(n7), .B1(n5), .B2(n6), .C1(n7), .C2(n6), .ZN(n4)
         );
  XNR3D2 U2 ( .A1(B[27]), .A2(n7), .A3(n3), .ZN(\SUM[18] ) );
  AN2XD1 U3 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D0 U4 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  AOI222D1 U5 ( .A1(carry[15]), .A2(A[27]), .B1(carry[15]), .B2(B[15]), .C1(
        B[15]), .C2(A[27]), .ZN(n5) );
  AO222D1 U6 ( .A1(n4), .A2(A[27]), .B1(n4), .B2(B[27]), .C1(A[27]), .C2(B[27]), .Z(n3) );
  CKND0 U7 ( .I(A[27]), .ZN(n7) );
  CKND0 U8 ( .I(B[16]), .ZN(n6) );
  XNR3D0 U9 ( .A1(B[27]), .A2(n7), .A3(n4), .ZN(SUM[17]) );
  XNR3D0 U10 ( .A1(n6), .A2(n5), .A3(n7), .ZN(SUM[16]) );
  XNR3D0 U11 ( .A1(carry[15]), .A2(B[15]), .A3(n7), .ZN(SUM[15]) );
endmodule


module shift_add_15_DW01_add_6_DW01_add_251 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D1 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_15_DW01_add_5_DW01_add_250 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_15_DW01_add_4_DW01_add_249 ( A, B, CI, SUM, CO );
  input [30:0] A;
  input [30:0] B;
  output [30:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [30:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  XOR3D1 U1_30 ( .A1(A[30]), .A2(B[30]), .A3(carry[30]), .Z(SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_15_DW01_add_3_DW01_add_248 ( A, B, CI, SUM, CO );
  input [29:0] A;
  input [29:0] B;
  output [29:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3, n4, n5, n6;
  wire   [29:1] carry;
  assign SUM[29] = SUM[23];
  assign SUM[28] = SUM[23];
  assign SUM[27] = SUM[23];
  assign SUM[26] = SUM[23];
  assign SUM[25] = SUM[23];
  assign SUM[24] = SUM[23];

  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n5), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  CKAN2D0 U1 ( .A1(n6), .A2(A[21]), .Z(n1) );
  AN2D1 U2 ( .A1(n6), .A2(B[22]), .Z(n2) );
  CKAN2D0 U3 ( .A1(A[21]), .A2(B[22]), .Z(n3) );
  NR3D1 U4 ( .A1(n1), .A2(n2), .A3(n3), .ZN(n4) );
  AO222D0 U5 ( .A1(carry[21]), .A2(A[21]), .B1(B[21]), .B2(carry[21]), .C1(
        B[21]), .C2(A[21]), .Z(n6) );
  XNR3D2 U6 ( .A1(B[22]), .A2(A[21]), .A3(n4), .ZN(SUM[23]) );
  AN2XD1 U7 ( .A1(B[0]), .A2(A[0]), .Z(n5) );
  CKXOR2D1 U8 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  XOR3D0 U9 ( .A1(carry[21]), .A2(B[21]), .A3(A[21]), .Z(SUM[21]) );
  XOR3D0 U10 ( .A1(B[22]), .A2(A[21]), .A3(n6), .Z(SUM[22]) );
endmodule


module shift_add_15_DW01_add_2_DW01_add_247 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_15_DW01_add_1_DW01_add_246 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D1 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_15_DW01_add_0_DW01_add_245 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_15 ( input_bitwidth, weight_bitwidth, .products({
        \products[15][5] , \products[15][4] , \products[15][3] , 
        \products[15][2] , \products[15][1] , \products[15][0] , 
        \products[14][5] , \products[14][4] , \products[14][3] , 
        \products[14][2] , \products[14][1] , \products[14][0] , 
        \products[13][5] , \products[13][4] , \products[13][3] , 
        \products[13][2] , \products[13][1] , \products[13][0] , 
        \products[12][5] , \products[12][4] , \products[12][3] , 
        \products[12][2] , \products[12][1] , \products[12][0] , 
        \products[11][5] , \products[11][4] , \products[11][3] , 
        \products[11][2] , \products[11][1] , \products[11][0] , 
        \products[10][5] , \products[10][4] , \products[10][3] , 
        \products[10][2] , \products[10][1] , \products[10][0] , 
        \products[9][5] , \products[9][4] , \products[9][3] , \products[9][2] , 
        \products[9][1] , \products[9][0] , \products[8][5] , \products[8][4] , 
        \products[8][3] , \products[8][2] , \products[8][1] , \products[8][0] , 
        \products[7][5] , \products[7][4] , \products[7][3] , \products[7][2] , 
        \products[7][1] , \products[7][0] , \products[6][5] , \products[6][4] , 
        \products[6][3] , \products[6][2] , \products[6][1] , \products[6][0] , 
        \products[5][5] , \products[5][4] , \products[5][3] , \products[5][2] , 
        \products[5][1] , \products[5][0] , \products[4][5] , \products[4][4] , 
        \products[4][3] , \products[4][2] , \products[4][1] , \products[4][0] , 
        \products[3][5] , \products[3][4] , \products[3][3] , \products[3][2] , 
        \products[3][1] , \products[3][0] , \products[2][5] , \products[2][4] , 
        \products[2][3] , \products[2][2] , \products[2][1] , \products[2][0] , 
        \products[1][5] , \products[1][4] , \products[1][3] , \products[1][2] , 
        \products[1][1] , \products[1][0] , \products[0][5] , \products[0][4] , 
        \products[0][3] , \products[0][2] , \products[0][1] , \products[0][0] 
        }), shift_add_out );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  output [31:0] shift_add_out;
  input \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] ;
  wire   \shifted_products[15][16] , \shifted_products[15][15] ,
         \shifted_products[15][14] , \shifted_products[15][13] ,
         \shifted_products[15][12] , \shifted_products[15][11] ,
         \shifted_products[15][10] , \shifted_products[15][9] ,
         \shifted_products[15][8] , \shifted_products[15][7] ,
         \shifted_products[15][6] , \shifted_products[15][5] ,
         \shifted_products[15][4] , \shifted_products[15][3] ,
         \shifted_products[15][2] , \shifted_products[15][1] ,
         \shifted_products[15][0] , \shifted_products[14][14] ,
         \shifted_products[14][13] , \shifted_products[14][12] ,
         \shifted_products[14][11] , \shifted_products[14][10] ,
         \shifted_products[14][9] , \shifted_products[14][8] ,
         \shifted_products[14][7] , \shifted_products[14][6] ,
         \shifted_products[14][5] , \shifted_products[14][4] ,
         \shifted_products[14][3] , \shifted_products[14][2] ,
         \shifted_products[14][1] , \shifted_products[14][0] ,
         \shifted_products[13][12] , \shifted_products[13][11] ,
         \shifted_products[13][10] , \shifted_products[13][9] ,
         \shifted_products[13][8] , \shifted_products[13][7] ,
         \shifted_products[13][6] , \shifted_products[13][5] ,
         \shifted_products[13][4] , \shifted_products[13][3] ,
         \shifted_products[13][2] , \shifted_products[13][1] ,
         \shifted_products[13][0] , \shifted_products[12][10] ,
         \shifted_products[12][9] , \shifted_products[12][8] ,
         \shifted_products[12][7] , \shifted_products[12][6] ,
         \shifted_products[12][5] , \shifted_products[12][4] ,
         \shifted_products[12][3] , \shifted_products[12][2] ,
         \shifted_products[12][1] , \shifted_products[12][0] ,
         \shifted_products[11][13] , \shifted_products[11][12] ,
         \shifted_products[11][11] , \shifted_products[11][10] ,
         \shifted_products[11][9] , \shifted_products[11][8] ,
         \shifted_products[11][7] , \shifted_products[11][6] ,
         \shifted_products[11][5] , \shifted_products[11][4] ,
         \shifted_products[11][3] , \shifted_products[11][2] ,
         \shifted_products[11][1] , \shifted_products[11][0] ,
         \shifted_products[10][12] , \shifted_products[10][11] ,
         \shifted_products[10][10] , \shifted_products[10][9] ,
         \shifted_products[10][8] , \shifted_products[10][7] ,
         \shifted_products[10][6] , \shifted_products[10][5] ,
         \shifted_products[10][4] , \shifted_products[10][3] ,
         \shifted_products[10][2] , \shifted_products[10][1] ,
         \shifted_products[10][0] , \shifted_products[9][10] ,
         \shifted_products[9][9] , \shifted_products[9][8] ,
         \shifted_products[9][7] , \shifted_products[9][6] ,
         \shifted_products[9][5] , \shifted_products[9][4] ,
         \shifted_products[9][3] , \shifted_products[9][2] ,
         \shifted_products[9][1] , \shifted_products[9][0] ,
         \shifted_products[8][8] , \shifted_products[8][7] ,
         \shifted_products[8][6] , \shifted_products[8][5] ,
         \shifted_products[8][4] , \shifted_products[8][3] ,
         \shifted_products[8][2] , \shifted_products[8][1] ,
         \shifted_products[8][0] , \shifted_products[7][11] ,
         \shifted_products[7][10] , \shifted_products[7][9] ,
         \shifted_products[7][8] , \shifted_products[7][7] ,
         \shifted_products[7][6] , \shifted_products[7][5] ,
         \shifted_products[7][4] , \shifted_products[7][3] ,
         \shifted_products[7][2] , \shifted_products[7][1] ,
         \shifted_products[7][0] , \shifted_products[6][10] ,
         \shifted_products[6][9] , \shifted_products[6][8] ,
         \shifted_products[6][7] , \shifted_products[6][6] ,
         \shifted_products[6][5] , \shifted_products[6][4] ,
         \shifted_products[6][3] , \shifted_products[6][2] ,
         \shifted_products[6][1] , \shifted_products[6][0] ,
         \shifted_products[5][8] , \shifted_products[5][7] ,
         \shifted_products[5][6] , \shifted_products[5][5] ,
         \shifted_products[5][4] , \shifted_products[5][3] ,
         \shifted_products[5][2] , \shifted_products[5][1] ,
         \shifted_products[5][0] , \shifted_products[4][6] ,
         \shifted_products[4][5] , \shifted_products[4][4] ,
         \shifted_products[4][3] , \shifted_products[4][2] ,
         \shifted_products[4][1] , \shifted_products[4][0] ,
         \shifted_products[3][9] , \shifted_products[3][8] ,
         \shifted_products[3][7] , \shifted_products[3][6] ,
         \shifted_products[3][5] , \shifted_products[3][4] ,
         \shifted_products[3][3] , \shifted_products[3][2] ,
         \shifted_products[3][1] , \shifted_products[3][0] ,
         \shifted_products[2][8] , \shifted_products[2][7] ,
         \shifted_products[2][6] , \shifted_products[2][5] ,
         \shifted_products[2][4] , \shifted_products[2][3] ,
         \shifted_products[2][2] , \shifted_products[2][1] ,
         \shifted_products[2][0] , \shifted_products[1][6] ,
         \shifted_products[1][5] , \shifted_products[1][4] ,
         \shifted_products[1][3] , \shifted_products[1][2] ,
         \shifted_products[1][1] , \shifted_products[1][0] ,
         \shifted_products[0][9] , n136, n137, n138, n139, n140, n141, n142,
         n143, n144, n145, n146, n147, n148, n149, n150, n151, n152, n153,
         n154, n155, n156, n157, n158, n159, n160, n161, n162, n163, n164,
         n165, n166, n167, n168, n169, n170, n171, n172, n173, n174, n175,
         n176, n177, n178, n179, n180, n181, n182, n183, n184, n185, n186,
         n187, n188, n189, n190, n191, n192, n193, n194, n195, n196, n197,
         n198, n199, n200, n201, n202, n203, n204, n205, n206, n207, n208,
         n209, n210, n211, n212, n213, n214, n215, N99, N87, N86, N85, N84,
         N83, N82, N81, N80, N79, N78, N77, N76, N61, N60, N59, N58, N57, N56,
         N55, N54, N446, N445, N444, N443, N442, N441, N440, N439, N438, N437,
         N436, N435, N434, N433, N432, N431, N430, N429, N428, N427, N426,
         N425, N424, N423, N422, N421, N420, N419, N418, N417, N416, N415,
         N414, N413, N412, N411, N410, N409, N408, N407, N406, N405, N404,
         N403, N402, N401, N400, N399, N398, N397, N396, N395, N394, N393,
         N392, N391, N390, N389, N388, N387, N386, N385, N384, N383, N382,
         N381, N380, N379, N378, N377, N376, N375, N374, N373, N372, N371,
         N370, N369, N368, N367, N366, N365, N364, N363, N362, N361, N360,
         N359, N358, N357, N356, N355, N354, N353, N352, N351, N350, N349,
         N348, N347, N346, N345, N344, N343, N342, N341, N340, N339, N338,
         N337, N336, N335, N334, N333, N332, N331, N330, N329, N328, N327,
         N326, N325, N324, N323, N322, N321, N320, N319, N318, N317, N316,
         N315, N314, N313, N312, N311, N310, N309, N308, N307, N306, N305,
         N304, N303, N302, N301, N300, N299, N298, N297, N296, N295, N294,
         N293, N292, N291, N290, N289, N288, N287, N286, N285, N284, N283,
         N282, N281, N280, N279, N278, N277, N276, N275, N274, N273, N272,
         N271, N270, N269, N268, N267, N266, N265, N264, N263, N262, N261,
         N260, N259, N258, N257, N256, N255, N254, N253, N252, N251, N250,
         N249, N248, N247, N246, N245, N244, N243, N242, N241, N240, N239,
         N238, N237, N236, N235, N234, N233, N232, N231, N230, N229, N214,
         N213, N212, N211, N210, N209, N208, N207, N206, N205, N204, N203,
         N202, N201, N189, N188, N187, N186, N185, N184, N183, N182, N181,
         N180, N179, N178, N177, N176, N175, N174, N159, N158, N157, N156,
         N155, N154, N153, N152, N151, N150, N149, N148, N136, N135, N134,
         N133, N132, N131, N130, N129, N128, N127, N126, N125, N124, N123,
         N108, N107, N106, N105, N104, N103, N102, N101, N100,
         \add_14_root_add_199_I16/carry[6] ,
         \add_14_root_add_199_I16/carry[5] ,
         \add_14_root_add_199_I16/carry[4] ,
         \add_14_root_add_199_I16/carry[3] ,
         \add_14_root_add_199_I16/carry[2] ,
         \add_14_root_add_199_I16/carry[1] ,
         \add_13_root_add_199_I16/carry[9] ,
         \add_13_root_add_199_I16/carry[8] ,
         \add_13_root_add_199_I16/carry[7] ,
         \add_13_root_add_199_I16/carry[6] ,
         \add_13_root_add_199_I16/carry[5] ,
         \add_13_root_add_199_I16/carry[4] ,
         \add_13_root_add_199_I16/carry[3] ,
         \add_13_root_add_199_I16/carry[2] ,
         \add_13_root_add_199_I16/carry[1] ,
         \add_12_root_add_199_I16/carry[7] ,
         \add_12_root_add_199_I16/carry[6] ,
         \add_12_root_add_199_I16/carry[5] ,
         \add_12_root_add_199_I16/carry[4] ,
         \add_12_root_add_199_I16/carry[3] ,
         \add_12_root_add_199_I16/carry[2] ,
         \add_12_root_add_199_I16/carry[1] ,
         \add_11_root_add_199_I16/carry[11] ,
         \add_11_root_add_199_I16/carry[10] ,
         \add_11_root_add_199_I16/carry[9] ,
         \add_11_root_add_199_I16/carry[8] ,
         \add_11_root_add_199_I16/carry[7] ,
         \add_11_root_add_199_I16/carry[6] ,
         \add_11_root_add_199_I16/carry[5] ,
         \add_11_root_add_199_I16/carry[4] ,
         \add_11_root_add_199_I16/carry[3] ,
         \add_11_root_add_199_I16/carry[2] ,
         \add_11_root_add_199_I16/carry[1] ,
         \add_10_root_add_199_I16/carry[9] ,
         \add_10_root_add_199_I16/carry[8] ,
         \add_10_root_add_199_I16/carry[7] ,
         \add_10_root_add_199_I16/carry[6] ,
         \add_10_root_add_199_I16/carry[5] ,
         \add_10_root_add_199_I16/carry[4] ,
         \add_10_root_add_199_I16/carry[3] ,
         \add_10_root_add_199_I16/carry[2] ,
         \add_10_root_add_199_I16/carry[1] ,
         \add_9_root_add_199_I16/carry[13] ,
         \add_9_root_add_199_I16/carry[12] ,
         \add_9_root_add_199_I16/carry[11] ,
         \add_9_root_add_199_I16/carry[10] , \add_9_root_add_199_I16/carry[9] ,
         \add_9_root_add_199_I16/carry[8] , \add_9_root_add_199_I16/carry[7] ,
         \add_9_root_add_199_I16/carry[6] , \add_9_root_add_199_I16/carry[5] ,
         \add_9_root_add_199_I16/carry[4] , \add_9_root_add_199_I16/carry[3] ,
         \add_9_root_add_199_I16/carry[2] , \add_9_root_add_199_I16/carry[1] ,
         \add_8_root_add_199_I16/carry[11] ,
         \add_8_root_add_199_I16/carry[10] , \add_8_root_add_199_I16/carry[9] ,
         \add_8_root_add_199_I16/carry[8] , \add_8_root_add_199_I16/carry[7] ,
         \add_8_root_add_199_I16/carry[6] , \add_8_root_add_199_I16/carry[5] ,
         \add_8_root_add_199_I16/carry[4] , \add_8_root_add_199_I16/carry[3] ,
         \add_8_root_add_199_I16/carry[2] , \add_8_root_add_199_I16/carry[1] ,
         n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72,
         n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86,
         n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100,
         n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, n111,
         n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122,
         n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133,
         n134, n135, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246,
         n247, n248, n249;

  MAOI22D1 U26 ( .A1(\products[7][0] ), .A2(n148), .B1(n114), .B2(n145), .ZN(
        n147) );
  AN2XD1 U74 ( .A1(n142), .A2(n173), .Z(n172) );
  MAOI22D1 U112 ( .A1(\products[15][2] ), .A2(n185), .B1(n66), .B2(n156), .ZN(
        n184) );
  OA21D1 U130 ( .A1(n247), .A2(n65), .B(n182), .Z(n191) );
  AN2XD1 U134 ( .A1(n155), .A2(n165), .Z(n181) );
  AN2XD1 U191 ( .A1(n145), .A2(n150), .Z(n168) );
  AN2XD1 U218 ( .A1(n19), .A2(n179), .Z(n208) );
  AN2XD1 U239 ( .A1(n165), .A2(n145), .Z(n179) );
  shift_add_15_DW01_add_14_DW01_add_259 add_7_root_add_199_I16 ( .A({
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \shifted_products[14][14] , 
        \shifted_products[14][13] , \shifted_products[14][12] , 
        \shifted_products[14][11] , \shifted_products[14][10] , 
        \shifted_products[14][9] , \shifted_products[14][8] , 
        \shifted_products[14][7] , \shifted_products[14][6] , 
        \shifted_products[14][5] , \shifted_products[14][4] , 
        \shifted_products[14][3] , \shifted_products[14][2] , 
        \shifted_products[14][1] , \shifted_products[14][0] }), .B({
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \shifted_products[15][16] , \shifted_products[15][15] , 
        \shifted_products[15][14] , \shifted_products[15][13] , 
        \shifted_products[15][12] , \shifted_products[15][11] , 
        \shifted_products[15][10] , \shifted_products[15][9] , 
        \shifted_products[15][8] , \shifted_products[15][7] , 
        \shifted_products[15][6] , \shifted_products[15][5] , 
        \shifted_products[15][4] , \shifted_products[15][3] , 
        \shifted_products[15][2] , \shifted_products[15][1] , 
        \shifted_products[15][0] }), .CI(n249), .SUM({N257, N256, N255, N254, 
        N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, N243, N242, 
        N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, N231, N230, 
        N229}) );
  shift_add_15_DW01_add_6_DW01_add_251 add_4_root_add_0_root_add_199_I16 ( .A(
        {n27, n27, n27, n27, n27, n27, n27, n27, n27, n27, n27, n27, n27, n27, 
        n27, n27, n27, n27, N214, N213, N212, N211, N210, N209, N208, N207, 
        N206, N205, N204, N203, N202, N201}), .B({N257, N257, N257, N257, N256, 
        N255, N254, N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, 
        N243, N242, N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, 
        N231, N230, N229}), .CI(n249), .SUM({N382, N381, N380, N379, N378, 
        N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, N367, N366, 
        N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, N355, N354, 
        N353, N352, N351}) );
  shift_add_15_DW01_add_5_DW01_add_250 add_3_root_add_0_root_add_199_I16 ( .A(
        {n28, n28, n28, n28, n28, n28, n28, n28, n28, n28, n28, n28, n28, n28, 
        n28, n28, N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, 
        N179, N178, N177, N176, N175, N174}), .B({n5, n5, n5, n5, n5, n5, n5, 
        n5, n5, n5, n5, n5, n5, n5, n5, n5, n5, n5, n5, n4, N159, N158, N157, 
        N156, N155, N154, N153, N152, N151, N150, N149, N148}), .CI(n249), 
        .SUM({N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, N340, 
        N339, N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, N328, 
        N327, N326, N325, N324, N323, N322, N321, N320, N319}) );
  shift_add_15_DW01_add_4_DW01_add_249 add_5_root_add_199_I16 ( .A({n26, n26, 
        n26, n26, n26, n26, n26, n26, n26, n26, n26, n26, n26, n26, n26, n26, 
        n26, n26, n26, n26, n26, N108, N107, N106, N105, N104, N103, N102, 
        N101, N100, N99}), .B({n31, n31, n31, n31, n31, n31, n31, n31, n31, 
        n31, n31, n31, n31, n31, n31, n31, n31, N136, N135, N134, N133, N132, 
        N131, N130, N129, N128, N127, N126, N125, N124, N123}), .CI(n249), 
        .SUM({N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}) );
  shift_add_15_DW01_add_3_DW01_add_248 add_6_root_add_199_I16 ( .A({n23, n23, 
        n23, n23, n23, n23, n23, n23, n23, n23, n23, n23, n23, n23, n23, n23, 
        n23, n23, n23, n23, n23, n23, N61, N60, N59, N58, N57, N56, N55, N54}), 
        .B({n1, n1, n1, n1, n1, n1, n1, n1, n1, n1, n1, n1, n1, n1, n1, n1, n1, 
        n7, N87, N86, N85, N84, N83, N82, N81, N80, N79, N78, N77, N76}), .CI(
        n249), .SUM({N287, N286, N285, N284, N283, N282, N281, N280, N279, 
        N278, N277, N276, N275, N274, N273, N272, N271, N270, N269, N268, N267, 
        N266, N265, N264, N263, N262, N261, N260, N259, N258}) );
  shift_add_15_DW01_add_2_DW01_add_247 add_2_root_add_0_root_add_199_I16 ( .A(
        {N318, N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, 
        N308, N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, 
        N296, N295, N294, N293, N292, N291, N290, N289, N288}), .B({N382, N381, 
        N380, N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369, 
        N368, N367, N366, N365, N364, N363, N362, N361, N360, N359, N358, N357, 
        N356, N355, N354, N353, N352, N351}), .CI(n249), .SUM({N446, N445, 
        N444, N443, N442, N441, N440, N439, N438, N437, N436, N435, N434, N433, 
        N432, N431, N430, N429, N428, N427, N426, N425, N424, N423, N422, N421, 
        N420, N419, N418, N417, N416, N415}) );
  shift_add_15_DW01_add_1_DW01_add_246 add_1_root_add_0_root_add_199_I16 ( .A(
        {N446, N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, 
        N435, N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424, 
        N423, N422, N421, N420, N419, N418, N417, N416, N415}), .B({N287, N287, 
        N287, N286, N285, N284, N283, N282, N281, N280, N279, N278, N277, N276, 
        N275, N274, N273, N272, N271, N270, N269, N268, N267, N266, N265, N264, 
        N263, N262, N261, N260, N259, N258}), .CI(n249), .SUM({N414, N413, 
        N412, N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, 
        N400, N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, 
        N388, N387, N386, N385, N384, N383}) );
  shift_add_15_DW01_add_0_DW01_add_245 add_0_root_add_0_root_add_199_I16 ( .A(
        {N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, N340, 
        N339, N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, N328, 
        N327, N326, N325, N324, N323, N322, N321, N320, N319}), .B({N414, N413, 
        N412, N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, 
        N400, N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, 
        N388, N387, N386, N385, N384, N383}), .CI(n249), .SUM(shift_add_out)
         );
  OAI222D1 U2 ( .A1(n54), .A2(n117), .B1(n54), .B2(n33), .C1(n117), .C2(n33), 
        .ZN(n55) );
  BUFFD2 U3 ( .I(n8), .Z(n1) );
  AN2XD1 U4 ( .A1(n57), .A2(\products[5][5] ), .Z(n17) );
  OAI222D1 U5 ( .A1(n56), .A2(n129), .B1(n56), .B2(n59), .C1(n129), .C2(n59), 
        .ZN(n57) );
  CKBD1 U6 ( .I(n149), .Z(n2) );
  CKBD1 U7 ( .I(n149), .Z(n3) );
  INR2D0 U8 ( .A1(n138), .B1(n246), .ZN(n149) );
  CKBD1 U9 ( .I(n25), .Z(n4) );
  BUFFD2 U10 ( .I(n25), .Z(n5) );
  XOR3D1 U11 ( .A1(\products[9][5] ), .A2(n52), .A3(n50), .Z(n25) );
  XOR3D4 U12 ( .A1(\products[13][5] ), .A2(n44), .A3(n83), .Z(n27) );
  INVD2 U13 ( .I(n29), .ZN(n6) );
  INVD1 U14 ( .I(n6), .ZN(n7) );
  INVD1 U15 ( .I(n6), .ZN(n8) );
  INR2D1 U16 ( .A1(n188), .B1(n246), .ZN(n157) );
  AN2XD1 U17 ( .A1(n168), .A2(n41), .Z(n171) );
  NR2D1 U18 ( .A1(n141), .A2(n140), .ZN(n180) );
  INVD1 U19 ( .I(n137), .ZN(n246) );
  AN2XD1 U20 ( .A1(n156), .A2(n150), .Z(n12) );
  INVD1 U21 ( .I(n192), .ZN(n234) );
  FA1D0 U22 ( .A(\shifted_products[2][8] ), .B(\shifted_products[3][8] ), .CI(
        \add_13_root_add_199_I16/carry[8] ), .CO(
        \add_13_root_add_199_I16/carry[9] ), .S(N84) );
  XNR3D1 U23 ( .A1(n226), .A2(n64), .A3(n63), .ZN(N61) );
  XNR3D1 U24 ( .A1(\products[3][5] ), .A2(n60), .A3(n30), .ZN(n29) );
  NR3D0 U25 ( .A1(n13), .A2(n14), .A3(n15), .ZN(n44) );
  AN2XD1 U27 ( .A1(n43), .A2(\products[13][5] ), .Z(n14) );
  CKND2D1 U28 ( .A1(n210), .A2(n212), .ZN(n156) );
  BUFFD2 U29 ( .I(n159), .Z(n9) );
  CKND0 U30 ( .I(n180), .ZN(n10) );
  INVD1 U31 ( .I(n10), .ZN(n11) );
  CKND2D1 U32 ( .A1(n210), .A2(n211), .ZN(n150) );
  AN2D1 U33 ( .A1(n43), .A2(\products[12][5] ), .Z(n13) );
  AN2D1 U34 ( .A1(\products[12][5] ), .A2(\products[13][5] ), .Z(n15) );
  OAI222D1 U35 ( .A1(n42), .A2(n83), .B1(n42), .B2(n45), .C1(n83), .C2(n45), 
        .ZN(n43) );
  AN2D1 U36 ( .A1(n57), .A2(\products[4][5] ), .Z(n16) );
  AN2XD1 U37 ( .A1(\products[4][5] ), .A2(\products[5][5] ), .Z(n18) );
  NR3D2 U38 ( .A1(n16), .A2(n17), .A3(n18), .ZN(n58) );
  INR2D1 U39 ( .A1(n155), .B1(n246), .ZN(n19) );
  INR2D1 U40 ( .A1(n155), .B1(n246), .ZN(n162) );
  NR2D0 U41 ( .A1(n40), .A2(n82), .ZN(\shifted_products[13][0] ) );
  CKND2D2 U42 ( .A1(n213), .A2(n211), .ZN(n145) );
  AN2D1 U43 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(\products[2][5] ), 
        .Z(n20) );
  ND2D2 U44 ( .A1(n157), .A2(n180), .ZN(n151) );
  OAI22D0 U45 ( .A1(n3), .A2(n226), .B1(n11), .B2(n228), .ZN(
        \shifted_products[1][5] ) );
  AN2XD1 U46 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .Z(n21) );
  NR3D1 U47 ( .A1(n20), .A2(n21), .A3(n22), .ZN(n61) );
  XNR3D1 U48 ( .A1(n35), .A2(n61), .A3(n60), .ZN(N86) );
  OAI222D0 U49 ( .A1(n61), .A2(n60), .B1(n61), .B2(n35), .C1(n60), .C2(n35), 
        .ZN(n62) );
  OAI21D1 U50 ( .A1(n174), .A2(n217), .B(n175), .ZN(\shifted_products[3][9] )
         );
  NR2D0 U51 ( .A1(n3), .A2(n220), .ZN(\shifted_products[3][0] ) );
  AN2D1 U52 ( .A1(\shifted_products[3][9] ), .A2(\products[2][5] ), .Z(n22) );
  AOI222D2 U53 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[0][9] ), .B1(\add_14_root_add_199_I16/carry[6] ), 
        .B2(\shifted_products[1][6] ), .C1(\shifted_products[1][6] ), .C2(
        \shifted_products[0][9] ), .ZN(n64) );
  CKND2D1 U54 ( .A1(n214), .A2(n215), .ZN(n137) );
  XNR3D4 U55 ( .A1(n226), .A2(n24), .A3(n63), .ZN(n23) );
  AN2D4 U56 ( .A1(n188), .A2(n41), .Z(n138) );
  CKND2D0 U57 ( .A1(n212), .A2(n215), .ZN(n188) );
  CKND2D0 U58 ( .A1(n212), .A2(n213), .ZN(n165) );
  CKND2D0 U59 ( .A1(n210), .A2(n214), .ZN(n155) );
  CKND2D0 U60 ( .A1(n213), .A2(n214), .ZN(n164) );
  AOI222D0 U61 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \products[10][5] ), .B1(\add_9_root_add_199_I16/carry[13] ), .B2(
        \shifted_products[11][13] ), .C1(\shifted_products[11][13] ), .C2(
        \products[10][5] ), .ZN(n47) );
  CKAN2D0 U62 ( .A1(n162), .A2(n38), .Z(n142) );
  OAI22D0 U63 ( .A1(n9), .A2(n119), .B1(n237), .B2(n121), .ZN(
        \shifted_products[6][3] ) );
  OA222D1 U64 ( .A1(n64), .A2(n63), .B1(n64), .B2(n226), .C1(n63), .C2(n226), 
        .Z(n24) );
  CKND1 U65 ( .I(n161), .ZN(n237) );
  AOI222D1 U66 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \products[6][5] ), .B1(\add_11_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[7][11] ), .C1(\shifted_products[7][11] ), .C2(
        \products[6][5] ), .ZN(n54) );
  AOI222D1 U67 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(\products[4][5] ), .B1(\add_12_root_add_199_I16/carry[7] ), .B2(\shifted_products[5][7] ), .C1(
        \shifted_products[5][7] ), .C2(\products[4][5] ), .ZN(n56) );
  AOI222D1 U68 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(\products[8][5] ), .B1(\add_10_root_add_199_I16/carry[9] ), .B2(\shifted_products[9][9] ), .C1(
        \shifted_products[9][9] ), .C2(\products[8][5] ), .ZN(n49) );
  AOI222D1 U69 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \products[12][5] ), .B1(\add_8_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[13][11] ), .C1(\shifted_products[13][11] ), .C2(
        \products[12][5] ), .ZN(n42) );
  XOR3D2 U70 ( .A1(\products[5][5] ), .A2(n58), .A3(n129), .Z(n26) );
  XOR3D1 U71 ( .A1(\products[11][5] ), .A2(n46), .A3(n34), .Z(n28) );
  OAI22D0 U72 ( .A1(n3), .A2(n226), .B1(n11), .B2(n227), .ZN(
        \shifted_products[1][6] ) );
  NR2D0 U73 ( .A1(n144), .A2(n246), .ZN(n136) );
  CKAN2D0 U75 ( .A1(n179), .A2(n38), .Z(n174) );
  OAI21D0 U76 ( .A1(n67), .A2(n38), .B(n189), .ZN(\shifted_products[15][15] )
         );
  NR2D0 U77 ( .A1(n40), .A2(n70), .ZN(\shifted_products[15][0] ) );
  CKND2D0 U78 ( .A1(n19), .A2(n233), .ZN(n190) );
  CKND2D2 U79 ( .A1(n19), .A2(n234), .ZN(n163) );
  CKND2D0 U80 ( .A1(n234), .A2(n179), .ZN(n144) );
  CKND1 U81 ( .I(\products[13][5] ), .ZN(n77) );
  NR2D0 U82 ( .A1(n116), .A2(n40), .ZN(\shifted_products[7][0] ) );
  CKND2D0 U83 ( .A1(\products[12][5] ), .A2(n144), .ZN(n202) );
  CKND2D0 U84 ( .A1(\products[8][5] ), .A2(n144), .ZN(n143) );
  CKND1 U85 ( .I(\products[7][5] ), .ZN(n111) );
  CKND2D0 U86 ( .A1(\products[3][5] ), .A2(n163), .ZN(n175) );
  NR2D0 U87 ( .A1(n192), .A2(n246), .ZN(n203) );
  CKND2D0 U88 ( .A1(\products[2][5] ), .A2(n163), .ZN(n178) );
  CKND2D0 U89 ( .A1(\products[10][5] ), .A2(n192), .ZN(n209) );
  CKND1 U90 ( .I(\products[6][5] ), .ZN(n117) );
  ND2D2 U91 ( .A1(n179), .A2(n12), .ZN(n140) );
  CKND2D0 U92 ( .A1(\products[15][5] ), .A2(n192), .ZN(n182) );
  NR2D0 U93 ( .A1(n40), .A2(n69), .ZN(\shifted_products[15][1] ) );
  CKAN2D0 U94 ( .A1(n168), .A2(n157), .Z(n169) );
  CKND1 U95 ( .I(\products[5][5] ), .ZN(n123) );
  CKAN2D0 U96 ( .A1(n168), .A2(n3), .Z(n167) );
  OAI22D0 U97 ( .A1(n171), .A2(n129), .B1(n172), .B2(n131), .ZN(
        \shifted_products[4][5] ) );
  OAI22D0 U98 ( .A1(n171), .A2(n83), .B1(n173), .B2(n85), .ZN(
        \shifted_products[12][5] ) );
  OAI22D0 U99 ( .A1(n40), .A2(n125), .B1(n169), .B2(n127), .ZN(
        \shifted_products[5][3] ) );
  OAI22D0 U100 ( .A1(n171), .A2(n131), .B1(n172), .B2(n133), .ZN(
        \shifted_products[4][3] ) );
  OAI22D0 U101 ( .A1(n40), .A2(n67), .B1(n239), .B2(n69), .ZN(
        \shifted_products[15][3] ) );
  OAI22D0 U102 ( .A1(n138), .A2(n91), .B1(n12), .B2(n93), .ZN(
        \shifted_products[11][3] ) );
  NR2D0 U103 ( .A1(n234), .A2(n96), .ZN(\shifted_products[10][3] ) );
  OAI22D0 U104 ( .A1(n3), .A2(n135), .B1(n176), .B2(n217), .ZN(
        \shifted_products[3][5] ) );
  OAI21D0 U105 ( .A1(n174), .A2(n224), .B(n178), .ZN(\shifted_products[2][5] )
         );
  OAI22D0 U106 ( .A1(n3), .A2(n217), .B1(n176), .B2(n219), .ZN(
        \shifted_products[3][3] ) );
  NR2D0 U107 ( .A1(n232), .A2(n222), .ZN(\shifted_products[2][3] ) );
  NR2D0 U108 ( .A1(n233), .A2(n107), .ZN(\shifted_products[8][3] ) );
  OAI22D0 U109 ( .A1(n39), .A2(n79), .B1(n236), .B2(n81), .ZN(
        \shifted_products[13][3] ) );
  OAI22D0 U110 ( .A1(n171), .A2(n85), .B1(n173), .B2(n87), .ZN(
        \shifted_products[12][3] ) );
  OAI22D0 U111 ( .A1(n113), .A2(n39), .B1(n235), .B2(n115), .ZN(
        \shifted_products[7][3] ) );
  OAI21D0 U113 ( .A1(n69), .A2(n38), .B(n189), .ZN(\shifted_products[15][13] )
         );
  NR2D0 U114 ( .A1(n3), .A2(n219), .ZN(\shifted_products[3][1] ) );
  NR2D0 U115 ( .A1(n40), .A2(n127), .ZN(\shifted_products[5][1] ) );
  NR2D0 U116 ( .A1(n171), .A2(n87), .ZN(\shifted_products[12][1] ) );
  NR2D0 U117 ( .A1(n40), .A2(n81), .ZN(\shifted_products[13][1] ) );
  NR2D0 U118 ( .A1(n115), .A2(n40), .ZN(\shifted_products[7][1] ) );
  NR2D0 U119 ( .A1(n234), .A2(n98), .ZN(\shifted_products[10][1] ) );
  OA21D0 U120 ( .A1(n174), .A2(n216), .B(n175), .Z(n35) );
  CKAN2D0 U121 ( .A1(\products[0][5] ), .A2(n40), .Z(\shifted_products[0][9] )
         );
  AO222D1 U122 ( .A1(n62), .A2(\products[2][5] ), .B1(n62), .B2(
        \products[3][5] ), .C1(\products[2][5] ), .C2(\products[3][5] ), .Z(
        n30) );
  XNR3D4 U123 ( .A1(\products[7][5] ), .A2(n117), .A3(n32), .ZN(n31) );
  AO222D1 U124 ( .A1(n55), .A2(\products[6][5] ), .B1(n55), .B2(
        \products[7][5] ), .C1(\products[6][5] ), .C2(\products[7][5] ), .Z(
        n32) );
  CKAN2D0 U125 ( .A1(n168), .A2(n138), .Z(n198) );
  OAI21D0 U126 ( .A1(n66), .A2(n38), .B(n189), .ZN(\shifted_products[15][16] )
         );
  INR2XD0 U127 ( .A1(n188), .B1(n170), .ZN(n173) );
  CKAN2D0 U128 ( .A1(n150), .A2(n41), .Z(n159) );
  INR2D0 U129 ( .A1(n155), .B1(n177), .ZN(n176) );
  INR2D0 U131 ( .A1(n145), .B1(n163), .ZN(n158) );
  ND2D2 U132 ( .A1(n38), .A2(n155), .ZN(n141) );
  INR2D0 U133 ( .A1(n145), .B1(n192), .ZN(n193) );
  CKND2D0 U135 ( .A1(n38), .A2(n165), .ZN(n148) );
  CKND2D0 U136 ( .A1(n19), .A2(n165), .ZN(n195) );
  NR2D0 U137 ( .A1(n171), .A2(n134), .ZN(\shifted_products[4][0] ) );
  NR2D0 U138 ( .A1(n171), .A2(n88), .ZN(\shifted_products[12][0] ) );
  AOI22D0 U139 ( .A1(\products[6][4] ), .A2(n161), .B1(\products[6][0] ), .B2(
        n148), .ZN(n160) );
  NR2D0 U140 ( .A1(n234), .A2(n99), .ZN(\shifted_products[10][0] ) );
  NR2D0 U141 ( .A1(n233), .A2(n110), .ZN(\shifted_products[8][0] ) );
  CKND1 U142 ( .I(\products[15][4] ), .ZN(n66) );
  OAI21D0 U143 ( .A1(n174), .A2(n218), .B(n175), .ZN(\shifted_products[3][8] )
         );
  OAI21D0 U144 ( .A1(n174), .A2(n221), .B(n178), .ZN(\shifted_products[2][8] )
         );
  NR2D0 U145 ( .A1(n232), .A2(n225), .ZN(\shifted_products[2][0] ) );
  CKND2D0 U146 ( .A1(n157), .A2(n150), .ZN(n154) );
  CKND2D0 U147 ( .A1(n168), .A2(n188), .ZN(n201) );
  CKND1 U148 ( .I(\products[6][3] ), .ZN(n119) );
  CKND1 U149 ( .I(\products[14][4] ), .ZN(n72) );
  CKND1 U150 ( .I(\products[7][4] ), .ZN(n112) );
  CKND1 U151 ( .I(\products[12][3] ), .ZN(n85) );
  CKND1 U152 ( .I(\products[13][4] ), .ZN(n78) );
  CKND1 U153 ( .I(\products[5][3] ), .ZN(n125) );
  OAI21D0 U154 ( .A1(n142), .A2(n107), .B(n143), .ZN(\shifted_products[8][7] )
         );
  CKND1 U155 ( .I(\products[6][4] ), .ZN(n118) );
  OAI21D0 U156 ( .A1(n142), .A2(n85), .B(n202), .ZN(\shifted_products[12][9] )
         );
  OAI22D0 U157 ( .A1(n233), .A2(n106), .B1(n142), .B2(n110), .ZN(
        \shifted_products[8][4] ) );
  OAI21D0 U158 ( .A1(n142), .A2(n109), .B(n143), .ZN(\shifted_products[8][5] )
         );
  OAI21D0 U159 ( .A1(n142), .A2(n87), .B(n202), .ZN(\shifted_products[12][7] )
         );
  OAI22D0 U160 ( .A1(n234), .A2(n95), .B1(n208), .B2(n99), .ZN(
        \shifted_products[10][4] ) );
  FA1D1 U161 ( .A(\shifted_products[2][6] ), .B(\shifted_products[3][6] ), 
        .CI(\add_13_root_add_199_I16/carry[6] ), .CO(
        \add_13_root_add_199_I16/carry[7] ), .S(N82) );
  OAI21D0 U162 ( .A1(n174), .A2(n223), .B(n178), .ZN(\shifted_products[2][6] )
         );
  OAI22D0 U163 ( .A1(n171), .A2(n130), .B1(n172), .B2(n132), .ZN(
        \shifted_products[4][4] ) );
  OAI22D0 U164 ( .A1(n171), .A2(n84), .B1(n173), .B2(n86), .ZN(
        \shifted_products[12][4] ) );
  OAI21D0 U165 ( .A1(n142), .A2(n108), .B(n143), .ZN(\shifted_products[8][6] )
         );
  AOI22D0 U166 ( .A1(\products[9][4] ), .A2(n140), .B1(\products[9][0] ), .B2(
        n141), .ZN(n139) );
  AOI22D0 U167 ( .A1(\products[15][4] ), .A2(n187), .B1(\products[15][0] ), 
        .B2(n185), .ZN(n186) );
  AOI22D0 U168 ( .A1(\products[11][0] ), .A2(n205), .B1(\products[11][4] ), 
        .B2(n177), .ZN(n204) );
  OAI22D0 U169 ( .A1(n40), .A2(n126), .B1(n169), .B2(n128), .ZN(
        \shifted_products[5][2] ) );
  OAI22D0 U170 ( .A1(n171), .A2(n132), .B1(n172), .B2(n134), .ZN(
        \shifted_products[4][2] ) );
  OAI22D0 U171 ( .A1(n40), .A2(n80), .B1(n236), .B2(n82), .ZN(
        \shifted_products[13][2] ) );
  OAI22D0 U172 ( .A1(n171), .A2(n86), .B1(n173), .B2(n88), .ZN(
        \shifted_products[12][2] ) );
  OAI22D0 U173 ( .A1(n40), .A2(n68), .B1(n239), .B2(n70), .ZN(
        \shifted_products[15][2] ) );
  OAI22D0 U174 ( .A1(n9), .A2(n74), .B1(n238), .B2(n76), .ZN(
        \shifted_products[14][2] ) );
  OAI22D0 U175 ( .A1(n3), .A2(n227), .B1(n11), .B2(n229), .ZN(
        \shifted_products[1][4] ) );
  OAI22D0 U176 ( .A1(n3), .A2(n228), .B1(n11), .B2(n230), .ZN(
        \shifted_products[1][3] ) );
  OAI22D0 U177 ( .A1(n138), .A2(n92), .B1(n12), .B2(n94), .ZN(
        \shifted_products[11][2] ) );
  NR2D0 U178 ( .A1(n234), .A2(n97), .ZN(\shifted_products[10][2] ) );
  OAI22D0 U179 ( .A1(n3), .A2(n216), .B1(n176), .B2(n218), .ZN(
        \shifted_products[3][4] ) );
  OAI22D0 U180 ( .A1(n232), .A2(n221), .B1(n174), .B2(n225), .ZN(
        \shifted_products[2][4] ) );
  OAI22D0 U181 ( .A1(n3), .A2(n218), .B1(n176), .B2(n220), .ZN(
        \shifted_products[3][2] ) );
  NR2D0 U182 ( .A1(n232), .A2(n223), .ZN(\shifted_products[2][2] ) );
  OAI22D0 U183 ( .A1(n138), .A2(n103), .B1(n240), .B2(n105), .ZN(
        \shifted_products[9][2] ) );
  NR2D0 U184 ( .A1(n233), .A2(n108), .ZN(\shifted_products[8][2] ) );
  OAI22D0 U185 ( .A1(n9), .A2(n120), .B1(n237), .B2(n122), .ZN(
        \shifted_products[6][2] ) );
  CKAN2D0 U186 ( .A1(n3), .A2(n150), .Z(n146) );
  CKND1 U187 ( .I(\products[5][4] ), .ZN(n124) );
  NR2D0 U188 ( .A1(n2), .A2(n230), .ZN(\shifted_products[1][1] ) );
  CKND1 U189 ( .I(\products[4][4] ), .ZN(n130) );
  CKND1 U190 ( .I(\products[4][3] ), .ZN(n131) );
  CKAN2D0 U192 ( .A1(n138), .A2(n150), .Z(n183) );
  CKND2D0 U193 ( .A1(n179), .A2(n155), .ZN(n205) );
  AOI22D0 U194 ( .A1(\products[7][2] ), .A2(n153), .B1(\products[7][4] ), .B2(
        n154), .ZN(n152) );
  AOI22D0 U195 ( .A1(\products[13][4] ), .A2(n201), .B1(\products[13][2] ), 
        .B2(n170), .ZN(n200) );
  OAI21D0 U196 ( .A1(n142), .A2(n86), .B(n202), .ZN(\shifted_products[12][8] )
         );
  AOI22D0 U197 ( .A1(\products[13][4] ), .A2(n170), .B1(\products[13][2] ), 
        .B2(n246), .ZN(n199) );
  OAI22D0 U198 ( .A1(n3), .A2(n229), .B1(n11), .B2(n231), .ZN(
        \shifted_products[1][2] ) );
  INVD1 U199 ( .I(n144), .ZN(n233) );
  INVD1 U200 ( .I(n163), .ZN(n232) );
  CKBD1 U201 ( .I(n151), .Z(n40) );
  CKBD1 U202 ( .I(n151), .Z(n39) );
  CKBD1 U203 ( .I(n151), .Z(n41) );
  INVD1 U204 ( .I(n140), .ZN(n240) );
  OAI22D1 U205 ( .A1(n166), .A2(n125), .B1(n167), .B2(n123), .ZN(
        \shifted_products[5][7] ) );
  ND2D1 U206 ( .A1(n138), .A2(n12), .ZN(n192) );
  ND2D1 U207 ( .A1(n238), .A2(n19), .ZN(n161) );
  INVD1 U208 ( .I(n201), .ZN(n236) );
  NR2D1 U209 ( .A1(n9), .A2(n76), .ZN(\shifted_products[14][0] ) );
  FA1D0 U210 ( .A(\shifted_products[12][5] ), .B(\shifted_products[13][5] ), 
        .CI(\add_8_root_add_199_I16/carry[5] ), .CO(
        \add_8_root_add_199_I16/carry[6] ), .S(N206) );
  OAI222D0 U211 ( .A1(n242), .A2(n81), .B1(n236), .B2(n79), .C1(n39), .C2(n77), 
        .ZN(\shifted_products[13][5] ) );
  FA1D0 U212 ( .A(\shifted_products[4][5] ), .B(\shifted_products[5][5] ), 
        .CI(\add_12_root_add_199_I16/carry[5] ), .CO(
        \add_12_root_add_199_I16/carry[6] ), .S(N104) );
  OAI222D0 U213 ( .A1(n169), .A2(n125), .B1(n166), .B2(n127), .C1(n39), .C2(
        n123), .ZN(\shifted_products[5][5] ) );
  FA1D0 U214 ( .A(\shifted_products[4][3] ), .B(\shifted_products[5][3] ), 
        .CI(\add_12_root_add_199_I16/carry[3] ), .CO(
        \add_12_root_add_199_I16/carry[4] ), .S(N102) );
  FA1D0 U215 ( .A(\shifted_products[2][3] ), .B(\shifted_products[3][3] ), 
        .CI(\add_13_root_add_199_I16/carry[3] ), .CO(
        \add_13_root_add_199_I16/carry[4] ), .S(N79) );
  FA1D0 U216 ( .A(\shifted_products[2][5] ), .B(\shifted_products[3][5] ), 
        .CI(\add_13_root_add_199_I16/carry[5] ), .CO(
        \add_13_root_add_199_I16/carry[6] ), .S(N81) );
  FA1D0 U217 ( .A(\shifted_products[6][3] ), .B(\shifted_products[7][3] ), 
        .CI(\add_11_root_add_199_I16/carry[3] ), .CO(
        \add_11_root_add_199_I16/carry[4] ), .S(N126) );
  FA1D0 U219 ( .A(\shifted_products[12][3] ), .B(\shifted_products[13][3] ), 
        .CI(\add_8_root_add_199_I16/carry[3] ), .CO(
        \add_8_root_add_199_I16/carry[4] ), .S(N204) );
  OAI22D1 U220 ( .A1(n9), .A2(n73), .B1(n238), .B2(n75), .ZN(
        \shifted_products[14][3] ) );
  FA1D0 U221 ( .A(\shifted_products[8][3] ), .B(\shifted_products[9][3] ), 
        .CI(\add_10_root_add_199_I16/carry[3] ), .CO(
        \add_10_root_add_199_I16/carry[4] ), .S(N151) );
  OAI22D1 U222 ( .A1(n138), .A2(n102), .B1(n240), .B2(n104), .ZN(
        \shifted_products[9][3] ) );
  OAI21D1 U223 ( .A1(n181), .A2(n67), .B(n191), .ZN(\shifted_products[15][11] ) );
  OAI21D1 U224 ( .A1(n37), .A2(n75), .B(n197), .ZN(\shifted_products[14][11] )
         );
  OAI21D1 U225 ( .A1(n37), .A2(n73), .B(n197), .ZN(\shifted_products[14][13] )
         );
  FA1D0 U226 ( .A(\shifted_products[2][7] ), .B(\shifted_products[3][7] ), 
        .CI(\add_13_root_add_199_I16/carry[7] ), .CO(
        \add_13_root_add_199_I16/carry[8] ), .S(N83) );
  OAI21D1 U227 ( .A1(n174), .A2(n219), .B(n175), .ZN(\shifted_products[3][7] )
         );
  OAI21D1 U228 ( .A1(n174), .A2(n222), .B(n178), .ZN(\shifted_products[2][7] )
         );
  FA1D0 U229 ( .A(\shifted_products[2][1] ), .B(\shifted_products[3][1] ), 
        .CI(\add_13_root_add_199_I16/carry[1] ), .CO(
        \add_13_root_add_199_I16/carry[2] ), .S(N77) );
  NR2D1 U230 ( .A1(n232), .A2(n224), .ZN(\shifted_products[2][1] ) );
  FA1D0 U231 ( .A(\shifted_products[6][1] ), .B(\shifted_products[7][1] ), 
        .CI(\add_11_root_add_199_I16/carry[1] ), .CO(
        \add_11_root_add_199_I16/carry[2] ), .S(N124) );
  NR2D1 U232 ( .A1(n9), .A2(n121), .ZN(\shifted_products[6][1] ) );
  FA1D0 U233 ( .A(\shifted_products[8][1] ), .B(\shifted_products[9][1] ), 
        .CI(\add_10_root_add_199_I16/carry[1] ), .CO(
        \add_10_root_add_199_I16/carry[2] ), .S(N149) );
  NR2D1 U234 ( .A1(n138), .A2(n104), .ZN(\shifted_products[9][1] ) );
  NR2D1 U235 ( .A1(n233), .A2(n109), .ZN(\shifted_products[8][1] ) );
  NR2D1 U236 ( .A1(n9), .A2(n75), .ZN(\shifted_products[14][1] ) );
  FA1D0 U237 ( .A(\shifted_products[4][1] ), .B(\shifted_products[5][1] ), 
        .CI(\add_12_root_add_199_I16/carry[1] ), .CO(
        \add_12_root_add_199_I16/carry[2] ), .S(N100) );
  NR2D1 U238 ( .A1(n171), .A2(n133), .ZN(\shifted_products[4][1] ) );
  FA1D0 U240 ( .A(\shifted_products[12][1] ), .B(\shifted_products[13][1] ), 
        .CI(\add_8_root_add_199_I16/carry[1] ), .CO(
        \add_8_root_add_199_I16/carry[2] ), .S(N202) );
  FA1D0 U241 ( .A(\products[0][5] ), .B(\shifted_products[1][5] ), .CI(
        \add_14_root_add_199_I16/carry[5] ), .CO(
        \add_14_root_add_199_I16/carry[6] ), .S(N59) );
  NR2D1 U242 ( .A1(n9), .A2(n122), .ZN(\shifted_products[6][0] ) );
  INVD1 U243 ( .I(\products[4][5] ), .ZN(n129) );
  INVD1 U244 ( .I(\products[12][5] ), .ZN(n83) );
  NR2D1 U245 ( .A1(n170), .A2(n141), .ZN(n166) );
  INVD1 U246 ( .I(n148), .ZN(n244) );
  OAI22D1 U247 ( .A1(n248), .A2(n79), .B1(n136), .B2(n77), .ZN(
        \shifted_products[13][11] ) );
  OAI22D1 U248 ( .A1(n248), .A2(n102), .B1(n136), .B2(n100), .ZN(
        \shifted_products[9][9] ) );
  OAI22D1 U249 ( .A1(n244), .A2(n113), .B1(n158), .B2(n111), .ZN(
        \shifted_products[7][11] ) );
  INVD1 U250 ( .I(\products[9][5] ), .ZN(n100) );
  INVD1 U251 ( .I(\products[14][5] ), .ZN(n71) );
  INVD1 U252 ( .I(\products[11][5] ), .ZN(n89) );
  OAI22D1 U253 ( .A1(n248), .A2(n78), .B1(n136), .B2(n77), .ZN(
        \shifted_products[13][12] ) );
  ND2D1 U254 ( .A1(\products[14][5] ), .A2(n190), .ZN(n197) );
  ND2D1 U255 ( .A1(\products[10][5] ), .A2(n190), .ZN(n207) );
  ND2D1 U256 ( .A1(\products[15][5] ), .A2(n190), .ZN(n189) );
  ND2D1 U257 ( .A1(\products[11][5] ), .A2(n190), .ZN(n206) );
  INVD1 U258 ( .I(n196), .ZN(n238) );
  INVD1 U259 ( .I(n141), .ZN(n248) );
  OAI22D1 U260 ( .A1(n166), .A2(n124), .B1(n167), .B2(n123), .ZN(
        \shifted_products[5][8] ) );
  INVD1 U261 ( .I(n195), .ZN(n243) );
  OA22D0 U262 ( .A1(n244), .A2(n112), .B1(n158), .B2(n111), .Z(n33) );
  INVD1 U263 ( .I(\products[15][5] ), .ZN(n65) );
  INVD1 U264 ( .I(n187), .ZN(n239) );
  INVD1 U265 ( .I(n153), .ZN(n245) );
  INVD1 U266 ( .I(n154), .ZN(n235) );
  AOI222D0 U267 ( .A1(n48), .A2(\products[10][5] ), .B1(n48), .B2(
        \products[11][5] ), .C1(\products[10][5] ), .C2(\products[11][5] ), 
        .ZN(n34) );
  INVD1 U268 ( .I(n185), .ZN(n247) );
  INVD1 U269 ( .I(n170), .ZN(n242) );
  FA1D0 U270 ( .A(\shifted_products[10][3] ), .B(\shifted_products[11][3] ), 
        .CI(\add_9_root_add_199_I16/carry[3] ), .CO(
        \add_9_root_add_199_I16/carry[4] ), .S(N177) );
  FA1D0 U271 ( .A(\shifted_products[10][9] ), .B(\shifted_products[11][9] ), 
        .CI(\add_9_root_add_199_I16/carry[9] ), .CO(
        \add_9_root_add_199_I16/carry[10] ), .S(N183) );
  OAI22D1 U272 ( .A1(n241), .A2(n91), .B1(n203), .B2(n89), .ZN(
        \shifted_products[11][9] ) );
  OAI21D1 U273 ( .A1(n37), .A2(n98), .B(n207), .ZN(\shifted_products[10][9] )
         );
  FA1D0 U274 ( .A(\shifted_products[10][11] ), .B(\shifted_products[11][11] ), 
        .CI(\add_9_root_add_199_I16/carry[11] ), .CO(
        \add_9_root_add_199_I16/carry[12] ), .S(N185) );
  OAI21D1 U275 ( .A1(n37), .A2(n93), .B(n206), .ZN(\shifted_products[11][11] )
         );
  OAI21D1 U276 ( .A1(n37), .A2(n96), .B(n207), .ZN(\shifted_products[10][11] )
         );
  FA1D0 U277 ( .A(\shifted_products[10][1] ), .B(\shifted_products[11][1] ), 
        .CI(\add_9_root_add_199_I16/carry[1] ), .CO(
        \add_9_root_add_199_I16/carry[2] ), .S(N175) );
  NR2D1 U278 ( .A1(n138), .A2(n93), .ZN(\shifted_products[11][1] ) );
  NR2D1 U279 ( .A1(n138), .A2(n105), .ZN(\shifted_products[9][0] ) );
  NR2D1 U280 ( .A1(n138), .A2(n94), .ZN(\shifted_products[11][0] ) );
  INVD1 U281 ( .I(\products[3][5] ), .ZN(n135) );
  INVD1 U282 ( .I(\products[1][5] ), .ZN(n226) );
  OAI21D1 U283 ( .A1(n37), .A2(n91), .B(n206), .ZN(\shifted_products[11][13] )
         );
  OAI22D1 U284 ( .A1(n248), .A2(n101), .B1(n136), .B2(n100), .ZN(
        \shifted_products[9][10] ) );
  OA21D1 U285 ( .A1(n37), .A2(n90), .B(n206), .Z(n36) );
  INVD1 U286 ( .I(n205), .ZN(n241) );
  ND2D1 U287 ( .A1(n165), .A2(n156), .ZN(n170) );
  INVD1 U288 ( .I(\products[13][3] ), .ZN(n79) );
  ND2D1 U289 ( .A1(n156), .A2(n150), .ZN(n177) );
  NR2D1 U290 ( .A1(n2), .A2(n231), .ZN(\shifted_products[1][0] ) );
  FA1D0 U291 ( .A(\shifted_products[6][7] ), .B(\shifted_products[7][7] ), 
        .CI(\add_11_root_add_199_I16/carry[7] ), .CO(
        \add_11_root_add_199_I16/carry[8] ), .S(N130) );
  OAI222D0 U292 ( .A1(n245), .A2(n113), .B1(n146), .B2(n111), .C1(n115), .C2(
        n145), .ZN(\shifted_products[7][7] ) );
  OAI222D0 U293 ( .A1(n232), .A2(n117), .B1(n244), .B2(n121), .C1(n145), .C2(
        n119), .ZN(\shifted_products[6][7] ) );
  FA1D0 U294 ( .A(\shifted_products[8][7] ), .B(\shifted_products[9][7] ), 
        .CI(\add_10_root_add_199_I16/carry[7] ), .CO(
        \add_10_root_add_199_I16/carry[8] ), .S(N155) );
  OAI222D0 U295 ( .A1(n248), .A2(n104), .B1(n233), .B2(n100), .C1(n102), .C2(
        n137), .ZN(\shifted_products[9][7] ) );
  OAI222D0 U296 ( .A1(n39), .A2(n66), .B1(n239), .B2(n68), .C1(n70), .C2(n156), 
        .ZN(\shifted_products[15][4] ) );
  OAI222D0 U297 ( .A1(n9), .A2(n72), .B1(n238), .B2(n74), .C1(n145), .C2(n76), 
        .ZN(\shifted_products[14][4] ) );
  OAI222D0 U298 ( .A1(n39), .A2(n65), .B1(n239), .B2(n67), .C1(n69), .C2(n156), 
        .ZN(\shifted_products[15][5] ) );
  OAI222D0 U299 ( .A1(n9), .A2(n71), .B1(n238), .B2(n73), .C1(n145), .C2(n75), 
        .ZN(\shifted_products[14][5] ) );
  OAI222D0 U300 ( .A1(n247), .A2(n69), .B1(n183), .B2(n65), .C1(n67), .C2(n156), .ZN(\shifted_products[15][7] ) );
  OAI222D0 U301 ( .A1(n234), .A2(n71), .B1(n243), .B2(n75), .C1(n145), .C2(n73), .ZN(\shifted_products[14][7] ) );
  FA1D0 U302 ( .A(\shifted_products[8][4] ), .B(\shifted_products[9][4] ), 
        .CI(\add_10_root_add_199_I16/carry[4] ), .CO(
        \add_10_root_add_199_I16/carry[5] ), .S(N152) );
  OAI222D0 U303 ( .A1(n138), .A2(n101), .B1(n240), .B2(n103), .C1(n137), .C2(
        n105), .ZN(\shifted_products[9][4] ) );
  FA1D0 U304 ( .A(\shifted_products[12][7] ), .B(\shifted_products[13][7] ), 
        .CI(\add_8_root_add_199_I16/carry[7] ), .CO(
        \add_8_root_add_199_I16/carry[8] ), .S(N208) );
  OAI222D0 U305 ( .A1(n242), .A2(n79), .B1(n198), .B2(n77), .C1(n137), .C2(n81), .ZN(\shifted_products[13][7] ) );
  FA1D0 U306 ( .A(\shifted_products[8][5] ), .B(\shifted_products[9][5] ), 
        .CI(\add_10_root_add_199_I16/carry[5] ), .CO(
        \add_10_root_add_199_I16/carry[6] ), .S(N153) );
  OAI222D0 U307 ( .A1(n138), .A2(n100), .B1(n240), .B2(n102), .C1(n137), .C2(
        n104), .ZN(\shifted_products[9][5] ) );
  FA1D0 U308 ( .A(\shifted_products[6][9] ), .B(\shifted_products[7][9] ), 
        .CI(\add_11_root_add_199_I16/carry[9] ), .CO(
        \add_11_root_add_199_I16/carry[10] ), .S(N132) );
  OAI222D0 U309 ( .A1(n232), .A2(n111), .B1(n244), .B2(n115), .C1(n145), .C2(
        n113), .ZN(\shifted_products[7][9] ) );
  OAI22D1 U310 ( .A1(n244), .A2(n119), .B1(n158), .B2(n117), .ZN(
        \shifted_products[6][9] ) );
  FA1D0 U311 ( .A(\shifted_products[12][9] ), .B(\shifted_products[13][9] ), 
        .CI(\add_8_root_add_199_I16/carry[9] ), .CO(
        \add_8_root_add_199_I16/carry[10] ), .S(N210) );
  OAI222D0 U312 ( .A1(n248), .A2(n81), .B1(n233), .B2(n77), .C1(n137), .C2(n79), .ZN(\shifted_products[13][9] ) );
  FA1D0 U313 ( .A(\shifted_products[12][4] ), .B(\shifted_products[13][4] ), 
        .CI(\add_8_root_add_199_I16/carry[4] ), .CO(
        \add_8_root_add_199_I16/carry[5] ), .S(N205) );
  OAI222D0 U314 ( .A1(n242), .A2(n82), .B1(n236), .B2(n80), .C1(n39), .C2(n78), 
        .ZN(\shifted_products[13][4] ) );
  FA1D0 U315 ( .A(\shifted_products[6][5] ), .B(\shifted_products[7][5] ), 
        .CI(\add_11_root_add_199_I16/carry[5] ), .CO(
        \add_11_root_add_199_I16/carry[6] ), .S(N128) );
  OAI222D0 U316 ( .A1(n9), .A2(n117), .B1(n237), .B2(n119), .C1(n145), .C2(
        n121), .ZN(\shifted_products[6][5] ) );
  OAI222D0 U317 ( .A1(n235), .A2(n113), .B1(n245), .B2(n115), .C1(n111), .C2(
        n40), .ZN(\shifted_products[7][5] ) );
  OAI222D0 U318 ( .A1(n174), .A2(n220), .B1(n176), .B2(n216), .C1(n3), .C2(
        n135), .ZN(\shifted_products[3][6] ) );
  FA1D0 U319 ( .A(\shifted_products[4][4] ), .B(\shifted_products[5][4] ), 
        .CI(\add_12_root_add_199_I16/carry[4] ), .CO(
        \add_12_root_add_199_I16/carry[5] ), .S(N103) );
  OAI222D0 U320 ( .A1(n169), .A2(n126), .B1(n166), .B2(n128), .C1(n39), .C2(
        n124), .ZN(\shifted_products[5][4] ) );
  FA1D0 U321 ( .A(\shifted_products[6][4] ), .B(\shifted_products[7][4] ), 
        .CI(\add_11_root_add_199_I16/carry[4] ), .CO(
        \add_11_root_add_199_I16/carry[5] ), .S(N127) );
  OAI222D0 U322 ( .A1(n9), .A2(n118), .B1(n237), .B2(n120), .C1(n145), .C2(
        n122), .ZN(\shifted_products[6][4] ) );
  OAI222D0 U323 ( .A1(n235), .A2(n114), .B1(n245), .B2(n116), .C1(n112), .C2(
        n40), .ZN(\shifted_products[7][4] ) );
  FA1D0 U324 ( .A(\shifted_products[8][6] ), .B(\shifted_products[9][6] ), 
        .CI(\add_10_root_add_199_I16/carry[6] ), .CO(
        \add_10_root_add_199_I16/carry[7] ), .S(N154) );
  OAI221D0 U325 ( .A1(n138), .A2(n100), .B1(n103), .B2(n137), .C(n139), .ZN(
        \shifted_products[9][6] ) );
  OAI221D0 U326 ( .A1(n39), .A2(n65), .B1(n68), .B2(n156), .C(n186), .ZN(
        \shifted_products[15][6] ) );
  OAI221D0 U327 ( .A1(n9), .A2(n71), .B1(n145), .B2(n74), .C(n194), .ZN(
        \shifted_products[14][6] ) );
  OAI22D1 U328 ( .A1(n243), .A2(n73), .B1(n193), .B2(n71), .ZN(
        \shifted_products[14][9] ) );
  OAI221D0 U329 ( .A1(n181), .A2(n69), .B1(n247), .B2(n67), .C(n182), .ZN(
        \shifted_products[15][9] ) );
  OAI221D0 U330 ( .A1(n181), .A2(n68), .B1(n247), .B2(n66), .C(n182), .ZN(
        \shifted_products[15][10] ) );
  OAI222D0 U331 ( .A1(n243), .A2(n72), .B1(n193), .B2(n71), .C1(n37), .C2(n76), 
        .ZN(\shifted_products[14][10] ) );
  FA1D0 U332 ( .A(\shifted_products[6][8] ), .B(\shifted_products[7][8] ), 
        .CI(\add_11_root_add_199_I16/carry[8] ), .CO(
        \add_11_root_add_199_I16/carry[9] ), .S(N131) );
  OAI221D0 U333 ( .A1(n146), .A2(n111), .B1(n245), .B2(n112), .C(n147), .ZN(
        \shifted_products[7][8] ) );
  OAI222D0 U334 ( .A1(n232), .A2(n117), .B1(n244), .B2(n120), .C1(n145), .C2(
        n118), .ZN(\shifted_products[6][8] ) );
  OAI221D0 U335 ( .A1(n181), .A2(n66), .B1(n70), .B2(n38), .C(n191), .ZN(
        \shifted_products[15][12] ) );
  OAI21D1 U336 ( .A1(n37), .A2(n74), .B(n197), .ZN(\shifted_products[14][12] )
         );
  FA1D0 U337 ( .A(\shifted_products[4][2] ), .B(\shifted_products[5][2] ), 
        .CI(\add_12_root_add_199_I16/carry[2] ), .CO(
        \add_12_root_add_199_I16/carry[3] ), .S(N101) );
  FA1D0 U338 ( .A(\shifted_products[2][2] ), .B(\shifted_products[3][2] ), 
        .CI(\add_13_root_add_199_I16/carry[2] ), .CO(
        \add_13_root_add_199_I16/carry[3] ), .S(N78) );
  FA1D0 U339 ( .A(\shifted_products[2][4] ), .B(\shifted_products[3][4] ), 
        .CI(\add_13_root_add_199_I16/carry[4] ), .CO(
        \add_13_root_add_199_I16/carry[5] ), .S(N80) );
  FA1D0 U340 ( .A(\shifted_products[6][2] ), .B(\shifted_products[7][2] ), 
        .CI(\add_11_root_add_199_I16/carry[2] ), .CO(
        \add_11_root_add_199_I16/carry[3] ), .S(N125) );
  OAI22D1 U341 ( .A1(n114), .A2(n39), .B1(n235), .B2(n116), .ZN(
        \shifted_products[7][2] ) );
  FA1D0 U342 ( .A(\shifted_products[12][2] ), .B(\shifted_products[13][2] ), 
        .CI(\add_8_root_add_199_I16/carry[2] ), .CO(
        \add_8_root_add_199_I16/carry[3] ), .S(N203) );
  FA1D0 U343 ( .A(\shifted_products[8][2] ), .B(\shifted_products[9][2] ), 
        .CI(\add_10_root_add_199_I16/carry[2] ), .CO(
        \add_10_root_add_199_I16/carry[3] ), .S(N150) );
  FA1D0 U344 ( .A(\products[0][3] ), .B(\shifted_products[1][3] ), .CI(
        \add_14_root_add_199_I16/carry[3] ), .CO(
        \add_14_root_add_199_I16/carry[4] ), .S(N57) );
  FA1D0 U345 ( .A(\products[0][4] ), .B(\shifted_products[1][4] ), .CI(
        \add_14_root_add_199_I16/carry[4] ), .CO(
        \add_14_root_add_199_I16/carry[5] ), .S(N58) );
  FA1D0 U346 ( .A(\products[0][1] ), .B(\shifted_products[1][1] ), .CI(
        \add_14_root_add_199_I16/carry[1] ), .CO(
        \add_14_root_add_199_I16/carry[2] ), .S(N55) );
  INVD1 U347 ( .I(\products[12][4] ), .ZN(n84) );
  INVD1 U348 ( .I(\products[3][4] ), .ZN(n216) );
  FA1D0 U349 ( .A(\shifted_products[6][10] ), .B(\shifted_products[7][10] ), 
        .CI(\add_11_root_add_199_I16/carry[10] ), .CO(
        \add_11_root_add_199_I16/carry[11] ), .S(N133) );
  OAI222D0 U350 ( .A1(n232), .A2(n111), .B1(n244), .B2(n114), .C1(n145), .C2(
        n112), .ZN(\shifted_products[7][10] ) );
  OAI22D1 U351 ( .A1(n244), .A2(n118), .B1(n158), .B2(n117), .ZN(
        \shifted_products[6][10] ) );
  OAI21D1 U352 ( .A1(n68), .A2(n38), .B(n189), .ZN(\shifted_products[15][14] )
         );
  OAI21D1 U353 ( .A1(n38), .A2(n72), .B(n197), .ZN(\shifted_products[14][14] )
         );
  FA1D0 U354 ( .A(\shifted_products[12][10] ), .B(\shifted_products[13][10] ), 
        .CI(\add_8_root_add_199_I16/carry[10] ), .CO(
        \add_8_root_add_199_I16/carry[11] ), .S(N211) );
  OAI21D1 U355 ( .A1(n142), .A2(n84), .B(n202), .ZN(\shifted_products[12][10] ) );
  OAI222D0 U356 ( .A1(n248), .A2(n80), .B1(n233), .B2(n77), .C1(n137), .C2(n78), .ZN(\shifted_products[13][10] ) );
  FA1D0 U357 ( .A(\shifted_products[8][8] ), .B(\shifted_products[9][8] ), 
        .CI(\add_10_root_add_199_I16/carry[8] ), .CO(
        \add_10_root_add_199_I16/carry[9] ), .S(N156) );
  OAI21D1 U358 ( .A1(n142), .A2(n106), .B(n143), .ZN(\shifted_products[8][8] )
         );
  OAI222D0 U359 ( .A1(n248), .A2(n103), .B1(n233), .B2(n100), .C1(n137), .C2(
        n101), .ZN(\shifted_products[9][8] ) );
  FA1D0 U360 ( .A(\shifted_products[4][6] ), .B(\shifted_products[5][6] ), 
        .CI(\add_12_root_add_199_I16/carry[6] ), .CO(
        \add_12_root_add_199_I16/carry[7] ), .S(N105) );
  OAI22D1 U361 ( .A1(n171), .A2(n129), .B1(n172), .B2(n130), .ZN(
        \shifted_products[4][6] ) );
  OAI222D0 U362 ( .A1(n169), .A2(n124), .B1(n166), .B2(n126), .C1(n39), .C2(
        n123), .ZN(\shifted_products[5][6] ) );
  NR2D1 U363 ( .A1(n40), .A2(n128), .ZN(\shifted_products[5][0] ) );
  INVD1 U364 ( .I(\products[1][4] ), .ZN(n227) );
  INVD1 U365 ( .I(\products[1][3] ), .ZN(n228) );
  INVD1 U366 ( .I(\products[2][4] ), .ZN(n221) );
  CKBD1 U367 ( .I(n164), .Z(n38) );
  INVD1 U368 ( .I(\products[15][3] ), .ZN(n67) );
  AOI22D1 U369 ( .A1(\products[14][0] ), .A2(n195), .B1(\products[14][4] ), 
        .B2(n196), .ZN(n194) );
  ND2D1 U370 ( .A1(n137), .A2(n145), .ZN(n185) );
  INVD1 U371 ( .I(\products[14][3] ), .ZN(n73) );
  INVD1 U372 ( .I(\products[11][3] ), .ZN(n91) );
  INVD1 U373 ( .I(\products[7][3] ), .ZN(n113) );
  INVD1 U374 ( .I(\products[9][3] ), .ZN(n102) );
  INVD1 U375 ( .I(\products[11][4] ), .ZN(n90) );
  ND2D1 U376 ( .A1(n156), .A2(n188), .ZN(n196) );
  ND2D1 U377 ( .A1(n188), .A2(n150), .ZN(n187) );
  ND2D1 U378 ( .A1(n155), .A2(n156), .ZN(n153) );
  INVD1 U379 ( .I(\products[9][4] ), .ZN(n101) );
  INVD1 U380 ( .I(\products[3][3] ), .ZN(n217) );
  FA1D0 U381 ( .A(\shifted_products[10][4] ), .B(\shifted_products[11][4] ), 
        .CI(\add_9_root_add_199_I16/carry[4] ), .CO(
        \add_9_root_add_199_I16/carry[5] ), .S(N178) );
  OAI222D0 U382 ( .A1(n138), .A2(n90), .B1(n12), .B2(n92), .C1(n137), .C2(n94), 
        .ZN(\shifted_products[11][4] ) );
  FA1D0 U383 ( .A(\shifted_products[10][5] ), .B(\shifted_products[11][5] ), 
        .CI(\add_9_root_add_199_I16/carry[5] ), .CO(
        \add_9_root_add_199_I16/carry[6] ), .S(N179) );
  OAI222D0 U384 ( .A1(n138), .A2(n89), .B1(n12), .B2(n91), .C1(n137), .C2(n93), 
        .ZN(\shifted_products[11][5] ) );
  OAI21D1 U385 ( .A1(n208), .A2(n98), .B(n209), .ZN(\shifted_products[10][5] )
         );
  FA1D0 U386 ( .A(\shifted_products[10][7] ), .B(\shifted_products[11][7] ), 
        .CI(\add_9_root_add_199_I16/carry[7] ), .CO(
        \add_9_root_add_199_I16/carry[8] ), .S(N181) );
  OAI222D0 U387 ( .A1(n234), .A2(n89), .B1(n241), .B2(n93), .C1(n137), .C2(n91), .ZN(\shifted_products[11][7] ) );
  OAI21D1 U388 ( .A1(n208), .A2(n96), .B(n209), .ZN(\shifted_products[10][7] )
         );
  FA1D0 U389 ( .A(\shifted_products[10][8] ), .B(\shifted_products[11][8] ), 
        .CI(\add_9_root_add_199_I16/carry[8] ), .CO(
        \add_9_root_add_199_I16/carry[9] ), .S(N182) );
  OAI222D0 U390 ( .A1(n234), .A2(n89), .B1(n241), .B2(n92), .C1(n137), .C2(n90), .ZN(\shifted_products[11][8] ) );
  OAI221D0 U391 ( .A1(n208), .A2(n95), .B1(n38), .B2(n99), .C(n209), .ZN(
        \shifted_products[10][8] ) );
  FA1D0 U392 ( .A(\shifted_products[10][10] ), .B(\shifted_products[11][10] ), 
        .CI(\add_9_root_add_199_I16/carry[10] ), .CO(
        \add_9_root_add_199_I16/carry[11] ), .S(N184) );
  OAI222D0 U393 ( .A1(n241), .A2(n90), .B1(n203), .B2(n89), .C1(n37), .C2(n94), 
        .ZN(\shifted_products[11][10] ) );
  OAI21D1 U394 ( .A1(n37), .A2(n97), .B(n207), .ZN(\shifted_products[10][10] )
         );
  FA1D0 U395 ( .A(\shifted_products[10][6] ), .B(\shifted_products[11][6] ), 
        .CI(\add_9_root_add_199_I16/carry[6] ), .CO(
        \add_9_root_add_199_I16/carry[7] ), .S(N180) );
  OAI221D0 U396 ( .A1(n138), .A2(n89), .B1(n137), .B2(n92), .C(n204), .ZN(
        \shifted_products[11][6] ) );
  OAI21D1 U397 ( .A1(n208), .A2(n97), .B(n209), .ZN(\shifted_products[10][6] )
         );
  FA1D0 U398 ( .A(\shifted_products[10][2] ), .B(\shifted_products[11][2] ), 
        .CI(\add_9_root_add_199_I16/carry[2] ), .CO(
        \add_9_root_add_199_I16/carry[3] ), .S(N176) );
  FA1D0 U399 ( .A(\shifted_products[10][12] ), .B(\shifted_products[11][12] ), 
        .CI(\add_9_root_add_199_I16/carry[12] ), .CO(
        \add_9_root_add_199_I16/carry[13] ), .S(N186) );
  OAI21D1 U400 ( .A1(n37), .A2(n92), .B(n206), .ZN(\shifted_products[11][12] )
         );
  OAI21D1 U401 ( .A1(n37), .A2(n95), .B(n207), .ZN(\shifted_products[10][12] )
         );
  INVD1 U402 ( .I(\products[10][4] ), .ZN(n95) );
  INVD1 U403 ( .I(\products[10][3] ), .ZN(n96) );
  INVD1 U404 ( .I(\products[8][4] ), .ZN(n106) );
  INVD1 U405 ( .I(\products[2][3] ), .ZN(n222) );
  INVD1 U406 ( .I(\products[8][3] ), .ZN(n107) );
  CKBD1 U407 ( .I(n164), .Z(n37) );
  INVD1 U408 ( .I(\products[15][1] ), .ZN(n69) );
  INVD1 U409 ( .I(\products[7][1] ), .ZN(n115) );
  INVD1 U410 ( .I(\products[14][1] ), .ZN(n75) );
  INVD1 U411 ( .I(\products[13][1] ), .ZN(n81) );
  INVD1 U412 ( .I(\products[6][1] ), .ZN(n121) );
  INVD1 U413 ( .I(\products[5][1] ), .ZN(n127) );
  INVD1 U414 ( .I(\products[12][1] ), .ZN(n87) );
  INVD1 U415 ( .I(\products[3][1] ), .ZN(n219) );
  INVD1 U416 ( .I(\products[4][1] ), .ZN(n133) );
  INVD1 U417 ( .I(\products[1][1] ), .ZN(n230) );
  INVD1 U418 ( .I(\products[2][1] ), .ZN(n224) );
  INVD1 U419 ( .I(\products[15][0] ), .ZN(n70) );
  INVD1 U420 ( .I(\products[14][0] ), .ZN(n76) );
  INVD1 U421 ( .I(\products[11][0] ), .ZN(n94) );
  INVD1 U422 ( .I(\products[7][0] ), .ZN(n116) );
  INVD1 U423 ( .I(\products[6][0] ), .ZN(n122) );
  INVD1 U424 ( .I(\products[9][0] ), .ZN(n105) );
  INVD1 U425 ( .I(\products[11][1] ), .ZN(n93) );
  INVD1 U426 ( .I(\products[9][1] ), .ZN(n104) );
  INVD1 U427 ( .I(\products[10][1] ), .ZN(n98) );
  INVD1 U428 ( .I(\products[8][1] ), .ZN(n109) );
  INVD1 U429 ( .I(\products[13][2] ), .ZN(n80) );
  INVD1 U430 ( .I(\products[12][2] ), .ZN(n86) );
  FA1D0 U431 ( .A(\shifted_products[6][6] ), .B(\shifted_products[7][6] ), 
        .CI(\add_11_root_add_199_I16/carry[6] ), .CO(
        \add_11_root_add_199_I16/carry[7] ), .S(N129) );
  OAI221D0 U432 ( .A1(n111), .A2(n39), .B1(n145), .B2(n116), .C(n152), .ZN(
        \shifted_products[7][6] ) );
  OAI221D0 U433 ( .A1(n9), .A2(n117), .B1(n145), .B2(n120), .C(n160), .ZN(
        \shifted_products[6][6] ) );
  FA1D0 U434 ( .A(\shifted_products[12][6] ), .B(\shifted_products[13][6] ), 
        .CI(\add_8_root_add_199_I16/carry[6] ), .CO(
        \add_8_root_add_199_I16/carry[7] ), .S(N207) );
  OAI222D0 U435 ( .A1(n171), .A2(n83), .B1(n173), .B2(n84), .C1(n142), .C2(n88), .ZN(\shifted_products[12][6] ) );
  OAI221D0 U436 ( .A1(n39), .A2(n77), .B1(n137), .B2(n82), .C(n200), .ZN(
        \shifted_products[13][6] ) );
  OAI222D0 U437 ( .A1(n234), .A2(n71), .B1(n243), .B2(n74), .C1(n145), .C2(n72), .ZN(\shifted_products[14][8] ) );
  OAI221D0 U438 ( .A1(n183), .A2(n65), .B1(n181), .B2(n70), .C(n184), .ZN(
        \shifted_products[15][8] ) );
  FA1D0 U439 ( .A(\shifted_products[12][8] ), .B(\shifted_products[13][8] ), 
        .CI(\add_8_root_add_199_I16/carry[8] ), .CO(
        \add_8_root_add_199_I16/carry[9] ), .S(N209) );
  OAI221D0 U440 ( .A1(n198), .A2(n77), .B1(n248), .B2(n82), .C(n199), .ZN(
        \shifted_products[13][8] ) );
  FA1D0 U441 ( .A(\products[0][2] ), .B(\shifted_products[1][2] ), .CI(
        \add_14_root_add_199_I16/carry[2] ), .CO(
        \add_14_root_add_199_I16/carry[3] ), .S(N56) );
  INVD1 U442 ( .I(\products[5][2] ), .ZN(n126) );
  INVD1 U443 ( .I(\products[4][2] ), .ZN(n132) );
  INVD1 U444 ( .I(\products[15][2] ), .ZN(n68) );
  INVD1 U445 ( .I(\products[14][2] ), .ZN(n74) );
  INVD1 U446 ( .I(\products[11][2] ), .ZN(n92) );
  INVD1 U447 ( .I(\products[6][2] ), .ZN(n120) );
  INVD1 U448 ( .I(\products[9][2] ), .ZN(n103) );
  INVD1 U449 ( .I(\products[7][2] ), .ZN(n114) );
  INVD1 U450 ( .I(\products[3][2] ), .ZN(n218) );
  INVD1 U451 ( .I(\products[10][2] ), .ZN(n97) );
  INVD1 U452 ( .I(\products[1][2] ), .ZN(n229) );
  INVD1 U453 ( .I(\products[2][2] ), .ZN(n223) );
  INVD1 U454 ( .I(\products[8][2] ), .ZN(n108) );
  INVD1 U455 ( .I(\products[13][0] ), .ZN(n82) );
  INVD1 U456 ( .I(\products[10][0] ), .ZN(n99) );
  INVD1 U457 ( .I(\products[3][0] ), .ZN(n220) );
  INVD1 U458 ( .I(\products[5][0] ), .ZN(n128) );
  INVD1 U459 ( .I(\products[12][0] ), .ZN(n88) );
  INVD1 U460 ( .I(\products[4][0] ), .ZN(n134) );
  INVD1 U461 ( .I(\products[1][0] ), .ZN(n231) );
  INVD1 U462 ( .I(\products[2][0] ), .ZN(n225) );
  INVD1 U463 ( .I(\products[8][0] ), .ZN(n110) );
  INR3D0 U464 ( .A1(input_bitwidth[2]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[1]), .ZN(n214) );
  INR3D0 U465 ( .A1(weight_bitwidth[0]), .B1(weight_bitwidth[1]), .B2(
        weight_bitwidth[2]), .ZN(n215) );
  INR3D0 U466 ( .A1(input_bitwidth[0]), .B1(input_bitwidth[1]), .B2(
        input_bitwidth[2]), .ZN(n211) );
  INR3D0 U467 ( .A1(input_bitwidth[1]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[2]), .ZN(n212) );
  INR3D0 U468 ( .A1(weight_bitwidth[1]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[2]), .ZN(n210) );
  INR3D0 U469 ( .A1(weight_bitwidth[2]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[1]), .ZN(n213) );
  TIEL U470 ( .ZN(n249) );
  AN2D0 U471 ( .A1(\products[0][0] ), .A2(\shifted_products[1][0] ), .Z(
        \add_14_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U472 ( .A1(\shifted_products[1][0] ), .A2(\products[0][0] ), .Z(N54) );
  AN2D0 U473 ( .A1(\shifted_products[2][0] ), .A2(\shifted_products[3][0] ), 
        .Z(\add_13_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U474 ( .A1(\shifted_products[3][0] ), .A2(\shifted_products[2][0] ), 
        .Z(N76) );
  AN2D0 U475 ( .A1(\shifted_products[12][0] ), .A2(\shifted_products[13][0] ), 
        .Z(\add_8_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U476 ( .A1(\shifted_products[13][0] ), .A2(
        \shifted_products[12][0] ), .Z(N201) );
  AN2D0 U477 ( .A1(\shifted_products[6][0] ), .A2(\shifted_products[7][0] ), 
        .Z(\add_11_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U478 ( .A1(\shifted_products[7][0] ), .A2(\shifted_products[6][0] ), 
        .Z(N123) );
  AN2D0 U479 ( .A1(\shifted_products[4][0] ), .A2(\shifted_products[5][0] ), 
        .Z(\add_12_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U480 ( .A1(\shifted_products[5][0] ), .A2(\shifted_products[4][0] ), 
        .Z(N99) );
  AN2D0 U481 ( .A1(\shifted_products[8][0] ), .A2(\shifted_products[9][0] ), 
        .Z(\add_10_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U482 ( .A1(\shifted_products[9][0] ), .A2(\shifted_products[8][0] ), 
        .Z(N148) );
  AN2D0 U483 ( .A1(\shifted_products[10][0] ), .A2(\shifted_products[11][0] ), 
        .Z(\add_9_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U484 ( .A1(\shifted_products[11][0] ), .A2(
        \shifted_products[10][0] ), .Z(N174) );
  XOR3D0 U485 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[13][11] ), .A3(\products[12][5] ), .Z(N212) );
  XOR3D0 U486 ( .A1(\shifted_products[13][12] ), .A2(n42), .A3(n83), .Z(N213)
         );
  XOR3D0 U487 ( .A1(\products[13][5] ), .A2(\products[12][5] ), .A3(n43), .Z(
        N214) );
  CKND0 U488 ( .I(\shifted_products[13][12] ), .ZN(n45) );
  XNR3D0 U489 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \shifted_products[11][13] ), .A3(n46), .ZN(N187) );
  XNR3D0 U490 ( .A1(n36), .A2(n47), .A3(n46), .ZN(N188) );
  XNR3D0 U491 ( .A1(\products[11][5] ), .A2(n46), .A3(n48), .ZN(N189) );
  OAI222D0 U492 ( .A1(n47), .A2(n46), .B1(n47), .B2(n36), .C1(n46), .C2(n36), 
        .ZN(n48) );
  CKND0 U493 ( .I(\products[10][5] ), .ZN(n46) );
  XOR3D0 U494 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[9][9] ), .A3(\products[8][5] ), .Z(N157) );
  XOR3D0 U495 ( .A1(\shifted_products[9][10] ), .A2(n49), .A3(n50), .Z(N158)
         );
  XOR3D0 U496 ( .A1(\products[9][5] ), .A2(\products[8][5] ), .A3(n51), .Z(
        N159) );
  AOI222D0 U497 ( .A1(n51), .A2(\products[8][5] ), .B1(n51), .B2(
        \products[9][5] ), .C1(\products[8][5] ), .C2(\products[9][5] ), .ZN(
        n52) );
  OAI222D0 U498 ( .A1(n49), .A2(n50), .B1(n49), .B2(n53), .C1(n50), .C2(n53), 
        .ZN(n51) );
  CKND0 U499 ( .I(\shifted_products[9][10] ), .ZN(n53) );
  CKND0 U500 ( .I(\products[8][5] ), .ZN(n50) );
  XNR3D0 U501 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[7][11] ), .A3(n117), .ZN(N134) );
  XNR3D0 U502 ( .A1(n33), .A2(n54), .A3(n117), .ZN(N135) );
  XNR3D0 U503 ( .A1(\products[7][5] ), .A2(n117), .A3(n55), .ZN(N136) );
  XOR3D0 U504 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(
        \shifted_products[5][7] ), .A3(\products[4][5] ), .Z(N106) );
  XOR3D0 U505 ( .A1(\shifted_products[5][8] ), .A2(n56), .A3(n129), .Z(N107)
         );
  XOR3D0 U506 ( .A1(\products[5][5] ), .A2(\products[4][5] ), .A3(n57), .Z(
        N108) );
  CKND0 U507 ( .I(\shifted_products[5][8] ), .ZN(n59) );
  XNR3D0 U508 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .A3(n60), .ZN(N85) );
  XNR3D0 U509 ( .A1(\products[3][5] ), .A2(n60), .A3(n62), .ZN(N87) );
  CKND0 U510 ( .I(\products[2][5] ), .ZN(n60) );
  XNR3D0 U511 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[1][6] ), .A3(n63), .ZN(N60) );
  CKND0 U512 ( .I(\shifted_products[0][9] ), .ZN(n63) );
endmodule


module fusion_unit_15_DW01_add_0_DW01_add_19 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  CKAN2D0 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D0 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module fusion_unit_15 ( clk, nRST, input_bitwidth, weight_bitwidth, input_sign, 
        weight_sign, input_forward, weight, psum_in, psum, input_to_right );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  input [3:0] input_sign;
  input [3:0] weight_sign;
  input [31:0] input_forward;
  input [31:0] weight;
  input [31:0] psum_in;
  output [31:0] psum;
  output [31:0] input_to_right;
  input clk, nRST;
  wire   \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] , n1;
  wire   [31:0] shift_add_out;
  assign input_to_right[31] = input_forward[31];
  assign input_to_right[30] = input_forward[30];
  assign input_to_right[29] = input_forward[29];
  assign input_to_right[28] = input_forward[28];
  assign input_to_right[27] = input_forward[27];
  assign input_to_right[26] = input_forward[26];
  assign input_to_right[25] = input_forward[25];
  assign input_to_right[24] = input_forward[24];
  assign input_to_right[23] = input_forward[23];
  assign input_to_right[22] = input_forward[22];
  assign input_to_right[21] = input_forward[21];
  assign input_to_right[20] = input_forward[20];
  assign input_to_right[19] = input_forward[19];
  assign input_to_right[18] = input_forward[18];
  assign input_to_right[17] = input_forward[17];
  assign input_to_right[16] = input_forward[16];
  assign input_to_right[15] = input_forward[15];
  assign input_to_right[14] = input_forward[14];
  assign input_to_right[13] = input_forward[13];
  assign input_to_right[12] = input_forward[12];
  assign input_to_right[11] = input_forward[11];
  assign input_to_right[10] = input_forward[10];
  assign input_to_right[9] = input_forward[9];
  assign input_to_right[8] = input_forward[8];
  assign input_to_right[7] = input_forward[7];
  assign input_to_right[6] = input_forward[6];
  assign input_to_right[5] = input_forward[5];
  assign input_to_right[4] = input_forward[4];
  assign input_to_right[3] = input_forward[3];
  assign input_to_right[2] = input_forward[2];
  assign input_to_right[1] = input_forward[1];
  assign input_to_right[0] = input_forward[0];

  bit_brick_255 \genblk1[0].BB  ( .x(input_forward[1:0]), .y(weight[1:0]), 
        .sx(input_sign[0]), .sy(weight_sign[0]), .product({\products[0][5] , 
        \products[0][4] , \products[0][3] , \products[0][2] , \products[0][1] , 
        \products[0][0] }) );
  bit_brick_254 \genblk1[1].BB  ( .x(input_forward[3:2]), .y(weight[3:2]), 
        .sx(input_sign[0]), .sy(weight_sign[1]), .product({\products[1][5] , 
        \products[1][4] , \products[1][3] , \products[1][2] , \products[1][1] , 
        \products[1][0] }) );
  bit_brick_253 \genblk1[2].BB  ( .x(input_forward[5:4]), .y(weight[5:4]), 
        .sx(input_sign[0]), .sy(weight_sign[2]), .product({\products[2][5] , 
        \products[2][4] , \products[2][3] , \products[2][2] , \products[2][1] , 
        \products[2][0] }) );
  bit_brick_252 \genblk1[3].BB  ( .x(input_forward[7:6]), .y(weight[7:6]), 
        .sx(input_sign[0]), .sy(weight_sign[3]), .product({\products[3][5] , 
        \products[3][4] , \products[3][3] , \products[3][2] , \products[3][1] , 
        \products[3][0] }) );
  bit_brick_251 \genblk1[4].BB  ( .x(input_forward[9:8]), .y(weight[9:8]), 
        .sx(input_sign[1]), .sy(weight_sign[0]), .product({\products[4][5] , 
        \products[4][4] , \products[4][3] , \products[4][2] , \products[4][1] , 
        \products[4][0] }) );
  bit_brick_250 \genblk1[5].BB  ( .x(input_forward[11:10]), .y(weight[11:10]), 
        .sx(input_sign[1]), .sy(weight_sign[1]), .product({\products[5][5] , 
        \products[5][4] , \products[5][3] , \products[5][2] , \products[5][1] , 
        \products[5][0] }) );
  bit_brick_249 \genblk1[6].BB  ( .x(input_forward[13:12]), .y(weight[13:12]), 
        .sx(input_sign[1]), .sy(weight_sign[2]), .product({\products[6][5] , 
        \products[6][4] , \products[6][3] , \products[6][2] , \products[6][1] , 
        \products[6][0] }) );
  bit_brick_248 \genblk1[7].BB  ( .x(input_forward[15:14]), .y(weight[15:14]), 
        .sx(input_sign[1]), .sy(weight_sign[3]), .product({\products[7][5] , 
        \products[7][4] , \products[7][3] , \products[7][2] , \products[7][1] , 
        \products[7][0] }) );
  bit_brick_247 \genblk1[8].BB  ( .x(input_forward[17:16]), .y(weight[17:16]), 
        .sx(input_sign[2]), .sy(weight_sign[0]), .product({\products[8][5] , 
        \products[8][4] , \products[8][3] , \products[8][2] , \products[8][1] , 
        \products[8][0] }) );
  bit_brick_246 \genblk1[9].BB  ( .x(input_forward[19:18]), .y(weight[19:18]), 
        .sx(input_sign[2]), .sy(weight_sign[1]), .product({\products[9][5] , 
        \products[9][4] , \products[9][3] , \products[9][2] , \products[9][1] , 
        \products[9][0] }) );
  bit_brick_245 \genblk1[10].BB  ( .x(input_forward[21:20]), .y(weight[21:20]), 
        .sx(input_sign[2]), .sy(weight_sign[2]), .product({\products[10][5] , 
        \products[10][4] , \products[10][3] , \products[10][2] , 
        \products[10][1] , \products[10][0] }) );
  bit_brick_244 \genblk1[11].BB  ( .x(input_forward[23:22]), .y(weight[23:22]), 
        .sx(input_sign[2]), .sy(weight_sign[3]), .product({\products[11][5] , 
        \products[11][4] , \products[11][3] , \products[11][2] , 
        \products[11][1] , \products[11][0] }) );
  bit_brick_243 \genblk1[12].BB  ( .x(input_forward[25:24]), .y(weight[25:24]), 
        .sx(input_sign[3]), .sy(weight_sign[0]), .product({\products[12][5] , 
        \products[12][4] , \products[12][3] , \products[12][2] , 
        \products[12][1] , \products[12][0] }) );
  bit_brick_242 \genblk1[13].BB  ( .x(input_forward[27:26]), .y(weight[27:26]), 
        .sx(input_sign[3]), .sy(weight_sign[1]), .product({\products[13][5] , 
        \products[13][4] , \products[13][3] , \products[13][2] , 
        \products[13][1] , \products[13][0] }) );
  bit_brick_241 \genblk1[14].BB  ( .x(input_forward[29:28]), .y(weight[29:28]), 
        .sx(input_sign[3]), .sy(weight_sign[2]), .product({\products[14][5] , 
        \products[14][4] , \products[14][3] , \products[14][2] , 
        \products[14][1] , \products[14][0] }) );
  bit_brick_240 \genblk1[15].BB  ( .x(input_forward[31:30]), .y(weight[31:30]), 
        .sx(input_sign[3]), .sy(weight_sign[3]), .product({\products[15][5] , 
        \products[15][4] , \products[15][3] , \products[15][2] , 
        \products[15][1] , \products[15][0] }) );
  shift_add_15 shift_add ( .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .products({\products[15][5] , \products[15][4] , 
        \products[15][3] , \products[15][2] , \products[15][1] , 
        \products[15][0] , \products[14][5] , \products[14][4] , 
        \products[14][3] , \products[14][2] , \products[14][1] , 
        \products[14][0] , \products[13][5] , \products[13][4] , 
        \products[13][3] , \products[13][2] , \products[13][1] , 
        \products[13][0] , \products[12][5] , \products[12][4] , 
        \products[12][3] , \products[12][2] , \products[12][1] , 
        \products[12][0] , \products[11][5] , \products[11][4] , 
        \products[11][3] , \products[11][2] , \products[11][1] , 
        \products[11][0] , \products[10][5] , \products[10][4] , 
        \products[10][3] , \products[10][2] , \products[10][1] , 
        \products[10][0] , \products[9][5] , \products[9][4] , 
        \products[9][3] , \products[9][2] , \products[9][1] , \products[9][0] , 
        \products[8][5] , \products[8][4] , \products[8][3] , \products[8][2] , 
        \products[8][1] , \products[8][0] , \products[7][5] , \products[7][4] , 
        \products[7][3] , \products[7][2] , \products[7][1] , \products[7][0] , 
        \products[6][5] , \products[6][4] , \products[6][3] , \products[6][2] , 
        \products[6][1] , \products[6][0] , \products[5][5] , \products[5][4] , 
        \products[5][3] , \products[5][2] , \products[5][1] , \products[5][0] , 
        \products[4][5] , \products[4][4] , \products[4][3] , \products[4][2] , 
        \products[4][1] , \products[4][0] , \products[3][5] , \products[3][4] , 
        \products[3][3] , \products[3][2] , \products[3][1] , \products[3][0] , 
        \products[2][5] , \products[2][4] , \products[2][3] , \products[2][2] , 
        \products[2][1] , \products[2][0] , \products[1][5] , \products[1][4] , 
        \products[1][3] , \products[1][2] , \products[1][1] , \products[1][0] , 
        \products[0][5] , \products[0][4] , \products[0][3] , \products[0][2] , 
        \products[0][1] , \products[0][0] }), .shift_add_out(shift_add_out) );
  fusion_unit_15_DW01_add_0_DW01_add_19 add_53 ( .A(shift_add_out), .B(psum_in), .CI(n1), .SUM(psum) );
  TIEL U1 ( .ZN(n1) );
endmodule


module WBUF_ARRAY_SIZE4_DATA_W32_14 ( clk, nRST, WBUF_wr_en, WBUF_data_in, 
        WBUF_data_out );
  input [31:0] WBUF_data_in;
  output [31:0] WBUF_data_out;
  input clk, nRST, WBUF_wr_en;
  wire   n1, n2, n3, n4, n5, n6;

  EDFCNQD1 \WBUF_data_out_reg[31]  ( .D(WBUF_data_in[31]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[31]) );
  EDFCNQD1 \WBUF_data_out_reg[30]  ( .D(WBUF_data_in[30]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[30]) );
  EDFCNQD1 \WBUF_data_out_reg[29]  ( .D(WBUF_data_in[29]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[29]) );
  EDFCNQD1 \WBUF_data_out_reg[28]  ( .D(WBUF_data_in[28]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[28]) );
  EDFCNQD1 \WBUF_data_out_reg[27]  ( .D(WBUF_data_in[27]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[27]) );
  EDFCNQD1 \WBUF_data_out_reg[26]  ( .D(WBUF_data_in[26]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[26]) );
  EDFCNQD1 \WBUF_data_out_reg[25]  ( .D(WBUF_data_in[25]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[25]) );
  EDFCNQD1 \WBUF_data_out_reg[24]  ( .D(WBUF_data_in[24]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[24]) );
  EDFCNQD1 \WBUF_data_out_reg[23]  ( .D(WBUF_data_in[23]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[23]) );
  EDFCNQD1 \WBUF_data_out_reg[22]  ( .D(WBUF_data_in[22]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[22]) );
  EDFCNQD1 \WBUF_data_out_reg[21]  ( .D(WBUF_data_in[21]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[21]) );
  EDFCNQD1 \WBUF_data_out_reg[20]  ( .D(WBUF_data_in[20]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[20]) );
  EDFCNQD1 \WBUF_data_out_reg[19]  ( .D(WBUF_data_in[19]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[19]) );
  EDFCNQD1 \WBUF_data_out_reg[18]  ( .D(WBUF_data_in[18]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[18]) );
  EDFCNQD1 \WBUF_data_out_reg[17]  ( .D(WBUF_data_in[17]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[17]) );
  EDFCNQD1 \WBUF_data_out_reg[16]  ( .D(WBUF_data_in[16]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[16]) );
  EDFCNQD1 \WBUF_data_out_reg[15]  ( .D(WBUF_data_in[15]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[15]) );
  EDFCNQD1 \WBUF_data_out_reg[14]  ( .D(WBUF_data_in[14]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[14]) );
  EDFCNQD1 \WBUF_data_out_reg[13]  ( .D(WBUF_data_in[13]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[13]) );
  EDFCNQD1 \WBUF_data_out_reg[12]  ( .D(WBUF_data_in[12]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[12]) );
  EDFCNQD1 \WBUF_data_out_reg[11]  ( .D(WBUF_data_in[11]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[11]) );
  EDFCNQD1 \WBUF_data_out_reg[10]  ( .D(WBUF_data_in[10]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[10]) );
  EDFCNQD1 \WBUF_data_out_reg[9]  ( .D(WBUF_data_in[9]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[9]) );
  EDFCNQD1 \WBUF_data_out_reg[8]  ( .D(WBUF_data_in[8]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[8]) );
  EDFCNQD1 \WBUF_data_out_reg[7]  ( .D(WBUF_data_in[7]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[7]) );
  EDFCNQD1 \WBUF_data_out_reg[6]  ( .D(WBUF_data_in[6]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[6]) );
  EDFCNQD1 \WBUF_data_out_reg[5]  ( .D(WBUF_data_in[5]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[5]) );
  EDFCNQD1 \WBUF_data_out_reg[4]  ( .D(WBUF_data_in[4]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[4]) );
  EDFCNQD1 \WBUF_data_out_reg[3]  ( .D(WBUF_data_in[3]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[3]) );
  EDFCNQD1 \WBUF_data_out_reg[2]  ( .D(WBUF_data_in[2]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[2]) );
  EDFCNQD1 \WBUF_data_out_reg[1]  ( .D(WBUF_data_in[1]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[1]) );
  EDFCNQD1 \WBUF_data_out_reg[0]  ( .D(WBUF_data_in[0]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[0]) );
  CKBD1 U2 ( .I(WBUF_wr_en), .Z(n5) );
  CKBD1 U3 ( .I(WBUF_wr_en), .Z(n4) );
  CKBD1 U4 ( .I(nRST), .Z(n1) );
  CKBD1 U5 ( .I(nRST), .Z(n2) );
  CKBD1 U6 ( .I(nRST), .Z(n3) );
  CKBD1 U7 ( .I(WBUF_wr_en), .Z(n6) );
endmodule


module w_mux_14 ( clk, nRST, input_bitwidth, rd_en, data_in, data_out );
  input [2:0] input_bitwidth;
  input [31:0] data_in;
  output [31:0] data_out;
  input clk, nRST, rd_en;
  wire   N40, N41, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129,
         n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140,
         n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151,
         n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162,
         n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173,
         n174, n175, n176, n177, n178;
  wire   [1:0] rd_ptr;
  wire   [31:0] next_data_out;

  EDFCNQD1 \rd_ptr_reg[0]  ( .D(N40), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[0]) );
  EDFCNQD1 \rd_ptr_reg[1]  ( .D(N41), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[1]) );
  DFCNQD1 \data_out_reg[31]  ( .D(next_data_out[31]), .CP(clk), .CDN(n1), .Q(
        data_out[31]) );
  DFCNQD1 \data_out_reg[30]  ( .D(next_data_out[30]), .CP(clk), .CDN(n3), .Q(
        data_out[30]) );
  DFCNQD1 \data_out_reg[29]  ( .D(next_data_out[29]), .CP(clk), .CDN(n3), .Q(
        data_out[29]) );
  DFCNQD1 \data_out_reg[28]  ( .D(next_data_out[28]), .CP(clk), .CDN(n3), .Q(
        data_out[28]) );
  DFCNQD1 \data_out_reg[27]  ( .D(next_data_out[27]), .CP(clk), .CDN(n3), .Q(
        data_out[27]) );
  DFCNQD1 \data_out_reg[26]  ( .D(next_data_out[26]), .CP(clk), .CDN(n3), .Q(
        data_out[26]) );
  DFCNQD1 \data_out_reg[25]  ( .D(next_data_out[25]), .CP(clk), .CDN(n2), .Q(
        data_out[25]) );
  DFCNQD1 \data_out_reg[24]  ( .D(next_data_out[24]), .CP(clk), .CDN(n2), .Q(
        data_out[24]) );
  DFCNQD1 \data_out_reg[23]  ( .D(next_data_out[23]), .CP(clk), .CDN(n3), .Q(
        data_out[23]) );
  DFCNQD1 \data_out_reg[22]  ( .D(next_data_out[22]), .CP(clk), .CDN(n2), .Q(
        data_out[22]) );
  DFCNQD1 \data_out_reg[21]  ( .D(next_data_out[21]), .CP(clk), .CDN(n2), .Q(
        data_out[21]) );
  DFCNQD1 \data_out_reg[20]  ( .D(next_data_out[20]), .CP(clk), .CDN(n2), .Q(
        data_out[20]) );
  DFCNQD1 \data_out_reg[19]  ( .D(next_data_out[19]), .CP(clk), .CDN(n2), .Q(
        data_out[19]) );
  DFCNQD1 \data_out_reg[18]  ( .D(next_data_out[18]), .CP(clk), .CDN(n2), .Q(
        data_out[18]) );
  DFCNQD1 \data_out_reg[17]  ( .D(next_data_out[17]), .CP(clk), .CDN(n2), .Q(
        data_out[17]) );
  DFCNQD1 \data_out_reg[16]  ( .D(next_data_out[16]), .CP(clk), .CDN(n2), .Q(
        data_out[16]) );
  DFCNQD1 \data_out_reg[15]  ( .D(next_data_out[15]), .CP(clk), .CDN(n2), .Q(
        data_out[15]) );
  DFCNQD1 \data_out_reg[14]  ( .D(next_data_out[14]), .CP(clk), .CDN(n2), .Q(
        data_out[14]) );
  DFCNQD1 \data_out_reg[13]  ( .D(next_data_out[13]), .CP(clk), .CDN(n2), .Q(
        data_out[13]) );
  DFCNQD1 \data_out_reg[12]  ( .D(next_data_out[12]), .CP(clk), .CDN(n1), .Q(
        data_out[12]) );
  DFCNQD1 \data_out_reg[11]  ( .D(next_data_out[11]), .CP(clk), .CDN(n1), .Q(
        data_out[11]) );
  DFCNQD1 \data_out_reg[10]  ( .D(next_data_out[10]), .CP(clk), .CDN(n1), .Q(
        data_out[10]) );
  DFCNQD1 \data_out_reg[9]  ( .D(next_data_out[9]), .CP(clk), .CDN(n1), .Q(
        data_out[9]) );
  DFCNQD1 \data_out_reg[8]  ( .D(next_data_out[8]), .CP(clk), .CDN(n1), .Q(
        data_out[8]) );
  DFCNQD1 \data_out_reg[7]  ( .D(next_data_out[7]), .CP(clk), .CDN(n1), .Q(
        data_out[7]) );
  DFCNQD1 \data_out_reg[6]  ( .D(next_data_out[6]), .CP(clk), .CDN(n1), .Q(
        data_out[6]) );
  DFCNQD1 \data_out_reg[5]  ( .D(next_data_out[5]), .CP(clk), .CDN(n1), .Q(
        data_out[5]) );
  DFCNQD1 \data_out_reg[4]  ( .D(next_data_out[4]), .CP(clk), .CDN(n1), .Q(
        data_out[4]) );
  DFCNQD1 \data_out_reg[3]  ( .D(next_data_out[3]), .CP(clk), .CDN(n1), .Q(
        data_out[3]) );
  DFCNQD1 \data_out_reg[2]  ( .D(next_data_out[2]), .CP(clk), .CDN(n1), .Q(
        data_out[2]) );
  DFCNQD1 \data_out_reg[1]  ( .D(next_data_out[1]), .CP(clk), .CDN(n1), .Q(
        data_out[1]) );
  DFCNQD1 \data_out_reg[0]  ( .D(next_data_out[0]), .CP(clk), .CDN(n2), .Q(
        data_out[0]) );
  OA21D1 U20 ( .A1(n161), .A2(n160), .B(n159), .Z(n170) );
  OA21D1 U23 ( .A1(n156), .A2(n160), .B(n155), .Z(n169) );
  OA21D1 U26 ( .A1(n154), .A2(n160), .B(n153), .Z(n167) );
  OA21D1 U29 ( .A1(n152), .A2(n160), .B(n151), .Z(n166) );
  OA21D1 U32 ( .A1(n150), .A2(n160), .B(n149), .Z(n177) );
  OA21D1 U35 ( .A1(n148), .A2(n160), .B(n147), .Z(n165) );
  OA21D1 U38 ( .A1(n146), .A2(n160), .B(n145), .Z(n164) );
  OA21D1 U41 ( .A1(n144), .A2(n160), .B(n149), .Z(n163) );
  OA21D1 U47 ( .A1(n139), .A2(n160), .B(n138), .Z(n162) );
  OA21D1 U50 ( .A1(n137), .A2(n160), .B(n159), .Z(n175) );
  OA21D1 U56 ( .A1(n134), .A2(n160), .B(n155), .Z(n174) );
  OA21D1 U62 ( .A1(n131), .A2(n160), .B(n153), .Z(n173) );
  OA21D1 U68 ( .A1(n128), .A2(n160), .B(n151), .Z(n172) );
  OA21D1 U74 ( .A1(n125), .A2(n160), .B(n147), .Z(n171) );
  OA21D1 U80 ( .A1(n122), .A2(n160), .B(n145), .Z(n168) );
  OA21D1 U86 ( .A1(n119), .A2(n160), .B(n138), .Z(n176) );
  AN2XD1 U90 ( .A1(rd_ptr[1]), .A2(rd_ptr[0]), .Z(n140) );
  AN4XD1 U91 ( .A1(input_bitwidth[2]), .A2(rd_en), .A3(n5), .A4(n7), .Z(n143)
         );
  MAOI22D1 U97 ( .A1(n115), .A2(n12), .B1(n115), .B2(n114), .ZN(n113) );
  NR2D1 U3 ( .A1(n13), .A2(rd_ptr[1]), .ZN(n158) );
  NR2D1 U4 ( .A1(rd_ptr[0]), .A2(rd_ptr[1]), .ZN(n157) );
  AOI21D1 U5 ( .A1(n12), .A2(n116), .B(n113), .ZN(N41) );
  OAI21D1 U6 ( .A1(n111), .A2(n10), .B(n177), .ZN(next_data_out[1]) );
  OAI21D1 U7 ( .A1(n37), .A2(n10), .B(n177), .ZN(next_data_out[9]) );
  OAI21D1 U8 ( .A1(n8), .A2(n112), .B(n176), .ZN(next_data_out[0]) );
  OAI21D1 U9 ( .A1(n9), .A2(n110), .B(n168), .ZN(next_data_out[2]) );
  OAI21D1 U10 ( .A1(n9), .A2(n109), .B(n171), .ZN(next_data_out[3]) );
  OAI21D1 U11 ( .A1(n9), .A2(n108), .B(n172), .ZN(next_data_out[4]) );
  OAI21D1 U12 ( .A1(n8), .A2(n36), .B(n168), .ZN(next_data_out[10]) );
  OAI21D1 U13 ( .A1(n8), .A2(n35), .B(n171), .ZN(next_data_out[11]) );
  OAI21D1 U14 ( .A1(n8), .A2(n34), .B(n172), .ZN(next_data_out[12]) );
  OAI21D1 U15 ( .A1(n9), .A2(n33), .B(n173), .ZN(next_data_out[13]) );
  OAI21D1 U16 ( .A1(n8), .A2(n32), .B(n174), .ZN(next_data_out[14]) );
  OAI21D1 U17 ( .A1(n8), .A2(n31), .B(n175), .ZN(next_data_out[15]) );
  OAI21D1 U18 ( .A1(n10), .A2(n107), .B(n173), .ZN(next_data_out[5]) );
  OAI21D1 U19 ( .A1(n10), .A2(n106), .B(n174), .ZN(next_data_out[6]) );
  OAI21D1 U21 ( .A1(n10), .A2(n105), .B(n175), .ZN(next_data_out[7]) );
  OAI21D1 U22 ( .A1(n10), .A2(n38), .B(n176), .ZN(next_data_out[8]) );
  CKBD1 U24 ( .I(n178), .Z(n8) );
  CKBD1 U25 ( .I(n178), .Z(n9) );
  CKBD1 U27 ( .I(n178), .Z(n10) );
  INVD1 U28 ( .I(n6), .ZN(n7) );
  INVD1 U30 ( .I(n4), .ZN(n5) );
  INVD1 U31 ( .I(n116), .ZN(n11) );
  INVD1 U33 ( .I(n157), .ZN(n14) );
  INVD1 U34 ( .I(n158), .ZN(n12) );
  ND2D1 U36 ( .A1(n114), .A2(rd_en), .ZN(n178) );
  NR3D0 U37 ( .A1(n4), .A2(input_bitwidth[2]), .A3(n7), .ZN(n115) );
  NR3D0 U39 ( .A1(n6), .A2(input_bitwidth[2]), .A3(n5), .ZN(n114) );
  ND2D1 U40 ( .A1(rd_en), .A2(n115), .ZN(n160) );
  ND2D1 U42 ( .A1(n143), .A2(n118), .ZN(n138) );
  OAI221D0 U43 ( .A1(n12), .A2(n38), .B1(n14), .B2(n112), .C(n117), .ZN(n118)
         );
  AOI22D1 U44 ( .A1(data_in[24]), .A2(n140), .B1(data_in[16]), .B2(n11), .ZN(
        n117) );
  ND2D1 U45 ( .A1(n143), .A2(n142), .ZN(n149) );
  OAI221D0 U46 ( .A1(n12), .A2(n37), .B1(n14), .B2(n111), .C(n141), .ZN(n142)
         );
  AOI22D1 U48 ( .A1(data_in[25]), .A2(n140), .B1(n11), .B2(data_in[17]), .ZN(
        n141) );
  ND2D1 U49 ( .A1(n143), .A2(n121), .ZN(n145) );
  OAI221D0 U51 ( .A1(n12), .A2(n36), .B1(n14), .B2(n110), .C(n120), .ZN(n121)
         );
  AOI22D1 U52 ( .A1(data_in[26]), .A2(n140), .B1(data_in[18]), .B2(n11), .ZN(
        n120) );
  ND2D1 U53 ( .A1(n143), .A2(n124), .ZN(n147) );
  OAI221D0 U54 ( .A1(n12), .A2(n35), .B1(n14), .B2(n109), .C(n123), .ZN(n124)
         );
  AOI22D1 U55 ( .A1(data_in[27]), .A2(n140), .B1(data_in[19]), .B2(n11), .ZN(
        n123) );
  ND2D1 U57 ( .A1(n143), .A2(n127), .ZN(n151) );
  OAI221D0 U58 ( .A1(n12), .A2(n34), .B1(n14), .B2(n108), .C(n126), .ZN(n127)
         );
  AOI22D1 U59 ( .A1(data_in[28]), .A2(n140), .B1(data_in[20]), .B2(n11), .ZN(
        n126) );
  ND2D1 U60 ( .A1(n143), .A2(n130), .ZN(n153) );
  OAI221D0 U61 ( .A1(n12), .A2(n33), .B1(n14), .B2(n107), .C(n129), .ZN(n130)
         );
  AOI22D1 U63 ( .A1(data_in[29]), .A2(n140), .B1(data_in[21]), .B2(n11), .ZN(
        n129) );
  ND2D1 U64 ( .A1(n143), .A2(n133), .ZN(n155) );
  OAI221D0 U65 ( .A1(n12), .A2(n32), .B1(n14), .B2(n106), .C(n132), .ZN(n133)
         );
  AOI22D1 U66 ( .A1(data_in[30]), .A2(n140), .B1(data_in[22]), .B2(n11), .ZN(
        n132) );
  ND2D1 U67 ( .A1(n143), .A2(n136), .ZN(n159) );
  OAI221D0 U69 ( .A1(n12), .A2(n31), .B1(n14), .B2(n105), .C(n135), .ZN(n136)
         );
  AOI22D1 U70 ( .A1(data_in[31]), .A2(n140), .B1(data_in[23]), .B2(n11), .ZN(
        n135) );
  AOI22D1 U71 ( .A1(data_in[16]), .A2(n158), .B1(data_in[0]), .B2(n157), .ZN(
        n119) );
  AOI22D1 U72 ( .A1(data_in[17]), .A2(n158), .B1(data_in[1]), .B2(n157), .ZN(
        n150) );
  AOI22D1 U73 ( .A1(data_in[18]), .A2(n158), .B1(data_in[2]), .B2(n157), .ZN(
        n122) );
  AOI22D1 U75 ( .A1(data_in[19]), .A2(n158), .B1(data_in[3]), .B2(n157), .ZN(
        n125) );
  AOI22D1 U76 ( .A1(data_in[20]), .A2(n158), .B1(data_in[4]), .B2(n157), .ZN(
        n128) );
  AOI22D1 U77 ( .A1(data_in[21]), .A2(n158), .B1(data_in[5]), .B2(n157), .ZN(
        n131) );
  AOI22D1 U78 ( .A1(data_in[22]), .A2(n158), .B1(data_in[6]), .B2(n157), .ZN(
        n134) );
  AOI22D1 U79 ( .A1(data_in[23]), .A2(n158), .B1(data_in[7]), .B2(n157), .ZN(
        n137) );
  AOI22D1 U81 ( .A1(data_in[24]), .A2(n158), .B1(data_in[8]), .B2(n157), .ZN(
        n139) );
  AOI22D1 U82 ( .A1(data_in[25]), .A2(n158), .B1(data_in[9]), .B2(n157), .ZN(
        n144) );
  AOI22D1 U83 ( .A1(data_in[26]), .A2(n158), .B1(data_in[10]), .B2(n157), .ZN(
        n146) );
  AOI22D1 U84 ( .A1(data_in[27]), .A2(n158), .B1(data_in[11]), .B2(n157), .ZN(
        n148) );
  AOI22D1 U85 ( .A1(data_in[28]), .A2(n158), .B1(data_in[12]), .B2(n157), .ZN(
        n152) );
  AOI22D1 U87 ( .A1(data_in[29]), .A2(n158), .B1(data_in[13]), .B2(n157), .ZN(
        n154) );
  AOI22D1 U88 ( .A1(data_in[30]), .A2(n158), .B1(data_in[14]), .B2(n157), .ZN(
        n156) );
  AOI22D1 U89 ( .A1(data_in[31]), .A2(n158), .B1(data_in[15]), .B2(n157), .ZN(
        n161) );
  NR2D1 U92 ( .A1(rd_ptr[0]), .A2(n114), .ZN(N40) );
  OAI21D1 U93 ( .A1(n29), .A2(n10), .B(n163), .ZN(next_data_out[17]) );
  INVD1 U94 ( .I(data_in[17]), .ZN(n29) );
  OAI21D1 U95 ( .A1(n8), .A2(n30), .B(n162), .ZN(next_data_out[16]) );
  INVD1 U96 ( .I(data_in[16]), .ZN(n30) );
  OAI21D1 U98 ( .A1(n8), .A2(n28), .B(n164), .ZN(next_data_out[18]) );
  INVD1 U99 ( .I(data_in[18]), .ZN(n28) );
  OAI21D1 U100 ( .A1(n8), .A2(n27), .B(n165), .ZN(next_data_out[19]) );
  INVD1 U101 ( .I(data_in[19]), .ZN(n27) );
  OAI21D1 U102 ( .A1(n8), .A2(n26), .B(n166), .ZN(next_data_out[20]) );
  INVD1 U103 ( .I(data_in[20]), .ZN(n26) );
  OAI21D1 U104 ( .A1(n8), .A2(n25), .B(n167), .ZN(next_data_out[21]) );
  INVD1 U105 ( .I(data_in[21]), .ZN(n25) );
  OAI21D1 U106 ( .A1(n8), .A2(n24), .B(n169), .ZN(next_data_out[22]) );
  INVD1 U107 ( .I(data_in[22]), .ZN(n24) );
  OAI21D1 U108 ( .A1(n9), .A2(n23), .B(n170), .ZN(next_data_out[23]) );
  INVD1 U109 ( .I(data_in[23]), .ZN(n23) );
  OAI21D1 U110 ( .A1(n9), .A2(n22), .B(n162), .ZN(next_data_out[24]) );
  INVD1 U111 ( .I(data_in[24]), .ZN(n22) );
  OAI21D1 U112 ( .A1(n9), .A2(n20), .B(n164), .ZN(next_data_out[26]) );
  INVD1 U113 ( .I(data_in[26]), .ZN(n20) );
  OAI21D1 U114 ( .A1(n9), .A2(n19), .B(n165), .ZN(next_data_out[27]) );
  INVD1 U115 ( .I(data_in[27]), .ZN(n19) );
  OAI21D1 U116 ( .A1(n9), .A2(n18), .B(n166), .ZN(next_data_out[28]) );
  INVD1 U117 ( .I(data_in[28]), .ZN(n18) );
  OAI21D1 U118 ( .A1(n9), .A2(n17), .B(n167), .ZN(next_data_out[29]) );
  INVD1 U119 ( .I(data_in[29]), .ZN(n17) );
  OAI21D1 U120 ( .A1(n9), .A2(n16), .B(n169), .ZN(next_data_out[30]) );
  INVD1 U121 ( .I(data_in[30]), .ZN(n16) );
  OAI21D1 U122 ( .A1(n9), .A2(n15), .B(n170), .ZN(next_data_out[31]) );
  INVD1 U123 ( .I(data_in[31]), .ZN(n15) );
  OAI21D1 U124 ( .A1(n21), .A2(n10), .B(n163), .ZN(next_data_out[25]) );
  INVD1 U125 ( .I(data_in[25]), .ZN(n21) );
  CKBD1 U126 ( .I(input_bitwidth[0]), .Z(n4) );
  CKBD1 U127 ( .I(input_bitwidth[1]), .Z(n6) );
  ND2D1 U128 ( .A1(rd_ptr[1]), .A2(n13), .ZN(n116) );
  INVD1 U129 ( .I(rd_ptr[0]), .ZN(n13) );
  INVD1 U130 ( .I(data_in[1]), .ZN(n111) );
  INVD1 U131 ( .I(data_in[9]), .ZN(n37) );
  INVD1 U132 ( .I(data_in[0]), .ZN(n112) );
  INVD1 U133 ( .I(data_in[2]), .ZN(n110) );
  INVD1 U134 ( .I(data_in[3]), .ZN(n109) );
  INVD1 U135 ( .I(data_in[4]), .ZN(n108) );
  INVD1 U136 ( .I(data_in[5]), .ZN(n107) );
  INVD1 U137 ( .I(data_in[6]), .ZN(n106) );
  INVD1 U138 ( .I(data_in[7]), .ZN(n105) );
  INVD1 U139 ( .I(data_in[8]), .ZN(n38) );
  INVD1 U140 ( .I(data_in[10]), .ZN(n36) );
  INVD1 U141 ( .I(data_in[11]), .ZN(n35) );
  INVD1 U142 ( .I(data_in[12]), .ZN(n34) );
  INVD1 U143 ( .I(data_in[13]), .ZN(n33) );
  INVD1 U144 ( .I(data_in[14]), .ZN(n32) );
  INVD1 U145 ( .I(data_in[15]), .ZN(n31) );
  CKBD1 U146 ( .I(nRST), .Z(n2) );
  CKBD1 U147 ( .I(nRST), .Z(n1) );
  CKBD1 U148 ( .I(nRST), .Z(n3) );
endmodule


module bit_brick_239 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n4) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n3) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n4), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n4), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n4), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n3), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_238 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n4) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n3) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n4), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n4), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n4), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n3), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_237 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n4) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n3) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n4), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n4), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n4), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n3), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_236 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n4) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n3) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n4), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n4), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n4), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n3), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_235 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n4), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n4) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n3) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n4), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n3), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n3), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_234 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n4), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n4) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n3) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n4), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n3), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n3), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_233 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n4), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n4) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n3) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n4), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n3), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n3), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_232 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n4), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n4) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n3) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n4), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n3), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n3), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_231 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n4) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n3) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n4), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n4), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n4), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n3), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_230 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n4) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n3) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n4), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n4), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n4), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n3), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_229 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n4) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n3) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n4), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n4), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n4), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n3), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_228 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n4) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n3) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n4), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n4), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n4), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n3), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_227 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2D1 U3 ( .A1(\signed_y[2] ), .B1(n4), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  INVD1 U5 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U6 ( .I(x[1]), .ZN(n4) );
  INVD1 U7 ( .I(y[1]), .ZN(n6) );
  INVD1 U8 ( .I(x[0]), .ZN(n3) );
  INVD1 U9 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U10 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U11 ( .A1(n4), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n14 ) );
  CKND2D0 U13 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U14 ( .A1(n3), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U15 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n3), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_226 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n4), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n4) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n3) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n4), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n3), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n3), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_225 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n4), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n4) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n3) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n4), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n3), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n3), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_224 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n4), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n4) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n3) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n4), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n3), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n3), .A2(n5), .ZN(product[0]) );
endmodule


module shift_add_14_DW01_add_14_DW01_add_244 ( A, B, CI, SUM, CO );
  input [28:0] A;
  input [28:0] B;
  output [28:0] SUM;
  input CI;
  output CO;
  wire   n1, \SUM[18] , n3, n4, n5, n6, n7;
  wire   [28:1] carry;
  assign SUM[27] = \SUM[18] ;
  assign SUM[28] = \SUM[18] ;
  assign SUM[26] = \SUM[18] ;
  assign SUM[25] = \SUM[18] ;
  assign SUM[24] = \SUM[18] ;
  assign SUM[23] = \SUM[18] ;
  assign SUM[22] = \SUM[18] ;
  assign SUM[21] = \SUM[18] ;
  assign SUM[20] = \SUM[18] ;
  assign SUM[19] = \SUM[18] ;
  assign SUM[18] = \SUM[18] ;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D1 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  AOI222D2 U1 ( .A1(carry[15]), .A2(A[27]), .B1(carry[15]), .B2(B[15]), .C1(
        B[15]), .C2(A[27]), .ZN(n5) );
  XNR3D2 U2 ( .A1(B[27]), .A2(n7), .A3(n3), .ZN(\SUM[18] ) );
  OAI222D1 U3 ( .A1(n5), .A2(n7), .B1(n5), .B2(n6), .C1(n7), .C2(n6), .ZN(n4)
         );
  AN2XD1 U4 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D0 U5 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  AO222D1 U6 ( .A1(n4), .A2(A[27]), .B1(n4), .B2(B[27]), .C1(A[27]), .C2(B[27]), .Z(n3) );
  CKND0 U7 ( .I(A[27]), .ZN(n7) );
  CKND0 U8 ( .I(B[16]), .ZN(n6) );
  XNR3D0 U9 ( .A1(B[27]), .A2(n7), .A3(n4), .ZN(SUM[17]) );
  XNR3D0 U10 ( .A1(n6), .A2(n5), .A3(n7), .ZN(SUM[16]) );
  XNR3D0 U11 ( .A1(carry[15]), .A2(B[15]), .A3(n7), .ZN(SUM[15]) );
endmodule


module shift_add_14_DW01_add_6_DW01_add_236 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_14_DW01_add_5_DW01_add_235 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_14_DW01_add_4_DW01_add_234 ( A, B, CI, SUM, CO );
  input [30:0] A;
  input [30:0] B;
  output [30:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [30:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  XOR3D1 U1_30 ( .A1(A[30]), .A2(B[30]), .A3(carry[30]), .Z(SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_14_DW01_add_3_DW01_add_233 ( A, B, CI, SUM, CO );
  input [29:0] A;
  input [29:0] B;
  output [29:0] SUM;
  input CI;
  output CO;
  wire   \SUM[29] , \SUM[27] , n3, n4, n5;
  wire   [29:1] carry;
  assign SUM[25] = \SUM[29] ;
  assign SUM[29] = \SUM[29] ;
  assign SUM[26] = \SUM[27] ;
  assign SUM[28] = \SUM[27] ;
  assign SUM[24] = \SUM[27] ;
  assign SUM[27] = \SUM[27] ;

  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n4), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D1 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  CKBD0 U1 ( .I(SUM[23]), .Z(\SUM[29] ) );
  BUFFD1 U2 ( .I(SUM[23]), .Z(\SUM[27] ) );
  XNR3D0 U3 ( .A1(B[22]), .A2(A[21]), .A3(n3), .ZN(SUM[23]) );
  AOI222D1 U4 ( .A1(n5), .A2(A[21]), .B1(n5), .B2(B[22]), .C1(A[21]), .C2(
        B[22]), .ZN(n3) );
  AO222D1 U5 ( .A1(carry[21]), .A2(A[21]), .B1(B[21]), .B2(carry[21]), .C1(
        B[21]), .C2(A[21]), .Z(n5) );
  AN2XD1 U6 ( .A1(B[0]), .A2(A[0]), .Z(n4) );
  CKXOR2D1 U7 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  XOR3D0 U8 ( .A1(carry[21]), .A2(B[21]), .A3(A[21]), .Z(SUM[21]) );
  XOR3D0 U9 ( .A1(B[22]), .A2(A[21]), .A3(n5), .Z(SUM[22]) );
endmodule


module shift_add_14_DW01_add_2_DW01_add_232 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_14_DW01_add_1_DW01_add_231 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_14_DW01_add_0_DW01_add_230 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_14 ( input_bitwidth, weight_bitwidth, .products({
        \products[15][5] , \products[15][4] , \products[15][3] , 
        \products[15][2] , \products[15][1] , \products[15][0] , 
        \products[14][5] , \products[14][4] , \products[14][3] , 
        \products[14][2] , \products[14][1] , \products[14][0] , 
        \products[13][5] , \products[13][4] , \products[13][3] , 
        \products[13][2] , \products[13][1] , \products[13][0] , 
        \products[12][5] , \products[12][4] , \products[12][3] , 
        \products[12][2] , \products[12][1] , \products[12][0] , 
        \products[11][5] , \products[11][4] , \products[11][3] , 
        \products[11][2] , \products[11][1] , \products[11][0] , 
        \products[10][5] , \products[10][4] , \products[10][3] , 
        \products[10][2] , \products[10][1] , \products[10][0] , 
        \products[9][5] , \products[9][4] , \products[9][3] , \products[9][2] , 
        \products[9][1] , \products[9][0] , \products[8][5] , \products[8][4] , 
        \products[8][3] , \products[8][2] , \products[8][1] , \products[8][0] , 
        \products[7][5] , \products[7][4] , \products[7][3] , \products[7][2] , 
        \products[7][1] , \products[7][0] , \products[6][5] , \products[6][4] , 
        \products[6][3] , \products[6][2] , \products[6][1] , \products[6][0] , 
        \products[5][5] , \products[5][4] , \products[5][3] , \products[5][2] , 
        \products[5][1] , \products[5][0] , \products[4][5] , \products[4][4] , 
        \products[4][3] , \products[4][2] , \products[4][1] , \products[4][0] , 
        \products[3][5] , \products[3][4] , \products[3][3] , \products[3][2] , 
        \products[3][1] , \products[3][0] , \products[2][5] , \products[2][4] , 
        \products[2][3] , \products[2][2] , \products[2][1] , \products[2][0] , 
        \products[1][5] , \products[1][4] , \products[1][3] , \products[1][2] , 
        \products[1][1] , \products[1][0] , \products[0][5] , \products[0][4] , 
        \products[0][3] , \products[0][2] , \products[0][1] , \products[0][0] 
        }), shift_add_out );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  output [31:0] shift_add_out;
  input \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] ;
  wire   \shifted_products[15][16] , \shifted_products[15][15] ,
         \shifted_products[15][14] , \shifted_products[15][13] ,
         \shifted_products[15][12] , \shifted_products[15][11] ,
         \shifted_products[15][10] , \shifted_products[15][9] ,
         \shifted_products[15][8] , \shifted_products[15][7] ,
         \shifted_products[15][6] , \shifted_products[15][5] ,
         \shifted_products[15][4] , \shifted_products[15][3] ,
         \shifted_products[15][2] , \shifted_products[15][1] ,
         \shifted_products[15][0] , \shifted_products[14][14] ,
         \shifted_products[14][13] , \shifted_products[14][12] ,
         \shifted_products[14][11] , \shifted_products[14][10] ,
         \shifted_products[14][9] , \shifted_products[14][8] ,
         \shifted_products[14][7] , \shifted_products[14][6] ,
         \shifted_products[14][5] , \shifted_products[14][4] ,
         \shifted_products[14][3] , \shifted_products[14][2] ,
         \shifted_products[14][1] , \shifted_products[14][0] ,
         \shifted_products[13][12] , \shifted_products[13][11] ,
         \shifted_products[13][10] , \shifted_products[13][9] ,
         \shifted_products[13][8] , \shifted_products[13][7] ,
         \shifted_products[13][6] , \shifted_products[13][5] ,
         \shifted_products[13][4] , \shifted_products[13][3] ,
         \shifted_products[13][2] , \shifted_products[13][1] ,
         \shifted_products[13][0] , \shifted_products[12][10] ,
         \shifted_products[12][9] , \shifted_products[12][8] ,
         \shifted_products[12][7] , \shifted_products[12][6] ,
         \shifted_products[12][5] , \shifted_products[12][4] ,
         \shifted_products[12][3] , \shifted_products[12][2] ,
         \shifted_products[12][1] , \shifted_products[12][0] ,
         \shifted_products[11][13] , \shifted_products[11][12] ,
         \shifted_products[11][11] , \shifted_products[11][10] ,
         \shifted_products[11][9] , \shifted_products[11][8] ,
         \shifted_products[11][7] , \shifted_products[11][6] ,
         \shifted_products[11][5] , \shifted_products[11][4] ,
         \shifted_products[11][3] , \shifted_products[11][2] ,
         \shifted_products[11][1] , \shifted_products[11][0] ,
         \shifted_products[10][12] , \shifted_products[10][11] ,
         \shifted_products[10][10] , \shifted_products[10][9] ,
         \shifted_products[10][8] , \shifted_products[10][7] ,
         \shifted_products[10][6] , \shifted_products[10][5] ,
         \shifted_products[10][4] , \shifted_products[10][3] ,
         \shifted_products[10][2] , \shifted_products[10][1] ,
         \shifted_products[10][0] , \shifted_products[9][10] ,
         \shifted_products[9][9] , \shifted_products[9][8] ,
         \shifted_products[9][7] , \shifted_products[9][6] ,
         \shifted_products[9][5] , \shifted_products[9][4] ,
         \shifted_products[9][3] , \shifted_products[9][2] ,
         \shifted_products[9][1] , \shifted_products[9][0] ,
         \shifted_products[8][8] , \shifted_products[8][7] ,
         \shifted_products[8][6] , \shifted_products[8][5] ,
         \shifted_products[8][4] , \shifted_products[8][3] ,
         \shifted_products[8][2] , \shifted_products[8][1] ,
         \shifted_products[8][0] , \shifted_products[7][11] ,
         \shifted_products[7][10] , \shifted_products[7][9] ,
         \shifted_products[7][8] , \shifted_products[7][7] ,
         \shifted_products[7][6] , \shifted_products[7][5] ,
         \shifted_products[7][4] , \shifted_products[7][3] ,
         \shifted_products[7][2] , \shifted_products[7][1] ,
         \shifted_products[7][0] , \shifted_products[6][10] ,
         \shifted_products[6][9] , \shifted_products[6][8] ,
         \shifted_products[6][7] , \shifted_products[6][6] ,
         \shifted_products[6][5] , \shifted_products[6][4] ,
         \shifted_products[6][3] , \shifted_products[6][2] ,
         \shifted_products[6][1] , \shifted_products[6][0] ,
         \shifted_products[5][8] , \shifted_products[5][7] ,
         \shifted_products[5][6] , \shifted_products[5][5] ,
         \shifted_products[5][4] , \shifted_products[5][3] ,
         \shifted_products[5][2] , \shifted_products[5][1] ,
         \shifted_products[5][0] , \shifted_products[4][6] ,
         \shifted_products[4][5] , \shifted_products[4][4] ,
         \shifted_products[4][3] , \shifted_products[4][2] ,
         \shifted_products[4][1] , \shifted_products[4][0] ,
         \shifted_products[3][9] , \shifted_products[3][8] ,
         \shifted_products[3][7] , \shifted_products[3][6] ,
         \shifted_products[3][5] , \shifted_products[3][4] ,
         \shifted_products[3][3] , \shifted_products[3][2] ,
         \shifted_products[3][1] , \shifted_products[3][0] ,
         \shifted_products[2][8] , \shifted_products[2][7] ,
         \shifted_products[2][6] , \shifted_products[2][5] ,
         \shifted_products[2][4] , \shifted_products[2][3] ,
         \shifted_products[2][2] , \shifted_products[2][1] ,
         \shifted_products[2][0] , \shifted_products[1][6] ,
         \shifted_products[1][5] , \shifted_products[1][4] ,
         \shifted_products[1][3] , \shifted_products[1][2] ,
         \shifted_products[1][1] , \shifted_products[1][0] ,
         \shifted_products[0][9] , N99, N98, N87, N86, N85, N84, N83, N82, N81,
         N80, N79, N78, N77, N76, N61, N60, N59, N58, N57, N56, N55, N54, N446,
         N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435,
         N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424,
         N423, N422, N421, N420, N419, N418, N417, N416, N415, N414, N413,
         N412, N411, N410, N409, N408, N407, N406, N405, N404, N403, N402,
         N401, N400, N399, N398, N397, N396, N395, N394, N393, N392, N391,
         N390, N389, N388, N387, N386, N385, N384, N383, N382, N381, N380,
         N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369,
         N368, N367, N366, N365, N364, N363, N362, N361, N360, N359, N358,
         N357, N356, N355, N354, N353, N352, N351, N350, N349, N348, N347,
         N346, N345, N344, N343, N342, N341, N340, N339, N338, N337, N336,
         N335, N334, N333, N332, N331, N330, N329, N328, N327, N326, N325,
         N324, N323, N322, N321, N320, N319, N318, N317, N316, N315, N314,
         N313, N312, N311, N310, N309, N308, N307, N306, N305, N304, N303,
         N302, N301, N300, N299, N298, N297, N296, N295, N294, N293, N292,
         N291, N290, N289, N288, N287, N286, N285, N284, N283, N282, N281,
         N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270,
         N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259,
         N258, N257, N256, N255, N254, N253, N252, N251, N250, N249, N248,
         N247, N246, N245, N244, N243, N242, N241, N240, N239, N238, N237,
         N236, N235, N234, N233, N232, N231, N230, N229, N214, N213, N212,
         N211, N210, N209, N208, N207, N206, N205, N204, N203, N202, N201,
         N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, N179,
         N178, N177, N176, N175, N174, N159, N158, N157, N156, N155, N154,
         N153, N152, N151, N150, N149, N148, N136, N135, N134, N133, N132,
         N131, N130, N129, N128, N127, N126, N125, N124, N123, N108, N107,
         N106, N105, N104, N103, N102, N101, N100,
         \add_14_root_add_199_I16/carry[6] ,
         \add_14_root_add_199_I16/carry[5] ,
         \add_14_root_add_199_I16/carry[4] ,
         \add_14_root_add_199_I16/carry[3] ,
         \add_14_root_add_199_I16/carry[2] ,
         \add_14_root_add_199_I16/carry[1] ,
         \add_13_root_add_199_I16/carry[9] ,
         \add_13_root_add_199_I16/carry[8] ,
         \add_13_root_add_199_I16/carry[7] ,
         \add_13_root_add_199_I16/carry[6] ,
         \add_13_root_add_199_I16/carry[5] ,
         \add_13_root_add_199_I16/carry[4] ,
         \add_13_root_add_199_I16/carry[3] ,
         \add_13_root_add_199_I16/carry[2] ,
         \add_13_root_add_199_I16/carry[1] ,
         \add_12_root_add_199_I16/carry[7] ,
         \add_12_root_add_199_I16/carry[6] ,
         \add_12_root_add_199_I16/carry[5] ,
         \add_12_root_add_199_I16/carry[4] ,
         \add_12_root_add_199_I16/carry[3] ,
         \add_12_root_add_199_I16/carry[2] ,
         \add_12_root_add_199_I16/carry[1] ,
         \add_11_root_add_199_I16/carry[11] ,
         \add_11_root_add_199_I16/carry[10] ,
         \add_11_root_add_199_I16/carry[9] ,
         \add_11_root_add_199_I16/carry[8] ,
         \add_11_root_add_199_I16/carry[7] ,
         \add_11_root_add_199_I16/carry[6] ,
         \add_11_root_add_199_I16/carry[5] ,
         \add_11_root_add_199_I16/carry[4] ,
         \add_11_root_add_199_I16/carry[3] ,
         \add_11_root_add_199_I16/carry[2] ,
         \add_11_root_add_199_I16/carry[1] ,
         \add_10_root_add_199_I16/carry[9] ,
         \add_10_root_add_199_I16/carry[8] ,
         \add_10_root_add_199_I16/carry[7] ,
         \add_10_root_add_199_I16/carry[6] ,
         \add_10_root_add_199_I16/carry[5] ,
         \add_10_root_add_199_I16/carry[4] ,
         \add_10_root_add_199_I16/carry[3] ,
         \add_10_root_add_199_I16/carry[2] ,
         \add_10_root_add_199_I16/carry[1] ,
         \add_9_root_add_199_I16/carry[13] ,
         \add_9_root_add_199_I16/carry[12] ,
         \add_9_root_add_199_I16/carry[11] ,
         \add_9_root_add_199_I16/carry[10] , \add_9_root_add_199_I16/carry[9] ,
         \add_9_root_add_199_I16/carry[8] , \add_9_root_add_199_I16/carry[7] ,
         \add_9_root_add_199_I16/carry[6] , \add_9_root_add_199_I16/carry[5] ,
         \add_9_root_add_199_I16/carry[4] , \add_9_root_add_199_I16/carry[3] ,
         \add_9_root_add_199_I16/carry[2] , \add_9_root_add_199_I16/carry[1] ,
         \add_8_root_add_199_I16/carry[11] ,
         \add_8_root_add_199_I16/carry[10] , \add_8_root_add_199_I16/carry[9] ,
         \add_8_root_add_199_I16/carry[8] , \add_8_root_add_199_I16/carry[7] ,
         \add_8_root_add_199_I16/carry[6] , \add_8_root_add_199_I16/carry[5] ,
         \add_8_root_add_199_I16/carry[4] , \add_8_root_add_199_I16/carry[3] ,
         \add_8_root_add_199_I16/carry[2] , \add_8_root_add_199_I16/carry[1] ,
         n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72,
         n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86,
         n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100,
         n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, n111,
         n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122,
         n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133,
         n134, n135, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246,
         n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257,
         n258, n259, n260, n261, n262, n263, n264, n265, n266, n267, n268,
         n269, n270, n271, n272, n273, n274, n275, n276, n277, n278, n279,
         n280, n281, n282, n283, n284, n285, n286, n287, n288, n289, n290,
         n291, n292, n293, n294, n295, n296, n297, n298, n299, n300, n301,
         n302, n303, n304, n305, n306, n307, n308, n309, n310, n311, n312,
         n313, n314, n315, n316, n317, n318, n319, n320;

  MAOI22D1 U26 ( .A1(\products[7][0] ), .A2(n308), .B1(n104), .B2(n311), .ZN(
        n309) );
  AN2XD1 U74 ( .A1(n314), .A2(n283), .Z(n284) );
  MAOI22D1 U112 ( .A1(\products[15][2] ), .A2(n271), .B1(n56), .B2(n300), .ZN(
        n272) );
  OA21D1 U130 ( .A1(n238), .A2(n55), .B(n274), .Z(n265) );
  AN2XD1 U134 ( .A1(n301), .A2(n291), .Z(n275) );
  AN2XD1 U218 ( .A1(n294), .A2(n277), .Z(n248) );
  AN2XD1 U239 ( .A1(n291), .A2(n311), .Z(n277) );
  shift_add_14_DW01_add_14_DW01_add_244 add_7_root_add_199_I16 ( .A({
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \shifted_products[14][14] , 
        \shifted_products[14][13] , \shifted_products[14][12] , 
        \shifted_products[14][11] , \shifted_products[14][10] , 
        \shifted_products[14][9] , \shifted_products[14][8] , 
        \shifted_products[14][7] , \shifted_products[14][6] , 
        \shifted_products[14][5] , \shifted_products[14][4] , 
        \shifted_products[14][3] , \shifted_products[14][2] , 
        \shifted_products[14][1] , \shifted_products[14][0] }), .B({
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \shifted_products[15][16] , \shifted_products[15][15] , 
        \shifted_products[15][14] , \shifted_products[15][13] , 
        \shifted_products[15][12] , \shifted_products[15][11] , 
        \shifted_products[15][10] , \shifted_products[15][9] , 
        \shifted_products[15][8] , \shifted_products[15][7] , 
        \shifted_products[15][6] , \shifted_products[15][5] , 
        \shifted_products[15][4] , \shifted_products[15][3] , 
        \shifted_products[15][2] , \shifted_products[15][1] , 
        \shifted_products[15][0] }), .CI(n240), .SUM({N257, N256, N255, N254, 
        N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, N243, N242, 
        N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, N231, N230, 
        N229}) );
  shift_add_14_DW01_add_6_DW01_add_236 add_4_root_add_0_root_add_199_I16 ( .A(
        {n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, 
        n17, n17, n17, n17, N214, N213, N212, N211, N210, N209, N208, N207, 
        N206, N205, N204, N203, N202, N201}), .B({N257, N257, N257, N257, N256, 
        N255, N254, N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, 
        N243, N242, N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, 
        N231, N230, N229}), .CI(n240), .SUM({N382, N381, N380, N379, N378, 
        N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, N367, N366, 
        N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, N355, N354, 
        N353, N352, N351}) );
  shift_add_14_DW01_add_5_DW01_add_235 add_3_root_add_0_root_add_199_I16 ( .A(
        {n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, 
        n18, n18, N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, 
        N179, N178, N177, N176, N175, N174}), .B({n15, n15, n15, n15, n15, n15, 
        n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, 
        N159, N158, N157, N156, N155, N154, N153, N152, N151, N150, N149, N148}), .CI(n240), .SUM({N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, 
        N340, N339, N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, 
        N328, N327, N326, N325, N324, N323, N322, N321, N320, N319}) );
  shift_add_14_DW01_add_4_DW01_add_234 add_5_root_add_199_I16 ( .A({n16, n16, 
        n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, 
        n16, n16, n16, n16, n16, N108, N107, N106, N105, N104, N103, N102, 
        N101, N100, N99}), .B({n19, n19, n19, n19, n19, n19, n19, n19, n19, 
        n19, n19, n19, n19, n19, n19, n19, n19, N136, N135, N134, N133, N132, 
        N131, N130, N129, N128, N127, N126, N125, N124, N123}), .CI(n240), 
        .SUM({N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}) );
  shift_add_14_DW01_add_3_DW01_add_233 add_6_root_add_199_I16 ( .A({n13, n13, 
        n13, n13, n13, n13, n13, n13, n13, n13, n13, n13, n13, n13, n13, n13, 
        n13, n13, n13, n13, n13, n13, N61, N60, N59, N58, N57, N56, N55, N54}), 
        .B({N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, 
        N98, N98, N98, N98, N98, N87, N86, N85, N84, N83, N82, N81, N80, N79, 
        N78, N77, N76}), .CI(n240), .SUM({N287, N286, N285, N284, N283, N282, 
        N281, N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270, 
        N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259, N258}) );
  shift_add_14_DW01_add_2_DW01_add_232 add_2_root_add_0_root_add_199_I16 ( .A(
        {N318, N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, 
        N308, N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, 
        N296, N295, N294, N293, N292, N291, N290, N289, N288}), .B({N382, N381, 
        N380, N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369, 
        N368, N367, N366, N365, N364, N363, N362, N361, N360, N359, N358, N357, 
        N356, N355, N354, N353, N352, N351}), .CI(n240), .SUM({N446, N445, 
        N444, N443, N442, N441, N440, N439, N438, N437, N436, N435, N434, N433, 
        N432, N431, N430, N429, N428, N427, N426, N425, N424, N423, N422, N421, 
        N420, N419, N418, N417, N416, N415}) );
  shift_add_14_DW01_add_1_DW01_add_231 add_1_root_add_0_root_add_199_I16 ( .A(
        {N446, N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, 
        N435, N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424, 
        N423, N422, N421, N420, N419, N418, N417, N416, N415}), .B({N287, N287, 
        N287, N286, N285, N284, N283, N282, N281, N280, N279, N278, N277, N276, 
        N275, N274, N273, N272, N271, N270, N269, N268, N267, N266, N265, N264, 
        N263, N262, N261, N260, N259, N258}), .CI(n240), .SUM({N414, N413, 
        N412, N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, 
        N400, N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, 
        N388, N387, N386, N385, N384, N383}) );
  shift_add_14_DW01_add_0_DW01_add_230 add_0_root_add_0_root_add_199_I16 ( .A(
        {N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, N340, 
        N339, N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, N328, 
        N327, N326, N325, N324, N323, N322, N321, N320, N319}), .B({N414, N413, 
        N412, N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, 
        N400, N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, 
        N388, N387, N386, N385, N384, N383}), .CI(n240), .SUM(shift_add_out)
         );
  XNR3D2 U2 ( .A1(n216), .A2(n14), .A3(n53), .ZN(n13) );
  FA1D1 U3 ( .A(\shifted_products[12][10] ), .B(\shifted_products[13][10] ), 
        .CI(\add_8_root_add_199_I16/carry[10] ), .CO(
        \add_8_root_add_199_I16/carry[11] ), .S(N211) );
  AOI222D2 U4 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(\products[4][5] ), 
        .B1(\add_12_root_add_199_I16/carry[7] ), .B2(\shifted_products[5][7] ), 
        .C1(\shifted_products[5][7] ), .C2(\products[4][5] ), .ZN(n46) );
  AOI222D1 U5 ( .A1(n41), .A2(\products[8][5] ), .B1(n41), .B2(
        \products[9][5] ), .C1(\products[8][5] ), .C2(\products[9][5] ), .ZN(
        n42) );
  OAI222D1 U6 ( .A1(n39), .A2(n40), .B1(n39), .B2(n43), .C1(n40), .C2(n43), 
        .ZN(n41) );
  XNR3D2 U7 ( .A1(n25), .A2(n51), .A3(n50), .ZN(N86) );
  OAI222D2 U8 ( .A1(n51), .A2(n50), .B1(n51), .B2(n25), .C1(n50), .C2(n25), 
        .ZN(n52) );
  NR3D3 U9 ( .A1(n10), .A2(n11), .A3(n12), .ZN(n51) );
  CKAN2D0 U10 ( .A1(n311), .A2(n306), .Z(n288) );
  CKND2D0 U11 ( .A1(n319), .A2(n311), .ZN(n271) );
  CKND2D2 U12 ( .A1(n243), .A2(n245), .ZN(n311) );
  AOI222XD4 U13 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \products[6][5] ), .B1(\add_11_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[7][11] ), .C1(\shifted_products[7][11] ), .C2(
        \products[6][5] ), .ZN(n44) );
  FA1D2 U14 ( .A(\shifted_products[6][10] ), .B(\shifted_products[7][10] ), 
        .CI(\add_11_root_add_199_I16/carry[10] ), .CO(
        \add_11_root_add_199_I16/carry[11] ), .S(N133) );
  INR2XD4 U15 ( .A1(n318), .B1(n237), .ZN(n307) );
  CKAN2D4 U16 ( .A1(n268), .A2(n31), .Z(n318) );
  ND2D1 U17 ( .A1(n299), .A2(n276), .ZN(n305) );
  AN2XD1 U18 ( .A1(n288), .A2(n31), .Z(n285) );
  INVD1 U19 ( .I(n319), .ZN(n237) );
  ND2D1 U20 ( .A1(n277), .A2(n235), .ZN(n316) );
  ND2D1 U21 ( .A1(n28), .A2(n301), .ZN(n315) );
  FA1D0 U22 ( .A(\shifted_products[2][8] ), .B(\shifted_products[3][8] ), .CI(
        \add_13_root_add_199_I16/carry[8] ), .CO(
        \add_13_root_add_199_I16/carry[9] ), .S(N84) );
  ND2D1 U23 ( .A1(n242), .A2(n241), .ZN(n319) );
  OAI222D0 U24 ( .A1(n44), .A2(n107), .B1(n44), .B2(n24), .C1(n107), .C2(n24), 
        .ZN(n45) );
  AN2D1 U25 ( .A1(n306), .A2(n31), .Z(n297) );
  CKND2D1 U27 ( .A1(n47), .A2(\products[4][5] ), .ZN(n1) );
  ND2D1 U28 ( .A1(n47), .A2(\products[5][5] ), .ZN(n2) );
  CKND2D0 U29 ( .A1(\products[4][5] ), .A2(\products[5][5] ), .ZN(n3) );
  AN3XD1 U30 ( .A1(n1), .A2(n2), .A3(n3), .Z(n48) );
  OAI222D1 U31 ( .A1(n46), .A2(n119), .B1(n46), .B2(n49), .C1(n119), .C2(n49), 
        .ZN(n47) );
  AN2D1 U32 ( .A1(n301), .A2(n319), .Z(n294) );
  CKND0 U33 ( .I(n235), .ZN(n4) );
  INVD1 U34 ( .I(n4), .ZN(n5) );
  AN2D1 U35 ( .A1(n33), .A2(\products[12][5] ), .Z(n6) );
  AN2XD1 U36 ( .A1(n33), .A2(\products[13][5] ), .Z(n7) );
  AN2D1 U37 ( .A1(\products[12][5] ), .A2(\products[13][5] ), .Z(n8) );
  NR3D1 U38 ( .A1(n6), .A2(n7), .A3(n8), .ZN(n34) );
  OAI222D1 U39 ( .A1(n32), .A2(n73), .B1(n32), .B2(n35), .C1(n73), .C2(n35), 
        .ZN(n33) );
  NR2D0 U40 ( .A1(n30), .A2(n72), .ZN(\shifted_products[13][0] ) );
  CKND2D0 U41 ( .A1(n243), .A2(n242), .ZN(n292) );
  INVD1 U42 ( .I(n279), .ZN(n235) );
  CKND2 U43 ( .I(n264), .ZN(n224) );
  CKND2D0 U44 ( .A1(n224), .A2(n277), .ZN(n312) );
  CKND2D1 U45 ( .A1(n246), .A2(n244), .ZN(n300) );
  CKND2D0 U46 ( .A1(n244), .A2(n243), .ZN(n291) );
  CKND2D0 U47 ( .A1(n244), .A2(n241), .ZN(n268) );
  AOI222D0 U48 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \products[10][5] ), .B1(\add_9_root_add_199_I16/carry[13] ), .B2(
        \shifted_products[11][13] ), .C1(\shifted_products[11][13] ), .C2(
        \products[10][5] ), .ZN(n37) );
  AN2XD1 U49 ( .A1(n294), .A2(n28), .Z(n314) );
  CKND2D3 U50 ( .A1(n294), .A2(n224), .ZN(n293) );
  OAI22D0 U51 ( .A1(n297), .A2(n109), .B1(n227), .B2(n111), .ZN(
        \shifted_products[6][3] ) );
  OAI22D0 U52 ( .A1(n318), .A2(n92), .B1(n230), .B2(n94), .ZN(
        \shifted_products[9][3] ) );
  NR2D0 U53 ( .A1(n318), .A2(n83), .ZN(\shifted_products[11][1] ) );
  AN2XD1 U54 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(\products[2][5] ), 
        .Z(n10) );
  AN2XD1 U55 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .Z(n11) );
  OAI21D1 U56 ( .A1(n282), .A2(n127), .B(n281), .ZN(\shifted_products[3][9] )
         );
  NR2D1 U57 ( .A1(n315), .A2(n316), .ZN(n276) );
  NR2D1 U58 ( .A1(n307), .A2(n130), .ZN(\shifted_products[3][0] ) );
  NR2D0 U59 ( .A1(n315), .A2(n316), .ZN(n9) );
  AN2D1 U60 ( .A1(\shifted_products[3][9] ), .A2(\products[2][5] ), .Z(n12) );
  AOI222D2 U61 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[0][9] ), .B1(\add_14_root_add_199_I16/carry[6] ), 
        .B2(\shifted_products[1][6] ), .C1(\shifted_products[1][6] ), .C2(
        \shifted_products[0][9] ), .ZN(n54) );
  OA222D1 U62 ( .A1(n54), .A2(n53), .B1(n54), .B2(n216), .C1(n53), .C2(n216), 
        .Z(n14) );
  CKND1 U63 ( .I(n295), .ZN(n227) );
  XOR3D4 U64 ( .A1(\products[9][5] ), .A2(n42), .A3(n40), .Z(n15) );
  AOI222D1 U65 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(\products[8][5] ), .B1(\add_10_root_add_199_I16/carry[9] ), .B2(\shifted_products[9][9] ), .C1(
        \shifted_products[9][9] ), .C2(\products[8][5] ), .ZN(n39) );
  AOI222D1 U66 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \products[12][5] ), .B1(\add_8_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[13][11] ), .C1(\shifted_products[13][11] ), .C2(
        \products[12][5] ), .ZN(n32) );
  XOR3D2 U67 ( .A1(\products[5][5] ), .A2(n48), .A3(n119), .Z(n16) );
  XOR3D2 U68 ( .A1(\products[13][5] ), .A2(n34), .A3(n73), .Z(n17) );
  XOR3D1 U69 ( .A1(\products[11][5] ), .A2(n36), .A3(n21), .Z(n18) );
  OAI22D0 U70 ( .A1(n307), .A2(n216), .B1(n9), .B2(n217), .ZN(
        \shifted_products[1][6] ) );
  NR2D0 U71 ( .A1(n312), .A2(n237), .ZN(n320) );
  CKAN2D0 U72 ( .A1(n277), .A2(n28), .Z(n282) );
  OAI21D0 U73 ( .A1(n57), .A2(n28), .B(n267), .ZN(\shifted_products[15][15] )
         );
  NR2D0 U75 ( .A1(n30), .A2(n60), .ZN(\shifted_products[15][0] ) );
  CKND2D0 U76 ( .A1(n294), .A2(n223), .ZN(n266) );
  CKND1 U77 ( .I(\products[13][5] ), .ZN(n67) );
  NR2D0 U78 ( .A1(n106), .A2(n30), .ZN(\shifted_products[7][0] ) );
  CKND2D0 U79 ( .A1(\products[12][5] ), .A2(n312), .ZN(n254) );
  CKND2D0 U80 ( .A1(\products[8][5] ), .A2(n312), .ZN(n313) );
  CKND1 U81 ( .I(\products[7][5] ), .ZN(n101) );
  CKND2D0 U82 ( .A1(\products[3][5] ), .A2(n293), .ZN(n281) );
  NR2D0 U83 ( .A1(n264), .A2(n237), .ZN(n253) );
  CKND2D0 U84 ( .A1(\products[2][5] ), .A2(n293), .ZN(n278) );
  CKND2D0 U85 ( .A1(\products[10][5] ), .A2(n264), .ZN(n247) );
  CKND1 U86 ( .I(\products[6][5] ), .ZN(n107) );
  CKND2D0 U87 ( .A1(\products[15][5] ), .A2(n264), .ZN(n274) );
  NR2D0 U88 ( .A1(n30), .A2(n59), .ZN(\shifted_products[15][1] ) );
  CKAN2D0 U89 ( .A1(n288), .A2(n299), .Z(n287) );
  CKND1 U90 ( .I(\products[5][5] ), .ZN(n113) );
  CKAN2D0 U91 ( .A1(n288), .A2(n307), .Z(n289) );
  OAI22D0 U92 ( .A1(n285), .A2(n119), .B1(n284), .B2(n121), .ZN(
        \shifted_products[4][5] ) );
  OAI22D0 U93 ( .A1(n285), .A2(n73), .B1(n283), .B2(n75), .ZN(
        \shifted_products[12][5] ) );
  OAI22D0 U94 ( .A1(n30), .A2(n115), .B1(n287), .B2(n117), .ZN(
        \shifted_products[5][3] ) );
  OAI22D0 U95 ( .A1(n285), .A2(n121), .B1(n284), .B2(n123), .ZN(
        \shifted_products[4][3] ) );
  OAI22D0 U96 ( .A1(n30), .A2(n57), .B1(n229), .B2(n59), .ZN(
        \shifted_products[15][3] ) );
  OAI22D0 U97 ( .A1(n318), .A2(n81), .B1(n5), .B2(n83), .ZN(
        \shifted_products[11][3] ) );
  NR2D0 U98 ( .A1(n224), .A2(n86), .ZN(\shifted_products[10][3] ) );
  OAI22D0 U99 ( .A1(n307), .A2(n125), .B1(n280), .B2(n127), .ZN(
        \shifted_products[3][5] ) );
  OAI21D0 U100 ( .A1(n282), .A2(n134), .B(n278), .ZN(\shifted_products[2][5] )
         );
  OAI22D0 U101 ( .A1(n307), .A2(n127), .B1(n280), .B2(n129), .ZN(
        \shifted_products[3][3] ) );
  NR2D0 U102 ( .A1(n222), .A2(n132), .ZN(\shifted_products[2][3] ) );
  NR2D0 U103 ( .A1(n223), .A2(n97), .ZN(\shifted_products[8][3] ) );
  OAI22D0 U104 ( .A1(n29), .A2(n69), .B1(n226), .B2(n71), .ZN(
        \shifted_products[13][3] ) );
  OAI22D0 U105 ( .A1(n285), .A2(n75), .B1(n283), .B2(n77), .ZN(
        \shifted_products[12][3] ) );
  OAI22D0 U106 ( .A1(n103), .A2(n29), .B1(n225), .B2(n105), .ZN(
        \shifted_products[7][3] ) );
  OAI21D0 U107 ( .A1(n59), .A2(n28), .B(n267), .ZN(\shifted_products[15][13] )
         );
  NR2D0 U108 ( .A1(n307), .A2(n129), .ZN(\shifted_products[3][1] ) );
  NR2D0 U109 ( .A1(n30), .A2(n117), .ZN(\shifted_products[5][1] ) );
  NR2D0 U110 ( .A1(n285), .A2(n77), .ZN(\shifted_products[12][1] ) );
  NR2D0 U111 ( .A1(n30), .A2(n71), .ZN(\shifted_products[13][1] ) );
  NR2D0 U113 ( .A1(n105), .A2(n30), .ZN(\shifted_products[7][1] ) );
  NR2D0 U114 ( .A1(n224), .A2(n88), .ZN(\shifted_products[10][1] ) );
  OA21D0 U115 ( .A1(n282), .A2(n126), .B(n281), .Z(n25) );
  CKAN2D0 U116 ( .A1(\products[0][5] ), .A2(n30), .Z(\shifted_products[0][9] )
         );
  XNR3D0 U117 ( .A1(\products[3][5] ), .A2(n50), .A3(n23), .ZN(n22) );
  INVD2 U118 ( .I(n22), .ZN(N98) );
  AOI222D1 U119 ( .A1(n52), .A2(\products[2][5] ), .B1(n52), .B2(
        \products[3][5] ), .C1(\products[2][5] ), .C2(\products[3][5] ), .ZN(
        n23) );
  XNR3D4 U120 ( .A1(\products[7][5] ), .A2(n107), .A3(n20), .ZN(n19) );
  AO222D1 U121 ( .A1(n45), .A2(\products[6][5] ), .B1(n45), .B2(
        \products[7][5] ), .C1(\products[6][5] ), .C2(\products[7][5] ), .Z(
        n20) );
  CKAN2D0 U122 ( .A1(n288), .A2(n318), .Z(n258) );
  OAI21D0 U123 ( .A1(n56), .A2(n28), .B(n267), .ZN(\shifted_products[15][16] )
         );
  INR2XD0 U124 ( .A1(n268), .B1(n286), .ZN(n283) );
  INR2D0 U125 ( .A1(n301), .B1(n279), .ZN(n280) );
  INR2D0 U126 ( .A1(n311), .B1(n293), .ZN(n298) );
  INR2D2 U127 ( .A1(n268), .B1(n237), .ZN(n299) );
  INR2D0 U128 ( .A1(n311), .B1(n264), .ZN(n263) );
  CKND2D0 U129 ( .A1(n28), .A2(n291), .ZN(n308) );
  CKND2D0 U131 ( .A1(n294), .A2(n291), .ZN(n261) );
  NR2D0 U132 ( .A1(n285), .A2(n124), .ZN(\shifted_products[4][0] ) );
  NR2D0 U133 ( .A1(n285), .A2(n78), .ZN(\shifted_products[12][0] ) );
  AOI22D0 U135 ( .A1(\products[6][4] ), .A2(n295), .B1(\products[6][0] ), .B2(
        n308), .ZN(n296) );
  NR2D0 U136 ( .A1(n224), .A2(n89), .ZN(\shifted_products[10][0] ) );
  NR2D0 U137 ( .A1(n223), .A2(n100), .ZN(\shifted_products[8][0] ) );
  CKND1 U138 ( .I(\products[15][4] ), .ZN(n56) );
  OAI21D0 U139 ( .A1(n282), .A2(n128), .B(n281), .ZN(\shifted_products[3][8] )
         );
  OAI21D0 U140 ( .A1(n282), .A2(n131), .B(n278), .ZN(\shifted_products[2][8] )
         );
  NR2D0 U141 ( .A1(n222), .A2(n135), .ZN(\shifted_products[2][0] ) );
  CKND2D0 U142 ( .A1(n299), .A2(n306), .ZN(n302) );
  CKND2D0 U143 ( .A1(n288), .A2(n268), .ZN(n255) );
  CKND1 U144 ( .I(\products[6][3] ), .ZN(n109) );
  CKND1 U145 ( .I(\products[14][4] ), .ZN(n62) );
  CKND1 U146 ( .I(\products[7][4] ), .ZN(n102) );
  CKND1 U147 ( .I(\products[12][3] ), .ZN(n75) );
  CKND1 U148 ( .I(\products[13][4] ), .ZN(n68) );
  CKND1 U149 ( .I(\products[5][3] ), .ZN(n115) );
  OAI21D0 U150 ( .A1(n314), .A2(n97), .B(n313), .ZN(\shifted_products[8][7] )
         );
  CKND1 U151 ( .I(\products[6][4] ), .ZN(n108) );
  OAI21D0 U152 ( .A1(n314), .A2(n75), .B(n254), .ZN(\shifted_products[12][9] )
         );
  OAI22D0 U153 ( .A1(n223), .A2(n96), .B1(n314), .B2(n100), .ZN(
        \shifted_products[8][4] ) );
  OAI21D0 U154 ( .A1(n314), .A2(n99), .B(n313), .ZN(\shifted_products[8][5] )
         );
  OAI21D0 U155 ( .A1(n314), .A2(n77), .B(n254), .ZN(\shifted_products[12][7] )
         );
  OAI22D0 U156 ( .A1(n224), .A2(n85), .B1(n248), .B2(n89), .ZN(
        \shifted_products[10][4] ) );
  FA1D1 U157 ( .A(\shifted_products[2][6] ), .B(\shifted_products[3][6] ), 
        .CI(\add_13_root_add_199_I16/carry[6] ), .CO(
        \add_13_root_add_199_I16/carry[7] ), .S(N82) );
  OAI21D0 U158 ( .A1(n282), .A2(n133), .B(n278), .ZN(\shifted_products[2][6] )
         );
  OAI22D0 U159 ( .A1(n285), .A2(n120), .B1(n284), .B2(n122), .ZN(
        \shifted_products[4][4] ) );
  OAI22D0 U160 ( .A1(n285), .A2(n74), .B1(n283), .B2(n76), .ZN(
        \shifted_products[12][4] ) );
  OAI21D0 U161 ( .A1(n314), .A2(n98), .B(n313), .ZN(\shifted_products[8][6] )
         );
  AOI22D0 U162 ( .A1(\products[9][4] ), .A2(n316), .B1(\products[9][0] ), .B2(
        n315), .ZN(n317) );
  AOI22D0 U163 ( .A1(\products[15][4] ), .A2(n269), .B1(\products[15][0] ), 
        .B2(n271), .ZN(n270) );
  AOI22D0 U164 ( .A1(\products[11][0] ), .A2(n251), .B1(\products[11][4] ), 
        .B2(n279), .ZN(n252) );
  OAI22D0 U165 ( .A1(n30), .A2(n116), .B1(n287), .B2(n118), .ZN(
        \shifted_products[5][2] ) );
  OAI22D0 U166 ( .A1(n285), .A2(n122), .B1(n284), .B2(n124), .ZN(
        \shifted_products[4][2] ) );
  OAI22D0 U167 ( .A1(n30), .A2(n70), .B1(n226), .B2(n72), .ZN(
        \shifted_products[13][2] ) );
  OAI22D0 U168 ( .A1(n285), .A2(n76), .B1(n283), .B2(n78), .ZN(
        \shifted_products[12][2] ) );
  OAI22D0 U169 ( .A1(n30), .A2(n58), .B1(n229), .B2(n60), .ZN(
        \shifted_products[15][2] ) );
  OAI22D0 U170 ( .A1(n297), .A2(n64), .B1(n228), .B2(n66), .ZN(
        \shifted_products[14][2] ) );
  OAI22D0 U171 ( .A1(n307), .A2(n217), .B1(n9), .B2(n219), .ZN(
        \shifted_products[1][4] ) );
  OAI22D0 U172 ( .A1(n307), .A2(n218), .B1(n9), .B2(n220), .ZN(
        \shifted_products[1][3] ) );
  OAI22D0 U173 ( .A1(n318), .A2(n82), .B1(n5), .B2(n84), .ZN(
        \shifted_products[11][2] ) );
  NR2D0 U174 ( .A1(n224), .A2(n87), .ZN(\shifted_products[10][2] ) );
  OAI22D0 U175 ( .A1(n307), .A2(n126), .B1(n280), .B2(n128), .ZN(
        \shifted_products[3][4] ) );
  OAI22D0 U176 ( .A1(n222), .A2(n131), .B1(n282), .B2(n135), .ZN(
        \shifted_products[2][4] ) );
  OAI22D0 U177 ( .A1(n307), .A2(n128), .B1(n280), .B2(n130), .ZN(
        \shifted_products[3][2] ) );
  NR2D0 U178 ( .A1(n222), .A2(n133), .ZN(\shifted_products[2][2] ) );
  OAI22D0 U179 ( .A1(n318), .A2(n93), .B1(n230), .B2(n95), .ZN(
        \shifted_products[9][2] ) );
  NR2D0 U180 ( .A1(n223), .A2(n98), .ZN(\shifted_products[8][2] ) );
  OAI22D0 U181 ( .A1(n297), .A2(n110), .B1(n227), .B2(n112), .ZN(
        \shifted_products[6][2] ) );
  NR2D0 U182 ( .A1(n307), .A2(n220), .ZN(\shifted_products[1][1] ) );
  CKAN2D0 U183 ( .A1(n307), .A2(n306), .Z(n310) );
  CKND1 U184 ( .I(\products[5][4] ), .ZN(n114) );
  CKND1 U185 ( .I(\products[4][4] ), .ZN(n120) );
  CKND1 U186 ( .I(\products[4][3] ), .ZN(n121) );
  CKAN2D0 U187 ( .A1(n318), .A2(n306), .Z(n273) );
  CKND2D0 U188 ( .A1(n277), .A2(n301), .ZN(n251) );
  CKND2D0 U189 ( .A1(n246), .A2(n245), .ZN(n306) );
  CKND2D0 U190 ( .A1(n246), .A2(n242), .ZN(n301) );
  AOI22D0 U191 ( .A1(\products[7][2] ), .A2(n303), .B1(\products[7][4] ), .B2(
        n302), .ZN(n304) );
  AOI22D0 U192 ( .A1(\products[13][4] ), .A2(n255), .B1(\products[13][2] ), 
        .B2(n286), .ZN(n256) );
  OAI21D0 U193 ( .A1(n314), .A2(n76), .B(n254), .ZN(\shifted_products[12][8] )
         );
  AOI22D0 U194 ( .A1(\products[13][4] ), .A2(n286), .B1(\products[13][2] ), 
        .B2(n237), .ZN(n257) );
  OAI22D0 U195 ( .A1(n307), .A2(n219), .B1(n9), .B2(n221), .ZN(
        \shifted_products[1][2] ) );
  INVD1 U196 ( .I(n312), .ZN(n223) );
  INVD1 U197 ( .I(n293), .ZN(n222) );
  CKBD1 U198 ( .I(n305), .Z(n30) );
  CKBD1 U199 ( .I(n305), .Z(n29) );
  CKBD1 U200 ( .I(n305), .Z(n31) );
  INVD1 U201 ( .I(n316), .ZN(n230) );
  ND2D1 U202 ( .A1(n318), .A2(n5), .ZN(n264) );
  OAI22D1 U203 ( .A1(n290), .A2(n115), .B1(n289), .B2(n113), .ZN(
        \shifted_products[5][7] ) );
  ND2D1 U204 ( .A1(n228), .A2(n294), .ZN(n295) );
  INVD1 U205 ( .I(n255), .ZN(n226) );
  NR2D1 U206 ( .A1(n297), .A2(n66), .ZN(\shifted_products[14][0] ) );
  AOI222D0 U207 ( .A1(n38), .A2(\products[10][5] ), .B1(n38), .B2(
        \products[11][5] ), .C1(\products[10][5] ), .C2(\products[11][5] ), 
        .ZN(n21) );
  FA1D0 U208 ( .A(\shifted_products[10][1] ), .B(\shifted_products[11][1] ), 
        .CI(\add_9_root_add_199_I16/carry[1] ), .CO(
        \add_9_root_add_199_I16/carry[2] ), .S(N175) );
  FA1D0 U209 ( .A(\shifted_products[12][5] ), .B(\shifted_products[13][5] ), 
        .CI(\add_8_root_add_199_I16/carry[5] ), .CO(
        \add_8_root_add_199_I16/carry[6] ), .S(N206) );
  OAI222D0 U210 ( .A1(n232), .A2(n71), .B1(n226), .B2(n69), .C1(n29), .C2(n67), 
        .ZN(\shifted_products[13][5] ) );
  FA1D0 U211 ( .A(\shifted_products[4][5] ), .B(\shifted_products[5][5] ), 
        .CI(\add_12_root_add_199_I16/carry[5] ), .CO(
        \add_12_root_add_199_I16/carry[6] ), .S(N104) );
  OAI222D0 U212 ( .A1(n287), .A2(n115), .B1(n290), .B2(n117), .C1(n29), .C2(
        n113), .ZN(\shifted_products[5][5] ) );
  FA1D0 U213 ( .A(\shifted_products[4][3] ), .B(\shifted_products[5][3] ), 
        .CI(\add_12_root_add_199_I16/carry[3] ), .CO(
        \add_12_root_add_199_I16/carry[4] ), .S(N102) );
  FA1D0 U214 ( .A(\shifted_products[2][3] ), .B(\shifted_products[3][3] ), 
        .CI(\add_13_root_add_199_I16/carry[3] ), .CO(
        \add_13_root_add_199_I16/carry[4] ), .S(N79) );
  FA1D0 U215 ( .A(\shifted_products[10][3] ), .B(\shifted_products[11][3] ), 
        .CI(\add_9_root_add_199_I16/carry[3] ), .CO(
        \add_9_root_add_199_I16/carry[4] ), .S(N177) );
  FA1D0 U216 ( .A(\shifted_products[2][5] ), .B(\shifted_products[3][5] ), 
        .CI(\add_13_root_add_199_I16/carry[5] ), .CO(
        \add_13_root_add_199_I16/carry[6] ), .S(N81) );
  FA1D0 U217 ( .A(\shifted_products[10][9] ), .B(\shifted_products[11][9] ), 
        .CI(\add_9_root_add_199_I16/carry[9] ), .CO(
        \add_9_root_add_199_I16/carry[10] ), .S(N183) );
  OAI22D1 U219 ( .A1(n231), .A2(n81), .B1(n253), .B2(n79), .ZN(
        \shifted_products[11][9] ) );
  OAI21D1 U220 ( .A1(n27), .A2(n88), .B(n249), .ZN(\shifted_products[10][9] )
         );
  FA1D0 U221 ( .A(\shifted_products[6][3] ), .B(\shifted_products[7][3] ), 
        .CI(\add_11_root_add_199_I16/carry[3] ), .CO(
        \add_11_root_add_199_I16/carry[4] ), .S(N126) );
  FA1D0 U222 ( .A(\shifted_products[12][3] ), .B(\shifted_products[13][3] ), 
        .CI(\add_8_root_add_199_I16/carry[3] ), .CO(
        \add_8_root_add_199_I16/carry[4] ), .S(N204) );
  OAI22D1 U223 ( .A1(n297), .A2(n63), .B1(n228), .B2(n65), .ZN(
        \shifted_products[14][3] ) );
  FA1D0 U224 ( .A(\shifted_products[8][3] ), .B(\shifted_products[9][3] ), 
        .CI(\add_10_root_add_199_I16/carry[3] ), .CO(
        \add_10_root_add_199_I16/carry[4] ), .S(N151) );
  OAI21D1 U225 ( .A1(n275), .A2(n57), .B(n265), .ZN(\shifted_products[15][11] ) );
  OAI21D1 U226 ( .A1(n27), .A2(n65), .B(n259), .ZN(\shifted_products[14][11] )
         );
  OAI21D1 U227 ( .A1(n27), .A2(n63), .B(n259), .ZN(\shifted_products[14][13] )
         );
  FA1D0 U228 ( .A(\shifted_products[2][7] ), .B(\shifted_products[3][7] ), 
        .CI(\add_13_root_add_199_I16/carry[7] ), .CO(
        \add_13_root_add_199_I16/carry[8] ), .S(N83) );
  OAI21D1 U229 ( .A1(n282), .A2(n129), .B(n281), .ZN(\shifted_products[3][7] )
         );
  OAI21D1 U230 ( .A1(n282), .A2(n132), .B(n278), .ZN(\shifted_products[2][7] )
         );
  FA1D0 U231 ( .A(\shifted_products[10][11] ), .B(\shifted_products[11][11] ), 
        .CI(\add_9_root_add_199_I16/carry[11] ), .CO(
        \add_9_root_add_199_I16/carry[12] ), .S(N185) );
  OAI21D1 U232 ( .A1(n27), .A2(n83), .B(n250), .ZN(\shifted_products[11][11] )
         );
  OAI21D1 U233 ( .A1(n27), .A2(n86), .B(n249), .ZN(\shifted_products[10][11] )
         );
  FA1D0 U234 ( .A(\shifted_products[2][1] ), .B(\shifted_products[3][1] ), 
        .CI(\add_13_root_add_199_I16/carry[1] ), .CO(
        \add_13_root_add_199_I16/carry[2] ), .S(N77) );
  NR2D1 U235 ( .A1(n222), .A2(n134), .ZN(\shifted_products[2][1] ) );
  FA1D0 U236 ( .A(\shifted_products[6][1] ), .B(\shifted_products[7][1] ), 
        .CI(\add_11_root_add_199_I16/carry[1] ), .CO(
        \add_11_root_add_199_I16/carry[2] ), .S(N124) );
  NR2D1 U237 ( .A1(n297), .A2(n111), .ZN(\shifted_products[6][1] ) );
  FA1D0 U238 ( .A(\shifted_products[8][1] ), .B(\shifted_products[9][1] ), 
        .CI(\add_10_root_add_199_I16/carry[1] ), .CO(
        \add_10_root_add_199_I16/carry[2] ), .S(N149) );
  NR2D1 U240 ( .A1(n318), .A2(n94), .ZN(\shifted_products[9][1] ) );
  NR2D1 U241 ( .A1(n223), .A2(n99), .ZN(\shifted_products[8][1] ) );
  NR2D1 U242 ( .A1(n297), .A2(n65), .ZN(\shifted_products[14][1] ) );
  FA1D0 U243 ( .A(\shifted_products[4][1] ), .B(\shifted_products[5][1] ), 
        .CI(\add_12_root_add_199_I16/carry[1] ), .CO(
        \add_12_root_add_199_I16/carry[2] ), .S(N100) );
  NR2D1 U244 ( .A1(n285), .A2(n123), .ZN(\shifted_products[4][1] ) );
  FA1D0 U245 ( .A(\shifted_products[12][1] ), .B(\shifted_products[13][1] ), 
        .CI(\add_8_root_add_199_I16/carry[1] ), .CO(
        \add_8_root_add_199_I16/carry[2] ), .S(N202) );
  FA1D0 U246 ( .A(\products[0][5] ), .B(\shifted_products[1][5] ), .CI(
        \add_14_root_add_199_I16/carry[5] ), .CO(
        \add_14_root_add_199_I16/carry[6] ), .S(N59) );
  OAI22D1 U247 ( .A1(n307), .A2(n216), .B1(n9), .B2(n218), .ZN(
        \shifted_products[1][5] ) );
  NR2D1 U248 ( .A1(n297), .A2(n112), .ZN(\shifted_products[6][0] ) );
  INVD1 U249 ( .I(\products[4][5] ), .ZN(n119) );
  INVD1 U250 ( .I(\products[12][5] ), .ZN(n73) );
  INVD1 U251 ( .I(\products[1][5] ), .ZN(n216) );
  NR2D1 U252 ( .A1(n286), .A2(n315), .ZN(n290) );
  INVD1 U253 ( .I(n308), .ZN(n234) );
  OAI22D1 U254 ( .A1(n239), .A2(n69), .B1(n320), .B2(n67), .ZN(
        \shifted_products[13][11] ) );
  OAI22D1 U255 ( .A1(n239), .A2(n92), .B1(n320), .B2(n90), .ZN(
        \shifted_products[9][9] ) );
  OAI22D1 U256 ( .A1(n234), .A2(n103), .B1(n298), .B2(n101), .ZN(
        \shifted_products[7][11] ) );
  INVD1 U257 ( .I(\products[9][5] ), .ZN(n90) );
  INVD1 U258 ( .I(\products[14][5] ), .ZN(n61) );
  INVD1 U259 ( .I(\products[11][5] ), .ZN(n79) );
  OAI22D1 U260 ( .A1(n239), .A2(n68), .B1(n320), .B2(n67), .ZN(
        \shifted_products[13][12] ) );
  OAI22D1 U261 ( .A1(n239), .A2(n91), .B1(n320), .B2(n90), .ZN(
        \shifted_products[9][10] ) );
  ND2D1 U262 ( .A1(\products[14][5] ), .A2(n266), .ZN(n259) );
  ND2D1 U263 ( .A1(\products[10][5] ), .A2(n266), .ZN(n249) );
  ND2D1 U264 ( .A1(\products[15][5] ), .A2(n266), .ZN(n267) );
  ND2D1 U265 ( .A1(\products[11][5] ), .A2(n266), .ZN(n250) );
  INVD1 U266 ( .I(n260), .ZN(n228) );
  INVD1 U267 ( .I(n315), .ZN(n239) );
  OAI22D1 U268 ( .A1(n290), .A2(n114), .B1(n289), .B2(n113), .ZN(
        \shifted_products[5][8] ) );
  INVD1 U269 ( .I(n261), .ZN(n233) );
  OA22D0 U270 ( .A1(n234), .A2(n102), .B1(n298), .B2(n101), .Z(n24) );
  INVD1 U271 ( .I(\products[15][5] ), .ZN(n55) );
  INVD1 U272 ( .I(n269), .ZN(n229) );
  INVD1 U273 ( .I(n303), .ZN(n236) );
  INVD1 U274 ( .I(n302), .ZN(n225) );
  INVD1 U275 ( .I(n271), .ZN(n238) );
  INVD1 U276 ( .I(n286), .ZN(n232) );
  NR2D1 U277 ( .A1(n318), .A2(n95), .ZN(\shifted_products[9][0] ) );
  NR2D1 U278 ( .A1(n318), .A2(n84), .ZN(\shifted_products[11][0] ) );
  INVD1 U279 ( .I(\products[3][5] ), .ZN(n125) );
  OAI21D1 U280 ( .A1(n27), .A2(n81), .B(n250), .ZN(\shifted_products[11][13] )
         );
  OA21D1 U281 ( .A1(n27), .A2(n80), .B(n250), .Z(n26) );
  INVD1 U282 ( .I(n251), .ZN(n231) );
  ND2D1 U283 ( .A1(n291), .A2(n300), .ZN(n286) );
  INVD1 U284 ( .I(\products[13][3] ), .ZN(n69) );
  ND2D1 U285 ( .A1(n300), .A2(n306), .ZN(n279) );
  NR2D1 U286 ( .A1(n307), .A2(n221), .ZN(\shifted_products[1][0] ) );
  INVD1 U287 ( .I(\products[3][3] ), .ZN(n127) );
  FA1D0 U288 ( .A(\shifted_products[6][7] ), .B(\shifted_products[7][7] ), 
        .CI(\add_11_root_add_199_I16/carry[7] ), .CO(
        \add_11_root_add_199_I16/carry[8] ), .S(N130) );
  OAI222D0 U289 ( .A1(n236), .A2(n103), .B1(n310), .B2(n101), .C1(n105), .C2(
        n311), .ZN(\shifted_products[7][7] ) );
  OAI222D0 U290 ( .A1(n222), .A2(n107), .B1(n234), .B2(n111), .C1(n311), .C2(
        n109), .ZN(\shifted_products[6][7] ) );
  FA1D0 U291 ( .A(\shifted_products[8][7] ), .B(\shifted_products[9][7] ), 
        .CI(\add_10_root_add_199_I16/carry[7] ), .CO(
        \add_10_root_add_199_I16/carry[8] ), .S(N155) );
  OAI222D0 U292 ( .A1(n239), .A2(n94), .B1(n223), .B2(n90), .C1(n92), .C2(n319), .ZN(\shifted_products[9][7] ) );
  OAI222D0 U293 ( .A1(n29), .A2(n56), .B1(n229), .B2(n58), .C1(n60), .C2(n300), 
        .ZN(\shifted_products[15][4] ) );
  OAI222D0 U294 ( .A1(n297), .A2(n62), .B1(n228), .B2(n64), .C1(n311), .C2(n66), .ZN(\shifted_products[14][4] ) );
  OAI222D0 U295 ( .A1(n29), .A2(n55), .B1(n229), .B2(n57), .C1(n59), .C2(n300), 
        .ZN(\shifted_products[15][5] ) );
  OAI222D0 U296 ( .A1(n297), .A2(n61), .B1(n228), .B2(n63), .C1(n311), .C2(n65), .ZN(\shifted_products[14][5] ) );
  OAI222D0 U297 ( .A1(n238), .A2(n59), .B1(n273), .B2(n55), .C1(n57), .C2(n300), .ZN(\shifted_products[15][7] ) );
  OAI222D0 U298 ( .A1(n224), .A2(n61), .B1(n233), .B2(n65), .C1(n311), .C2(n63), .ZN(\shifted_products[14][7] ) );
  FA1D0 U299 ( .A(\shifted_products[8][4] ), .B(\shifted_products[9][4] ), 
        .CI(\add_10_root_add_199_I16/carry[4] ), .CO(
        \add_10_root_add_199_I16/carry[5] ), .S(N152) );
  OAI222D0 U300 ( .A1(n318), .A2(n91), .B1(n230), .B2(n93), .C1(n319), .C2(n95), .ZN(\shifted_products[9][4] ) );
  FA1D0 U301 ( .A(\shifted_products[10][4] ), .B(\shifted_products[11][4] ), 
        .CI(\add_9_root_add_199_I16/carry[4] ), .CO(
        \add_9_root_add_199_I16/carry[5] ), .S(N178) );
  OAI222D0 U302 ( .A1(n318), .A2(n80), .B1(n5), .B2(n82), .C1(n319), .C2(n84), 
        .ZN(\shifted_products[11][4] ) );
  FA1D0 U303 ( .A(\shifted_products[12][7] ), .B(\shifted_products[13][7] ), 
        .CI(\add_8_root_add_199_I16/carry[7] ), .CO(
        \add_8_root_add_199_I16/carry[8] ), .S(N208) );
  OAI222D0 U304 ( .A1(n232), .A2(n69), .B1(n258), .B2(n67), .C1(n319), .C2(n71), .ZN(\shifted_products[13][7] ) );
  FA1D0 U305 ( .A(\shifted_products[8][5] ), .B(\shifted_products[9][5] ), 
        .CI(\add_10_root_add_199_I16/carry[5] ), .CO(
        \add_10_root_add_199_I16/carry[6] ), .S(N153) );
  OAI222D0 U306 ( .A1(n318), .A2(n90), .B1(n230), .B2(n92), .C1(n319), .C2(n94), .ZN(\shifted_products[9][5] ) );
  FA1D0 U307 ( .A(\shifted_products[10][5] ), .B(\shifted_products[11][5] ), 
        .CI(\add_9_root_add_199_I16/carry[5] ), .CO(
        \add_9_root_add_199_I16/carry[6] ), .S(N179) );
  OAI222D0 U308 ( .A1(n318), .A2(n79), .B1(n5), .B2(n81), .C1(n319), .C2(n83), 
        .ZN(\shifted_products[11][5] ) );
  OAI21D1 U309 ( .A1(n248), .A2(n88), .B(n247), .ZN(\shifted_products[10][5] )
         );
  FA1D0 U310 ( .A(\shifted_products[6][9] ), .B(\shifted_products[7][9] ), 
        .CI(\add_11_root_add_199_I16/carry[9] ), .CO(
        \add_11_root_add_199_I16/carry[10] ), .S(N132) );
  OAI222D0 U311 ( .A1(n222), .A2(n101), .B1(n234), .B2(n105), .C1(n311), .C2(
        n103), .ZN(\shifted_products[7][9] ) );
  OAI22D1 U312 ( .A1(n234), .A2(n109), .B1(n298), .B2(n107), .ZN(
        \shifted_products[6][9] ) );
  FA1D0 U313 ( .A(\shifted_products[12][9] ), .B(\shifted_products[13][9] ), 
        .CI(\add_8_root_add_199_I16/carry[9] ), .CO(
        \add_8_root_add_199_I16/carry[10] ), .S(N210) );
  OAI222D0 U314 ( .A1(n239), .A2(n71), .B1(n223), .B2(n67), .C1(n319), .C2(n69), .ZN(\shifted_products[13][9] ) );
  FA1D0 U315 ( .A(\shifted_products[10][7] ), .B(\shifted_products[11][7] ), 
        .CI(\add_9_root_add_199_I16/carry[7] ), .CO(
        \add_9_root_add_199_I16/carry[8] ), .S(N181) );
  OAI21D1 U316 ( .A1(n248), .A2(n86), .B(n247), .ZN(\shifted_products[10][7] )
         );
  OAI222D0 U317 ( .A1(n224), .A2(n79), .B1(n231), .B2(n83), .C1(n319), .C2(n81), .ZN(\shifted_products[11][7] ) );
  FA1D0 U318 ( .A(\shifted_products[10][8] ), .B(\shifted_products[11][8] ), 
        .CI(\add_9_root_add_199_I16/carry[8] ), .CO(
        \add_9_root_add_199_I16/carry[9] ), .S(N182) );
  OAI222D0 U319 ( .A1(n224), .A2(n79), .B1(n231), .B2(n82), .C1(n319), .C2(n80), .ZN(\shifted_products[11][8] ) );
  OAI221D0 U320 ( .A1(n248), .A2(n85), .B1(n28), .B2(n89), .C(n247), .ZN(
        \shifted_products[10][8] ) );
  FA1D0 U321 ( .A(\shifted_products[10][10] ), .B(\shifted_products[11][10] ), 
        .CI(\add_9_root_add_199_I16/carry[10] ), .CO(
        \add_9_root_add_199_I16/carry[11] ), .S(N184) );
  OAI222D0 U322 ( .A1(n231), .A2(n80), .B1(n253), .B2(n79), .C1(n27), .C2(n84), 
        .ZN(\shifted_products[11][10] ) );
  OAI21D1 U323 ( .A1(n27), .A2(n87), .B(n249), .ZN(\shifted_products[10][10] )
         );
  FA1D0 U324 ( .A(\shifted_products[12][4] ), .B(\shifted_products[13][4] ), 
        .CI(\add_8_root_add_199_I16/carry[4] ), .CO(
        \add_8_root_add_199_I16/carry[5] ), .S(N205) );
  OAI222D0 U325 ( .A1(n232), .A2(n72), .B1(n226), .B2(n70), .C1(n29), .C2(n68), 
        .ZN(\shifted_products[13][4] ) );
  FA1D0 U326 ( .A(\shifted_products[6][5] ), .B(\shifted_products[7][5] ), 
        .CI(\add_11_root_add_199_I16/carry[5] ), .CO(
        \add_11_root_add_199_I16/carry[6] ), .S(N128) );
  OAI222D0 U327 ( .A1(n297), .A2(n107), .B1(n227), .B2(n109), .C1(n311), .C2(
        n111), .ZN(\shifted_products[6][5] ) );
  OAI222D0 U328 ( .A1(n225), .A2(n103), .B1(n236), .B2(n105), .C1(n101), .C2(
        n30), .ZN(\shifted_products[7][5] ) );
  OAI222D0 U329 ( .A1(n282), .A2(n130), .B1(n280), .B2(n126), .C1(n307), .C2(
        n125), .ZN(\shifted_products[3][6] ) );
  FA1D0 U330 ( .A(\shifted_products[4][4] ), .B(\shifted_products[5][4] ), 
        .CI(\add_12_root_add_199_I16/carry[4] ), .CO(
        \add_12_root_add_199_I16/carry[5] ), .S(N103) );
  OAI222D0 U331 ( .A1(n287), .A2(n116), .B1(n290), .B2(n118), .C1(n29), .C2(
        n114), .ZN(\shifted_products[5][4] ) );
  FA1D0 U332 ( .A(\shifted_products[6][4] ), .B(\shifted_products[7][4] ), 
        .CI(\add_11_root_add_199_I16/carry[4] ), .CO(
        \add_11_root_add_199_I16/carry[5] ), .S(N127) );
  OAI222D0 U333 ( .A1(n297), .A2(n108), .B1(n227), .B2(n110), .C1(n311), .C2(
        n112), .ZN(\shifted_products[6][4] ) );
  OAI222D0 U334 ( .A1(n225), .A2(n104), .B1(n236), .B2(n106), .C1(n102), .C2(
        n30), .ZN(\shifted_products[7][4] ) );
  FA1D0 U335 ( .A(\shifted_products[8][6] ), .B(\shifted_products[9][6] ), 
        .CI(\add_10_root_add_199_I16/carry[6] ), .CO(
        \add_10_root_add_199_I16/carry[7] ), .S(N154) );
  OAI221D0 U336 ( .A1(n318), .A2(n90), .B1(n93), .B2(n319), .C(n317), .ZN(
        \shifted_products[9][6] ) );
  OAI221D0 U337 ( .A1(n29), .A2(n55), .B1(n58), .B2(n300), .C(n270), .ZN(
        \shifted_products[15][6] ) );
  OAI221D0 U338 ( .A1(n297), .A2(n61), .B1(n311), .B2(n64), .C(n262), .ZN(
        \shifted_products[14][6] ) );
  FA1D0 U339 ( .A(\shifted_products[10][6] ), .B(\shifted_products[11][6] ), 
        .CI(\add_9_root_add_199_I16/carry[6] ), .CO(
        \add_9_root_add_199_I16/carry[7] ), .S(N180) );
  OAI221D0 U340 ( .A1(n318), .A2(n79), .B1(n319), .B2(n82), .C(n252), .ZN(
        \shifted_products[11][6] ) );
  OAI21D1 U341 ( .A1(n248), .A2(n87), .B(n247), .ZN(\shifted_products[10][6] )
         );
  OAI22D1 U342 ( .A1(n233), .A2(n63), .B1(n263), .B2(n61), .ZN(
        \shifted_products[14][9] ) );
  OAI221D0 U343 ( .A1(n275), .A2(n59), .B1(n238), .B2(n57), .C(n274), .ZN(
        \shifted_products[15][9] ) );
  OAI221D0 U344 ( .A1(n275), .A2(n58), .B1(n238), .B2(n56), .C(n274), .ZN(
        \shifted_products[15][10] ) );
  OAI222D0 U345 ( .A1(n233), .A2(n62), .B1(n263), .B2(n61), .C1(n27), .C2(n66), 
        .ZN(\shifted_products[14][10] ) );
  FA1D0 U346 ( .A(\shifted_products[6][8] ), .B(\shifted_products[7][8] ), 
        .CI(\add_11_root_add_199_I16/carry[8] ), .CO(
        \add_11_root_add_199_I16/carry[9] ), .S(N131) );
  OAI221D0 U347 ( .A1(n310), .A2(n101), .B1(n236), .B2(n102), .C(n309), .ZN(
        \shifted_products[7][8] ) );
  OAI222D0 U348 ( .A1(n222), .A2(n107), .B1(n234), .B2(n110), .C1(n311), .C2(
        n108), .ZN(\shifted_products[6][8] ) );
  OAI221D0 U349 ( .A1(n275), .A2(n56), .B1(n60), .B2(n28), .C(n265), .ZN(
        \shifted_products[15][12] ) );
  OAI21D1 U350 ( .A1(n27), .A2(n64), .B(n259), .ZN(\shifted_products[14][12] )
         );
  FA1D0 U351 ( .A(\shifted_products[4][2] ), .B(\shifted_products[5][2] ), 
        .CI(\add_12_root_add_199_I16/carry[2] ), .CO(
        \add_12_root_add_199_I16/carry[3] ), .S(N101) );
  FA1D0 U352 ( .A(\shifted_products[2][2] ), .B(\shifted_products[3][2] ), 
        .CI(\add_13_root_add_199_I16/carry[2] ), .CO(
        \add_13_root_add_199_I16/carry[3] ), .S(N78) );
  FA1D0 U353 ( .A(\shifted_products[10][2] ), .B(\shifted_products[11][2] ), 
        .CI(\add_9_root_add_199_I16/carry[2] ), .CO(
        \add_9_root_add_199_I16/carry[3] ), .S(N176) );
  FA1D0 U354 ( .A(\shifted_products[2][4] ), .B(\shifted_products[3][4] ), 
        .CI(\add_13_root_add_199_I16/carry[4] ), .CO(
        \add_13_root_add_199_I16/carry[5] ), .S(N80) );
  FA1D0 U355 ( .A(\shifted_products[6][2] ), .B(\shifted_products[7][2] ), 
        .CI(\add_11_root_add_199_I16/carry[2] ), .CO(
        \add_11_root_add_199_I16/carry[3] ), .S(N125) );
  OAI22D1 U356 ( .A1(n104), .A2(n29), .B1(n225), .B2(n106), .ZN(
        \shifted_products[7][2] ) );
  FA1D0 U357 ( .A(\shifted_products[12][2] ), .B(\shifted_products[13][2] ), 
        .CI(\add_8_root_add_199_I16/carry[2] ), .CO(
        \add_8_root_add_199_I16/carry[3] ), .S(N203) );
  FA1D0 U358 ( .A(\shifted_products[8][2] ), .B(\shifted_products[9][2] ), 
        .CI(\add_10_root_add_199_I16/carry[2] ), .CO(
        \add_10_root_add_199_I16/carry[3] ), .S(N150) );
  FA1D0 U359 ( .A(\products[0][3] ), .B(\shifted_products[1][3] ), .CI(
        \add_14_root_add_199_I16/carry[3] ), .CO(
        \add_14_root_add_199_I16/carry[4] ), .S(N57) );
  FA1D0 U360 ( .A(\products[0][4] ), .B(\shifted_products[1][4] ), .CI(
        \add_14_root_add_199_I16/carry[4] ), .CO(
        \add_14_root_add_199_I16/carry[5] ), .S(N58) );
  FA1D0 U361 ( .A(\products[0][1] ), .B(\shifted_products[1][1] ), .CI(
        \add_14_root_add_199_I16/carry[1] ), .CO(
        \add_14_root_add_199_I16/carry[2] ), .S(N55) );
  INVD1 U362 ( .I(\products[12][4] ), .ZN(n74) );
  INVD1 U363 ( .I(\products[3][4] ), .ZN(n126) );
  OAI222D0 U364 ( .A1(n222), .A2(n101), .B1(n234), .B2(n104), .C1(n311), .C2(
        n102), .ZN(\shifted_products[7][10] ) );
  OAI22D1 U365 ( .A1(n234), .A2(n108), .B1(n298), .B2(n107), .ZN(
        \shifted_products[6][10] ) );
  OAI21D1 U366 ( .A1(n58), .A2(n28), .B(n267), .ZN(\shifted_products[15][14] )
         );
  OAI21D1 U367 ( .A1(n28), .A2(n62), .B(n259), .ZN(\shifted_products[14][14] )
         );
  FA1D0 U368 ( .A(\shifted_products[10][12] ), .B(\shifted_products[11][12] ), 
        .CI(\add_9_root_add_199_I16/carry[12] ), .CO(
        \add_9_root_add_199_I16/carry[13] ), .S(N186) );
  OAI21D1 U369 ( .A1(n27), .A2(n82), .B(n250), .ZN(\shifted_products[11][12] )
         );
  OAI21D1 U370 ( .A1(n27), .A2(n85), .B(n249), .ZN(\shifted_products[10][12] )
         );
  OAI21D1 U371 ( .A1(n314), .A2(n74), .B(n254), .ZN(\shifted_products[12][10] ) );
  OAI222D0 U372 ( .A1(n239), .A2(n70), .B1(n223), .B2(n67), .C1(n319), .C2(n68), .ZN(\shifted_products[13][10] ) );
  FA1D0 U373 ( .A(\shifted_products[8][8] ), .B(\shifted_products[9][8] ), 
        .CI(\add_10_root_add_199_I16/carry[8] ), .CO(
        \add_10_root_add_199_I16/carry[9] ), .S(N156) );
  OAI21D1 U374 ( .A1(n314), .A2(n96), .B(n313), .ZN(\shifted_products[8][8] )
         );
  OAI222D0 U375 ( .A1(n239), .A2(n93), .B1(n223), .B2(n90), .C1(n319), .C2(n91), .ZN(\shifted_products[9][8] ) );
  FA1D0 U376 ( .A(\shifted_products[4][6] ), .B(\shifted_products[5][6] ), 
        .CI(\add_12_root_add_199_I16/carry[6] ), .CO(
        \add_12_root_add_199_I16/carry[7] ), .S(N105) );
  OAI22D1 U377 ( .A1(n285), .A2(n119), .B1(n284), .B2(n120), .ZN(
        \shifted_products[4][6] ) );
  OAI222D0 U378 ( .A1(n287), .A2(n114), .B1(n290), .B2(n116), .C1(n29), .C2(
        n113), .ZN(\shifted_products[5][6] ) );
  NR2D1 U379 ( .A1(n30), .A2(n118), .ZN(\shifted_products[5][0] ) );
  INVD1 U380 ( .I(\products[1][4] ), .ZN(n217) );
  INVD1 U381 ( .I(\products[1][3] ), .ZN(n218) );
  INVD1 U382 ( .I(\products[2][4] ), .ZN(n131) );
  INVD1 U383 ( .I(\products[2][3] ), .ZN(n132) );
  CKBD1 U384 ( .I(n292), .Z(n28) );
  INVD1 U385 ( .I(\products[15][3] ), .ZN(n57) );
  AOI22D1 U386 ( .A1(\products[14][0] ), .A2(n261), .B1(\products[14][4] ), 
        .B2(n260), .ZN(n262) );
  INVD1 U387 ( .I(\products[14][3] ), .ZN(n63) );
  INVD1 U388 ( .I(\products[11][3] ), .ZN(n81) );
  INVD1 U389 ( .I(\products[7][3] ), .ZN(n103) );
  INVD1 U390 ( .I(\products[9][3] ), .ZN(n92) );
  INVD1 U391 ( .I(\products[11][4] ), .ZN(n80) );
  ND2D1 U392 ( .A1(n300), .A2(n268), .ZN(n260) );
  ND2D1 U393 ( .A1(n268), .A2(n306), .ZN(n269) );
  ND2D1 U394 ( .A1(n301), .A2(n300), .ZN(n303) );
  INVD1 U395 ( .I(\products[9][4] ), .ZN(n91) );
  INVD1 U396 ( .I(\products[10][4] ), .ZN(n85) );
  INVD1 U397 ( .I(\products[10][3] ), .ZN(n86) );
  INVD1 U398 ( .I(\products[8][4] ), .ZN(n96) );
  INVD1 U399 ( .I(\products[8][3] ), .ZN(n97) );
  CKBD1 U400 ( .I(n292), .Z(n27) );
  INVD1 U401 ( .I(\products[15][1] ), .ZN(n59) );
  INVD1 U402 ( .I(\products[7][1] ), .ZN(n105) );
  INVD1 U403 ( .I(\products[14][1] ), .ZN(n65) );
  INVD1 U404 ( .I(\products[13][1] ), .ZN(n71) );
  INVD1 U405 ( .I(\products[6][1] ), .ZN(n111) );
  INVD1 U406 ( .I(\products[5][1] ), .ZN(n117) );
  INVD1 U407 ( .I(\products[12][1] ), .ZN(n77) );
  INVD1 U408 ( .I(\products[3][1] ), .ZN(n129) );
  INVD1 U409 ( .I(\products[4][1] ), .ZN(n123) );
  INVD1 U410 ( .I(\products[1][1] ), .ZN(n220) );
  INVD1 U411 ( .I(\products[2][1] ), .ZN(n134) );
  INVD1 U412 ( .I(\products[15][0] ), .ZN(n60) );
  INVD1 U413 ( .I(\products[14][0] ), .ZN(n66) );
  INVD1 U414 ( .I(\products[11][0] ), .ZN(n84) );
  INVD1 U415 ( .I(\products[7][0] ), .ZN(n106) );
  INVD1 U416 ( .I(\products[6][0] ), .ZN(n112) );
  INVD1 U417 ( .I(\products[9][0] ), .ZN(n95) );
  INVD1 U418 ( .I(\products[11][1] ), .ZN(n83) );
  INVD1 U419 ( .I(\products[9][1] ), .ZN(n94) );
  INVD1 U420 ( .I(\products[10][1] ), .ZN(n88) );
  INVD1 U421 ( .I(\products[8][1] ), .ZN(n99) );
  INVD1 U422 ( .I(\products[13][2] ), .ZN(n70) );
  INVD1 U423 ( .I(\products[12][2] ), .ZN(n76) );
  FA1D0 U424 ( .A(\shifted_products[6][6] ), .B(\shifted_products[7][6] ), 
        .CI(\add_11_root_add_199_I16/carry[6] ), .CO(
        \add_11_root_add_199_I16/carry[7] ), .S(N129) );
  OAI221D0 U425 ( .A1(n101), .A2(n29), .B1(n311), .B2(n106), .C(n304), .ZN(
        \shifted_products[7][6] ) );
  OAI221D0 U426 ( .A1(n297), .A2(n107), .B1(n311), .B2(n110), .C(n296), .ZN(
        \shifted_products[6][6] ) );
  FA1D0 U427 ( .A(\shifted_products[12][6] ), .B(\shifted_products[13][6] ), 
        .CI(\add_8_root_add_199_I16/carry[6] ), .CO(
        \add_8_root_add_199_I16/carry[7] ), .S(N207) );
  OAI222D0 U428 ( .A1(n285), .A2(n73), .B1(n283), .B2(n74), .C1(n314), .C2(n78), .ZN(\shifted_products[12][6] ) );
  OAI221D0 U429 ( .A1(n29), .A2(n67), .B1(n319), .B2(n72), .C(n256), .ZN(
        \shifted_products[13][6] ) );
  OAI221D0 U430 ( .A1(n273), .A2(n55), .B1(n275), .B2(n60), .C(n272), .ZN(
        \shifted_products[15][8] ) );
  OAI222D0 U431 ( .A1(n224), .A2(n61), .B1(n233), .B2(n64), .C1(n311), .C2(n62), .ZN(\shifted_products[14][8] ) );
  FA1D0 U432 ( .A(\shifted_products[12][8] ), .B(\shifted_products[13][8] ), 
        .CI(\add_8_root_add_199_I16/carry[8] ), .CO(
        \add_8_root_add_199_I16/carry[9] ), .S(N209) );
  OAI221D0 U433 ( .A1(n258), .A2(n67), .B1(n239), .B2(n72), .C(n257), .ZN(
        \shifted_products[13][8] ) );
  FA1D0 U434 ( .A(\products[0][2] ), .B(\shifted_products[1][2] ), .CI(
        \add_14_root_add_199_I16/carry[2] ), .CO(
        \add_14_root_add_199_I16/carry[3] ), .S(N56) );
  INVD1 U435 ( .I(\products[5][2] ), .ZN(n116) );
  INVD1 U436 ( .I(\products[4][2] ), .ZN(n122) );
  INVD1 U437 ( .I(\products[1][2] ), .ZN(n219) );
  INVD1 U438 ( .I(\products[15][2] ), .ZN(n58) );
  INVD1 U439 ( .I(\products[14][2] ), .ZN(n64) );
  INVD1 U440 ( .I(\products[11][2] ), .ZN(n82) );
  INVD1 U441 ( .I(\products[6][2] ), .ZN(n110) );
  INVD1 U442 ( .I(\products[9][2] ), .ZN(n93) );
  INVD1 U443 ( .I(\products[7][2] ), .ZN(n104) );
  INVD1 U444 ( .I(\products[3][2] ), .ZN(n128) );
  INVD1 U445 ( .I(\products[10][2] ), .ZN(n87) );
  INVD1 U446 ( .I(\products[2][2] ), .ZN(n133) );
  INVD1 U447 ( .I(\products[8][2] ), .ZN(n98) );
  INVD1 U448 ( .I(\products[13][0] ), .ZN(n72) );
  INVD1 U449 ( .I(\products[10][0] ), .ZN(n89) );
  INVD1 U450 ( .I(\products[3][0] ), .ZN(n130) );
  INVD1 U451 ( .I(\products[5][0] ), .ZN(n118) );
  INVD1 U452 ( .I(\products[12][0] ), .ZN(n78) );
  INVD1 U453 ( .I(\products[4][0] ), .ZN(n124) );
  INVD1 U454 ( .I(\products[1][0] ), .ZN(n221) );
  INVD1 U455 ( .I(\products[2][0] ), .ZN(n135) );
  INVD1 U456 ( .I(\products[8][0] ), .ZN(n100) );
  INR3D0 U457 ( .A1(input_bitwidth[2]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[1]), .ZN(n242) );
  INR3D0 U458 ( .A1(weight_bitwidth[0]), .B1(weight_bitwidth[1]), .B2(
        weight_bitwidth[2]), .ZN(n241) );
  INR3D0 U459 ( .A1(input_bitwidth[0]), .B1(input_bitwidth[1]), .B2(
        input_bitwidth[2]), .ZN(n245) );
  INR3D0 U460 ( .A1(input_bitwidth[1]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[2]), .ZN(n244) );
  INR3D0 U461 ( .A1(weight_bitwidth[1]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[2]), .ZN(n246) );
  INR3D0 U462 ( .A1(weight_bitwidth[2]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[1]), .ZN(n243) );
  TIEL U463 ( .ZN(n240) );
  AN2D0 U464 ( .A1(\products[0][0] ), .A2(\shifted_products[1][0] ), .Z(
        \add_14_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U465 ( .A1(\shifted_products[1][0] ), .A2(\products[0][0] ), .Z(N54) );
  AN2D0 U466 ( .A1(\shifted_products[2][0] ), .A2(\shifted_products[3][0] ), 
        .Z(\add_13_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U467 ( .A1(\shifted_products[3][0] ), .A2(\shifted_products[2][0] ), 
        .Z(N76) );
  AN2D0 U468 ( .A1(\shifted_products[12][0] ), .A2(\shifted_products[13][0] ), 
        .Z(\add_8_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U469 ( .A1(\shifted_products[13][0] ), .A2(
        \shifted_products[12][0] ), .Z(N201) );
  AN2D0 U470 ( .A1(\shifted_products[6][0] ), .A2(\shifted_products[7][0] ), 
        .Z(\add_11_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U471 ( .A1(\shifted_products[7][0] ), .A2(\shifted_products[6][0] ), 
        .Z(N123) );
  AN2D0 U472 ( .A1(\shifted_products[4][0] ), .A2(\shifted_products[5][0] ), 
        .Z(\add_12_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U473 ( .A1(\shifted_products[5][0] ), .A2(\shifted_products[4][0] ), 
        .Z(N99) );
  AN2D0 U474 ( .A1(\shifted_products[8][0] ), .A2(\shifted_products[9][0] ), 
        .Z(\add_10_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U475 ( .A1(\shifted_products[9][0] ), .A2(\shifted_products[8][0] ), 
        .Z(N148) );
  AN2D0 U476 ( .A1(\shifted_products[10][0] ), .A2(\shifted_products[11][0] ), 
        .Z(\add_9_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U477 ( .A1(\shifted_products[11][0] ), .A2(
        \shifted_products[10][0] ), .Z(N174) );
  XOR3D0 U478 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[13][11] ), .A3(\products[12][5] ), .Z(N212) );
  XOR3D0 U479 ( .A1(\shifted_products[13][12] ), .A2(n32), .A3(n73), .Z(N213)
         );
  XOR3D0 U480 ( .A1(\products[13][5] ), .A2(\products[12][5] ), .A3(n33), .Z(
        N214) );
  CKND0 U481 ( .I(\shifted_products[13][12] ), .ZN(n35) );
  XNR3D0 U482 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \shifted_products[11][13] ), .A3(n36), .ZN(N187) );
  XNR3D0 U483 ( .A1(n26), .A2(n37), .A3(n36), .ZN(N188) );
  XNR3D0 U484 ( .A1(\products[11][5] ), .A2(n36), .A3(n38), .ZN(N189) );
  OAI222D0 U485 ( .A1(n37), .A2(n36), .B1(n37), .B2(n26), .C1(n36), .C2(n26), 
        .ZN(n38) );
  CKND0 U486 ( .I(\products[10][5] ), .ZN(n36) );
  XOR3D0 U487 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[9][9] ), .A3(\products[8][5] ), .Z(N157) );
  XOR3D0 U488 ( .A1(\shifted_products[9][10] ), .A2(n39), .A3(n40), .Z(N158)
         );
  XOR3D0 U489 ( .A1(\products[9][5] ), .A2(\products[8][5] ), .A3(n41), .Z(
        N159) );
  CKND0 U490 ( .I(\shifted_products[9][10] ), .ZN(n43) );
  CKND0 U491 ( .I(\products[8][5] ), .ZN(n40) );
  XNR3D0 U492 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[7][11] ), .A3(n107), .ZN(N134) );
  XNR3D0 U493 ( .A1(n24), .A2(n44), .A3(n107), .ZN(N135) );
  XNR3D0 U494 ( .A1(\products[7][5] ), .A2(n107), .A3(n45), .ZN(N136) );
  XOR3D0 U495 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(
        \shifted_products[5][7] ), .A3(\products[4][5] ), .Z(N106) );
  XOR3D0 U496 ( .A1(\shifted_products[5][8] ), .A2(n46), .A3(n119), .Z(N107)
         );
  XOR3D0 U497 ( .A1(\products[5][5] ), .A2(\products[4][5] ), .A3(n47), .Z(
        N108) );
  CKND0 U498 ( .I(\shifted_products[5][8] ), .ZN(n49) );
  XNR3D0 U499 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .A3(n50), .ZN(N85) );
  XNR3D0 U500 ( .A1(\products[3][5] ), .A2(n50), .A3(n52), .ZN(N87) );
  CKND0 U501 ( .I(\products[2][5] ), .ZN(n50) );
  XNR3D0 U502 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[1][6] ), .A3(n53), .ZN(N60) );
  XNR3D0 U503 ( .A1(n216), .A2(n54), .A3(n53), .ZN(N61) );
  CKND0 U504 ( .I(\shifted_products[0][9] ), .ZN(n53) );
endmodule


module fusion_unit_14_DW01_add_0_DW01_add_18 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  CKAN2D0 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D0 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module fusion_unit_14 ( clk, nRST, input_bitwidth, weight_bitwidth, input_sign, 
        weight_sign, input_forward, weight, psum_in, psum, input_to_right );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  input [3:0] input_sign;
  input [3:0] weight_sign;
  input [31:0] input_forward;
  input [31:0] weight;
  input [31:0] psum_in;
  output [31:0] psum;
  output [31:0] input_to_right;
  input clk, nRST;
  wire   \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] , n1;
  wire   [31:0] shift_add_out;
  assign input_to_right[31] = input_forward[31];
  assign input_to_right[30] = input_forward[30];
  assign input_to_right[29] = input_forward[29];
  assign input_to_right[28] = input_forward[28];
  assign input_to_right[27] = input_forward[27];
  assign input_to_right[26] = input_forward[26];
  assign input_to_right[25] = input_forward[25];
  assign input_to_right[24] = input_forward[24];
  assign input_to_right[23] = input_forward[23];
  assign input_to_right[22] = input_forward[22];
  assign input_to_right[21] = input_forward[21];
  assign input_to_right[20] = input_forward[20];
  assign input_to_right[19] = input_forward[19];
  assign input_to_right[18] = input_forward[18];
  assign input_to_right[17] = input_forward[17];
  assign input_to_right[16] = input_forward[16];
  assign input_to_right[15] = input_forward[15];
  assign input_to_right[14] = input_forward[14];
  assign input_to_right[13] = input_forward[13];
  assign input_to_right[12] = input_forward[12];
  assign input_to_right[11] = input_forward[11];
  assign input_to_right[10] = input_forward[10];
  assign input_to_right[9] = input_forward[9];
  assign input_to_right[8] = input_forward[8];
  assign input_to_right[7] = input_forward[7];
  assign input_to_right[6] = input_forward[6];
  assign input_to_right[5] = input_forward[5];
  assign input_to_right[4] = input_forward[4];
  assign input_to_right[3] = input_forward[3];
  assign input_to_right[2] = input_forward[2];
  assign input_to_right[1] = input_forward[1];
  assign input_to_right[0] = input_forward[0];

  bit_brick_239 \genblk1[0].BB  ( .x(input_forward[1:0]), .y(weight[1:0]), 
        .sx(input_sign[0]), .sy(weight_sign[0]), .product({\products[0][5] , 
        \products[0][4] , \products[0][3] , \products[0][2] , \products[0][1] , 
        \products[0][0] }) );
  bit_brick_238 \genblk1[1].BB  ( .x(input_forward[3:2]), .y(weight[3:2]), 
        .sx(input_sign[0]), .sy(weight_sign[1]), .product({\products[1][5] , 
        \products[1][4] , \products[1][3] , \products[1][2] , \products[1][1] , 
        \products[1][0] }) );
  bit_brick_237 \genblk1[2].BB  ( .x(input_forward[5:4]), .y(weight[5:4]), 
        .sx(input_sign[0]), .sy(weight_sign[2]), .product({\products[2][5] , 
        \products[2][4] , \products[2][3] , \products[2][2] , \products[2][1] , 
        \products[2][0] }) );
  bit_brick_236 \genblk1[3].BB  ( .x(input_forward[7:6]), .y(weight[7:6]), 
        .sx(input_sign[0]), .sy(weight_sign[3]), .product({\products[3][5] , 
        \products[3][4] , \products[3][3] , \products[3][2] , \products[3][1] , 
        \products[3][0] }) );
  bit_brick_235 \genblk1[4].BB  ( .x(input_forward[9:8]), .y(weight[9:8]), 
        .sx(input_sign[1]), .sy(weight_sign[0]), .product({\products[4][5] , 
        \products[4][4] , \products[4][3] , \products[4][2] , \products[4][1] , 
        \products[4][0] }) );
  bit_brick_234 \genblk1[5].BB  ( .x(input_forward[11:10]), .y(weight[11:10]), 
        .sx(input_sign[1]), .sy(weight_sign[1]), .product({\products[5][5] , 
        \products[5][4] , \products[5][3] , \products[5][2] , \products[5][1] , 
        \products[5][0] }) );
  bit_brick_233 \genblk1[6].BB  ( .x(input_forward[13:12]), .y(weight[13:12]), 
        .sx(input_sign[1]), .sy(weight_sign[2]), .product({\products[6][5] , 
        \products[6][4] , \products[6][3] , \products[6][2] , \products[6][1] , 
        \products[6][0] }) );
  bit_brick_232 \genblk1[7].BB  ( .x(input_forward[15:14]), .y(weight[15:14]), 
        .sx(input_sign[1]), .sy(weight_sign[3]), .product({\products[7][5] , 
        \products[7][4] , \products[7][3] , \products[7][2] , \products[7][1] , 
        \products[7][0] }) );
  bit_brick_231 \genblk1[8].BB  ( .x(input_forward[17:16]), .y(weight[17:16]), 
        .sx(input_sign[2]), .sy(weight_sign[0]), .product({\products[8][5] , 
        \products[8][4] , \products[8][3] , \products[8][2] , \products[8][1] , 
        \products[8][0] }) );
  bit_brick_230 \genblk1[9].BB  ( .x(input_forward[19:18]), .y(weight[19:18]), 
        .sx(input_sign[2]), .sy(weight_sign[1]), .product({\products[9][5] , 
        \products[9][4] , \products[9][3] , \products[9][2] , \products[9][1] , 
        \products[9][0] }) );
  bit_brick_229 \genblk1[10].BB  ( .x(input_forward[21:20]), .y(weight[21:20]), 
        .sx(input_sign[2]), .sy(weight_sign[2]), .product({\products[10][5] , 
        \products[10][4] , \products[10][3] , \products[10][2] , 
        \products[10][1] , \products[10][0] }) );
  bit_brick_228 \genblk1[11].BB  ( .x(input_forward[23:22]), .y(weight[23:22]), 
        .sx(input_sign[2]), .sy(weight_sign[3]), .product({\products[11][5] , 
        \products[11][4] , \products[11][3] , \products[11][2] , 
        \products[11][1] , \products[11][0] }) );
  bit_brick_227 \genblk1[12].BB  ( .x(input_forward[25:24]), .y(weight[25:24]), 
        .sx(input_sign[3]), .sy(weight_sign[0]), .product({\products[12][5] , 
        \products[12][4] , \products[12][3] , \products[12][2] , 
        \products[12][1] , \products[12][0] }) );
  bit_brick_226 \genblk1[13].BB  ( .x(input_forward[27:26]), .y(weight[27:26]), 
        .sx(input_sign[3]), .sy(weight_sign[1]), .product({\products[13][5] , 
        \products[13][4] , \products[13][3] , \products[13][2] , 
        \products[13][1] , \products[13][0] }) );
  bit_brick_225 \genblk1[14].BB  ( .x(input_forward[29:28]), .y(weight[29:28]), 
        .sx(input_sign[3]), .sy(weight_sign[2]), .product({\products[14][5] , 
        \products[14][4] , \products[14][3] , \products[14][2] , 
        \products[14][1] , \products[14][0] }) );
  bit_brick_224 \genblk1[15].BB  ( .x(input_forward[31:30]), .y(weight[31:30]), 
        .sx(input_sign[3]), .sy(weight_sign[3]), .product({\products[15][5] , 
        \products[15][4] , \products[15][3] , \products[15][2] , 
        \products[15][1] , \products[15][0] }) );
  shift_add_14 shift_add ( .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .products({\products[15][5] , \products[15][4] , 
        \products[15][3] , \products[15][2] , \products[15][1] , 
        \products[15][0] , \products[14][5] , \products[14][4] , 
        \products[14][3] , \products[14][2] , \products[14][1] , 
        \products[14][0] , \products[13][5] , \products[13][4] , 
        \products[13][3] , \products[13][2] , \products[13][1] , 
        \products[13][0] , \products[12][5] , \products[12][4] , 
        \products[12][3] , \products[12][2] , \products[12][1] , 
        \products[12][0] , \products[11][5] , \products[11][4] , 
        \products[11][3] , \products[11][2] , \products[11][1] , 
        \products[11][0] , \products[10][5] , \products[10][4] , 
        \products[10][3] , \products[10][2] , \products[10][1] , 
        \products[10][0] , \products[9][5] , \products[9][4] , 
        \products[9][3] , \products[9][2] , \products[9][1] , \products[9][0] , 
        \products[8][5] , \products[8][4] , \products[8][3] , \products[8][2] , 
        \products[8][1] , \products[8][0] , \products[7][5] , \products[7][4] , 
        \products[7][3] , \products[7][2] , \products[7][1] , \products[7][0] , 
        \products[6][5] , \products[6][4] , \products[6][3] , \products[6][2] , 
        \products[6][1] , \products[6][0] , \products[5][5] , \products[5][4] , 
        \products[5][3] , \products[5][2] , \products[5][1] , \products[5][0] , 
        \products[4][5] , \products[4][4] , \products[4][3] , \products[4][2] , 
        \products[4][1] , \products[4][0] , \products[3][5] , \products[3][4] , 
        \products[3][3] , \products[3][2] , \products[3][1] , \products[3][0] , 
        \products[2][5] , \products[2][4] , \products[2][3] , \products[2][2] , 
        \products[2][1] , \products[2][0] , \products[1][5] , \products[1][4] , 
        \products[1][3] , \products[1][2] , \products[1][1] , \products[1][0] , 
        \products[0][5] , \products[0][4] , \products[0][3] , \products[0][2] , 
        \products[0][1] , \products[0][0] }), .shift_add_out(shift_add_out) );
  fusion_unit_14_DW01_add_0_DW01_add_18 add_53 ( .A(shift_add_out), .B(psum_in), .CI(n1), .SUM(psum) );
  TIEL U1 ( .ZN(n1) );
endmodule


module WBUF_ARRAY_SIZE4_DATA_W32_13 ( clk, nRST, WBUF_wr_en, WBUF_data_in, 
        WBUF_data_out );
  input [31:0] WBUF_data_in;
  output [31:0] WBUF_data_out;
  input clk, nRST, WBUF_wr_en;
  wire   n1, n2, n3, n4, n5, n6;

  EDFCNQD1 \WBUF_data_out_reg[31]  ( .D(WBUF_data_in[31]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[31]) );
  EDFCNQD1 \WBUF_data_out_reg[30]  ( .D(WBUF_data_in[30]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[30]) );
  EDFCNQD1 \WBUF_data_out_reg[29]  ( .D(WBUF_data_in[29]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[29]) );
  EDFCNQD1 \WBUF_data_out_reg[28]  ( .D(WBUF_data_in[28]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[28]) );
  EDFCNQD1 \WBUF_data_out_reg[27]  ( .D(WBUF_data_in[27]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[27]) );
  EDFCNQD1 \WBUF_data_out_reg[26]  ( .D(WBUF_data_in[26]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[26]) );
  EDFCNQD1 \WBUF_data_out_reg[25]  ( .D(WBUF_data_in[25]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[25]) );
  EDFCNQD1 \WBUF_data_out_reg[24]  ( .D(WBUF_data_in[24]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[24]) );
  EDFCNQD1 \WBUF_data_out_reg[23]  ( .D(WBUF_data_in[23]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[23]) );
  EDFCNQD1 \WBUF_data_out_reg[22]  ( .D(WBUF_data_in[22]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[22]) );
  EDFCNQD1 \WBUF_data_out_reg[21]  ( .D(WBUF_data_in[21]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[21]) );
  EDFCNQD1 \WBUF_data_out_reg[20]  ( .D(WBUF_data_in[20]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[20]) );
  EDFCNQD1 \WBUF_data_out_reg[19]  ( .D(WBUF_data_in[19]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[19]) );
  EDFCNQD1 \WBUF_data_out_reg[18]  ( .D(WBUF_data_in[18]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[18]) );
  EDFCNQD1 \WBUF_data_out_reg[17]  ( .D(WBUF_data_in[17]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[17]) );
  EDFCNQD1 \WBUF_data_out_reg[16]  ( .D(WBUF_data_in[16]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[16]) );
  EDFCNQD1 \WBUF_data_out_reg[15]  ( .D(WBUF_data_in[15]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[15]) );
  EDFCNQD1 \WBUF_data_out_reg[14]  ( .D(WBUF_data_in[14]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[14]) );
  EDFCNQD1 \WBUF_data_out_reg[13]  ( .D(WBUF_data_in[13]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[13]) );
  EDFCNQD1 \WBUF_data_out_reg[12]  ( .D(WBUF_data_in[12]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[12]) );
  EDFCNQD1 \WBUF_data_out_reg[11]  ( .D(WBUF_data_in[11]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[11]) );
  EDFCNQD1 \WBUF_data_out_reg[10]  ( .D(WBUF_data_in[10]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[10]) );
  EDFCNQD1 \WBUF_data_out_reg[9]  ( .D(WBUF_data_in[9]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[9]) );
  EDFCNQD1 \WBUF_data_out_reg[8]  ( .D(WBUF_data_in[8]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[8]) );
  EDFCNQD1 \WBUF_data_out_reg[7]  ( .D(WBUF_data_in[7]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[7]) );
  EDFCNQD1 \WBUF_data_out_reg[6]  ( .D(WBUF_data_in[6]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[6]) );
  EDFCNQD1 \WBUF_data_out_reg[5]  ( .D(WBUF_data_in[5]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[5]) );
  EDFCNQD1 \WBUF_data_out_reg[4]  ( .D(WBUF_data_in[4]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[4]) );
  EDFCNQD1 \WBUF_data_out_reg[3]  ( .D(WBUF_data_in[3]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[3]) );
  EDFCNQD1 \WBUF_data_out_reg[2]  ( .D(WBUF_data_in[2]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[2]) );
  EDFCNQD1 \WBUF_data_out_reg[1]  ( .D(WBUF_data_in[1]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[1]) );
  EDFCNQD1 \WBUF_data_out_reg[0]  ( .D(WBUF_data_in[0]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[0]) );
  CKBD1 U2 ( .I(WBUF_wr_en), .Z(n5) );
  CKBD1 U3 ( .I(WBUF_wr_en), .Z(n4) );
  CKBD1 U4 ( .I(nRST), .Z(n1) );
  CKBD1 U5 ( .I(nRST), .Z(n2) );
  CKBD1 U6 ( .I(nRST), .Z(n3) );
  CKBD1 U7 ( .I(WBUF_wr_en), .Z(n6) );
endmodule


module w_mux_13 ( clk, nRST, input_bitwidth, rd_en, data_in, data_out );
  input [2:0] input_bitwidth;
  input [31:0] data_in;
  output [31:0] data_out;
  input clk, nRST, rd_en;
  wire   N40, N41, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129,
         n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140,
         n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151,
         n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162,
         n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173,
         n174, n175, n176, n177, n178;
  wire   [1:0] rd_ptr;
  wire   [31:0] next_data_out;

  EDFCNQD1 \rd_ptr_reg[0]  ( .D(N40), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[0]) );
  EDFCNQD1 \rd_ptr_reg[1]  ( .D(N41), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[1]) );
  DFCNQD1 \data_out_reg[31]  ( .D(next_data_out[31]), .CP(clk), .CDN(n1), .Q(
        data_out[31]) );
  DFCNQD1 \data_out_reg[30]  ( .D(next_data_out[30]), .CP(clk), .CDN(n3), .Q(
        data_out[30]) );
  DFCNQD1 \data_out_reg[29]  ( .D(next_data_out[29]), .CP(clk), .CDN(n3), .Q(
        data_out[29]) );
  DFCNQD1 \data_out_reg[28]  ( .D(next_data_out[28]), .CP(clk), .CDN(n3), .Q(
        data_out[28]) );
  DFCNQD1 \data_out_reg[27]  ( .D(next_data_out[27]), .CP(clk), .CDN(n3), .Q(
        data_out[27]) );
  DFCNQD1 \data_out_reg[26]  ( .D(next_data_out[26]), .CP(clk), .CDN(n3), .Q(
        data_out[26]) );
  DFCNQD1 \data_out_reg[25]  ( .D(next_data_out[25]), .CP(clk), .CDN(n2), .Q(
        data_out[25]) );
  DFCNQD1 \data_out_reg[24]  ( .D(next_data_out[24]), .CP(clk), .CDN(n2), .Q(
        data_out[24]) );
  DFCNQD1 \data_out_reg[23]  ( .D(next_data_out[23]), .CP(clk), .CDN(n3), .Q(
        data_out[23]) );
  DFCNQD1 \data_out_reg[22]  ( .D(next_data_out[22]), .CP(clk), .CDN(n2), .Q(
        data_out[22]) );
  DFCNQD1 \data_out_reg[21]  ( .D(next_data_out[21]), .CP(clk), .CDN(n2), .Q(
        data_out[21]) );
  DFCNQD1 \data_out_reg[20]  ( .D(next_data_out[20]), .CP(clk), .CDN(n2), .Q(
        data_out[20]) );
  DFCNQD1 \data_out_reg[19]  ( .D(next_data_out[19]), .CP(clk), .CDN(n2), .Q(
        data_out[19]) );
  DFCNQD1 \data_out_reg[18]  ( .D(next_data_out[18]), .CP(clk), .CDN(n2), .Q(
        data_out[18]) );
  DFCNQD1 \data_out_reg[17]  ( .D(next_data_out[17]), .CP(clk), .CDN(n2), .Q(
        data_out[17]) );
  DFCNQD1 \data_out_reg[16]  ( .D(next_data_out[16]), .CP(clk), .CDN(n2), .Q(
        data_out[16]) );
  DFCNQD1 \data_out_reg[15]  ( .D(next_data_out[15]), .CP(clk), .CDN(n2), .Q(
        data_out[15]) );
  DFCNQD1 \data_out_reg[14]  ( .D(next_data_out[14]), .CP(clk), .CDN(n2), .Q(
        data_out[14]) );
  DFCNQD1 \data_out_reg[13]  ( .D(next_data_out[13]), .CP(clk), .CDN(n2), .Q(
        data_out[13]) );
  DFCNQD1 \data_out_reg[12]  ( .D(next_data_out[12]), .CP(clk), .CDN(n1), .Q(
        data_out[12]) );
  DFCNQD1 \data_out_reg[11]  ( .D(next_data_out[11]), .CP(clk), .CDN(n1), .Q(
        data_out[11]) );
  DFCNQD1 \data_out_reg[10]  ( .D(next_data_out[10]), .CP(clk), .CDN(n1), .Q(
        data_out[10]) );
  DFCNQD1 \data_out_reg[9]  ( .D(next_data_out[9]), .CP(clk), .CDN(n1), .Q(
        data_out[9]) );
  DFCNQD1 \data_out_reg[8]  ( .D(next_data_out[8]), .CP(clk), .CDN(n1), .Q(
        data_out[8]) );
  DFCNQD1 \data_out_reg[7]  ( .D(next_data_out[7]), .CP(clk), .CDN(n1), .Q(
        data_out[7]) );
  DFCNQD1 \data_out_reg[6]  ( .D(next_data_out[6]), .CP(clk), .CDN(n1), .Q(
        data_out[6]) );
  DFCNQD1 \data_out_reg[5]  ( .D(next_data_out[5]), .CP(clk), .CDN(n1), .Q(
        data_out[5]) );
  DFCNQD1 \data_out_reg[4]  ( .D(next_data_out[4]), .CP(clk), .CDN(n1), .Q(
        data_out[4]) );
  DFCNQD1 \data_out_reg[3]  ( .D(next_data_out[3]), .CP(clk), .CDN(n1), .Q(
        data_out[3]) );
  DFCNQD1 \data_out_reg[2]  ( .D(next_data_out[2]), .CP(clk), .CDN(n1), .Q(
        data_out[2]) );
  DFCNQD1 \data_out_reg[1]  ( .D(next_data_out[1]), .CP(clk), .CDN(n1), .Q(
        data_out[1]) );
  DFCNQD1 \data_out_reg[0]  ( .D(next_data_out[0]), .CP(clk), .CDN(n2), .Q(
        data_out[0]) );
  OA21D1 U20 ( .A1(n161), .A2(n160), .B(n159), .Z(n170) );
  OA21D1 U23 ( .A1(n156), .A2(n160), .B(n155), .Z(n169) );
  OA21D1 U26 ( .A1(n154), .A2(n160), .B(n153), .Z(n167) );
  OA21D1 U29 ( .A1(n152), .A2(n160), .B(n151), .Z(n166) );
  OA21D1 U32 ( .A1(n150), .A2(n160), .B(n149), .Z(n177) );
  OA21D1 U35 ( .A1(n148), .A2(n160), .B(n147), .Z(n165) );
  OA21D1 U38 ( .A1(n146), .A2(n160), .B(n145), .Z(n164) );
  OA21D1 U41 ( .A1(n144), .A2(n160), .B(n149), .Z(n163) );
  OA21D1 U47 ( .A1(n139), .A2(n160), .B(n138), .Z(n162) );
  OA21D1 U50 ( .A1(n137), .A2(n160), .B(n159), .Z(n175) );
  OA21D1 U56 ( .A1(n134), .A2(n160), .B(n155), .Z(n174) );
  OA21D1 U62 ( .A1(n131), .A2(n160), .B(n153), .Z(n173) );
  OA21D1 U68 ( .A1(n128), .A2(n160), .B(n151), .Z(n172) );
  OA21D1 U74 ( .A1(n125), .A2(n160), .B(n147), .Z(n171) );
  OA21D1 U80 ( .A1(n122), .A2(n160), .B(n145), .Z(n168) );
  OA21D1 U86 ( .A1(n119), .A2(n160), .B(n138), .Z(n176) );
  AN2XD1 U90 ( .A1(rd_ptr[1]), .A2(rd_ptr[0]), .Z(n140) );
  AN4XD1 U91 ( .A1(input_bitwidth[2]), .A2(rd_en), .A3(n5), .A4(n7), .Z(n143)
         );
  MAOI22D1 U97 ( .A1(n115), .A2(n12), .B1(n115), .B2(n114), .ZN(n113) );
  NR2D1 U3 ( .A1(n13), .A2(rd_ptr[1]), .ZN(n158) );
  NR2D1 U4 ( .A1(rd_ptr[0]), .A2(rd_ptr[1]), .ZN(n157) );
  AOI21D1 U5 ( .A1(n12), .A2(n116), .B(n113), .ZN(N41) );
  OAI21D1 U6 ( .A1(n111), .A2(n10), .B(n177), .ZN(next_data_out[1]) );
  OAI21D1 U7 ( .A1(n37), .A2(n10), .B(n177), .ZN(next_data_out[9]) );
  OAI21D1 U8 ( .A1(n8), .A2(n112), .B(n176), .ZN(next_data_out[0]) );
  OAI21D1 U9 ( .A1(n9), .A2(n110), .B(n168), .ZN(next_data_out[2]) );
  OAI21D1 U10 ( .A1(n9), .A2(n109), .B(n171), .ZN(next_data_out[3]) );
  OAI21D1 U11 ( .A1(n9), .A2(n108), .B(n172), .ZN(next_data_out[4]) );
  OAI21D1 U12 ( .A1(n8), .A2(n36), .B(n168), .ZN(next_data_out[10]) );
  OAI21D1 U13 ( .A1(n8), .A2(n35), .B(n171), .ZN(next_data_out[11]) );
  OAI21D1 U14 ( .A1(n8), .A2(n34), .B(n172), .ZN(next_data_out[12]) );
  OAI21D1 U15 ( .A1(n9), .A2(n33), .B(n173), .ZN(next_data_out[13]) );
  OAI21D1 U16 ( .A1(n8), .A2(n32), .B(n174), .ZN(next_data_out[14]) );
  OAI21D1 U17 ( .A1(n8), .A2(n31), .B(n175), .ZN(next_data_out[15]) );
  OAI21D1 U18 ( .A1(n10), .A2(n107), .B(n173), .ZN(next_data_out[5]) );
  OAI21D1 U19 ( .A1(n10), .A2(n106), .B(n174), .ZN(next_data_out[6]) );
  OAI21D1 U21 ( .A1(n10), .A2(n105), .B(n175), .ZN(next_data_out[7]) );
  OAI21D1 U22 ( .A1(n10), .A2(n38), .B(n176), .ZN(next_data_out[8]) );
  CKBD1 U24 ( .I(n178), .Z(n8) );
  CKBD1 U25 ( .I(n178), .Z(n9) );
  CKBD1 U27 ( .I(n178), .Z(n10) );
  INVD1 U28 ( .I(n6), .ZN(n7) );
  INVD1 U30 ( .I(n4), .ZN(n5) );
  INVD1 U31 ( .I(n116), .ZN(n11) );
  INVD1 U33 ( .I(n157), .ZN(n14) );
  INVD1 U34 ( .I(n158), .ZN(n12) );
  ND2D1 U36 ( .A1(n114), .A2(rd_en), .ZN(n178) );
  NR3D0 U37 ( .A1(n4), .A2(input_bitwidth[2]), .A3(n7), .ZN(n115) );
  NR3D0 U39 ( .A1(n6), .A2(input_bitwidth[2]), .A3(n5), .ZN(n114) );
  ND2D1 U40 ( .A1(rd_en), .A2(n115), .ZN(n160) );
  ND2D1 U42 ( .A1(n143), .A2(n118), .ZN(n138) );
  OAI221D0 U43 ( .A1(n12), .A2(n38), .B1(n14), .B2(n112), .C(n117), .ZN(n118)
         );
  AOI22D1 U44 ( .A1(data_in[24]), .A2(n140), .B1(data_in[16]), .B2(n11), .ZN(
        n117) );
  ND2D1 U45 ( .A1(n143), .A2(n142), .ZN(n149) );
  OAI221D0 U46 ( .A1(n12), .A2(n37), .B1(n14), .B2(n111), .C(n141), .ZN(n142)
         );
  AOI22D1 U48 ( .A1(data_in[25]), .A2(n140), .B1(n11), .B2(data_in[17]), .ZN(
        n141) );
  ND2D1 U49 ( .A1(n143), .A2(n121), .ZN(n145) );
  OAI221D0 U51 ( .A1(n12), .A2(n36), .B1(n14), .B2(n110), .C(n120), .ZN(n121)
         );
  AOI22D1 U52 ( .A1(data_in[26]), .A2(n140), .B1(data_in[18]), .B2(n11), .ZN(
        n120) );
  ND2D1 U53 ( .A1(n143), .A2(n124), .ZN(n147) );
  OAI221D0 U54 ( .A1(n12), .A2(n35), .B1(n14), .B2(n109), .C(n123), .ZN(n124)
         );
  AOI22D1 U55 ( .A1(data_in[27]), .A2(n140), .B1(data_in[19]), .B2(n11), .ZN(
        n123) );
  ND2D1 U57 ( .A1(n143), .A2(n127), .ZN(n151) );
  OAI221D0 U58 ( .A1(n12), .A2(n34), .B1(n14), .B2(n108), .C(n126), .ZN(n127)
         );
  AOI22D1 U59 ( .A1(data_in[28]), .A2(n140), .B1(data_in[20]), .B2(n11), .ZN(
        n126) );
  ND2D1 U60 ( .A1(n143), .A2(n130), .ZN(n153) );
  OAI221D0 U61 ( .A1(n12), .A2(n33), .B1(n14), .B2(n107), .C(n129), .ZN(n130)
         );
  AOI22D1 U63 ( .A1(data_in[29]), .A2(n140), .B1(data_in[21]), .B2(n11), .ZN(
        n129) );
  ND2D1 U64 ( .A1(n143), .A2(n133), .ZN(n155) );
  OAI221D0 U65 ( .A1(n12), .A2(n32), .B1(n14), .B2(n106), .C(n132), .ZN(n133)
         );
  AOI22D1 U66 ( .A1(data_in[30]), .A2(n140), .B1(data_in[22]), .B2(n11), .ZN(
        n132) );
  ND2D1 U67 ( .A1(n143), .A2(n136), .ZN(n159) );
  OAI221D0 U69 ( .A1(n12), .A2(n31), .B1(n14), .B2(n105), .C(n135), .ZN(n136)
         );
  AOI22D1 U70 ( .A1(data_in[31]), .A2(n140), .B1(data_in[23]), .B2(n11), .ZN(
        n135) );
  AOI22D1 U71 ( .A1(data_in[16]), .A2(n158), .B1(data_in[0]), .B2(n157), .ZN(
        n119) );
  AOI22D1 U72 ( .A1(data_in[17]), .A2(n158), .B1(data_in[1]), .B2(n157), .ZN(
        n150) );
  AOI22D1 U73 ( .A1(data_in[18]), .A2(n158), .B1(data_in[2]), .B2(n157), .ZN(
        n122) );
  AOI22D1 U75 ( .A1(data_in[19]), .A2(n158), .B1(data_in[3]), .B2(n157), .ZN(
        n125) );
  AOI22D1 U76 ( .A1(data_in[20]), .A2(n158), .B1(data_in[4]), .B2(n157), .ZN(
        n128) );
  AOI22D1 U77 ( .A1(data_in[21]), .A2(n158), .B1(data_in[5]), .B2(n157), .ZN(
        n131) );
  AOI22D1 U78 ( .A1(data_in[22]), .A2(n158), .B1(data_in[6]), .B2(n157), .ZN(
        n134) );
  AOI22D1 U79 ( .A1(data_in[23]), .A2(n158), .B1(data_in[7]), .B2(n157), .ZN(
        n137) );
  AOI22D1 U81 ( .A1(data_in[24]), .A2(n158), .B1(data_in[8]), .B2(n157), .ZN(
        n139) );
  AOI22D1 U82 ( .A1(data_in[25]), .A2(n158), .B1(data_in[9]), .B2(n157), .ZN(
        n144) );
  AOI22D1 U83 ( .A1(data_in[26]), .A2(n158), .B1(data_in[10]), .B2(n157), .ZN(
        n146) );
  AOI22D1 U84 ( .A1(data_in[27]), .A2(n158), .B1(data_in[11]), .B2(n157), .ZN(
        n148) );
  AOI22D1 U85 ( .A1(data_in[28]), .A2(n158), .B1(data_in[12]), .B2(n157), .ZN(
        n152) );
  AOI22D1 U87 ( .A1(data_in[29]), .A2(n158), .B1(data_in[13]), .B2(n157), .ZN(
        n154) );
  AOI22D1 U88 ( .A1(data_in[30]), .A2(n158), .B1(data_in[14]), .B2(n157), .ZN(
        n156) );
  AOI22D1 U89 ( .A1(data_in[31]), .A2(n158), .B1(data_in[15]), .B2(n157), .ZN(
        n161) );
  NR2D1 U92 ( .A1(rd_ptr[0]), .A2(n114), .ZN(N40) );
  OAI21D1 U93 ( .A1(n29), .A2(n10), .B(n163), .ZN(next_data_out[17]) );
  INVD1 U94 ( .I(data_in[17]), .ZN(n29) );
  OAI21D1 U95 ( .A1(n8), .A2(n30), .B(n162), .ZN(next_data_out[16]) );
  INVD1 U96 ( .I(data_in[16]), .ZN(n30) );
  OAI21D1 U98 ( .A1(n8), .A2(n28), .B(n164), .ZN(next_data_out[18]) );
  INVD1 U99 ( .I(data_in[18]), .ZN(n28) );
  OAI21D1 U100 ( .A1(n8), .A2(n27), .B(n165), .ZN(next_data_out[19]) );
  INVD1 U101 ( .I(data_in[19]), .ZN(n27) );
  OAI21D1 U102 ( .A1(n8), .A2(n26), .B(n166), .ZN(next_data_out[20]) );
  INVD1 U103 ( .I(data_in[20]), .ZN(n26) );
  OAI21D1 U104 ( .A1(n8), .A2(n25), .B(n167), .ZN(next_data_out[21]) );
  INVD1 U105 ( .I(data_in[21]), .ZN(n25) );
  OAI21D1 U106 ( .A1(n8), .A2(n24), .B(n169), .ZN(next_data_out[22]) );
  INVD1 U107 ( .I(data_in[22]), .ZN(n24) );
  OAI21D1 U108 ( .A1(n9), .A2(n23), .B(n170), .ZN(next_data_out[23]) );
  INVD1 U109 ( .I(data_in[23]), .ZN(n23) );
  OAI21D1 U110 ( .A1(n9), .A2(n22), .B(n162), .ZN(next_data_out[24]) );
  INVD1 U111 ( .I(data_in[24]), .ZN(n22) );
  OAI21D1 U112 ( .A1(n9), .A2(n20), .B(n164), .ZN(next_data_out[26]) );
  INVD1 U113 ( .I(data_in[26]), .ZN(n20) );
  OAI21D1 U114 ( .A1(n9), .A2(n19), .B(n165), .ZN(next_data_out[27]) );
  INVD1 U115 ( .I(data_in[27]), .ZN(n19) );
  OAI21D1 U116 ( .A1(n9), .A2(n18), .B(n166), .ZN(next_data_out[28]) );
  INVD1 U117 ( .I(data_in[28]), .ZN(n18) );
  OAI21D1 U118 ( .A1(n9), .A2(n17), .B(n167), .ZN(next_data_out[29]) );
  INVD1 U119 ( .I(data_in[29]), .ZN(n17) );
  OAI21D1 U120 ( .A1(n9), .A2(n16), .B(n169), .ZN(next_data_out[30]) );
  INVD1 U121 ( .I(data_in[30]), .ZN(n16) );
  OAI21D1 U122 ( .A1(n9), .A2(n15), .B(n170), .ZN(next_data_out[31]) );
  INVD1 U123 ( .I(data_in[31]), .ZN(n15) );
  OAI21D1 U124 ( .A1(n21), .A2(n10), .B(n163), .ZN(next_data_out[25]) );
  INVD1 U125 ( .I(data_in[25]), .ZN(n21) );
  CKBD1 U126 ( .I(input_bitwidth[0]), .Z(n4) );
  CKBD1 U127 ( .I(input_bitwidth[1]), .Z(n6) );
  ND2D1 U128 ( .A1(rd_ptr[1]), .A2(n13), .ZN(n116) );
  INVD1 U129 ( .I(rd_ptr[0]), .ZN(n13) );
  INVD1 U130 ( .I(data_in[1]), .ZN(n111) );
  INVD1 U131 ( .I(data_in[9]), .ZN(n37) );
  INVD1 U132 ( .I(data_in[0]), .ZN(n112) );
  INVD1 U133 ( .I(data_in[2]), .ZN(n110) );
  INVD1 U134 ( .I(data_in[3]), .ZN(n109) );
  INVD1 U135 ( .I(data_in[4]), .ZN(n108) );
  INVD1 U136 ( .I(data_in[5]), .ZN(n107) );
  INVD1 U137 ( .I(data_in[6]), .ZN(n106) );
  INVD1 U138 ( .I(data_in[7]), .ZN(n105) );
  INVD1 U139 ( .I(data_in[8]), .ZN(n38) );
  INVD1 U140 ( .I(data_in[10]), .ZN(n36) );
  INVD1 U141 ( .I(data_in[11]), .ZN(n35) );
  INVD1 U142 ( .I(data_in[12]), .ZN(n34) );
  INVD1 U143 ( .I(data_in[13]), .ZN(n33) );
  INVD1 U144 ( .I(data_in[14]), .ZN(n32) );
  INVD1 U145 ( .I(data_in[15]), .ZN(n31) );
  CKBD1 U146 ( .I(nRST), .Z(n2) );
  CKBD1 U147 ( .I(nRST), .Z(n1) );
  CKBD1 U148 ( .I(nRST), .Z(n3) );
endmodule


module bit_brick_223 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_222 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_221 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_220 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_219 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_218 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_217 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_216 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_215 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_214 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_213 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_212 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_211 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2D1 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  INVD1 U5 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U6 ( .I(x[1]), .ZN(n3) );
  INVD1 U7 ( .I(y[1]), .ZN(n6) );
  INVD1 U8 ( .I(x[0]), .ZN(n4) );
  INVD1 U9 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U10 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U11 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U12 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U13 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U14 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U15 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_210 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_209 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_208 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module shift_add_13_DW01_add_14_DW01_add_34 ( A, B, CI, SUM, CO );
  input [28:0] A;
  input [28:0] B;
  output [28:0] SUM;
  input CI;
  output CO;
  wire   n1, \SUM[18] , n3, n4, n5, n6, n7;
  wire   [28:1] carry;
  assign SUM[27] = \SUM[18] ;
  assign SUM[28] = \SUM[18] ;
  assign SUM[26] = \SUM[18] ;
  assign SUM[25] = \SUM[18] ;
  assign SUM[24] = \SUM[18] ;
  assign SUM[23] = \SUM[18] ;
  assign SUM[22] = \SUM[18] ;
  assign SUM[21] = \SUM[18] ;
  assign SUM[20] = \SUM[18] ;
  assign SUM[19] = \SUM[18] ;
  assign SUM[18] = \SUM[18] ;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  OAI222D1 U1 ( .A1(n5), .A2(n7), .B1(n5), .B2(n6), .C1(n7), .C2(n6), .ZN(n4)
         );
  AN2XD1 U2 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D0 U3 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  AOI222D1 U4 ( .A1(carry[15]), .A2(A[27]), .B1(carry[15]), .B2(B[15]), .C1(
        B[15]), .C2(A[27]), .ZN(n5) );
  XNR3D4 U5 ( .A1(B[27]), .A2(n7), .A3(n3), .ZN(\SUM[18] ) );
  AO222D1 U6 ( .A1(n4), .A2(A[27]), .B1(n4), .B2(B[27]), .C1(A[27]), .C2(B[27]), .Z(n3) );
  CKND0 U7 ( .I(A[27]), .ZN(n7) );
  CKND0 U8 ( .I(B[16]), .ZN(n6) );
  XNR3D0 U9 ( .A1(B[27]), .A2(n7), .A3(n4), .ZN(SUM[17]) );
  XNR3D0 U10 ( .A1(n6), .A2(n5), .A3(n7), .ZN(SUM[16]) );
  XNR3D0 U11 ( .A1(carry[15]), .A2(B[15]), .A3(n7), .ZN(SUM[15]) );
endmodule


module shift_add_13_DW01_add_6_DW01_add_26 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D1 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D1 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_13_DW01_add_5_DW01_add_25 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_13_DW01_add_4_DW01_add_24 ( A, B, CI, SUM, CO );
  input [30:0] A;
  input [30:0] B;
  output [30:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [30:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  XOR3D1 U1_30 ( .A1(A[30]), .A2(B[30]), .A3(carry[30]), .Z(SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_13_DW01_add_3_DW01_add_23 ( A, B, CI, SUM, CO );
  input [29:0] A;
  input [29:0] B;
  output [29:0] SUM;
  input CI;
  output CO;
  wire   n10, \SUM[29] , \SUM[27] , n4, n5, n6, n7, n8, n9;
  wire   [29:1] carry;
  assign SUM[25] = \SUM[29] ;
  assign SUM[29] = \SUM[29] ;
  assign SUM[26] = \SUM[27] ;
  assign SUM[28] = \SUM[27] ;
  assign SUM[24] = \SUM[27] ;
  assign SUM[27] = \SUM[27] ;

  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n8), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  CKBD1 U1 ( .I(n10), .Z(SUM[23]) );
  CKBD0 U2 ( .I(n10), .Z(\SUM[29] ) );
  CKBD1 U3 ( .I(n10), .Z(\SUM[27] ) );
  XNR3D2 U4 ( .A1(B[22]), .A2(A[21]), .A3(n7), .ZN(n10) );
  CKAN2D0 U5 ( .A1(n9), .A2(A[21]), .Z(n4) );
  AN2D1 U6 ( .A1(n9), .A2(B[22]), .Z(n5) );
  CKAN2D0 U7 ( .A1(A[21]), .A2(B[22]), .Z(n6) );
  NR3D1 U8 ( .A1(n4), .A2(n5), .A3(n6), .ZN(n7) );
  AO222D0 U9 ( .A1(carry[21]), .A2(A[21]), .B1(B[21]), .B2(carry[21]), .C1(
        B[21]), .C2(A[21]), .Z(n9) );
  AN2XD1 U10 ( .A1(B[0]), .A2(A[0]), .Z(n8) );
  CKXOR2D1 U11 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  XOR3D0 U12 ( .A1(carry[21]), .A2(B[21]), .A3(A[21]), .Z(SUM[21]) );
  XOR3D0 U13 ( .A1(B[22]), .A2(A[21]), .A3(n9), .Z(SUM[22]) );
endmodule


module shift_add_13_DW01_add_2_DW01_add_22 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_13_DW01_add_1_DW01_add_21 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D1 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D1 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D1 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D1 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D1 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D1 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_13_DW01_add_0_DW01_add_20 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_13 ( input_bitwidth, weight_bitwidth, .products({
        \products[15][5] , \products[15][4] , \products[15][3] , 
        \products[15][2] , \products[15][1] , \products[15][0] , 
        \products[14][5] , \products[14][4] , \products[14][3] , 
        \products[14][2] , \products[14][1] , \products[14][0] , 
        \products[13][5] , \products[13][4] , \products[13][3] , 
        \products[13][2] , \products[13][1] , \products[13][0] , 
        \products[12][5] , \products[12][4] , \products[12][3] , 
        \products[12][2] , \products[12][1] , \products[12][0] , 
        \products[11][5] , \products[11][4] , \products[11][3] , 
        \products[11][2] , \products[11][1] , \products[11][0] , 
        \products[10][5] , \products[10][4] , \products[10][3] , 
        \products[10][2] , \products[10][1] , \products[10][0] , 
        \products[9][5] , \products[9][4] , \products[9][3] , \products[9][2] , 
        \products[9][1] , \products[9][0] , \products[8][5] , \products[8][4] , 
        \products[8][3] , \products[8][2] , \products[8][1] , \products[8][0] , 
        \products[7][5] , \products[7][4] , \products[7][3] , \products[7][2] , 
        \products[7][1] , \products[7][0] , \products[6][5] , \products[6][4] , 
        \products[6][3] , \products[6][2] , \products[6][1] , \products[6][0] , 
        \products[5][5] , \products[5][4] , \products[5][3] , \products[5][2] , 
        \products[5][1] , \products[5][0] , \products[4][5] , \products[4][4] , 
        \products[4][3] , \products[4][2] , \products[4][1] , \products[4][0] , 
        \products[3][5] , \products[3][4] , \products[3][3] , \products[3][2] , 
        \products[3][1] , \products[3][0] , \products[2][5] , \products[2][4] , 
        \products[2][3] , \products[2][2] , \products[2][1] , \products[2][0] , 
        \products[1][5] , \products[1][4] , \products[1][3] , \products[1][2] , 
        \products[1][1] , \products[1][0] , \products[0][5] , \products[0][4] , 
        \products[0][3] , \products[0][2] , \products[0][1] , \products[0][0] 
        }), shift_add_out );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  output [31:0] shift_add_out;
  input \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] ;
  wire   \shifted_products[15][16] , \shifted_products[15][15] ,
         \shifted_products[15][14] , \shifted_products[15][13] ,
         \shifted_products[15][12] , \shifted_products[15][11] ,
         \shifted_products[15][10] , \shifted_products[15][9] ,
         \shifted_products[15][8] , \shifted_products[15][7] ,
         \shifted_products[15][6] , \shifted_products[15][5] ,
         \shifted_products[15][4] , \shifted_products[15][3] ,
         \shifted_products[15][2] , \shifted_products[15][1] ,
         \shifted_products[15][0] , \shifted_products[14][14] ,
         \shifted_products[14][13] , \shifted_products[14][12] ,
         \shifted_products[14][11] , \shifted_products[14][10] ,
         \shifted_products[14][9] , \shifted_products[14][8] ,
         \shifted_products[14][7] , \shifted_products[14][6] ,
         \shifted_products[14][5] , \shifted_products[14][4] ,
         \shifted_products[14][3] , \shifted_products[14][2] ,
         \shifted_products[14][1] , \shifted_products[14][0] ,
         \shifted_products[13][12] , \shifted_products[13][11] ,
         \shifted_products[13][10] , \shifted_products[13][9] ,
         \shifted_products[13][8] , \shifted_products[13][7] ,
         \shifted_products[13][6] , \shifted_products[13][5] ,
         \shifted_products[13][4] , \shifted_products[13][3] ,
         \shifted_products[13][2] , \shifted_products[13][1] ,
         \shifted_products[13][0] , \shifted_products[12][10] ,
         \shifted_products[12][9] , \shifted_products[12][8] ,
         \shifted_products[12][7] , \shifted_products[12][6] ,
         \shifted_products[12][5] , \shifted_products[12][4] ,
         \shifted_products[12][3] , \shifted_products[12][2] ,
         \shifted_products[12][1] , \shifted_products[12][0] ,
         \shifted_products[11][13] , \shifted_products[11][12] ,
         \shifted_products[11][11] , \shifted_products[11][10] ,
         \shifted_products[11][9] , \shifted_products[11][8] ,
         \shifted_products[11][7] , \shifted_products[11][6] ,
         \shifted_products[11][5] , \shifted_products[11][4] ,
         \shifted_products[11][3] , \shifted_products[11][2] ,
         \shifted_products[11][1] , \shifted_products[11][0] ,
         \shifted_products[10][12] , \shifted_products[10][11] ,
         \shifted_products[10][10] , \shifted_products[10][9] ,
         \shifted_products[10][8] , \shifted_products[10][7] ,
         \shifted_products[10][6] , \shifted_products[10][5] ,
         \shifted_products[10][4] , \shifted_products[10][3] ,
         \shifted_products[10][2] , \shifted_products[10][1] ,
         \shifted_products[10][0] , \shifted_products[9][10] ,
         \shifted_products[9][9] , \shifted_products[9][8] ,
         \shifted_products[9][7] , \shifted_products[9][6] ,
         \shifted_products[9][5] , \shifted_products[9][4] ,
         \shifted_products[9][3] , \shifted_products[9][2] ,
         \shifted_products[9][1] , \shifted_products[9][0] ,
         \shifted_products[8][8] , \shifted_products[8][7] ,
         \shifted_products[8][6] , \shifted_products[8][5] ,
         \shifted_products[8][4] , \shifted_products[8][3] ,
         \shifted_products[8][2] , \shifted_products[8][1] ,
         \shifted_products[8][0] , \shifted_products[7][11] ,
         \shifted_products[7][10] , \shifted_products[7][9] ,
         \shifted_products[7][8] , \shifted_products[7][7] ,
         \shifted_products[7][6] , \shifted_products[7][5] ,
         \shifted_products[7][4] , \shifted_products[7][3] ,
         \shifted_products[7][2] , \shifted_products[7][1] ,
         \shifted_products[7][0] , \shifted_products[6][10] ,
         \shifted_products[6][9] , \shifted_products[6][8] ,
         \shifted_products[6][7] , \shifted_products[6][6] ,
         \shifted_products[6][5] , \shifted_products[6][4] ,
         \shifted_products[6][3] , \shifted_products[6][2] ,
         \shifted_products[6][1] , \shifted_products[6][0] ,
         \shifted_products[5][8] , \shifted_products[5][7] ,
         \shifted_products[5][6] , \shifted_products[5][5] ,
         \shifted_products[5][4] , \shifted_products[5][3] ,
         \shifted_products[5][2] , \shifted_products[5][1] ,
         \shifted_products[5][0] , \shifted_products[4][6] ,
         \shifted_products[4][5] , \shifted_products[4][4] ,
         \shifted_products[4][3] , \shifted_products[4][2] ,
         \shifted_products[4][1] , \shifted_products[4][0] ,
         \shifted_products[3][9] , \shifted_products[3][8] ,
         \shifted_products[3][7] , \shifted_products[3][6] ,
         \shifted_products[3][5] , \shifted_products[3][4] ,
         \shifted_products[3][3] , \shifted_products[3][2] ,
         \shifted_products[3][1] , \shifted_products[3][0] ,
         \shifted_products[2][8] , \shifted_products[2][7] ,
         \shifted_products[2][6] , \shifted_products[2][5] ,
         \shifted_products[2][4] , \shifted_products[2][3] ,
         \shifted_products[2][2] , \shifted_products[2][1] ,
         \shifted_products[2][0] , \shifted_products[1][6] ,
         \shifted_products[1][5] , \shifted_products[1][4] ,
         \shifted_products[1][3] , \shifted_products[1][2] ,
         \shifted_products[1][1] , \shifted_products[1][0] ,
         \shifted_products[0][9] , N99, N87, N86, N85, N84, N83, N82, N81, N80,
         N79, N78, N77, N76, N61, N60, N59, N58, N57, N56, N55, N54, N446,
         N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435,
         N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424,
         N423, N422, N421, N420, N419, N418, N417, N416, N415, N414, N413,
         N412, N411, N410, N409, N408, N407, N406, N405, N404, N403, N402,
         N401, N400, N399, N398, N397, N396, N395, N394, N393, N392, N391,
         N390, N389, N388, N387, N386, N385, N384, N383, N382, N381, N380,
         N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369,
         N368, N367, N366, N365, N364, N363, N362, N361, N360, N359, N358,
         N357, N356, N355, N354, N353, N352, N351, N350, N349, N348, N347,
         N346, N345, N344, N343, N342, N341, N340, N339, N338, N337, N336,
         N335, N334, N333, N332, N331, N330, N329, N328, N327, N326, N325,
         N324, N323, N322, N321, N320, N319, N318, N317, N316, N315, N314,
         N313, N312, N311, N310, N309, N308, N307, N306, N305, N304, N303,
         N302, N301, N300, N299, N298, N297, N296, N295, N294, N293, N292,
         N291, N290, N289, N288, N287, N286, N285, N284, N283, N282, N281,
         N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270,
         N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259,
         N258, N257, N256, N255, N254, N253, N252, N251, N250, N249, N248,
         N247, N246, N245, N244, N243, N242, N241, N240, N239, N238, N237,
         N236, N235, N234, N233, N232, N231, N230, N229, N214, N213, N212,
         N211, N210, N209, N208, N207, N206, N205, N204, N203, N202, N201,
         N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, N179,
         N178, N177, N176, N175, N174, N159, N158, N157, N156, N155, N154,
         N153, N152, N151, N150, N149, N148, N136, N135, N134, N133, N132,
         N131, N130, N129, N128, N127, N126, N125, N124, N123, N108, N107,
         N106, N105, N104, N103, N102, N101, N100,
         \add_14_root_add_199_I16/carry[6] ,
         \add_14_root_add_199_I16/carry[5] ,
         \add_14_root_add_199_I16/carry[4] ,
         \add_14_root_add_199_I16/carry[3] ,
         \add_14_root_add_199_I16/carry[2] ,
         \add_14_root_add_199_I16/carry[1] ,
         \add_13_root_add_199_I16/carry[9] ,
         \add_13_root_add_199_I16/carry[8] ,
         \add_13_root_add_199_I16/carry[7] ,
         \add_13_root_add_199_I16/carry[6] ,
         \add_13_root_add_199_I16/carry[5] ,
         \add_13_root_add_199_I16/carry[4] ,
         \add_13_root_add_199_I16/carry[3] ,
         \add_13_root_add_199_I16/carry[2] ,
         \add_13_root_add_199_I16/carry[1] ,
         \add_12_root_add_199_I16/carry[7] ,
         \add_12_root_add_199_I16/carry[6] ,
         \add_12_root_add_199_I16/carry[5] ,
         \add_12_root_add_199_I16/carry[4] ,
         \add_12_root_add_199_I16/carry[3] ,
         \add_12_root_add_199_I16/carry[2] ,
         \add_12_root_add_199_I16/carry[1] ,
         \add_11_root_add_199_I16/carry[11] ,
         \add_11_root_add_199_I16/carry[10] ,
         \add_11_root_add_199_I16/carry[9] ,
         \add_11_root_add_199_I16/carry[8] ,
         \add_11_root_add_199_I16/carry[7] ,
         \add_11_root_add_199_I16/carry[6] ,
         \add_11_root_add_199_I16/carry[5] ,
         \add_11_root_add_199_I16/carry[4] ,
         \add_11_root_add_199_I16/carry[3] ,
         \add_11_root_add_199_I16/carry[2] ,
         \add_11_root_add_199_I16/carry[1] ,
         \add_10_root_add_199_I16/carry[9] ,
         \add_10_root_add_199_I16/carry[8] ,
         \add_10_root_add_199_I16/carry[7] ,
         \add_10_root_add_199_I16/carry[6] ,
         \add_10_root_add_199_I16/carry[5] ,
         \add_10_root_add_199_I16/carry[4] ,
         \add_10_root_add_199_I16/carry[3] ,
         \add_10_root_add_199_I16/carry[2] ,
         \add_10_root_add_199_I16/carry[1] ,
         \add_9_root_add_199_I16/carry[13] ,
         \add_9_root_add_199_I16/carry[12] ,
         \add_9_root_add_199_I16/carry[11] ,
         \add_9_root_add_199_I16/carry[10] , \add_9_root_add_199_I16/carry[9] ,
         \add_9_root_add_199_I16/carry[8] , \add_9_root_add_199_I16/carry[7] ,
         \add_9_root_add_199_I16/carry[6] , \add_9_root_add_199_I16/carry[5] ,
         \add_9_root_add_199_I16/carry[4] , \add_9_root_add_199_I16/carry[3] ,
         \add_9_root_add_199_I16/carry[2] , \add_9_root_add_199_I16/carry[1] ,
         \add_8_root_add_199_I16/carry[11] ,
         \add_8_root_add_199_I16/carry[10] , \add_8_root_add_199_I16/carry[9] ,
         \add_8_root_add_199_I16/carry[8] , \add_8_root_add_199_I16/carry[7] ,
         \add_8_root_add_199_I16/carry[6] , \add_8_root_add_199_I16/carry[5] ,
         \add_8_root_add_199_I16/carry[4] , \add_8_root_add_199_I16/carry[3] ,
         \add_8_root_add_199_I16/carry[2] , \add_8_root_add_199_I16/carry[1] ,
         n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72,
         n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86,
         n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100,
         n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, n111,
         n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122,
         n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133,
         n134, n135, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246,
         n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257,
         n258, n259, n260, n261, n262, n263, n264, n265, n266, n267, n268,
         n269, n270, n271, n272, n273, n274, n275, n276, n277, n278, n279,
         n280, n281, n282, n283, n284, n285, n286, n287, n288, n289, n290,
         n291, n292, n293, n294, n295, n296, n297, n298, n299, n300, n301,
         n302, n303, n304, n305, n306, n307, n308, n309, n310, n311, n312,
         n313, n314, n315, n316, n317, n318, n319;

  MAOI22D1 U26 ( .A1(\products[7][0] ), .A2(n307), .B1(n103), .B2(n310), .ZN(
        n308) );
  AN2XD1 U74 ( .A1(n313), .A2(n282), .Z(n283) );
  OA21D1 U130 ( .A1(n237), .A2(n54), .B(n273), .Z(n264) );
  AN2XD1 U134 ( .A1(n300), .A2(n290), .Z(n274) );
  AN2XD1 U191 ( .A1(n310), .A2(n305), .Z(n287) );
  AN2XD1 U218 ( .A1(n8), .A2(n276), .Z(n247) );
  AN2XD1 U239 ( .A1(n290), .A2(n310), .Z(n276) );
  shift_add_13_DW01_add_14_DW01_add_34 add_7_root_add_199_I16 ( .A({
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \shifted_products[14][14] , 
        \shifted_products[14][13] , \shifted_products[14][12] , 
        \shifted_products[14][11] , \shifted_products[14][10] , 
        \shifted_products[14][9] , \shifted_products[14][8] , 
        \shifted_products[14][7] , \shifted_products[14][6] , 
        \shifted_products[14][5] , \shifted_products[14][4] , 
        \shifted_products[14][3] , \shifted_products[14][2] , 
        \shifted_products[14][1] , \shifted_products[14][0] }), .B({
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \shifted_products[15][16] , \shifted_products[15][15] , 
        \shifted_products[15][14] , \shifted_products[15][13] , 
        \shifted_products[15][12] , \shifted_products[15][11] , 
        \shifted_products[15][10] , \shifted_products[15][9] , 
        \shifted_products[15][8] , \shifted_products[15][7] , 
        \shifted_products[15][6] , \shifted_products[15][5] , 
        \shifted_products[15][4] , \shifted_products[15][3] , 
        \shifted_products[15][2] , \shifted_products[15][1] , 
        \shifted_products[15][0] }), .CI(n239), .SUM({N257, N256, N255, N254, 
        N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, N243, N242, 
        N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, N231, N230, 
        N229}) );
  shift_add_13_DW01_add_6_DW01_add_26 add_4_root_add_0_root_add_199_I16 ( .A({
        n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, 
        n16, n16, n16, n16, N214, N213, N212, N211, N210, N209, N208, N207, 
        N206, N205, N204, N203, N202, N201}), .B({N257, N257, N257, N257, N256, 
        N255, N254, N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, 
        N243, N242, N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, 
        N231, N230, N229}), .CI(n239), .SUM({N382, N381, N380, N379, N378, 
        N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, N367, N366, 
        N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, N355, N354, 
        N353, N352, N351}) );
  shift_add_13_DW01_add_5_DW01_add_25 add_3_root_add_0_root_add_199_I16 ( .A({
        n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, 
        n17, n17, N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, 
        N179, N178, N177, N176, N175, N174}), .B({n14, n14, n14, n14, n14, n14, 
        n14, n14, n14, n14, n14, n14, n14, n14, n14, n14, n14, n14, n14, n14, 
        N159, N158, N157, N156, N155, N154, N153, N152, N151, N150, N149, N148}), .CI(n239), .SUM({N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, 
        N340, N339, N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, 
        N328, N327, N326, N325, N324, N323, N322, N321, N320, N319}) );
  shift_add_13_DW01_add_4_DW01_add_24 add_5_root_add_199_I16 ( .A({n15, n15, 
        n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, 
        n15, n15, n15, n15, n15, N108, N107, N106, N105, N104, N103, N102, 
        N101, N100, N99}), .B({n20, n20, n20, n20, n20, n20, n20, n20, n20, 
        n20, n20, n20, n20, n20, n20, n20, n20, N136, N135, N134, N133, N132, 
        N131, N130, N129, N128, N127, N126, N125, N124, N123}), .CI(n239), 
        .SUM({N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}) );
  shift_add_13_DW01_add_3_DW01_add_23 add_6_root_add_199_I16 ( .A({n12, n12, 
        n12, n12, n12, n12, n12, n12, n12, n12, n12, n12, n12, n12, n12, n12, 
        n12, n12, n12, n12, n12, n12, N61, N60, N59, N58, N57, N56, N55, N54}), 
        .B({n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, 
        n18, n18, n18, n18, n18, N87, N86, N85, N84, N83, N82, N81, N80, N79, 
        N78, N77, N76}), .CI(n239), .SUM({N287, N286, N285, N284, N283, N282, 
        N281, N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270, 
        N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259, N258}) );
  shift_add_13_DW01_add_2_DW01_add_22 add_2_root_add_0_root_add_199_I16 ( .A({
        N318, N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}), .B({N382, N381, N380, 
        N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, 
        N367, N366, N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, 
        N355, N354, N353, N352, N351}), .CI(n239), .SUM({N446, N445, N444, 
        N443, N442, N441, N440, N439, N438, N437, N436, N435, N434, N433, N432, 
        N431, N430, N429, N428, N427, N426, N425, N424, N423, N422, N421, N420, 
        N419, N418, N417, N416, N415}) );
  shift_add_13_DW01_add_1_DW01_add_21 add_1_root_add_0_root_add_199_I16 ( .A({
        N446, N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435, 
        N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424, N423, 
        N422, N421, N420, N419, N418, N417, N416, N415}), .B({N287, N287, N287, 
        N286, N285, N284, N283, N282, N281, N280, N279, N278, N277, N276, N275, 
        N274, N273, N272, N271, N270, N269, N268, N267, N266, N265, N264, N263, 
        N262, N261, N260, N259, N258}), .CI(n239), .SUM({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}) );
  shift_add_13_DW01_add_0_DW01_add_20 add_0_root_add_0_root_add_199_I16 ( .A({
        N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, N340, N339, 
        N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, N328, N327, 
        N326, N325, N324, N323, N322, N321, N320, N319}), .B({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}), .CI(n239), .SUM(shift_add_out) );
  AOI222D1 U2 ( .A1(n40), .A2(\products[8][5] ), .B1(n40), .B2(
        \products[9][5] ), .C1(\products[8][5] ), .C2(\products[9][5] ), .ZN(
        n41) );
  AOI222XD4 U3 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(\products[4][5] ), .B1(\add_12_root_add_199_I16/carry[7] ), .B2(\shifted_products[5][7] ), .C1(
        \shifted_products[5][7] ), .C2(\products[4][5] ), .ZN(n45) );
  FA1D2 U4 ( .A(\shifted_products[4][6] ), .B(\shifted_products[5][6] ), .CI(
        \add_12_root_add_199_I16/carry[6] ), .CO(
        \add_12_root_add_199_I16/carry[7] ), .S(N105) );
  XOR3D2 U5 ( .A1(\products[13][5] ), .A2(n33), .A3(n72), .Z(n16) );
  OAI222D2 U6 ( .A1(n50), .A2(n49), .B1(n50), .B2(n24), .C1(n49), .C2(n24), 
        .ZN(n51) );
  NR3D3 U7 ( .A1(n9), .A2(n10), .A3(n11), .ZN(n50) );
  AOI222XD4 U8 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \products[6][5] ), .B1(\add_11_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[7][11] ), .C1(\shifted_products[7][11] ), .C2(
        \products[6][5] ), .ZN(n43) );
  FA1D2 U9 ( .A(\shifted_products[6][10] ), .B(\shifted_products[7][10] ), 
        .CI(\add_11_root_add_199_I16/carry[10] ), .CO(
        \add_11_root_add_199_I16/carry[11] ), .S(N133) );
  INR2D1 U10 ( .A1(n267), .B1(n236), .ZN(n298) );
  AN2XD1 U11 ( .A1(n287), .A2(n30), .Z(n284) );
  ND2D1 U12 ( .A1(n298), .A2(n275), .ZN(n304) );
  NR2D1 U13 ( .A1(n314), .A2(n315), .ZN(n275) );
  MAOI22D1 U14 ( .A1(\products[15][2] ), .A2(n270), .B1(n55), .B2(n299), .ZN(
        n271) );
  INVD1 U15 ( .I(n318), .ZN(n236) );
  INVD1 U16 ( .I(n278), .ZN(n234) );
  ND2D2 U17 ( .A1(n276), .A2(n234), .ZN(n315) );
  ND2D1 U18 ( .A1(n27), .A2(n300), .ZN(n314) );
  FA1D0 U19 ( .A(\shifted_products[2][8] ), .B(\shifted_products[3][8] ), .CI(
        \add_13_root_add_199_I16/carry[8] ), .CO(
        \add_13_root_add_199_I16/carry[9] ), .S(N84) );
  OAI222D0 U20 ( .A1(n43), .A2(n106), .B1(n43), .B2(n22), .C1(n106), .C2(n22), 
        .ZN(n44) );
  AOI222D1 U21 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[0][9] ), .B1(\add_14_root_add_199_I16/carry[6] ), 
        .B2(\shifted_products[1][6] ), .C1(\shifted_products[1][6] ), .C2(
        \shifted_products[0][9] ), .ZN(n53) );
  NR3D0 U22 ( .A1(n5), .A2(n6), .A3(n7), .ZN(n47) );
  AN2XD1 U23 ( .A1(n46), .A2(\products[5][5] ), .Z(n6) );
  NR3D1 U24 ( .A1(n2), .A2(n3), .A3(n4), .ZN(n33) );
  AN2XD1 U25 ( .A1(n32), .A2(\products[13][5] ), .Z(n3) );
  AN2D1 U27 ( .A1(n305), .A2(n30), .Z(n296) );
  INR2XD1 U28 ( .A1(n317), .B1(n236), .ZN(n306) );
  NR2D0 U29 ( .A1(n314), .A2(n315), .ZN(n1) );
  AN2D1 U30 ( .A1(n32), .A2(\products[12][5] ), .Z(n2) );
  AN2D1 U31 ( .A1(\products[12][5] ), .A2(\products[13][5] ), .Z(n4) );
  OAI222D1 U32 ( .A1(n31), .A2(n72), .B1(n31), .B2(n34), .C1(n72), .C2(n34), 
        .ZN(n32) );
  CKND2D0 U33 ( .A1(n300), .A2(n299), .ZN(n302) );
  CKND2D0 U34 ( .A1(n299), .A2(n267), .ZN(n259) );
  CKND2D0 U35 ( .A1(n290), .A2(n299), .ZN(n285) );
  AN2D1 U36 ( .A1(n46), .A2(\products[4][5] ), .Z(n5) );
  AN2XD1 U37 ( .A1(\products[4][5] ), .A2(\products[5][5] ), .Z(n7) );
  OAI222D1 U38 ( .A1(n45), .A2(n118), .B1(n45), .B2(n48), .C1(n118), .C2(n48), 
        .ZN(n46) );
  INR2D1 U39 ( .A1(n300), .B1(n236), .ZN(n8) );
  INR2D1 U40 ( .A1(n300), .B1(n236), .ZN(n293) );
  NR2D0 U41 ( .A1(n29), .A2(n71), .ZN(\shifted_products[13][0] ) );
  CKND2D2 U42 ( .A1(n242), .A2(n244), .ZN(n310) );
  AN2D1 U43 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(\products[2][5] ), 
        .Z(n9) );
  OAI22D0 U44 ( .A1(n306), .A2(n135), .B1(n1), .B2(n217), .ZN(
        \shifted_products[1][5] ) );
  AN2XD1 U45 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .Z(n10) );
  XNR3D1 U46 ( .A1(n24), .A2(n50), .A3(n49), .ZN(N86) );
  OAI21D1 U47 ( .A1(n281), .A2(n126), .B(n280), .ZN(\shifted_products[3][9] )
         );
  NR2D0 U48 ( .A1(n306), .A2(n129), .ZN(\shifted_products[3][0] ) );
  CKND2D0 U49 ( .A1(n245), .A2(n244), .ZN(n305) );
  AN2D1 U50 ( .A1(\shifted_products[3][9] ), .A2(\products[2][5] ), .Z(n11) );
  CKND2D1 U51 ( .A1(n241), .A2(n240), .ZN(n318) );
  CKND2D0 U52 ( .A1(n245), .A2(n243), .ZN(n299) );
  XNR3D4 U53 ( .A1(n135), .A2(n13), .A3(n52), .ZN(n12) );
  XOR3D4 U54 ( .A1(\products[9][5] ), .A2(n41), .A3(n39), .Z(n14) );
  XNR3D4 U55 ( .A1(\products[3][5] ), .A2(n49), .A3(n19), .ZN(n18) );
  AN2D4 U56 ( .A1(n267), .A2(n30), .Z(n317) );
  CKND2D0 U57 ( .A1(n243), .A2(n240), .ZN(n267) );
  CKND2D0 U58 ( .A1(n243), .A2(n242), .ZN(n290) );
  CKND2D0 U59 ( .A1(n245), .A2(n241), .ZN(n300) );
  CKND2D0 U60 ( .A1(n242), .A2(n241), .ZN(n291) );
  AOI222D0 U61 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \products[10][5] ), .B1(\add_9_root_add_199_I16/carry[13] ), .B2(
        \shifted_products[11][13] ), .C1(\shifted_products[11][13] ), .C2(
        \products[10][5] ), .ZN(n36) );
  CKAN2D0 U62 ( .A1(n293), .A2(n27), .Z(n313) );
  OAI22D0 U63 ( .A1(n296), .A2(n108), .B1(n226), .B2(n110), .ZN(
        \shifted_products[6][3] ) );
  OA222D1 U64 ( .A1(n53), .A2(n52), .B1(n53), .B2(n135), .C1(n52), .C2(n135), 
        .Z(n13) );
  CKND2 U65 ( .I(n263), .ZN(n223) );
  CKND1 U66 ( .I(n294), .ZN(n226) );
  AOI222D1 U67 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(\products[8][5] ), .B1(\add_10_root_add_199_I16/carry[9] ), .B2(\shifted_products[9][9] ), .C1(
        \shifted_products[9][9] ), .C2(\products[8][5] ), .ZN(n38) );
  AOI222D1 U68 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \products[12][5] ), .B1(\add_8_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[13][11] ), .C1(\shifted_products[13][11] ), .C2(
        \products[12][5] ), .ZN(n31) );
  XOR3D2 U69 ( .A1(\products[5][5] ), .A2(n47), .A3(n118), .Z(n15) );
  XOR3D1 U70 ( .A1(\products[11][5] ), .A2(n35), .A3(n23), .Z(n17) );
  OAI22D0 U71 ( .A1(n306), .A2(n135), .B1(n1), .B2(n216), .ZN(
        \shifted_products[1][6] ) );
  NR2D0 U72 ( .A1(n311), .A2(n236), .ZN(n319) );
  CKAN2D0 U73 ( .A1(n276), .A2(n27), .Z(n281) );
  OAI21D0 U75 ( .A1(n56), .A2(n27), .B(n266), .ZN(\shifted_products[15][15] )
         );
  NR2D0 U76 ( .A1(n29), .A2(n59), .ZN(\shifted_products[15][0] ) );
  CKND2D0 U77 ( .A1(n8), .A2(n222), .ZN(n265) );
  CKND2D2 U78 ( .A1(n8), .A2(n223), .ZN(n292) );
  CKND2D0 U79 ( .A1(n223), .A2(n276), .ZN(n311) );
  CKND1 U80 ( .I(\products[13][5] ), .ZN(n66) );
  NR2D0 U81 ( .A1(n105), .A2(n29), .ZN(\shifted_products[7][0] ) );
  CKND2D0 U82 ( .A1(\products[12][5] ), .A2(n311), .ZN(n253) );
  CKND2D0 U83 ( .A1(\products[8][5] ), .A2(n311), .ZN(n312) );
  CKND1 U84 ( .I(\products[7][5] ), .ZN(n100) );
  CKND2D0 U85 ( .A1(\products[3][5] ), .A2(n292), .ZN(n280) );
  NR2D0 U86 ( .A1(n263), .A2(n236), .ZN(n252) );
  CKND2D0 U87 ( .A1(\products[2][5] ), .A2(n292), .ZN(n277) );
  CKND2D0 U88 ( .A1(\products[10][5] ), .A2(n263), .ZN(n246) );
  CKND1 U89 ( .I(\products[6][5] ), .ZN(n106) );
  CKND2D0 U90 ( .A1(\products[15][5] ), .A2(n263), .ZN(n273) );
  NR2D0 U91 ( .A1(n29), .A2(n58), .ZN(\shifted_products[15][1] ) );
  CKAN2D0 U92 ( .A1(n287), .A2(n298), .Z(n286) );
  CKND1 U93 ( .I(\products[5][5] ), .ZN(n112) );
  CKAN2D0 U94 ( .A1(n287), .A2(n306), .Z(n288) );
  OAI22D0 U95 ( .A1(n284), .A2(n118), .B1(n283), .B2(n120), .ZN(
        \shifted_products[4][5] ) );
  OAI22D0 U96 ( .A1(n284), .A2(n72), .B1(n282), .B2(n74), .ZN(
        \shifted_products[12][5] ) );
  OAI22D0 U97 ( .A1(n29), .A2(n114), .B1(n286), .B2(n116), .ZN(
        \shifted_products[5][3] ) );
  OAI22D0 U98 ( .A1(n284), .A2(n120), .B1(n283), .B2(n122), .ZN(
        \shifted_products[4][3] ) );
  OAI22D0 U99 ( .A1(n29), .A2(n56), .B1(n228), .B2(n58), .ZN(
        \shifted_products[15][3] ) );
  OAI22D0 U100 ( .A1(n317), .A2(n80), .B1(n234), .B2(n82), .ZN(
        \shifted_products[11][3] ) );
  NR2D0 U101 ( .A1(n223), .A2(n85), .ZN(\shifted_products[10][3] ) );
  OAI22D0 U102 ( .A1(n306), .A2(n124), .B1(n279), .B2(n126), .ZN(
        \shifted_products[3][5] ) );
  OAI21D0 U103 ( .A1(n281), .A2(n133), .B(n277), .ZN(\shifted_products[2][5] )
         );
  OAI22D0 U104 ( .A1(n306), .A2(n126), .B1(n279), .B2(n128), .ZN(
        \shifted_products[3][3] ) );
  NR2D0 U105 ( .A1(n221), .A2(n131), .ZN(\shifted_products[2][3] ) );
  NR2D0 U106 ( .A1(n222), .A2(n96), .ZN(\shifted_products[8][3] ) );
  OAI22D0 U107 ( .A1(n28), .A2(n68), .B1(n225), .B2(n70), .ZN(
        \shifted_products[13][3] ) );
  OAI22D0 U108 ( .A1(n284), .A2(n74), .B1(n282), .B2(n76), .ZN(
        \shifted_products[12][3] ) );
  OAI22D0 U109 ( .A1(n102), .A2(n28), .B1(n224), .B2(n104), .ZN(
        \shifted_products[7][3] ) );
  OAI21D0 U110 ( .A1(n58), .A2(n27), .B(n266), .ZN(\shifted_products[15][13] )
         );
  NR2D0 U111 ( .A1(n306), .A2(n128), .ZN(\shifted_products[3][1] ) );
  NR2D0 U112 ( .A1(n29), .A2(n116), .ZN(\shifted_products[5][1] ) );
  NR2D0 U113 ( .A1(n284), .A2(n76), .ZN(\shifted_products[12][1] ) );
  NR2D0 U114 ( .A1(n29), .A2(n70), .ZN(\shifted_products[13][1] ) );
  NR2D0 U115 ( .A1(n104), .A2(n29), .ZN(\shifted_products[7][1] ) );
  NR2D0 U116 ( .A1(n223), .A2(n87), .ZN(\shifted_products[10][1] ) );
  OA21D0 U117 ( .A1(n281), .A2(n125), .B(n280), .Z(n24) );
  CKAN2D0 U118 ( .A1(\products[0][5] ), .A2(n29), .Z(\shifted_products[0][9] )
         );
  AO222D1 U119 ( .A1(n51), .A2(\products[2][5] ), .B1(n51), .B2(
        \products[3][5] ), .C1(\products[2][5] ), .C2(\products[3][5] ), .Z(
        n19) );
  XNR3D4 U120 ( .A1(\products[7][5] ), .A2(n106), .A3(n21), .ZN(n20) );
  AO222D1 U121 ( .A1(n44), .A2(\products[6][5] ), .B1(n44), .B2(
        \products[7][5] ), .C1(\products[6][5] ), .C2(\products[7][5] ), .Z(
        n21) );
  CKAN2D0 U122 ( .A1(n287), .A2(n317), .Z(n257) );
  OAI21D0 U123 ( .A1(n55), .A2(n27), .B(n266), .ZN(\shifted_products[15][16] )
         );
  INR2XD0 U124 ( .A1(n267), .B1(n285), .ZN(n282) );
  INR2D0 U125 ( .A1(n300), .B1(n278), .ZN(n279) );
  INR2D0 U126 ( .A1(n310), .B1(n292), .ZN(n297) );
  INR2D0 U127 ( .A1(n310), .B1(n263), .ZN(n262) );
  CKND2D0 U128 ( .A1(n27), .A2(n290), .ZN(n307) );
  CKND2D0 U129 ( .A1(n8), .A2(n290), .ZN(n260) );
  NR2D0 U131 ( .A1(n284), .A2(n123), .ZN(\shifted_products[4][0] ) );
  NR2D0 U132 ( .A1(n284), .A2(n77), .ZN(\shifted_products[12][0] ) );
  AOI22D0 U133 ( .A1(\products[6][4] ), .A2(n294), .B1(\products[6][0] ), .B2(
        n307), .ZN(n295) );
  NR2D0 U135 ( .A1(n223), .A2(n88), .ZN(\shifted_products[10][0] ) );
  NR2D0 U136 ( .A1(n222), .A2(n99), .ZN(\shifted_products[8][0] ) );
  CKND1 U137 ( .I(\products[15][4] ), .ZN(n55) );
  OAI21D0 U138 ( .A1(n281), .A2(n127), .B(n280), .ZN(\shifted_products[3][8] )
         );
  OAI21D0 U139 ( .A1(n281), .A2(n130), .B(n277), .ZN(\shifted_products[2][8] )
         );
  NR2D0 U140 ( .A1(n221), .A2(n134), .ZN(\shifted_products[2][0] ) );
  CKND2D0 U141 ( .A1(n298), .A2(n305), .ZN(n301) );
  CKND2D0 U142 ( .A1(n287), .A2(n267), .ZN(n254) );
  CKND1 U143 ( .I(\products[6][3] ), .ZN(n108) );
  CKND1 U144 ( .I(\products[14][4] ), .ZN(n61) );
  CKND1 U145 ( .I(\products[7][4] ), .ZN(n101) );
  CKND1 U146 ( .I(\products[12][3] ), .ZN(n74) );
  CKND1 U147 ( .I(\products[13][4] ), .ZN(n67) );
  CKND1 U148 ( .I(\products[5][3] ), .ZN(n114) );
  OAI21D0 U149 ( .A1(n313), .A2(n96), .B(n312), .ZN(\shifted_products[8][7] )
         );
  CKND1 U150 ( .I(\products[6][4] ), .ZN(n107) );
  OAI21D0 U151 ( .A1(n313), .A2(n74), .B(n253), .ZN(\shifted_products[12][9] )
         );
  OAI22D0 U152 ( .A1(n222), .A2(n95), .B1(n313), .B2(n99), .ZN(
        \shifted_products[8][4] ) );
  OAI21D0 U153 ( .A1(n313), .A2(n98), .B(n312), .ZN(\shifted_products[8][5] )
         );
  OAI21D0 U154 ( .A1(n313), .A2(n76), .B(n253), .ZN(\shifted_products[12][7] )
         );
  OAI22D0 U155 ( .A1(n223), .A2(n84), .B1(n247), .B2(n88), .ZN(
        \shifted_products[10][4] ) );
  FA1D1 U156 ( .A(\shifted_products[2][6] ), .B(\shifted_products[3][6] ), 
        .CI(\add_13_root_add_199_I16/carry[6] ), .CO(
        \add_13_root_add_199_I16/carry[7] ), .S(N82) );
  OAI21D0 U157 ( .A1(n281), .A2(n132), .B(n277), .ZN(\shifted_products[2][6] )
         );
  OAI22D0 U158 ( .A1(n284), .A2(n119), .B1(n283), .B2(n121), .ZN(
        \shifted_products[4][4] ) );
  OAI22D0 U159 ( .A1(n284), .A2(n73), .B1(n282), .B2(n75), .ZN(
        \shifted_products[12][4] ) );
  OAI21D0 U160 ( .A1(n313), .A2(n97), .B(n312), .ZN(\shifted_products[8][6] )
         );
  AOI22D0 U161 ( .A1(\products[9][4] ), .A2(n315), .B1(\products[9][0] ), .B2(
        n314), .ZN(n316) );
  AOI22D0 U162 ( .A1(\products[15][4] ), .A2(n268), .B1(\products[15][0] ), 
        .B2(n270), .ZN(n269) );
  AOI22D0 U163 ( .A1(\products[11][0] ), .A2(n250), .B1(\products[11][4] ), 
        .B2(n278), .ZN(n251) );
  OAI22D0 U164 ( .A1(n29), .A2(n115), .B1(n286), .B2(n117), .ZN(
        \shifted_products[5][2] ) );
  OAI22D0 U165 ( .A1(n284), .A2(n121), .B1(n283), .B2(n123), .ZN(
        \shifted_products[4][2] ) );
  OAI22D0 U166 ( .A1(n29), .A2(n69), .B1(n225), .B2(n71), .ZN(
        \shifted_products[13][2] ) );
  OAI22D0 U167 ( .A1(n284), .A2(n75), .B1(n282), .B2(n77), .ZN(
        \shifted_products[12][2] ) );
  OAI22D0 U168 ( .A1(n29), .A2(n57), .B1(n228), .B2(n59), .ZN(
        \shifted_products[15][2] ) );
  OAI22D0 U169 ( .A1(n296), .A2(n63), .B1(n227), .B2(n65), .ZN(
        \shifted_products[14][2] ) );
  OAI22D0 U170 ( .A1(n306), .A2(n216), .B1(n1), .B2(n218), .ZN(
        \shifted_products[1][4] ) );
  OAI22D0 U171 ( .A1(n306), .A2(n217), .B1(n1), .B2(n219), .ZN(
        \shifted_products[1][3] ) );
  OAI22D0 U172 ( .A1(n317), .A2(n81), .B1(n234), .B2(n83), .ZN(
        \shifted_products[11][2] ) );
  NR2D0 U173 ( .A1(n223), .A2(n86), .ZN(\shifted_products[10][2] ) );
  OAI22D0 U174 ( .A1(n306), .A2(n125), .B1(n279), .B2(n127), .ZN(
        \shifted_products[3][4] ) );
  OAI22D0 U175 ( .A1(n221), .A2(n130), .B1(n281), .B2(n134), .ZN(
        \shifted_products[2][4] ) );
  OAI22D0 U176 ( .A1(n306), .A2(n127), .B1(n279), .B2(n129), .ZN(
        \shifted_products[3][2] ) );
  NR2D0 U177 ( .A1(n221), .A2(n132), .ZN(\shifted_products[2][2] ) );
  OAI22D0 U178 ( .A1(n317), .A2(n92), .B1(n229), .B2(n94), .ZN(
        \shifted_products[9][2] ) );
  NR2D0 U179 ( .A1(n222), .A2(n97), .ZN(\shifted_products[8][2] ) );
  OAI22D0 U180 ( .A1(n296), .A2(n109), .B1(n226), .B2(n111), .ZN(
        \shifted_products[6][2] ) );
  CKAN2D0 U181 ( .A1(n306), .A2(n305), .Z(n309) );
  CKND1 U182 ( .I(\products[5][4] ), .ZN(n113) );
  NR2D0 U183 ( .A1(n306), .A2(n219), .ZN(\shifted_products[1][1] ) );
  CKND1 U184 ( .I(\products[4][4] ), .ZN(n119) );
  CKND1 U185 ( .I(\products[4][3] ), .ZN(n120) );
  CKAN2D0 U186 ( .A1(n317), .A2(n305), .Z(n272) );
  CKND2D0 U187 ( .A1(n276), .A2(n300), .ZN(n250) );
  AOI22D0 U188 ( .A1(\products[7][2] ), .A2(n302), .B1(\products[7][4] ), .B2(
        n301), .ZN(n303) );
  AOI22D0 U189 ( .A1(\products[13][4] ), .A2(n254), .B1(\products[13][2] ), 
        .B2(n285), .ZN(n255) );
  OAI21D0 U190 ( .A1(n313), .A2(n75), .B(n253), .ZN(\shifted_products[12][8] )
         );
  AOI22D0 U192 ( .A1(\products[13][4] ), .A2(n285), .B1(\products[13][2] ), 
        .B2(n236), .ZN(n256) );
  OAI22D0 U193 ( .A1(n306), .A2(n218), .B1(n1), .B2(n220), .ZN(
        \shifted_products[1][2] ) );
  INVD1 U194 ( .I(n311), .ZN(n222) );
  INVD1 U195 ( .I(n292), .ZN(n221) );
  CKBD1 U196 ( .I(n304), .Z(n29) );
  CKBD1 U197 ( .I(n304), .Z(n28) );
  CKBD1 U198 ( .I(n304), .Z(n30) );
  INVD1 U199 ( .I(n315), .ZN(n229) );
  OAI22D1 U200 ( .A1(n289), .A2(n114), .B1(n288), .B2(n112), .ZN(
        \shifted_products[5][7] ) );
  ND2D1 U201 ( .A1(n317), .A2(n234), .ZN(n263) );
  ND2D1 U202 ( .A1(n227), .A2(n8), .ZN(n294) );
  INVD1 U203 ( .I(n254), .ZN(n225) );
  NR2D1 U204 ( .A1(n296), .A2(n65), .ZN(\shifted_products[14][0] ) );
  FA1D0 U205 ( .A(\shifted_products[12][5] ), .B(\shifted_products[13][5] ), 
        .CI(\add_8_root_add_199_I16/carry[5] ), .CO(
        \add_8_root_add_199_I16/carry[6] ), .S(N206) );
  OAI222D0 U206 ( .A1(n231), .A2(n70), .B1(n225), .B2(n68), .C1(n28), .C2(n66), 
        .ZN(\shifted_products[13][5] ) );
  FA1D0 U207 ( .A(\shifted_products[4][5] ), .B(\shifted_products[5][5] ), 
        .CI(\add_12_root_add_199_I16/carry[5] ), .CO(
        \add_12_root_add_199_I16/carry[6] ), .S(N104) );
  OAI222D0 U208 ( .A1(n286), .A2(n114), .B1(n289), .B2(n116), .C1(n28), .C2(
        n112), .ZN(\shifted_products[5][5] ) );
  FA1D0 U209 ( .A(\shifted_products[4][3] ), .B(\shifted_products[5][3] ), 
        .CI(\add_12_root_add_199_I16/carry[3] ), .CO(
        \add_12_root_add_199_I16/carry[4] ), .S(N102) );
  FA1D0 U210 ( .A(\shifted_products[2][3] ), .B(\shifted_products[3][3] ), 
        .CI(\add_13_root_add_199_I16/carry[3] ), .CO(
        \add_13_root_add_199_I16/carry[4] ), .S(N79) );
  FA1D0 U211 ( .A(\shifted_products[2][5] ), .B(\shifted_products[3][5] ), 
        .CI(\add_13_root_add_199_I16/carry[5] ), .CO(
        \add_13_root_add_199_I16/carry[6] ), .S(N81) );
  FA1D0 U212 ( .A(\shifted_products[6][3] ), .B(\shifted_products[7][3] ), 
        .CI(\add_11_root_add_199_I16/carry[3] ), .CO(
        \add_11_root_add_199_I16/carry[4] ), .S(N126) );
  FA1D0 U213 ( .A(\shifted_products[12][3] ), .B(\shifted_products[13][3] ), 
        .CI(\add_8_root_add_199_I16/carry[3] ), .CO(
        \add_8_root_add_199_I16/carry[4] ), .S(N204) );
  OAI22D1 U214 ( .A1(n296), .A2(n62), .B1(n227), .B2(n64), .ZN(
        \shifted_products[14][3] ) );
  FA1D0 U215 ( .A(\shifted_products[8][3] ), .B(\shifted_products[9][3] ), 
        .CI(\add_10_root_add_199_I16/carry[3] ), .CO(
        \add_10_root_add_199_I16/carry[4] ), .S(N151) );
  OAI22D1 U216 ( .A1(n317), .A2(n91), .B1(n229), .B2(n93), .ZN(
        \shifted_products[9][3] ) );
  OAI21D1 U217 ( .A1(n274), .A2(n56), .B(n264), .ZN(\shifted_products[15][11] ) );
  OAI21D1 U219 ( .A1(n26), .A2(n64), .B(n258), .ZN(\shifted_products[14][11] )
         );
  OAI21D1 U220 ( .A1(n26), .A2(n62), .B(n258), .ZN(\shifted_products[14][13] )
         );
  FA1D0 U221 ( .A(\shifted_products[2][7] ), .B(\shifted_products[3][7] ), 
        .CI(\add_13_root_add_199_I16/carry[7] ), .CO(
        \add_13_root_add_199_I16/carry[8] ), .S(N83) );
  OAI21D1 U222 ( .A1(n281), .A2(n128), .B(n280), .ZN(\shifted_products[3][7] )
         );
  OAI21D1 U223 ( .A1(n281), .A2(n131), .B(n277), .ZN(\shifted_products[2][7] )
         );
  FA1D0 U224 ( .A(\shifted_products[2][1] ), .B(\shifted_products[3][1] ), 
        .CI(\add_13_root_add_199_I16/carry[1] ), .CO(
        \add_13_root_add_199_I16/carry[2] ), .S(N77) );
  NR2D1 U225 ( .A1(n221), .A2(n133), .ZN(\shifted_products[2][1] ) );
  FA1D0 U226 ( .A(\shifted_products[6][1] ), .B(\shifted_products[7][1] ), 
        .CI(\add_11_root_add_199_I16/carry[1] ), .CO(
        \add_11_root_add_199_I16/carry[2] ), .S(N124) );
  NR2D1 U227 ( .A1(n296), .A2(n110), .ZN(\shifted_products[6][1] ) );
  FA1D0 U228 ( .A(\shifted_products[8][1] ), .B(\shifted_products[9][1] ), 
        .CI(\add_10_root_add_199_I16/carry[1] ), .CO(
        \add_10_root_add_199_I16/carry[2] ), .S(N149) );
  NR2D1 U229 ( .A1(n317), .A2(n93), .ZN(\shifted_products[9][1] ) );
  NR2D1 U230 ( .A1(n222), .A2(n98), .ZN(\shifted_products[8][1] ) );
  NR2D1 U231 ( .A1(n296), .A2(n64), .ZN(\shifted_products[14][1] ) );
  FA1D0 U232 ( .A(\shifted_products[4][1] ), .B(\shifted_products[5][1] ), 
        .CI(\add_12_root_add_199_I16/carry[1] ), .CO(
        \add_12_root_add_199_I16/carry[2] ), .S(N100) );
  NR2D1 U233 ( .A1(n284), .A2(n122), .ZN(\shifted_products[4][1] ) );
  FA1D0 U234 ( .A(\shifted_products[12][1] ), .B(\shifted_products[13][1] ), 
        .CI(\add_8_root_add_199_I16/carry[1] ), .CO(
        \add_8_root_add_199_I16/carry[2] ), .S(N202) );
  FA1D0 U235 ( .A(\products[0][5] ), .B(\shifted_products[1][5] ), .CI(
        \add_14_root_add_199_I16/carry[5] ), .CO(
        \add_14_root_add_199_I16/carry[6] ), .S(N59) );
  NR2D1 U236 ( .A1(n296), .A2(n111), .ZN(\shifted_products[6][0] ) );
  INVD1 U237 ( .I(\products[4][5] ), .ZN(n118) );
  INVD1 U238 ( .I(\products[12][5] ), .ZN(n72) );
  NR2D1 U240 ( .A1(n285), .A2(n314), .ZN(n289) );
  INVD1 U241 ( .I(n307), .ZN(n233) );
  OAI22D1 U242 ( .A1(n238), .A2(n68), .B1(n319), .B2(n66), .ZN(
        \shifted_products[13][11] ) );
  OAI22D1 U243 ( .A1(n238), .A2(n91), .B1(n319), .B2(n89), .ZN(
        \shifted_products[9][9] ) );
  OAI22D1 U244 ( .A1(n233), .A2(n102), .B1(n297), .B2(n100), .ZN(
        \shifted_products[7][11] ) );
  INVD1 U245 ( .I(\products[9][5] ), .ZN(n89) );
  INVD1 U246 ( .I(\products[14][5] ), .ZN(n60) );
  INVD1 U247 ( .I(\products[11][5] ), .ZN(n78) );
  OAI22D1 U248 ( .A1(n238), .A2(n67), .B1(n319), .B2(n66), .ZN(
        \shifted_products[13][12] ) );
  ND2D1 U249 ( .A1(\products[14][5] ), .A2(n265), .ZN(n258) );
  ND2D1 U250 ( .A1(\products[10][5] ), .A2(n265), .ZN(n248) );
  ND2D1 U251 ( .A1(\products[15][5] ), .A2(n265), .ZN(n266) );
  ND2D1 U252 ( .A1(\products[11][5] ), .A2(n265), .ZN(n249) );
  INVD1 U253 ( .I(n259), .ZN(n227) );
  INVD1 U254 ( .I(n314), .ZN(n238) );
  OAI22D1 U255 ( .A1(n289), .A2(n113), .B1(n288), .B2(n112), .ZN(
        \shifted_products[5][8] ) );
  INVD1 U256 ( .I(n260), .ZN(n232) );
  OA22D0 U257 ( .A1(n233), .A2(n101), .B1(n297), .B2(n100), .Z(n22) );
  INVD1 U258 ( .I(\products[15][5] ), .ZN(n54) );
  INVD1 U259 ( .I(n268), .ZN(n228) );
  INVD1 U260 ( .I(n302), .ZN(n235) );
  INVD1 U261 ( .I(n301), .ZN(n224) );
  AOI222D0 U262 ( .A1(n37), .A2(\products[10][5] ), .B1(n37), .B2(
        \products[11][5] ), .C1(\products[10][5] ), .C2(\products[11][5] ), 
        .ZN(n23) );
  INVD1 U263 ( .I(n270), .ZN(n237) );
  INVD1 U264 ( .I(n285), .ZN(n231) );
  FA1D0 U265 ( .A(\shifted_products[10][3] ), .B(\shifted_products[11][3] ), 
        .CI(\add_9_root_add_199_I16/carry[3] ), .CO(
        \add_9_root_add_199_I16/carry[4] ), .S(N177) );
  FA1D0 U266 ( .A(\shifted_products[10][9] ), .B(\shifted_products[11][9] ), 
        .CI(\add_9_root_add_199_I16/carry[9] ), .CO(
        \add_9_root_add_199_I16/carry[10] ), .S(N183) );
  OAI22D1 U267 ( .A1(n230), .A2(n80), .B1(n252), .B2(n78), .ZN(
        \shifted_products[11][9] ) );
  OAI21D1 U268 ( .A1(n26), .A2(n87), .B(n248), .ZN(\shifted_products[10][9] )
         );
  FA1D0 U269 ( .A(\shifted_products[10][11] ), .B(\shifted_products[11][11] ), 
        .CI(\add_9_root_add_199_I16/carry[11] ), .CO(
        \add_9_root_add_199_I16/carry[12] ), .S(N185) );
  OAI21D1 U270 ( .A1(n26), .A2(n82), .B(n249), .ZN(\shifted_products[11][11] )
         );
  OAI21D1 U271 ( .A1(n26), .A2(n85), .B(n248), .ZN(\shifted_products[10][11] )
         );
  FA1D0 U272 ( .A(\shifted_products[10][1] ), .B(\shifted_products[11][1] ), 
        .CI(\add_9_root_add_199_I16/carry[1] ), .CO(
        \add_9_root_add_199_I16/carry[2] ), .S(N175) );
  NR2D1 U273 ( .A1(n317), .A2(n82), .ZN(\shifted_products[11][1] ) );
  NR2D1 U274 ( .A1(n317), .A2(n94), .ZN(\shifted_products[9][0] ) );
  NR2D1 U275 ( .A1(n317), .A2(n83), .ZN(\shifted_products[11][0] ) );
  INVD1 U276 ( .I(\products[3][5] ), .ZN(n124) );
  INVD1 U277 ( .I(\products[1][5] ), .ZN(n135) );
  OAI21D1 U278 ( .A1(n26), .A2(n80), .B(n249), .ZN(\shifted_products[11][13] )
         );
  OAI22D1 U279 ( .A1(n238), .A2(n90), .B1(n319), .B2(n89), .ZN(
        \shifted_products[9][10] ) );
  OA21D1 U280 ( .A1(n26), .A2(n79), .B(n249), .Z(n25) );
  INVD1 U281 ( .I(n250), .ZN(n230) );
  INVD1 U282 ( .I(\products[13][3] ), .ZN(n68) );
  ND2D1 U283 ( .A1(n299), .A2(n305), .ZN(n278) );
  NR2D1 U284 ( .A1(n306), .A2(n220), .ZN(\shifted_products[1][0] ) );
  FA1D0 U285 ( .A(\shifted_products[6][7] ), .B(\shifted_products[7][7] ), 
        .CI(\add_11_root_add_199_I16/carry[7] ), .CO(
        \add_11_root_add_199_I16/carry[8] ), .S(N130) );
  OAI222D0 U286 ( .A1(n235), .A2(n102), .B1(n309), .B2(n100), .C1(n104), .C2(
        n310), .ZN(\shifted_products[7][7] ) );
  OAI222D0 U287 ( .A1(n221), .A2(n106), .B1(n233), .B2(n110), .C1(n310), .C2(
        n108), .ZN(\shifted_products[6][7] ) );
  FA1D0 U288 ( .A(\shifted_products[8][7] ), .B(\shifted_products[9][7] ), 
        .CI(\add_10_root_add_199_I16/carry[7] ), .CO(
        \add_10_root_add_199_I16/carry[8] ), .S(N155) );
  OAI222D0 U289 ( .A1(n238), .A2(n93), .B1(n222), .B2(n89), .C1(n91), .C2(n318), .ZN(\shifted_products[9][7] ) );
  OAI222D0 U290 ( .A1(n28), .A2(n55), .B1(n228), .B2(n57), .C1(n59), .C2(n299), 
        .ZN(\shifted_products[15][4] ) );
  OAI222D0 U291 ( .A1(n296), .A2(n61), .B1(n227), .B2(n63), .C1(n310), .C2(n65), .ZN(\shifted_products[14][4] ) );
  OAI222D0 U292 ( .A1(n28), .A2(n54), .B1(n228), .B2(n56), .C1(n58), .C2(n299), 
        .ZN(\shifted_products[15][5] ) );
  OAI222D0 U293 ( .A1(n296), .A2(n60), .B1(n227), .B2(n62), .C1(n310), .C2(n64), .ZN(\shifted_products[14][5] ) );
  OAI222D0 U294 ( .A1(n237), .A2(n58), .B1(n272), .B2(n54), .C1(n56), .C2(n299), .ZN(\shifted_products[15][7] ) );
  OAI222D0 U295 ( .A1(n223), .A2(n60), .B1(n232), .B2(n64), .C1(n310), .C2(n62), .ZN(\shifted_products[14][7] ) );
  FA1D0 U296 ( .A(\shifted_products[8][4] ), .B(\shifted_products[9][4] ), 
        .CI(\add_10_root_add_199_I16/carry[4] ), .CO(
        \add_10_root_add_199_I16/carry[5] ), .S(N152) );
  OAI222D0 U297 ( .A1(n317), .A2(n90), .B1(n229), .B2(n92), .C1(n318), .C2(n94), .ZN(\shifted_products[9][4] ) );
  FA1D0 U298 ( .A(\shifted_products[12][7] ), .B(\shifted_products[13][7] ), 
        .CI(\add_8_root_add_199_I16/carry[7] ), .CO(
        \add_8_root_add_199_I16/carry[8] ), .S(N208) );
  OAI222D0 U299 ( .A1(n231), .A2(n68), .B1(n257), .B2(n66), .C1(n318), .C2(n70), .ZN(\shifted_products[13][7] ) );
  FA1D0 U300 ( .A(\shifted_products[8][5] ), .B(\shifted_products[9][5] ), 
        .CI(\add_10_root_add_199_I16/carry[5] ), .CO(
        \add_10_root_add_199_I16/carry[6] ), .S(N153) );
  OAI222D0 U301 ( .A1(n317), .A2(n89), .B1(n229), .B2(n91), .C1(n318), .C2(n93), .ZN(\shifted_products[9][5] ) );
  FA1D0 U302 ( .A(\shifted_products[6][9] ), .B(\shifted_products[7][9] ), 
        .CI(\add_11_root_add_199_I16/carry[9] ), .CO(
        \add_11_root_add_199_I16/carry[10] ), .S(N132) );
  OAI222D0 U303 ( .A1(n221), .A2(n100), .B1(n233), .B2(n104), .C1(n310), .C2(
        n102), .ZN(\shifted_products[7][9] ) );
  OAI22D1 U304 ( .A1(n233), .A2(n108), .B1(n297), .B2(n106), .ZN(
        \shifted_products[6][9] ) );
  FA1D0 U305 ( .A(\shifted_products[12][9] ), .B(\shifted_products[13][9] ), 
        .CI(\add_8_root_add_199_I16/carry[9] ), .CO(
        \add_8_root_add_199_I16/carry[10] ), .S(N210) );
  OAI222D0 U306 ( .A1(n238), .A2(n70), .B1(n222), .B2(n66), .C1(n318), .C2(n68), .ZN(\shifted_products[13][9] ) );
  FA1D0 U307 ( .A(\shifted_products[12][4] ), .B(\shifted_products[13][4] ), 
        .CI(\add_8_root_add_199_I16/carry[4] ), .CO(
        \add_8_root_add_199_I16/carry[5] ), .S(N205) );
  OAI222D0 U308 ( .A1(n231), .A2(n71), .B1(n225), .B2(n69), .C1(n28), .C2(n67), 
        .ZN(\shifted_products[13][4] ) );
  FA1D0 U309 ( .A(\shifted_products[6][5] ), .B(\shifted_products[7][5] ), 
        .CI(\add_11_root_add_199_I16/carry[5] ), .CO(
        \add_11_root_add_199_I16/carry[6] ), .S(N128) );
  OAI222D0 U310 ( .A1(n296), .A2(n106), .B1(n226), .B2(n108), .C1(n310), .C2(
        n110), .ZN(\shifted_products[6][5] ) );
  OAI222D0 U311 ( .A1(n224), .A2(n102), .B1(n235), .B2(n104), .C1(n100), .C2(
        n29), .ZN(\shifted_products[7][5] ) );
  OAI222D0 U312 ( .A1(n281), .A2(n129), .B1(n279), .B2(n125), .C1(n306), .C2(
        n124), .ZN(\shifted_products[3][6] ) );
  FA1D0 U313 ( .A(\shifted_products[4][4] ), .B(\shifted_products[5][4] ), 
        .CI(\add_12_root_add_199_I16/carry[4] ), .CO(
        \add_12_root_add_199_I16/carry[5] ), .S(N103) );
  OAI222D0 U314 ( .A1(n286), .A2(n115), .B1(n289), .B2(n117), .C1(n28), .C2(
        n113), .ZN(\shifted_products[5][4] ) );
  FA1D0 U315 ( .A(\shifted_products[6][4] ), .B(\shifted_products[7][4] ), 
        .CI(\add_11_root_add_199_I16/carry[4] ), .CO(
        \add_11_root_add_199_I16/carry[5] ), .S(N127) );
  OAI222D0 U316 ( .A1(n296), .A2(n107), .B1(n226), .B2(n109), .C1(n310), .C2(
        n111), .ZN(\shifted_products[6][4] ) );
  OAI222D0 U317 ( .A1(n224), .A2(n103), .B1(n235), .B2(n105), .C1(n101), .C2(
        n29), .ZN(\shifted_products[7][4] ) );
  FA1D0 U318 ( .A(\shifted_products[8][6] ), .B(\shifted_products[9][6] ), 
        .CI(\add_10_root_add_199_I16/carry[6] ), .CO(
        \add_10_root_add_199_I16/carry[7] ), .S(N154) );
  OAI221D0 U319 ( .A1(n317), .A2(n89), .B1(n92), .B2(n318), .C(n316), .ZN(
        \shifted_products[9][6] ) );
  OAI221D0 U320 ( .A1(n28), .A2(n54), .B1(n57), .B2(n299), .C(n269), .ZN(
        \shifted_products[15][6] ) );
  OAI221D0 U321 ( .A1(n296), .A2(n60), .B1(n310), .B2(n63), .C(n261), .ZN(
        \shifted_products[14][6] ) );
  OAI22D1 U322 ( .A1(n232), .A2(n62), .B1(n262), .B2(n60), .ZN(
        \shifted_products[14][9] ) );
  OAI221D0 U323 ( .A1(n274), .A2(n58), .B1(n237), .B2(n56), .C(n273), .ZN(
        \shifted_products[15][9] ) );
  OAI221D0 U324 ( .A1(n274), .A2(n57), .B1(n237), .B2(n55), .C(n273), .ZN(
        \shifted_products[15][10] ) );
  OAI222D0 U325 ( .A1(n232), .A2(n61), .B1(n262), .B2(n60), .C1(n26), .C2(n65), 
        .ZN(\shifted_products[14][10] ) );
  FA1D0 U326 ( .A(\shifted_products[6][8] ), .B(\shifted_products[7][8] ), 
        .CI(\add_11_root_add_199_I16/carry[8] ), .CO(
        \add_11_root_add_199_I16/carry[9] ), .S(N131) );
  OAI221D0 U327 ( .A1(n309), .A2(n100), .B1(n235), .B2(n101), .C(n308), .ZN(
        \shifted_products[7][8] ) );
  OAI222D0 U328 ( .A1(n221), .A2(n106), .B1(n233), .B2(n109), .C1(n310), .C2(
        n107), .ZN(\shifted_products[6][8] ) );
  OAI221D0 U329 ( .A1(n274), .A2(n55), .B1(n59), .B2(n27), .C(n264), .ZN(
        \shifted_products[15][12] ) );
  OAI21D1 U330 ( .A1(n26), .A2(n63), .B(n258), .ZN(\shifted_products[14][12] )
         );
  FA1D0 U331 ( .A(\shifted_products[4][2] ), .B(\shifted_products[5][2] ), 
        .CI(\add_12_root_add_199_I16/carry[2] ), .CO(
        \add_12_root_add_199_I16/carry[3] ), .S(N101) );
  FA1D0 U332 ( .A(\shifted_products[2][2] ), .B(\shifted_products[3][2] ), 
        .CI(\add_13_root_add_199_I16/carry[2] ), .CO(
        \add_13_root_add_199_I16/carry[3] ), .S(N78) );
  FA1D0 U333 ( .A(\shifted_products[2][4] ), .B(\shifted_products[3][4] ), 
        .CI(\add_13_root_add_199_I16/carry[4] ), .CO(
        \add_13_root_add_199_I16/carry[5] ), .S(N80) );
  FA1D0 U334 ( .A(\shifted_products[6][2] ), .B(\shifted_products[7][2] ), 
        .CI(\add_11_root_add_199_I16/carry[2] ), .CO(
        \add_11_root_add_199_I16/carry[3] ), .S(N125) );
  OAI22D1 U335 ( .A1(n103), .A2(n28), .B1(n224), .B2(n105), .ZN(
        \shifted_products[7][2] ) );
  FA1D0 U336 ( .A(\shifted_products[12][2] ), .B(\shifted_products[13][2] ), 
        .CI(\add_8_root_add_199_I16/carry[2] ), .CO(
        \add_8_root_add_199_I16/carry[3] ), .S(N203) );
  FA1D0 U337 ( .A(\shifted_products[8][2] ), .B(\shifted_products[9][2] ), 
        .CI(\add_10_root_add_199_I16/carry[2] ), .CO(
        \add_10_root_add_199_I16/carry[3] ), .S(N150) );
  FA1D0 U338 ( .A(\products[0][3] ), .B(\shifted_products[1][3] ), .CI(
        \add_14_root_add_199_I16/carry[3] ), .CO(
        \add_14_root_add_199_I16/carry[4] ), .S(N57) );
  FA1D0 U339 ( .A(\products[0][4] ), .B(\shifted_products[1][4] ), .CI(
        \add_14_root_add_199_I16/carry[4] ), .CO(
        \add_14_root_add_199_I16/carry[5] ), .S(N58) );
  FA1D0 U340 ( .A(\products[0][1] ), .B(\shifted_products[1][1] ), .CI(
        \add_14_root_add_199_I16/carry[1] ), .CO(
        \add_14_root_add_199_I16/carry[2] ), .S(N55) );
  INVD1 U341 ( .I(\products[12][4] ), .ZN(n73) );
  INVD1 U342 ( .I(\products[3][4] ), .ZN(n125) );
  OAI222D0 U343 ( .A1(n221), .A2(n100), .B1(n233), .B2(n103), .C1(n310), .C2(
        n101), .ZN(\shifted_products[7][10] ) );
  OAI22D1 U344 ( .A1(n233), .A2(n107), .B1(n297), .B2(n106), .ZN(
        \shifted_products[6][10] ) );
  OAI21D1 U345 ( .A1(n57), .A2(n27), .B(n266), .ZN(\shifted_products[15][14] )
         );
  OAI21D1 U346 ( .A1(n27), .A2(n61), .B(n258), .ZN(\shifted_products[14][14] )
         );
  FA1D0 U347 ( .A(\shifted_products[12][10] ), .B(\shifted_products[13][10] ), 
        .CI(\add_8_root_add_199_I16/carry[10] ), .CO(
        \add_8_root_add_199_I16/carry[11] ), .S(N211) );
  OAI21D1 U348 ( .A1(n313), .A2(n73), .B(n253), .ZN(\shifted_products[12][10] ) );
  OAI222D0 U349 ( .A1(n238), .A2(n69), .B1(n222), .B2(n66), .C1(n318), .C2(n67), .ZN(\shifted_products[13][10] ) );
  FA1D0 U350 ( .A(\shifted_products[8][8] ), .B(\shifted_products[9][8] ), 
        .CI(\add_10_root_add_199_I16/carry[8] ), .CO(
        \add_10_root_add_199_I16/carry[9] ), .S(N156) );
  OAI21D1 U351 ( .A1(n313), .A2(n95), .B(n312), .ZN(\shifted_products[8][8] )
         );
  OAI222D0 U352 ( .A1(n238), .A2(n92), .B1(n222), .B2(n89), .C1(n318), .C2(n90), .ZN(\shifted_products[9][8] ) );
  OAI22D1 U353 ( .A1(n284), .A2(n118), .B1(n283), .B2(n119), .ZN(
        \shifted_products[4][6] ) );
  OAI222D0 U354 ( .A1(n286), .A2(n113), .B1(n289), .B2(n115), .C1(n28), .C2(
        n112), .ZN(\shifted_products[5][6] ) );
  NR2D1 U355 ( .A1(n29), .A2(n117), .ZN(\shifted_products[5][0] ) );
  INVD1 U356 ( .I(\products[1][4] ), .ZN(n216) );
  INVD1 U357 ( .I(\products[1][3] ), .ZN(n217) );
  INVD1 U358 ( .I(\products[2][4] ), .ZN(n130) );
  CKBD1 U359 ( .I(n291), .Z(n27) );
  INVD1 U360 ( .I(\products[15][3] ), .ZN(n56) );
  AOI22D1 U361 ( .A1(\products[14][0] ), .A2(n260), .B1(\products[14][4] ), 
        .B2(n259), .ZN(n261) );
  ND2D1 U362 ( .A1(n318), .A2(n310), .ZN(n270) );
  INVD1 U363 ( .I(\products[14][3] ), .ZN(n62) );
  INVD1 U364 ( .I(\products[11][3] ), .ZN(n80) );
  INVD1 U365 ( .I(\products[7][3] ), .ZN(n102) );
  INVD1 U366 ( .I(\products[9][3] ), .ZN(n91) );
  INVD1 U367 ( .I(\products[11][4] ), .ZN(n79) );
  ND2D1 U368 ( .A1(n267), .A2(n305), .ZN(n268) );
  INVD1 U369 ( .I(\products[9][4] ), .ZN(n90) );
  INVD1 U370 ( .I(\products[3][3] ), .ZN(n126) );
  FA1D0 U371 ( .A(\shifted_products[10][4] ), .B(\shifted_products[11][4] ), 
        .CI(\add_9_root_add_199_I16/carry[4] ), .CO(
        \add_9_root_add_199_I16/carry[5] ), .S(N178) );
  OAI222D0 U372 ( .A1(n317), .A2(n79), .B1(n234), .B2(n81), .C1(n318), .C2(n83), .ZN(\shifted_products[11][4] ) );
  FA1D0 U373 ( .A(\shifted_products[10][5] ), .B(\shifted_products[11][5] ), 
        .CI(\add_9_root_add_199_I16/carry[5] ), .CO(
        \add_9_root_add_199_I16/carry[6] ), .S(N179) );
  OAI222D0 U374 ( .A1(n317), .A2(n78), .B1(n234), .B2(n80), .C1(n318), .C2(n82), .ZN(\shifted_products[11][5] ) );
  OAI21D1 U375 ( .A1(n247), .A2(n87), .B(n246), .ZN(\shifted_products[10][5] )
         );
  FA1D0 U376 ( .A(\shifted_products[10][7] ), .B(\shifted_products[11][7] ), 
        .CI(\add_9_root_add_199_I16/carry[7] ), .CO(
        \add_9_root_add_199_I16/carry[8] ), .S(N181) );
  OAI222D0 U377 ( .A1(n223), .A2(n78), .B1(n230), .B2(n82), .C1(n318), .C2(n80), .ZN(\shifted_products[11][7] ) );
  OAI21D1 U378 ( .A1(n247), .A2(n85), .B(n246), .ZN(\shifted_products[10][7] )
         );
  FA1D0 U379 ( .A(\shifted_products[10][8] ), .B(\shifted_products[11][8] ), 
        .CI(\add_9_root_add_199_I16/carry[8] ), .CO(
        \add_9_root_add_199_I16/carry[9] ), .S(N182) );
  OAI222D0 U380 ( .A1(n223), .A2(n78), .B1(n230), .B2(n81), .C1(n318), .C2(n79), .ZN(\shifted_products[11][8] ) );
  OAI221D0 U381 ( .A1(n247), .A2(n84), .B1(n27), .B2(n88), .C(n246), .ZN(
        \shifted_products[10][8] ) );
  FA1D0 U382 ( .A(\shifted_products[10][10] ), .B(\shifted_products[11][10] ), 
        .CI(\add_9_root_add_199_I16/carry[10] ), .CO(
        \add_9_root_add_199_I16/carry[11] ), .S(N184) );
  OAI222D0 U383 ( .A1(n230), .A2(n79), .B1(n252), .B2(n78), .C1(n26), .C2(n83), 
        .ZN(\shifted_products[11][10] ) );
  OAI21D1 U384 ( .A1(n26), .A2(n86), .B(n248), .ZN(\shifted_products[10][10] )
         );
  FA1D0 U385 ( .A(\shifted_products[10][6] ), .B(\shifted_products[11][6] ), 
        .CI(\add_9_root_add_199_I16/carry[6] ), .CO(
        \add_9_root_add_199_I16/carry[7] ), .S(N180) );
  OAI221D0 U386 ( .A1(n317), .A2(n78), .B1(n318), .B2(n81), .C(n251), .ZN(
        \shifted_products[11][6] ) );
  OAI21D1 U387 ( .A1(n247), .A2(n86), .B(n246), .ZN(\shifted_products[10][6] )
         );
  FA1D0 U388 ( .A(\shifted_products[10][2] ), .B(\shifted_products[11][2] ), 
        .CI(\add_9_root_add_199_I16/carry[2] ), .CO(
        \add_9_root_add_199_I16/carry[3] ), .S(N176) );
  FA1D0 U389 ( .A(\shifted_products[10][12] ), .B(\shifted_products[11][12] ), 
        .CI(\add_9_root_add_199_I16/carry[12] ), .CO(
        \add_9_root_add_199_I16/carry[13] ), .S(N186) );
  OAI21D1 U390 ( .A1(n26), .A2(n81), .B(n249), .ZN(\shifted_products[11][12] )
         );
  OAI21D1 U391 ( .A1(n26), .A2(n84), .B(n248), .ZN(\shifted_products[10][12] )
         );
  INVD1 U392 ( .I(\products[10][4] ), .ZN(n84) );
  INVD1 U393 ( .I(\products[10][3] ), .ZN(n85) );
  INVD1 U394 ( .I(\products[8][4] ), .ZN(n95) );
  INVD1 U395 ( .I(\products[2][3] ), .ZN(n131) );
  INVD1 U396 ( .I(\products[8][3] ), .ZN(n96) );
  CKBD1 U397 ( .I(n291), .Z(n26) );
  INVD1 U398 ( .I(\products[15][1] ), .ZN(n58) );
  INVD1 U399 ( .I(\products[7][1] ), .ZN(n104) );
  INVD1 U400 ( .I(\products[14][1] ), .ZN(n64) );
  INVD1 U401 ( .I(\products[13][1] ), .ZN(n70) );
  INVD1 U402 ( .I(\products[6][1] ), .ZN(n110) );
  INVD1 U403 ( .I(\products[5][1] ), .ZN(n116) );
  INVD1 U404 ( .I(\products[12][1] ), .ZN(n76) );
  INVD1 U405 ( .I(\products[3][1] ), .ZN(n128) );
  INVD1 U406 ( .I(\products[4][1] ), .ZN(n122) );
  INVD1 U407 ( .I(\products[1][1] ), .ZN(n219) );
  INVD1 U408 ( .I(\products[2][1] ), .ZN(n133) );
  INVD1 U409 ( .I(\products[15][0] ), .ZN(n59) );
  INVD1 U410 ( .I(\products[14][0] ), .ZN(n65) );
  INVD1 U411 ( .I(\products[11][0] ), .ZN(n83) );
  INVD1 U412 ( .I(\products[7][0] ), .ZN(n105) );
  INVD1 U413 ( .I(\products[6][0] ), .ZN(n111) );
  INVD1 U414 ( .I(\products[9][0] ), .ZN(n94) );
  INVD1 U415 ( .I(\products[11][1] ), .ZN(n82) );
  INVD1 U416 ( .I(\products[9][1] ), .ZN(n93) );
  INVD1 U417 ( .I(\products[10][1] ), .ZN(n87) );
  INVD1 U418 ( .I(\products[8][1] ), .ZN(n98) );
  INVD1 U419 ( .I(\products[13][2] ), .ZN(n69) );
  INVD1 U420 ( .I(\products[12][2] ), .ZN(n75) );
  FA1D0 U421 ( .A(\shifted_products[6][6] ), .B(\shifted_products[7][6] ), 
        .CI(\add_11_root_add_199_I16/carry[6] ), .CO(
        \add_11_root_add_199_I16/carry[7] ), .S(N129) );
  OAI221D0 U422 ( .A1(n100), .A2(n28), .B1(n310), .B2(n105), .C(n303), .ZN(
        \shifted_products[7][6] ) );
  OAI221D0 U423 ( .A1(n296), .A2(n106), .B1(n310), .B2(n109), .C(n295), .ZN(
        \shifted_products[6][6] ) );
  FA1D0 U424 ( .A(\shifted_products[12][6] ), .B(\shifted_products[13][6] ), 
        .CI(\add_8_root_add_199_I16/carry[6] ), .CO(
        \add_8_root_add_199_I16/carry[7] ), .S(N207) );
  OAI222D0 U425 ( .A1(n284), .A2(n72), .B1(n282), .B2(n73), .C1(n313), .C2(n77), .ZN(\shifted_products[12][6] ) );
  OAI221D0 U426 ( .A1(n28), .A2(n66), .B1(n318), .B2(n71), .C(n255), .ZN(
        \shifted_products[13][6] ) );
  OAI222D0 U427 ( .A1(n223), .A2(n60), .B1(n232), .B2(n63), .C1(n310), .C2(n61), .ZN(\shifted_products[14][8] ) );
  OAI221D0 U428 ( .A1(n272), .A2(n54), .B1(n274), .B2(n59), .C(n271), .ZN(
        \shifted_products[15][8] ) );
  FA1D0 U429 ( .A(\shifted_products[12][8] ), .B(\shifted_products[13][8] ), 
        .CI(\add_8_root_add_199_I16/carry[8] ), .CO(
        \add_8_root_add_199_I16/carry[9] ), .S(N209) );
  OAI221D0 U430 ( .A1(n257), .A2(n66), .B1(n238), .B2(n71), .C(n256), .ZN(
        \shifted_products[13][8] ) );
  FA1D0 U431 ( .A(\products[0][2] ), .B(\shifted_products[1][2] ), .CI(
        \add_14_root_add_199_I16/carry[2] ), .CO(
        \add_14_root_add_199_I16/carry[3] ), .S(N56) );
  INVD1 U432 ( .I(\products[5][2] ), .ZN(n115) );
  INVD1 U433 ( .I(\products[4][2] ), .ZN(n121) );
  INVD1 U434 ( .I(\products[15][2] ), .ZN(n57) );
  INVD1 U435 ( .I(\products[14][2] ), .ZN(n63) );
  INVD1 U436 ( .I(\products[11][2] ), .ZN(n81) );
  INVD1 U437 ( .I(\products[6][2] ), .ZN(n109) );
  INVD1 U438 ( .I(\products[9][2] ), .ZN(n92) );
  INVD1 U439 ( .I(\products[7][2] ), .ZN(n103) );
  INVD1 U440 ( .I(\products[3][2] ), .ZN(n127) );
  INVD1 U441 ( .I(\products[10][2] ), .ZN(n86) );
  INVD1 U442 ( .I(\products[1][2] ), .ZN(n218) );
  INVD1 U443 ( .I(\products[2][2] ), .ZN(n132) );
  INVD1 U444 ( .I(\products[8][2] ), .ZN(n97) );
  INVD1 U445 ( .I(\products[13][0] ), .ZN(n71) );
  INVD1 U446 ( .I(\products[10][0] ), .ZN(n88) );
  INVD1 U447 ( .I(\products[3][0] ), .ZN(n129) );
  INVD1 U448 ( .I(\products[5][0] ), .ZN(n117) );
  INVD1 U449 ( .I(\products[12][0] ), .ZN(n77) );
  INVD1 U450 ( .I(\products[4][0] ), .ZN(n123) );
  INVD1 U451 ( .I(\products[1][0] ), .ZN(n220) );
  INVD1 U452 ( .I(\products[2][0] ), .ZN(n134) );
  INVD1 U453 ( .I(\products[8][0] ), .ZN(n99) );
  INR3D0 U454 ( .A1(input_bitwidth[2]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[1]), .ZN(n241) );
  INR3D0 U455 ( .A1(weight_bitwidth[0]), .B1(weight_bitwidth[1]), .B2(
        weight_bitwidth[2]), .ZN(n240) );
  INR3D0 U456 ( .A1(input_bitwidth[0]), .B1(input_bitwidth[1]), .B2(
        input_bitwidth[2]), .ZN(n244) );
  INR3D0 U457 ( .A1(input_bitwidth[1]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[2]), .ZN(n243) );
  INR3D0 U458 ( .A1(weight_bitwidth[1]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[2]), .ZN(n245) );
  INR3D0 U459 ( .A1(weight_bitwidth[2]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[1]), .ZN(n242) );
  TIEL U460 ( .ZN(n239) );
  AN2D0 U461 ( .A1(\products[0][0] ), .A2(\shifted_products[1][0] ), .Z(
        \add_14_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U462 ( .A1(\shifted_products[1][0] ), .A2(\products[0][0] ), .Z(N54) );
  AN2D0 U463 ( .A1(\shifted_products[2][0] ), .A2(\shifted_products[3][0] ), 
        .Z(\add_13_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U464 ( .A1(\shifted_products[3][0] ), .A2(\shifted_products[2][0] ), 
        .Z(N76) );
  AN2D0 U465 ( .A1(\shifted_products[12][0] ), .A2(\shifted_products[13][0] ), 
        .Z(\add_8_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U466 ( .A1(\shifted_products[13][0] ), .A2(
        \shifted_products[12][0] ), .Z(N201) );
  AN2D0 U467 ( .A1(\shifted_products[6][0] ), .A2(\shifted_products[7][0] ), 
        .Z(\add_11_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U468 ( .A1(\shifted_products[7][0] ), .A2(\shifted_products[6][0] ), 
        .Z(N123) );
  AN2D0 U469 ( .A1(\shifted_products[4][0] ), .A2(\shifted_products[5][0] ), 
        .Z(\add_12_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U470 ( .A1(\shifted_products[5][0] ), .A2(\shifted_products[4][0] ), 
        .Z(N99) );
  AN2D0 U471 ( .A1(\shifted_products[8][0] ), .A2(\shifted_products[9][0] ), 
        .Z(\add_10_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U472 ( .A1(\shifted_products[9][0] ), .A2(\shifted_products[8][0] ), 
        .Z(N148) );
  AN2D0 U473 ( .A1(\shifted_products[10][0] ), .A2(\shifted_products[11][0] ), 
        .Z(\add_9_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U474 ( .A1(\shifted_products[11][0] ), .A2(
        \shifted_products[10][0] ), .Z(N174) );
  XOR3D0 U475 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[13][11] ), .A3(\products[12][5] ), .Z(N212) );
  XOR3D0 U476 ( .A1(\shifted_products[13][12] ), .A2(n31), .A3(n72), .Z(N213)
         );
  XOR3D0 U477 ( .A1(\products[13][5] ), .A2(\products[12][5] ), .A3(n32), .Z(
        N214) );
  CKND0 U478 ( .I(\shifted_products[13][12] ), .ZN(n34) );
  XNR3D0 U479 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \shifted_products[11][13] ), .A3(n35), .ZN(N187) );
  XNR3D0 U480 ( .A1(n25), .A2(n36), .A3(n35), .ZN(N188) );
  XNR3D0 U481 ( .A1(\products[11][5] ), .A2(n35), .A3(n37), .ZN(N189) );
  OAI222D0 U482 ( .A1(n36), .A2(n35), .B1(n36), .B2(n25), .C1(n35), .C2(n25), 
        .ZN(n37) );
  CKND0 U483 ( .I(\products[10][5] ), .ZN(n35) );
  XOR3D0 U484 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[9][9] ), .A3(\products[8][5] ), .Z(N157) );
  XOR3D0 U485 ( .A1(\shifted_products[9][10] ), .A2(n38), .A3(n39), .Z(N158)
         );
  XOR3D0 U486 ( .A1(\products[9][5] ), .A2(\products[8][5] ), .A3(n40), .Z(
        N159) );
  OAI222D0 U487 ( .A1(n38), .A2(n39), .B1(n38), .B2(n42), .C1(n39), .C2(n42), 
        .ZN(n40) );
  CKND0 U488 ( .I(\shifted_products[9][10] ), .ZN(n42) );
  CKND0 U489 ( .I(\products[8][5] ), .ZN(n39) );
  XNR3D0 U490 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[7][11] ), .A3(n106), .ZN(N134) );
  XNR3D0 U491 ( .A1(n22), .A2(n43), .A3(n106), .ZN(N135) );
  XNR3D0 U492 ( .A1(\products[7][5] ), .A2(n106), .A3(n44), .ZN(N136) );
  XOR3D0 U493 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(
        \shifted_products[5][7] ), .A3(\products[4][5] ), .Z(N106) );
  XOR3D0 U494 ( .A1(\shifted_products[5][8] ), .A2(n45), .A3(n118), .Z(N107)
         );
  XOR3D0 U495 ( .A1(\products[5][5] ), .A2(\products[4][5] ), .A3(n46), .Z(
        N108) );
  CKND0 U496 ( .I(\shifted_products[5][8] ), .ZN(n48) );
  XNR3D0 U497 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .A3(n49), .ZN(N85) );
  XNR3D0 U498 ( .A1(\products[3][5] ), .A2(n49), .A3(n51), .ZN(N87) );
  CKND0 U499 ( .I(\products[2][5] ), .ZN(n49) );
  XNR3D0 U500 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[1][6] ), .A3(n52), .ZN(N60) );
  XNR3D0 U501 ( .A1(n135), .A2(n53), .A3(n52), .ZN(N61) );
  CKND0 U502 ( .I(\shifted_products[0][9] ), .ZN(n52) );
endmodule


module fusion_unit_13_DW01_add_0_DW01_add_17 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  CKAN2D0 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D0 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module fusion_unit_13 ( clk, nRST, input_bitwidth, weight_bitwidth, input_sign, 
        weight_sign, input_forward, weight, psum_in, psum, input_to_right );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  input [3:0] input_sign;
  input [3:0] weight_sign;
  input [31:0] input_forward;
  input [31:0] weight;
  input [31:0] psum_in;
  output [31:0] psum;
  output [31:0] input_to_right;
  input clk, nRST;
  wire   \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] , n2;
  wire   [31:0] shift_add_out;
  assign input_to_right[31] = input_forward[31];
  assign input_to_right[30] = input_forward[30];
  assign input_to_right[29] = input_forward[29];
  assign input_to_right[28] = input_forward[28];
  assign input_to_right[27] = input_forward[27];
  assign input_to_right[26] = input_forward[26];
  assign input_to_right[25] = input_forward[25];
  assign input_to_right[24] = input_forward[24];
  assign input_to_right[23] = input_forward[23];
  assign input_to_right[22] = input_forward[22];
  assign input_to_right[21] = input_forward[21];
  assign input_to_right[20] = input_forward[20];
  assign input_to_right[19] = input_forward[19];
  assign input_to_right[18] = input_forward[18];
  assign input_to_right[17] = input_forward[17];
  assign input_to_right[16] = input_forward[16];
  assign input_to_right[15] = input_forward[15];
  assign input_to_right[14] = input_forward[14];
  assign input_to_right[13] = input_forward[13];
  assign input_to_right[12] = input_forward[12];
  assign input_to_right[11] = input_forward[11];
  assign input_to_right[10] = input_forward[10];
  assign input_to_right[9] = input_forward[9];
  assign input_to_right[8] = input_forward[8];
  assign input_to_right[7] = input_forward[7];
  assign input_to_right[6] = input_forward[6];
  assign input_to_right[5] = input_forward[5];
  assign input_to_right[4] = input_forward[4];
  assign input_to_right[3] = input_forward[3];
  assign input_to_right[2] = input_forward[2];
  assign input_to_right[1] = input_forward[1];
  assign input_to_right[0] = input_forward[0];

  bit_brick_223 \genblk1[0].BB  ( .x(input_forward[1:0]), .y(weight[1:0]), 
        .sx(input_sign[0]), .sy(weight_sign[0]), .product({\products[0][5] , 
        \products[0][4] , \products[0][3] , \products[0][2] , \products[0][1] , 
        \products[0][0] }) );
  bit_brick_222 \genblk1[1].BB  ( .x(input_forward[3:2]), .y(weight[3:2]), 
        .sx(input_sign[0]), .sy(weight_sign[1]), .product({\products[1][5] , 
        \products[1][4] , \products[1][3] , \products[1][2] , \products[1][1] , 
        \products[1][0] }) );
  bit_brick_221 \genblk1[2].BB  ( .x(input_forward[5:4]), .y(weight[5:4]), 
        .sx(input_sign[0]), .sy(weight_sign[2]), .product({\products[2][5] , 
        \products[2][4] , \products[2][3] , \products[2][2] , \products[2][1] , 
        \products[2][0] }) );
  bit_brick_220 \genblk1[3].BB  ( .x(input_forward[7:6]), .y(weight[7:6]), 
        .sx(input_sign[0]), .sy(weight_sign[3]), .product({\products[3][5] , 
        \products[3][4] , \products[3][3] , \products[3][2] , \products[3][1] , 
        \products[3][0] }) );
  bit_brick_219 \genblk1[4].BB  ( .x(input_forward[9:8]), .y(weight[9:8]), 
        .sx(input_sign[1]), .sy(weight_sign[0]), .product({\products[4][5] , 
        \products[4][4] , \products[4][3] , \products[4][2] , \products[4][1] , 
        \products[4][0] }) );
  bit_brick_218 \genblk1[5].BB  ( .x(input_forward[11:10]), .y(weight[11:10]), 
        .sx(input_sign[1]), .sy(weight_sign[1]), .product({\products[5][5] , 
        \products[5][4] , \products[5][3] , \products[5][2] , \products[5][1] , 
        \products[5][0] }) );
  bit_brick_217 \genblk1[6].BB  ( .x(input_forward[13:12]), .y(weight[13:12]), 
        .sx(input_sign[1]), .sy(weight_sign[2]), .product({\products[6][5] , 
        \products[6][4] , \products[6][3] , \products[6][2] , \products[6][1] , 
        \products[6][0] }) );
  bit_brick_216 \genblk1[7].BB  ( .x(input_forward[15:14]), .y(weight[15:14]), 
        .sx(input_sign[1]), .sy(weight_sign[3]), .product({\products[7][5] , 
        \products[7][4] , \products[7][3] , \products[7][2] , \products[7][1] , 
        \products[7][0] }) );
  bit_brick_215 \genblk1[8].BB  ( .x(input_forward[17:16]), .y(weight[17:16]), 
        .sx(input_sign[2]), .sy(weight_sign[0]), .product({\products[8][5] , 
        \products[8][4] , \products[8][3] , \products[8][2] , \products[8][1] , 
        \products[8][0] }) );
  bit_brick_214 \genblk1[9].BB  ( .x(input_forward[19:18]), .y(weight[19:18]), 
        .sx(input_sign[2]), .sy(weight_sign[1]), .product({\products[9][5] , 
        \products[9][4] , \products[9][3] , \products[9][2] , \products[9][1] , 
        \products[9][0] }) );
  bit_brick_213 \genblk1[10].BB  ( .x(input_forward[21:20]), .y(weight[21:20]), 
        .sx(input_sign[2]), .sy(weight_sign[2]), .product({\products[10][5] , 
        \products[10][4] , \products[10][3] , \products[10][2] , 
        \products[10][1] , \products[10][0] }) );
  bit_brick_212 \genblk1[11].BB  ( .x(input_forward[23:22]), .y(weight[23:22]), 
        .sx(input_sign[2]), .sy(weight_sign[3]), .product({\products[11][5] , 
        \products[11][4] , \products[11][3] , \products[11][2] , 
        \products[11][1] , \products[11][0] }) );
  bit_brick_211 \genblk1[12].BB  ( .x(input_forward[25:24]), .y(weight[25:24]), 
        .sx(input_sign[3]), .sy(weight_sign[0]), .product({\products[12][5] , 
        \products[12][4] , \products[12][3] , \products[12][2] , 
        \products[12][1] , \products[12][0] }) );
  bit_brick_210 \genblk1[13].BB  ( .x(input_forward[27:26]), .y(weight[27:26]), 
        .sx(input_sign[3]), .sy(weight_sign[1]), .product({\products[13][5] , 
        \products[13][4] , \products[13][3] , \products[13][2] , 
        \products[13][1] , \products[13][0] }) );
  bit_brick_209 \genblk1[14].BB  ( .x(input_forward[29:28]), .y(weight[29:28]), 
        .sx(input_sign[3]), .sy(weight_sign[2]), .product({\products[14][5] , 
        \products[14][4] , \products[14][3] , \products[14][2] , 
        \products[14][1] , \products[14][0] }) );
  bit_brick_208 \genblk1[15].BB  ( .x(input_forward[31:30]), .y(weight[31:30]), 
        .sx(input_sign[3]), .sy(weight_sign[3]), .product({\products[15][5] , 
        \products[15][4] , \products[15][3] , \products[15][2] , 
        \products[15][1] , \products[15][0] }) );
  shift_add_13 shift_add ( .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .products({\products[15][5] , \products[15][4] , 
        \products[15][3] , \products[15][2] , \products[15][1] , 
        \products[15][0] , \products[14][5] , \products[14][4] , 
        \products[14][3] , \products[14][2] , \products[14][1] , 
        \products[14][0] , \products[13][5] , \products[13][4] , 
        \products[13][3] , \products[13][2] , \products[13][1] , 
        \products[13][0] , \products[12][5] , \products[12][4] , 
        \products[12][3] , \products[12][2] , \products[12][1] , 
        \products[12][0] , \products[11][5] , \products[11][4] , 
        \products[11][3] , \products[11][2] , \products[11][1] , 
        \products[11][0] , \products[10][5] , \products[10][4] , 
        \products[10][3] , \products[10][2] , \products[10][1] , 
        \products[10][0] , \products[9][5] , \products[9][4] , 
        \products[9][3] , \products[9][2] , \products[9][1] , \products[9][0] , 
        \products[8][5] , \products[8][4] , \products[8][3] , \products[8][2] , 
        \products[8][1] , \products[8][0] , \products[7][5] , \products[7][4] , 
        \products[7][3] , \products[7][2] , \products[7][1] , \products[7][0] , 
        \products[6][5] , \products[6][4] , \products[6][3] , \products[6][2] , 
        \products[6][1] , \products[6][0] , \products[5][5] , \products[5][4] , 
        \products[5][3] , \products[5][2] , \products[5][1] , \products[5][0] , 
        \products[4][5] , \products[4][4] , \products[4][3] , \products[4][2] , 
        \products[4][1] , \products[4][0] , \products[3][5] , \products[3][4] , 
        \products[3][3] , \products[3][2] , \products[3][1] , \products[3][0] , 
        \products[2][5] , \products[2][4] , \products[2][3] , \products[2][2] , 
        \products[2][1] , \products[2][0] , \products[1][5] , \products[1][4] , 
        \products[1][3] , \products[1][2] , \products[1][1] , \products[1][0] , 
        \products[0][5] , \products[0][4] , \products[0][3] , \products[0][2] , 
        \products[0][1] , \products[0][0] }), .shift_add_out(shift_add_out) );
  fusion_unit_13_DW01_add_0_DW01_add_17 add_53 ( .A(shift_add_out), .B(psum_in), .CI(n2), .SUM(psum) );
  TIEL U1 ( .ZN(n2) );
endmodule


module WBUF_ARRAY_SIZE4_DATA_W32_12 ( clk, nRST, WBUF_wr_en, WBUF_data_in, 
        WBUF_data_out );
  input [31:0] WBUF_data_in;
  output [31:0] WBUF_data_out;
  input clk, nRST, WBUF_wr_en;
  wire   n1, n2, n3, n4, n5, n6;

  EDFCNQD1 \WBUF_data_out_reg[31]  ( .D(WBUF_data_in[31]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[31]) );
  EDFCNQD1 \WBUF_data_out_reg[30]  ( .D(WBUF_data_in[30]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[30]) );
  EDFCNQD1 \WBUF_data_out_reg[29]  ( .D(WBUF_data_in[29]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[29]) );
  EDFCNQD1 \WBUF_data_out_reg[28]  ( .D(WBUF_data_in[28]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[28]) );
  EDFCNQD1 \WBUF_data_out_reg[27]  ( .D(WBUF_data_in[27]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[27]) );
  EDFCNQD1 \WBUF_data_out_reg[26]  ( .D(WBUF_data_in[26]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[26]) );
  EDFCNQD1 \WBUF_data_out_reg[25]  ( .D(WBUF_data_in[25]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[25]) );
  EDFCNQD1 \WBUF_data_out_reg[24]  ( .D(WBUF_data_in[24]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[24]) );
  EDFCNQD1 \WBUF_data_out_reg[23]  ( .D(WBUF_data_in[23]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[23]) );
  EDFCNQD1 \WBUF_data_out_reg[22]  ( .D(WBUF_data_in[22]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[22]) );
  EDFCNQD1 \WBUF_data_out_reg[21]  ( .D(WBUF_data_in[21]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[21]) );
  EDFCNQD1 \WBUF_data_out_reg[20]  ( .D(WBUF_data_in[20]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[20]) );
  EDFCNQD1 \WBUF_data_out_reg[19]  ( .D(WBUF_data_in[19]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[19]) );
  EDFCNQD1 \WBUF_data_out_reg[18]  ( .D(WBUF_data_in[18]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[18]) );
  EDFCNQD1 \WBUF_data_out_reg[17]  ( .D(WBUF_data_in[17]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[17]) );
  EDFCNQD1 \WBUF_data_out_reg[16]  ( .D(WBUF_data_in[16]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[16]) );
  EDFCNQD1 \WBUF_data_out_reg[15]  ( .D(WBUF_data_in[15]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[15]) );
  EDFCNQD1 \WBUF_data_out_reg[14]  ( .D(WBUF_data_in[14]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[14]) );
  EDFCNQD1 \WBUF_data_out_reg[13]  ( .D(WBUF_data_in[13]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[13]) );
  EDFCNQD1 \WBUF_data_out_reg[12]  ( .D(WBUF_data_in[12]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[12]) );
  EDFCNQD1 \WBUF_data_out_reg[11]  ( .D(WBUF_data_in[11]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[11]) );
  EDFCNQD1 \WBUF_data_out_reg[10]  ( .D(WBUF_data_in[10]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[10]) );
  EDFCNQD1 \WBUF_data_out_reg[9]  ( .D(WBUF_data_in[9]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[9]) );
  EDFCNQD1 \WBUF_data_out_reg[8]  ( .D(WBUF_data_in[8]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[8]) );
  EDFCNQD1 \WBUF_data_out_reg[7]  ( .D(WBUF_data_in[7]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[7]) );
  EDFCNQD1 \WBUF_data_out_reg[6]  ( .D(WBUF_data_in[6]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[6]) );
  EDFCNQD1 \WBUF_data_out_reg[5]  ( .D(WBUF_data_in[5]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[5]) );
  EDFCNQD1 \WBUF_data_out_reg[4]  ( .D(WBUF_data_in[4]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[4]) );
  EDFCNQD1 \WBUF_data_out_reg[3]  ( .D(WBUF_data_in[3]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[3]) );
  EDFCNQD1 \WBUF_data_out_reg[2]  ( .D(WBUF_data_in[2]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[2]) );
  EDFCNQD1 \WBUF_data_out_reg[1]  ( .D(WBUF_data_in[1]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[1]) );
  EDFCNQD1 \WBUF_data_out_reg[0]  ( .D(WBUF_data_in[0]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[0]) );
  CKBD1 U2 ( .I(WBUF_wr_en), .Z(n5) );
  CKBD1 U3 ( .I(WBUF_wr_en), .Z(n4) );
  CKBD1 U4 ( .I(nRST), .Z(n1) );
  CKBD1 U5 ( .I(nRST), .Z(n2) );
  CKBD1 U6 ( .I(nRST), .Z(n3) );
  CKBD1 U7 ( .I(WBUF_wr_en), .Z(n6) );
endmodule


module w_mux_12 ( clk, nRST, input_bitwidth, rd_en, data_in, data_out );
  input [2:0] input_bitwidth;
  input [31:0] data_in;
  output [31:0] data_out;
  input clk, nRST, rd_en;
  wire   N40, N41, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129,
         n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140,
         n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151,
         n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162,
         n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173,
         n174, n175, n176, n177, n178;
  wire   [1:0] rd_ptr;
  wire   [31:0] next_data_out;

  EDFCNQD1 \rd_ptr_reg[0]  ( .D(N40), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[0]) );
  EDFCNQD1 \rd_ptr_reg[1]  ( .D(N41), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[1]) );
  DFCNQD1 \data_out_reg[31]  ( .D(next_data_out[31]), .CP(clk), .CDN(n1), .Q(
        data_out[31]) );
  DFCNQD1 \data_out_reg[30]  ( .D(next_data_out[30]), .CP(clk), .CDN(n3), .Q(
        data_out[30]) );
  DFCNQD1 \data_out_reg[29]  ( .D(next_data_out[29]), .CP(clk), .CDN(n3), .Q(
        data_out[29]) );
  DFCNQD1 \data_out_reg[28]  ( .D(next_data_out[28]), .CP(clk), .CDN(n3), .Q(
        data_out[28]) );
  DFCNQD1 \data_out_reg[27]  ( .D(next_data_out[27]), .CP(clk), .CDN(n3), .Q(
        data_out[27]) );
  DFCNQD1 \data_out_reg[26]  ( .D(next_data_out[26]), .CP(clk), .CDN(n3), .Q(
        data_out[26]) );
  DFCNQD1 \data_out_reg[25]  ( .D(next_data_out[25]), .CP(clk), .CDN(n2), .Q(
        data_out[25]) );
  DFCNQD1 \data_out_reg[24]  ( .D(next_data_out[24]), .CP(clk), .CDN(n2), .Q(
        data_out[24]) );
  DFCNQD1 \data_out_reg[23]  ( .D(next_data_out[23]), .CP(clk), .CDN(n3), .Q(
        data_out[23]) );
  DFCNQD1 \data_out_reg[22]  ( .D(next_data_out[22]), .CP(clk), .CDN(n2), .Q(
        data_out[22]) );
  DFCNQD1 \data_out_reg[21]  ( .D(next_data_out[21]), .CP(clk), .CDN(n2), .Q(
        data_out[21]) );
  DFCNQD1 \data_out_reg[20]  ( .D(next_data_out[20]), .CP(clk), .CDN(n2), .Q(
        data_out[20]) );
  DFCNQD1 \data_out_reg[19]  ( .D(next_data_out[19]), .CP(clk), .CDN(n2), .Q(
        data_out[19]) );
  DFCNQD1 \data_out_reg[18]  ( .D(next_data_out[18]), .CP(clk), .CDN(n2), .Q(
        data_out[18]) );
  DFCNQD1 \data_out_reg[17]  ( .D(next_data_out[17]), .CP(clk), .CDN(n2), .Q(
        data_out[17]) );
  DFCNQD1 \data_out_reg[16]  ( .D(next_data_out[16]), .CP(clk), .CDN(n2), .Q(
        data_out[16]) );
  DFCNQD1 \data_out_reg[15]  ( .D(next_data_out[15]), .CP(clk), .CDN(n2), .Q(
        data_out[15]) );
  DFCNQD1 \data_out_reg[14]  ( .D(next_data_out[14]), .CP(clk), .CDN(n2), .Q(
        data_out[14]) );
  DFCNQD1 \data_out_reg[13]  ( .D(next_data_out[13]), .CP(clk), .CDN(n2), .Q(
        data_out[13]) );
  DFCNQD1 \data_out_reg[12]  ( .D(next_data_out[12]), .CP(clk), .CDN(n1), .Q(
        data_out[12]) );
  DFCNQD1 \data_out_reg[11]  ( .D(next_data_out[11]), .CP(clk), .CDN(n1), .Q(
        data_out[11]) );
  DFCNQD1 \data_out_reg[10]  ( .D(next_data_out[10]), .CP(clk), .CDN(n1), .Q(
        data_out[10]) );
  DFCNQD1 \data_out_reg[9]  ( .D(next_data_out[9]), .CP(clk), .CDN(n1), .Q(
        data_out[9]) );
  DFCNQD1 \data_out_reg[8]  ( .D(next_data_out[8]), .CP(clk), .CDN(n1), .Q(
        data_out[8]) );
  DFCNQD1 \data_out_reg[7]  ( .D(next_data_out[7]), .CP(clk), .CDN(n1), .Q(
        data_out[7]) );
  DFCNQD1 \data_out_reg[6]  ( .D(next_data_out[6]), .CP(clk), .CDN(n1), .Q(
        data_out[6]) );
  DFCNQD1 \data_out_reg[5]  ( .D(next_data_out[5]), .CP(clk), .CDN(n1), .Q(
        data_out[5]) );
  DFCNQD1 \data_out_reg[4]  ( .D(next_data_out[4]), .CP(clk), .CDN(n1), .Q(
        data_out[4]) );
  DFCNQD1 \data_out_reg[3]  ( .D(next_data_out[3]), .CP(clk), .CDN(n1), .Q(
        data_out[3]) );
  DFCNQD1 \data_out_reg[2]  ( .D(next_data_out[2]), .CP(clk), .CDN(n1), .Q(
        data_out[2]) );
  DFCNQD1 \data_out_reg[1]  ( .D(next_data_out[1]), .CP(clk), .CDN(n1), .Q(
        data_out[1]) );
  DFCNQD1 \data_out_reg[0]  ( .D(next_data_out[0]), .CP(clk), .CDN(n2), .Q(
        data_out[0]) );
  OA21D1 U20 ( .A1(n161), .A2(n160), .B(n159), .Z(n170) );
  OA21D1 U23 ( .A1(n156), .A2(n160), .B(n155), .Z(n169) );
  OA21D1 U26 ( .A1(n154), .A2(n160), .B(n153), .Z(n167) );
  OA21D1 U29 ( .A1(n152), .A2(n160), .B(n151), .Z(n166) );
  OA21D1 U32 ( .A1(n150), .A2(n160), .B(n149), .Z(n177) );
  OA21D1 U35 ( .A1(n148), .A2(n160), .B(n147), .Z(n165) );
  OA21D1 U38 ( .A1(n146), .A2(n160), .B(n145), .Z(n164) );
  OA21D1 U41 ( .A1(n144), .A2(n160), .B(n149), .Z(n163) );
  OA21D1 U47 ( .A1(n139), .A2(n160), .B(n138), .Z(n162) );
  OA21D1 U50 ( .A1(n137), .A2(n160), .B(n159), .Z(n175) );
  OA21D1 U56 ( .A1(n134), .A2(n160), .B(n155), .Z(n174) );
  OA21D1 U62 ( .A1(n131), .A2(n160), .B(n153), .Z(n173) );
  OA21D1 U68 ( .A1(n128), .A2(n160), .B(n151), .Z(n172) );
  OA21D1 U74 ( .A1(n125), .A2(n160), .B(n147), .Z(n171) );
  OA21D1 U80 ( .A1(n122), .A2(n160), .B(n145), .Z(n168) );
  OA21D1 U86 ( .A1(n119), .A2(n160), .B(n138), .Z(n176) );
  AN2XD1 U90 ( .A1(rd_ptr[1]), .A2(rd_ptr[0]), .Z(n140) );
  AN4XD1 U91 ( .A1(input_bitwidth[2]), .A2(rd_en), .A3(n5), .A4(n7), .Z(n143)
         );
  MAOI22D1 U97 ( .A1(n115), .A2(n12), .B1(n115), .B2(n114), .ZN(n113) );
  NR2D1 U3 ( .A1(n13), .A2(rd_ptr[1]), .ZN(n158) );
  NR2D1 U4 ( .A1(rd_ptr[0]), .A2(rd_ptr[1]), .ZN(n157) );
  AOI21D1 U5 ( .A1(n12), .A2(n116), .B(n113), .ZN(N41) );
  OAI21D1 U6 ( .A1(n111), .A2(n10), .B(n177), .ZN(next_data_out[1]) );
  OAI21D1 U7 ( .A1(n37), .A2(n10), .B(n177), .ZN(next_data_out[9]) );
  OAI21D1 U8 ( .A1(n8), .A2(n112), .B(n176), .ZN(next_data_out[0]) );
  OAI21D1 U9 ( .A1(n9), .A2(n110), .B(n168), .ZN(next_data_out[2]) );
  OAI21D1 U10 ( .A1(n9), .A2(n109), .B(n171), .ZN(next_data_out[3]) );
  OAI21D1 U11 ( .A1(n9), .A2(n108), .B(n172), .ZN(next_data_out[4]) );
  OAI21D1 U12 ( .A1(n8), .A2(n36), .B(n168), .ZN(next_data_out[10]) );
  OAI21D1 U13 ( .A1(n8), .A2(n35), .B(n171), .ZN(next_data_out[11]) );
  OAI21D1 U14 ( .A1(n8), .A2(n34), .B(n172), .ZN(next_data_out[12]) );
  OAI21D1 U15 ( .A1(n9), .A2(n33), .B(n173), .ZN(next_data_out[13]) );
  OAI21D1 U16 ( .A1(n8), .A2(n32), .B(n174), .ZN(next_data_out[14]) );
  OAI21D1 U17 ( .A1(n8), .A2(n31), .B(n175), .ZN(next_data_out[15]) );
  OAI21D1 U18 ( .A1(n10), .A2(n107), .B(n173), .ZN(next_data_out[5]) );
  OAI21D1 U19 ( .A1(n10), .A2(n106), .B(n174), .ZN(next_data_out[6]) );
  OAI21D1 U21 ( .A1(n10), .A2(n105), .B(n175), .ZN(next_data_out[7]) );
  OAI21D1 U22 ( .A1(n10), .A2(n38), .B(n176), .ZN(next_data_out[8]) );
  CKBD1 U24 ( .I(n178), .Z(n8) );
  CKBD1 U25 ( .I(n178), .Z(n9) );
  CKBD1 U27 ( .I(n178), .Z(n10) );
  INVD1 U28 ( .I(n6), .ZN(n7) );
  INVD1 U30 ( .I(n4), .ZN(n5) );
  INVD1 U31 ( .I(n116), .ZN(n11) );
  INVD1 U33 ( .I(n157), .ZN(n14) );
  INVD1 U34 ( .I(n158), .ZN(n12) );
  ND2D1 U36 ( .A1(n114), .A2(rd_en), .ZN(n178) );
  NR3D0 U37 ( .A1(n4), .A2(input_bitwidth[2]), .A3(n7), .ZN(n115) );
  NR3D0 U39 ( .A1(n6), .A2(input_bitwidth[2]), .A3(n5), .ZN(n114) );
  ND2D1 U40 ( .A1(rd_en), .A2(n115), .ZN(n160) );
  ND2D1 U42 ( .A1(n143), .A2(n118), .ZN(n138) );
  OAI221D0 U43 ( .A1(n12), .A2(n38), .B1(n14), .B2(n112), .C(n117), .ZN(n118)
         );
  AOI22D1 U44 ( .A1(data_in[24]), .A2(n140), .B1(data_in[16]), .B2(n11), .ZN(
        n117) );
  ND2D1 U45 ( .A1(n143), .A2(n142), .ZN(n149) );
  OAI221D0 U46 ( .A1(n12), .A2(n37), .B1(n14), .B2(n111), .C(n141), .ZN(n142)
         );
  AOI22D1 U48 ( .A1(data_in[25]), .A2(n140), .B1(n11), .B2(data_in[17]), .ZN(
        n141) );
  ND2D1 U49 ( .A1(n143), .A2(n121), .ZN(n145) );
  OAI221D0 U51 ( .A1(n12), .A2(n36), .B1(n14), .B2(n110), .C(n120), .ZN(n121)
         );
  AOI22D1 U52 ( .A1(data_in[26]), .A2(n140), .B1(data_in[18]), .B2(n11), .ZN(
        n120) );
  ND2D1 U53 ( .A1(n143), .A2(n124), .ZN(n147) );
  OAI221D0 U54 ( .A1(n12), .A2(n35), .B1(n14), .B2(n109), .C(n123), .ZN(n124)
         );
  AOI22D1 U55 ( .A1(data_in[27]), .A2(n140), .B1(data_in[19]), .B2(n11), .ZN(
        n123) );
  ND2D1 U57 ( .A1(n143), .A2(n127), .ZN(n151) );
  OAI221D0 U58 ( .A1(n12), .A2(n34), .B1(n14), .B2(n108), .C(n126), .ZN(n127)
         );
  AOI22D1 U59 ( .A1(data_in[28]), .A2(n140), .B1(data_in[20]), .B2(n11), .ZN(
        n126) );
  ND2D1 U60 ( .A1(n143), .A2(n130), .ZN(n153) );
  OAI221D0 U61 ( .A1(n12), .A2(n33), .B1(n14), .B2(n107), .C(n129), .ZN(n130)
         );
  AOI22D1 U63 ( .A1(data_in[29]), .A2(n140), .B1(data_in[21]), .B2(n11), .ZN(
        n129) );
  ND2D1 U64 ( .A1(n143), .A2(n133), .ZN(n155) );
  OAI221D0 U65 ( .A1(n12), .A2(n32), .B1(n14), .B2(n106), .C(n132), .ZN(n133)
         );
  AOI22D1 U66 ( .A1(data_in[30]), .A2(n140), .B1(data_in[22]), .B2(n11), .ZN(
        n132) );
  ND2D1 U67 ( .A1(n143), .A2(n136), .ZN(n159) );
  OAI221D0 U69 ( .A1(n12), .A2(n31), .B1(n14), .B2(n105), .C(n135), .ZN(n136)
         );
  AOI22D1 U70 ( .A1(data_in[31]), .A2(n140), .B1(data_in[23]), .B2(n11), .ZN(
        n135) );
  AOI22D1 U71 ( .A1(data_in[16]), .A2(n158), .B1(data_in[0]), .B2(n157), .ZN(
        n119) );
  AOI22D1 U72 ( .A1(data_in[17]), .A2(n158), .B1(data_in[1]), .B2(n157), .ZN(
        n150) );
  AOI22D1 U73 ( .A1(data_in[18]), .A2(n158), .B1(data_in[2]), .B2(n157), .ZN(
        n122) );
  AOI22D1 U75 ( .A1(data_in[19]), .A2(n158), .B1(data_in[3]), .B2(n157), .ZN(
        n125) );
  AOI22D1 U76 ( .A1(data_in[20]), .A2(n158), .B1(data_in[4]), .B2(n157), .ZN(
        n128) );
  AOI22D1 U77 ( .A1(data_in[21]), .A2(n158), .B1(data_in[5]), .B2(n157), .ZN(
        n131) );
  AOI22D1 U78 ( .A1(data_in[22]), .A2(n158), .B1(data_in[6]), .B2(n157), .ZN(
        n134) );
  AOI22D1 U79 ( .A1(data_in[23]), .A2(n158), .B1(data_in[7]), .B2(n157), .ZN(
        n137) );
  AOI22D1 U81 ( .A1(data_in[24]), .A2(n158), .B1(data_in[8]), .B2(n157), .ZN(
        n139) );
  AOI22D1 U82 ( .A1(data_in[25]), .A2(n158), .B1(data_in[9]), .B2(n157), .ZN(
        n144) );
  AOI22D1 U83 ( .A1(data_in[26]), .A2(n158), .B1(data_in[10]), .B2(n157), .ZN(
        n146) );
  AOI22D1 U84 ( .A1(data_in[27]), .A2(n158), .B1(data_in[11]), .B2(n157), .ZN(
        n148) );
  AOI22D1 U85 ( .A1(data_in[28]), .A2(n158), .B1(data_in[12]), .B2(n157), .ZN(
        n152) );
  AOI22D1 U87 ( .A1(data_in[29]), .A2(n158), .B1(data_in[13]), .B2(n157), .ZN(
        n154) );
  AOI22D1 U88 ( .A1(data_in[30]), .A2(n158), .B1(data_in[14]), .B2(n157), .ZN(
        n156) );
  AOI22D1 U89 ( .A1(data_in[31]), .A2(n158), .B1(data_in[15]), .B2(n157), .ZN(
        n161) );
  NR2D1 U92 ( .A1(rd_ptr[0]), .A2(n114), .ZN(N40) );
  OAI21D1 U93 ( .A1(n29), .A2(n10), .B(n163), .ZN(next_data_out[17]) );
  INVD1 U94 ( .I(data_in[17]), .ZN(n29) );
  OAI21D1 U95 ( .A1(n8), .A2(n30), .B(n162), .ZN(next_data_out[16]) );
  INVD1 U96 ( .I(data_in[16]), .ZN(n30) );
  OAI21D1 U98 ( .A1(n8), .A2(n28), .B(n164), .ZN(next_data_out[18]) );
  INVD1 U99 ( .I(data_in[18]), .ZN(n28) );
  OAI21D1 U100 ( .A1(n8), .A2(n27), .B(n165), .ZN(next_data_out[19]) );
  INVD1 U101 ( .I(data_in[19]), .ZN(n27) );
  OAI21D1 U102 ( .A1(n8), .A2(n26), .B(n166), .ZN(next_data_out[20]) );
  INVD1 U103 ( .I(data_in[20]), .ZN(n26) );
  OAI21D1 U104 ( .A1(n8), .A2(n25), .B(n167), .ZN(next_data_out[21]) );
  INVD1 U105 ( .I(data_in[21]), .ZN(n25) );
  OAI21D1 U106 ( .A1(n8), .A2(n24), .B(n169), .ZN(next_data_out[22]) );
  INVD1 U107 ( .I(data_in[22]), .ZN(n24) );
  OAI21D1 U108 ( .A1(n9), .A2(n23), .B(n170), .ZN(next_data_out[23]) );
  INVD1 U109 ( .I(data_in[23]), .ZN(n23) );
  OAI21D1 U110 ( .A1(n9), .A2(n22), .B(n162), .ZN(next_data_out[24]) );
  INVD1 U111 ( .I(data_in[24]), .ZN(n22) );
  OAI21D1 U112 ( .A1(n9), .A2(n20), .B(n164), .ZN(next_data_out[26]) );
  INVD1 U113 ( .I(data_in[26]), .ZN(n20) );
  OAI21D1 U114 ( .A1(n9), .A2(n19), .B(n165), .ZN(next_data_out[27]) );
  INVD1 U115 ( .I(data_in[27]), .ZN(n19) );
  OAI21D1 U116 ( .A1(n9), .A2(n18), .B(n166), .ZN(next_data_out[28]) );
  INVD1 U117 ( .I(data_in[28]), .ZN(n18) );
  OAI21D1 U118 ( .A1(n9), .A2(n17), .B(n167), .ZN(next_data_out[29]) );
  INVD1 U119 ( .I(data_in[29]), .ZN(n17) );
  OAI21D1 U120 ( .A1(n9), .A2(n16), .B(n169), .ZN(next_data_out[30]) );
  INVD1 U121 ( .I(data_in[30]), .ZN(n16) );
  OAI21D1 U122 ( .A1(n9), .A2(n15), .B(n170), .ZN(next_data_out[31]) );
  INVD1 U123 ( .I(data_in[31]), .ZN(n15) );
  OAI21D1 U124 ( .A1(n21), .A2(n10), .B(n163), .ZN(next_data_out[25]) );
  INVD1 U125 ( .I(data_in[25]), .ZN(n21) );
  CKBD1 U126 ( .I(input_bitwidth[0]), .Z(n4) );
  CKBD1 U127 ( .I(input_bitwidth[1]), .Z(n6) );
  ND2D1 U128 ( .A1(rd_ptr[1]), .A2(n13), .ZN(n116) );
  INVD1 U129 ( .I(rd_ptr[0]), .ZN(n13) );
  INVD1 U130 ( .I(data_in[1]), .ZN(n111) );
  INVD1 U131 ( .I(data_in[9]), .ZN(n37) );
  INVD1 U132 ( .I(data_in[0]), .ZN(n112) );
  INVD1 U133 ( .I(data_in[2]), .ZN(n110) );
  INVD1 U134 ( .I(data_in[3]), .ZN(n109) );
  INVD1 U135 ( .I(data_in[4]), .ZN(n108) );
  INVD1 U136 ( .I(data_in[5]), .ZN(n107) );
  INVD1 U137 ( .I(data_in[6]), .ZN(n106) );
  INVD1 U138 ( .I(data_in[7]), .ZN(n105) );
  INVD1 U139 ( .I(data_in[8]), .ZN(n38) );
  INVD1 U140 ( .I(data_in[10]), .ZN(n36) );
  INVD1 U141 ( .I(data_in[11]), .ZN(n35) );
  INVD1 U142 ( .I(data_in[12]), .ZN(n34) );
  INVD1 U143 ( .I(data_in[13]), .ZN(n33) );
  INVD1 U144 ( .I(data_in[14]), .ZN(n32) );
  INVD1 U145 ( .I(data_in[15]), .ZN(n31) );
  CKBD1 U146 ( .I(nRST), .Z(n2) );
  CKBD1 U147 ( .I(nRST), .Z(n1) );
  CKBD1 U148 ( .I(nRST), .Z(n3) );
endmodule


module bit_brick_207 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_206 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_205 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_204 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_203 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_202 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_201 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_200 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_199 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_198 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_197 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_196 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_195 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2D1 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  INVD1 U5 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U6 ( .I(x[1]), .ZN(n3) );
  INVD1 U7 ( .I(y[1]), .ZN(n6) );
  INVD1 U8 ( .I(x[0]), .ZN(n4) );
  INVD1 U9 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U10 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U11 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U12 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U13 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U14 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U15 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_194 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_193 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_192 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module shift_add_12_DW01_add_14_DW01_add_49 ( A, B, CI, SUM, CO );
  input [28:0] A;
  input [28:0] B;
  output [28:0] SUM;
  input CI;
  output CO;
  wire   n1, \SUM[18] , n3, n4, n5, n6, n7;
  wire   [28:1] carry;
  assign SUM[27] = \SUM[18] ;
  assign SUM[28] = \SUM[18] ;
  assign SUM[26] = \SUM[18] ;
  assign SUM[25] = \SUM[18] ;
  assign SUM[24] = \SUM[18] ;
  assign SUM[23] = \SUM[18] ;
  assign SUM[22] = \SUM[18] ;
  assign SUM[21] = \SUM[18] ;
  assign SUM[20] = \SUM[18] ;
  assign SUM[19] = \SUM[18] ;
  assign SUM[18] = \SUM[18] ;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D1 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  AOI222D2 U1 ( .A1(carry[15]), .A2(A[27]), .B1(carry[15]), .B2(B[15]), .C1(
        B[15]), .C2(A[27]), .ZN(n5) );
  XNR3D2 U2 ( .A1(B[27]), .A2(n7), .A3(n3), .ZN(\SUM[18] ) );
  OAI222D1 U3 ( .A1(n5), .A2(n7), .B1(n5), .B2(n6), .C1(n7), .C2(n6), .ZN(n4)
         );
  AN2XD1 U4 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D0 U5 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  AO222D1 U6 ( .A1(n4), .A2(A[27]), .B1(n4), .B2(B[27]), .C1(A[27]), .C2(B[27]), .Z(n3) );
  CKND0 U7 ( .I(A[27]), .ZN(n7) );
  CKND0 U8 ( .I(B[16]), .ZN(n6) );
  XNR3D0 U9 ( .A1(B[27]), .A2(n7), .A3(n4), .ZN(SUM[17]) );
  XNR3D0 U10 ( .A1(n6), .A2(n5), .A3(n7), .ZN(SUM[16]) );
  XNR3D0 U11 ( .A1(carry[15]), .A2(B[15]), .A3(n7), .ZN(SUM[15]) );
endmodule


module shift_add_12_DW01_add_6_DW01_add_41 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_12_DW01_add_5_DW01_add_40 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_12_DW01_add_4_DW01_add_39 ( A, B, CI, SUM, CO );
  input [30:0] A;
  input [30:0] B;
  output [30:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [30:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  XOR3D1 U1_30 ( .A1(A[30]), .A2(B[30]), .A3(carry[30]), .Z(SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_12_DW01_add_3_DW01_add_38 ( A, B, CI, SUM, CO );
  input [29:0] A;
  input [29:0] B;
  output [29:0] SUM;
  input CI;
  output CO;
  wire   \SUM[29] , \SUM[27] , n3, n4, n5;
  wire   [29:1] carry;
  assign SUM[25] = \SUM[29] ;
  assign SUM[29] = \SUM[29] ;
  assign SUM[26] = \SUM[27] ;
  assign SUM[28] = \SUM[27] ;
  assign SUM[24] = \SUM[27] ;
  assign SUM[27] = \SUM[27] ;

  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n4), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D1 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D1 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D1 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  CKBD0 U1 ( .I(SUM[23]), .Z(\SUM[29] ) );
  BUFFD1 U2 ( .I(SUM[23]), .Z(\SUM[27] ) );
  XNR3D0 U3 ( .A1(B[22]), .A2(A[21]), .A3(n3), .ZN(SUM[23]) );
  AOI222D1 U4 ( .A1(n5), .A2(A[21]), .B1(n5), .B2(B[22]), .C1(A[21]), .C2(
        B[22]), .ZN(n3) );
  AO222D1 U5 ( .A1(carry[21]), .A2(A[21]), .B1(B[21]), .B2(carry[21]), .C1(
        B[21]), .C2(A[21]), .Z(n5) );
  AN2XD1 U6 ( .A1(B[0]), .A2(A[0]), .Z(n4) );
  CKXOR2D1 U7 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  XOR3D0 U8 ( .A1(carry[21]), .A2(B[21]), .A3(A[21]), .Z(SUM[21]) );
  XOR3D0 U9 ( .A1(B[22]), .A2(A[21]), .A3(n5), .Z(SUM[22]) );
endmodule


module shift_add_12_DW01_add_2_DW01_add_37 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_12_DW01_add_1_DW01_add_36 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_12_DW01_add_0_DW01_add_35 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_12 ( input_bitwidth, weight_bitwidth, .products({
        \products[15][5] , \products[15][4] , \products[15][3] , 
        \products[15][2] , \products[15][1] , \products[15][0] , 
        \products[14][5] , \products[14][4] , \products[14][3] , 
        \products[14][2] , \products[14][1] , \products[14][0] , 
        \products[13][5] , \products[13][4] , \products[13][3] , 
        \products[13][2] , \products[13][1] , \products[13][0] , 
        \products[12][5] , \products[12][4] , \products[12][3] , 
        \products[12][2] , \products[12][1] , \products[12][0] , 
        \products[11][5] , \products[11][4] , \products[11][3] , 
        \products[11][2] , \products[11][1] , \products[11][0] , 
        \products[10][5] , \products[10][4] , \products[10][3] , 
        \products[10][2] , \products[10][1] , \products[10][0] , 
        \products[9][5] , \products[9][4] , \products[9][3] , \products[9][2] , 
        \products[9][1] , \products[9][0] , \products[8][5] , \products[8][4] , 
        \products[8][3] , \products[8][2] , \products[8][1] , \products[8][0] , 
        \products[7][5] , \products[7][4] , \products[7][3] , \products[7][2] , 
        \products[7][1] , \products[7][0] , \products[6][5] , \products[6][4] , 
        \products[6][3] , \products[6][2] , \products[6][1] , \products[6][0] , 
        \products[5][5] , \products[5][4] , \products[5][3] , \products[5][2] , 
        \products[5][1] , \products[5][0] , \products[4][5] , \products[4][4] , 
        \products[4][3] , \products[4][2] , \products[4][1] , \products[4][0] , 
        \products[3][5] , \products[3][4] , \products[3][3] , \products[3][2] , 
        \products[3][1] , \products[3][0] , \products[2][5] , \products[2][4] , 
        \products[2][3] , \products[2][2] , \products[2][1] , \products[2][0] , 
        \products[1][5] , \products[1][4] , \products[1][3] , \products[1][2] , 
        \products[1][1] , \products[1][0] , \products[0][5] , \products[0][4] , 
        \products[0][3] , \products[0][2] , \products[0][1] , \products[0][0] 
        }), shift_add_out );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  output [31:0] shift_add_out;
  input \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] ;
  wire   \shifted_products[15][16] , \shifted_products[15][15] ,
         \shifted_products[15][14] , \shifted_products[15][13] ,
         \shifted_products[15][12] , \shifted_products[15][11] ,
         \shifted_products[15][10] , \shifted_products[15][9] ,
         \shifted_products[15][8] , \shifted_products[15][7] ,
         \shifted_products[15][6] , \shifted_products[15][5] ,
         \shifted_products[15][4] , \shifted_products[15][3] ,
         \shifted_products[15][2] , \shifted_products[15][1] ,
         \shifted_products[15][0] , \shifted_products[14][14] ,
         \shifted_products[14][13] , \shifted_products[14][12] ,
         \shifted_products[14][11] , \shifted_products[14][10] ,
         \shifted_products[14][9] , \shifted_products[14][8] ,
         \shifted_products[14][7] , \shifted_products[14][6] ,
         \shifted_products[14][5] , \shifted_products[14][4] ,
         \shifted_products[14][3] , \shifted_products[14][2] ,
         \shifted_products[14][1] , \shifted_products[14][0] ,
         \shifted_products[13][12] , \shifted_products[13][11] ,
         \shifted_products[13][10] , \shifted_products[13][9] ,
         \shifted_products[13][8] , \shifted_products[13][7] ,
         \shifted_products[13][6] , \shifted_products[13][5] ,
         \shifted_products[13][4] , \shifted_products[13][3] ,
         \shifted_products[13][2] , \shifted_products[13][1] ,
         \shifted_products[13][0] , \shifted_products[12][10] ,
         \shifted_products[12][9] , \shifted_products[12][8] ,
         \shifted_products[12][7] , \shifted_products[12][6] ,
         \shifted_products[12][5] , \shifted_products[12][4] ,
         \shifted_products[12][3] , \shifted_products[12][2] ,
         \shifted_products[12][1] , \shifted_products[12][0] ,
         \shifted_products[11][13] , \shifted_products[11][12] ,
         \shifted_products[11][11] , \shifted_products[11][10] ,
         \shifted_products[11][9] , \shifted_products[11][8] ,
         \shifted_products[11][7] , \shifted_products[11][6] ,
         \shifted_products[11][5] , \shifted_products[11][4] ,
         \shifted_products[11][3] , \shifted_products[11][2] ,
         \shifted_products[11][1] , \shifted_products[11][0] ,
         \shifted_products[10][12] , \shifted_products[10][11] ,
         \shifted_products[10][10] , \shifted_products[10][9] ,
         \shifted_products[10][8] , \shifted_products[10][7] ,
         \shifted_products[10][6] , \shifted_products[10][5] ,
         \shifted_products[10][4] , \shifted_products[10][3] ,
         \shifted_products[10][2] , \shifted_products[10][1] ,
         \shifted_products[10][0] , \shifted_products[9][10] ,
         \shifted_products[9][9] , \shifted_products[9][8] ,
         \shifted_products[9][7] , \shifted_products[9][6] ,
         \shifted_products[9][5] , \shifted_products[9][4] ,
         \shifted_products[9][3] , \shifted_products[9][2] ,
         \shifted_products[9][1] , \shifted_products[9][0] ,
         \shifted_products[8][8] , \shifted_products[8][7] ,
         \shifted_products[8][6] , \shifted_products[8][5] ,
         \shifted_products[8][4] , \shifted_products[8][3] ,
         \shifted_products[8][2] , \shifted_products[8][1] ,
         \shifted_products[8][0] , \shifted_products[7][11] ,
         \shifted_products[7][10] , \shifted_products[7][9] ,
         \shifted_products[7][8] , \shifted_products[7][7] ,
         \shifted_products[7][6] , \shifted_products[7][5] ,
         \shifted_products[7][4] , \shifted_products[7][3] ,
         \shifted_products[7][2] , \shifted_products[7][1] ,
         \shifted_products[7][0] , \shifted_products[6][10] ,
         \shifted_products[6][9] , \shifted_products[6][8] ,
         \shifted_products[6][7] , \shifted_products[6][6] ,
         \shifted_products[6][5] , \shifted_products[6][4] ,
         \shifted_products[6][3] , \shifted_products[6][2] ,
         \shifted_products[6][1] , \shifted_products[6][0] ,
         \shifted_products[5][8] , \shifted_products[5][7] ,
         \shifted_products[5][6] , \shifted_products[5][5] ,
         \shifted_products[5][4] , \shifted_products[5][3] ,
         \shifted_products[5][2] , \shifted_products[5][1] ,
         \shifted_products[5][0] , \shifted_products[4][6] ,
         \shifted_products[4][5] , \shifted_products[4][4] ,
         \shifted_products[4][3] , \shifted_products[4][2] ,
         \shifted_products[4][1] , \shifted_products[4][0] ,
         \shifted_products[3][9] , \shifted_products[3][8] ,
         \shifted_products[3][7] , \shifted_products[3][6] ,
         \shifted_products[3][5] , \shifted_products[3][4] ,
         \shifted_products[3][3] , \shifted_products[3][2] ,
         \shifted_products[3][1] , \shifted_products[3][0] ,
         \shifted_products[2][8] , \shifted_products[2][7] ,
         \shifted_products[2][6] , \shifted_products[2][5] ,
         \shifted_products[2][4] , \shifted_products[2][3] ,
         \shifted_products[2][2] , \shifted_products[2][1] ,
         \shifted_products[2][0] , \shifted_products[1][6] ,
         \shifted_products[1][5] , \shifted_products[1][4] ,
         \shifted_products[1][3] , \shifted_products[1][2] ,
         \shifted_products[1][1] , \shifted_products[1][0] ,
         \shifted_products[0][9] , N99, N98, N87, N86, N85, N84, N83, N82, N81,
         N80, N79, N78, N77, N76, N61, N60, N59, N58, N57, N56, N55, N54, N446,
         N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435,
         N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424,
         N423, N422, N421, N420, N419, N418, N417, N416, N415, N414, N413,
         N412, N411, N410, N409, N408, N407, N406, N405, N404, N403, N402,
         N401, N400, N399, N398, N397, N396, N395, N394, N393, N392, N391,
         N390, N389, N388, N387, N386, N385, N384, N383, N382, N381, N380,
         N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369,
         N368, N367, N366, N365, N364, N363, N362, N361, N360, N359, N358,
         N357, N356, N355, N354, N353, N352, N351, N350, N349, N348, N347,
         N346, N345, N344, N343, N342, N341, N340, N339, N338, N337, N336,
         N335, N334, N333, N332, N331, N330, N329, N328, N327, N326, N325,
         N324, N323, N322, N321, N320, N319, N318, N317, N316, N315, N314,
         N313, N312, N311, N310, N309, N308, N307, N306, N305, N304, N303,
         N302, N301, N300, N299, N298, N297, N296, N295, N294, N293, N292,
         N291, N290, N289, N288, N287, N286, N285, N284, N283, N282, N281,
         N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270,
         N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259,
         N258, N257, N256, N255, N254, N253, N252, N251, N250, N249, N248,
         N247, N246, N245, N244, N243, N242, N241, N240, N239, N238, N237,
         N236, N235, N234, N233, N232, N231, N230, N229, N214, N213, N212,
         N211, N210, N209, N208, N207, N206, N205, N204, N203, N202, N201,
         N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, N179,
         N178, N177, N176, N175, N174, N159, N158, N157, N156, N155, N154,
         N153, N152, N151, N150, N149, N148, N136, N135, N134, N133, N132,
         N131, N130, N129, N128, N127, N126, N125, N124, N123, N108, N107,
         N106, N105, N104, N103, N102, N101, N100,
         \add_14_root_add_199_I16/carry[6] ,
         \add_14_root_add_199_I16/carry[5] ,
         \add_14_root_add_199_I16/carry[4] ,
         \add_14_root_add_199_I16/carry[3] ,
         \add_14_root_add_199_I16/carry[2] ,
         \add_14_root_add_199_I16/carry[1] ,
         \add_13_root_add_199_I16/carry[9] ,
         \add_13_root_add_199_I16/carry[8] ,
         \add_13_root_add_199_I16/carry[7] ,
         \add_13_root_add_199_I16/carry[6] ,
         \add_13_root_add_199_I16/carry[5] ,
         \add_13_root_add_199_I16/carry[4] ,
         \add_13_root_add_199_I16/carry[3] ,
         \add_13_root_add_199_I16/carry[2] ,
         \add_13_root_add_199_I16/carry[1] ,
         \add_12_root_add_199_I16/carry[7] ,
         \add_12_root_add_199_I16/carry[6] ,
         \add_12_root_add_199_I16/carry[5] ,
         \add_12_root_add_199_I16/carry[4] ,
         \add_12_root_add_199_I16/carry[3] ,
         \add_12_root_add_199_I16/carry[2] ,
         \add_12_root_add_199_I16/carry[1] ,
         \add_11_root_add_199_I16/carry[11] ,
         \add_11_root_add_199_I16/carry[10] ,
         \add_11_root_add_199_I16/carry[9] ,
         \add_11_root_add_199_I16/carry[8] ,
         \add_11_root_add_199_I16/carry[7] ,
         \add_11_root_add_199_I16/carry[6] ,
         \add_11_root_add_199_I16/carry[5] ,
         \add_11_root_add_199_I16/carry[4] ,
         \add_11_root_add_199_I16/carry[3] ,
         \add_11_root_add_199_I16/carry[2] ,
         \add_11_root_add_199_I16/carry[1] ,
         \add_10_root_add_199_I16/carry[9] ,
         \add_10_root_add_199_I16/carry[8] ,
         \add_10_root_add_199_I16/carry[7] ,
         \add_10_root_add_199_I16/carry[6] ,
         \add_10_root_add_199_I16/carry[5] ,
         \add_10_root_add_199_I16/carry[4] ,
         \add_10_root_add_199_I16/carry[3] ,
         \add_10_root_add_199_I16/carry[2] ,
         \add_10_root_add_199_I16/carry[1] ,
         \add_9_root_add_199_I16/carry[13] ,
         \add_9_root_add_199_I16/carry[12] ,
         \add_9_root_add_199_I16/carry[11] ,
         \add_9_root_add_199_I16/carry[10] , \add_9_root_add_199_I16/carry[9] ,
         \add_9_root_add_199_I16/carry[8] , \add_9_root_add_199_I16/carry[7] ,
         \add_9_root_add_199_I16/carry[6] , \add_9_root_add_199_I16/carry[5] ,
         \add_9_root_add_199_I16/carry[4] , \add_9_root_add_199_I16/carry[3] ,
         \add_9_root_add_199_I16/carry[2] , \add_9_root_add_199_I16/carry[1] ,
         \add_8_root_add_199_I16/carry[11] ,
         \add_8_root_add_199_I16/carry[10] , \add_8_root_add_199_I16/carry[9] ,
         \add_8_root_add_199_I16/carry[8] , \add_8_root_add_199_I16/carry[7] ,
         \add_8_root_add_199_I16/carry[6] , \add_8_root_add_199_I16/carry[5] ,
         \add_8_root_add_199_I16/carry[4] , \add_8_root_add_199_I16/carry[3] ,
         \add_8_root_add_199_I16/carry[2] , \add_8_root_add_199_I16/carry[1] ,
         n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72,
         n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86,
         n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100,
         n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, n111,
         n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122,
         n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133,
         n134, n135, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246,
         n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257,
         n258, n259, n260, n261, n262, n263, n264, n265, n266, n267, n268,
         n269, n270, n271, n272, n273, n274, n275, n276, n277, n278, n279,
         n280, n281, n282, n283, n284, n285, n286, n287, n288, n289, n290,
         n291, n292, n293, n294, n295, n296, n297, n298, n299, n300, n301,
         n302, n303, n304, n305, n306, n307, n308, n309, n310, n311, n312,
         n313, n314, n315, n316, n317, n318, n319, n320;

  MAOI22D1 U26 ( .A1(\products[7][0] ), .A2(n308), .B1(n104), .B2(n311), .ZN(
        n309) );
  AN2XD1 U74 ( .A1(n314), .A2(n283), .Z(n284) );
  MAOI22D1 U112 ( .A1(\products[15][2] ), .A2(n271), .B1(n56), .B2(n300), .ZN(
        n272) );
  OA21D1 U130 ( .A1(n238), .A2(n55), .B(n274), .Z(n265) );
  AN2XD1 U134 ( .A1(n301), .A2(n291), .Z(n275) );
  AN2XD1 U218 ( .A1(n294), .A2(n277), .Z(n248) );
  AN2XD1 U239 ( .A1(n291), .A2(n311), .Z(n277) );
  shift_add_12_DW01_add_14_DW01_add_49 add_7_root_add_199_I16 ( .A({
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \shifted_products[14][14] , 
        \shifted_products[14][13] , \shifted_products[14][12] , 
        \shifted_products[14][11] , \shifted_products[14][10] , 
        \shifted_products[14][9] , \shifted_products[14][8] , 
        \shifted_products[14][7] , \shifted_products[14][6] , 
        \shifted_products[14][5] , \shifted_products[14][4] , 
        \shifted_products[14][3] , \shifted_products[14][2] , 
        \shifted_products[14][1] , \shifted_products[14][0] }), .B({
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \shifted_products[15][16] , \shifted_products[15][15] , 
        \shifted_products[15][14] , \shifted_products[15][13] , 
        \shifted_products[15][12] , \shifted_products[15][11] , 
        \shifted_products[15][10] , \shifted_products[15][9] , 
        \shifted_products[15][8] , \shifted_products[15][7] , 
        \shifted_products[15][6] , \shifted_products[15][5] , 
        \shifted_products[15][4] , \shifted_products[15][3] , 
        \shifted_products[15][2] , \shifted_products[15][1] , 
        \shifted_products[15][0] }), .CI(n240), .SUM({N257, N256, N255, N254, 
        N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, N243, N242, 
        N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, N231, N230, 
        N229}) );
  shift_add_12_DW01_add_6_DW01_add_41 add_4_root_add_0_root_add_199_I16 ( .A({
        n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, 
        n17, n17, n17, n17, N214, N213, N212, N211, N210, N209, N208, N207, 
        N206, N205, N204, N203, N202, N201}), .B({N257, N257, N257, N257, N256, 
        N255, N254, N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, 
        N243, N242, N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, 
        N231, N230, N229}), .CI(n240), .SUM({N382, N381, N380, N379, N378, 
        N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, N367, N366, 
        N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, N355, N354, 
        N353, N352, N351}) );
  shift_add_12_DW01_add_5_DW01_add_40 add_3_root_add_0_root_add_199_I16 ( .A({
        n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, 
        n18, n18, N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, 
        N179, N178, N177, N176, N175, N174}), .B({n15, n15, n15, n15, n15, n15, 
        n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, 
        N159, N158, N157, N156, N155, N154, N153, N152, N151, N150, N149, N148}), .CI(n240), .SUM({N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, 
        N340, N339, N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, 
        N328, N327, N326, N325, N324, N323, N322, N321, N320, N319}) );
  shift_add_12_DW01_add_4_DW01_add_39 add_5_root_add_199_I16 ( .A({n16, n16, 
        n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, 
        n16, n16, n16, n16, n16, N108, N107, N106, N105, N104, N103, N102, 
        N101, N100, N99}), .B({n19, n19, n19, n19, n19, n19, n19, n19, n19, 
        n19, n19, n19, n19, n19, n19, n19, n19, N136, N135, N134, N133, N132, 
        N131, N130, N129, N128, N127, N126, N125, N124, N123}), .CI(n240), 
        .SUM({N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}) );
  shift_add_12_DW01_add_3_DW01_add_38 add_6_root_add_199_I16 ( .A({n13, n13, 
        n13, n13, n13, n13, n13, n13, n13, n13, n13, n13, n13, n13, n13, n13, 
        n13, n13, n13, n13, n13, n13, N61, N60, N59, N58, N57, N56, N55, N54}), 
        .B({N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, 
        N98, N98, N98, N98, N98, N87, N86, N85, N84, N83, N82, N81, N80, N79, 
        N78, N77, N76}), .CI(n240), .SUM({N287, N286, N285, N284, N283, N282, 
        N281, N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270, 
        N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259, N258}) );
  shift_add_12_DW01_add_2_DW01_add_37 add_2_root_add_0_root_add_199_I16 ( .A({
        N318, N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}), .B({N382, N381, N380, 
        N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, 
        N367, N366, N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, 
        N355, N354, N353, N352, N351}), .CI(n240), .SUM({N446, N445, N444, 
        N443, N442, N441, N440, N439, N438, N437, N436, N435, N434, N433, N432, 
        N431, N430, N429, N428, N427, N426, N425, N424, N423, N422, N421, N420, 
        N419, N418, N417, N416, N415}) );
  shift_add_12_DW01_add_1_DW01_add_36 add_1_root_add_0_root_add_199_I16 ( .A({
        N446, N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435, 
        N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424, N423, 
        N422, N421, N420, N419, N418, N417, N416, N415}), .B({N287, N287, N287, 
        N286, N285, N284, N283, N282, N281, N280, N279, N278, N277, N276, N275, 
        N274, N273, N272, N271, N270, N269, N268, N267, N266, N265, N264, N263, 
        N262, N261, N260, N259, N258}), .CI(n240), .SUM({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}) );
  shift_add_12_DW01_add_0_DW01_add_35 add_0_root_add_0_root_add_199_I16 ( .A({
        N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, N340, N339, 
        N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, N328, N327, 
        N326, N325, N324, N323, N322, N321, N320, N319}), .B({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}), .CI(n240), .SUM(shift_add_out) );
  NR3D1 U2 ( .A1(n10), .A2(n11), .A3(n12), .ZN(n51) );
  AOI222D0 U3 ( .A1(n52), .A2(\products[2][5] ), .B1(n52), .B2(
        \products[3][5] ), .C1(\products[2][5] ), .C2(\products[3][5] ), .ZN(
        n23) );
  INVD2 U4 ( .I(n319), .ZN(n237) );
  FA1D1 U5 ( .A(\shifted_products[12][10] ), .B(\shifted_products[13][10] ), 
        .CI(\add_8_root_add_199_I16/carry[10] ), .CO(
        \add_8_root_add_199_I16/carry[11] ), .S(N211) );
  AOI222D2 U6 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(\products[4][5] ), 
        .B1(\add_12_root_add_199_I16/carry[7] ), .B2(\shifted_products[5][7] ), 
        .C1(\shifted_products[5][7] ), .C2(\products[4][5] ), .ZN(n46) );
  AOI222D1 U7 ( .A1(n41), .A2(\products[8][5] ), .B1(n41), .B2(
        \products[9][5] ), .C1(\products[8][5] ), .C2(\products[9][5] ), .ZN(
        n42) );
  OAI222D1 U8 ( .A1(n39), .A2(n40), .B1(n39), .B2(n43), .C1(n40), .C2(n43), 
        .ZN(n41) );
  INVD3 U9 ( .I(n22), .ZN(N98) );
  CKAN2D0 U10 ( .A1(n311), .A2(n306), .Z(n288) );
  CKND2D0 U11 ( .A1(n319), .A2(n311), .ZN(n271) );
  CKND2D2 U12 ( .A1(n243), .A2(n245), .ZN(n311) );
  AOI222XD4 U13 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \products[6][5] ), .B1(\add_11_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[7][11] ), .C1(\shifted_products[7][11] ), .C2(
        \products[6][5] ), .ZN(n44) );
  FA1D2 U14 ( .A(\shifted_products[6][10] ), .B(\shifted_products[7][10] ), 
        .CI(\add_11_root_add_199_I16/carry[10] ), .CO(
        \add_11_root_add_199_I16/carry[11] ), .S(N133) );
  INR2XD4 U15 ( .A1(n318), .B1(n237), .ZN(n307) );
  CKAN2D4 U16 ( .A1(n268), .A2(n31), .Z(n318) );
  ND2D1 U17 ( .A1(n299), .A2(n276), .ZN(n305) );
  AN2XD1 U18 ( .A1(n288), .A2(n31), .Z(n285) );
  ND2D1 U19 ( .A1(n277), .A2(n235), .ZN(n316) );
  ND2D1 U20 ( .A1(n28), .A2(n301), .ZN(n315) );
  FA1D0 U21 ( .A(\shifted_products[2][8] ), .B(\shifted_products[3][8] ), .CI(
        \add_13_root_add_199_I16/carry[8] ), .CO(
        \add_13_root_add_199_I16/carry[9] ), .S(N84) );
  ND2D1 U22 ( .A1(n242), .A2(n241), .ZN(n319) );
  OAI222D0 U23 ( .A1(n44), .A2(n107), .B1(n44), .B2(n24), .C1(n107), .C2(n24), 
        .ZN(n45) );
  XNR3D1 U24 ( .A1(n216), .A2(n14), .A3(n53), .ZN(n13) );
  AN2D1 U25 ( .A1(n306), .A2(n31), .Z(n297) );
  CKND2D1 U27 ( .A1(n47), .A2(\products[4][5] ), .ZN(n1) );
  ND2D1 U28 ( .A1(n47), .A2(\products[5][5] ), .ZN(n2) );
  CKND2D0 U29 ( .A1(\products[4][5] ), .A2(\products[5][5] ), .ZN(n3) );
  AN3XD1 U30 ( .A1(n1), .A2(n2), .A3(n3), .Z(n48) );
  OAI222D1 U31 ( .A1(n46), .A2(n119), .B1(n46), .B2(n49), .C1(n119), .C2(n49), 
        .ZN(n47) );
  AN2D1 U32 ( .A1(n301), .A2(n319), .Z(n294) );
  CKND0 U33 ( .I(n235), .ZN(n4) );
  INVD1 U34 ( .I(n4), .ZN(n5) );
  AN2D1 U35 ( .A1(n33), .A2(\products[12][5] ), .Z(n6) );
  AN2XD1 U36 ( .A1(n33), .A2(\products[13][5] ), .Z(n7) );
  AN2D1 U37 ( .A1(\products[12][5] ), .A2(\products[13][5] ), .Z(n8) );
  NR3D1 U38 ( .A1(n6), .A2(n7), .A3(n8), .ZN(n34) );
  OAI222D1 U39 ( .A1(n32), .A2(n73), .B1(n32), .B2(n35), .C1(n73), .C2(n35), 
        .ZN(n33) );
  NR2D0 U40 ( .A1(n30), .A2(n72), .ZN(\shifted_products[13][0] ) );
  CKND2D0 U41 ( .A1(n243), .A2(n242), .ZN(n292) );
  INVD1 U42 ( .I(n279), .ZN(n235) );
  OAI222D1 U43 ( .A1(n51), .A2(n50), .B1(n51), .B2(n25), .C1(n50), .C2(n25), 
        .ZN(n52) );
  CKND2 U44 ( .I(n264), .ZN(n224) );
  XNR3D0 U45 ( .A1(n25), .A2(n51), .A3(n50), .ZN(N86) );
  CKND2D0 U46 ( .A1(n224), .A2(n277), .ZN(n312) );
  CKND2D1 U47 ( .A1(n246), .A2(n244), .ZN(n300) );
  CKND2D0 U48 ( .A1(n244), .A2(n243), .ZN(n291) );
  CKND2D0 U49 ( .A1(n244), .A2(n241), .ZN(n268) );
  AOI222D0 U50 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \products[10][5] ), .B1(\add_9_root_add_199_I16/carry[13] ), .B2(
        \shifted_products[11][13] ), .C1(\shifted_products[11][13] ), .C2(
        \products[10][5] ), .ZN(n37) );
  AN2XD1 U51 ( .A1(n294), .A2(n28), .Z(n314) );
  CKND2D3 U52 ( .A1(n294), .A2(n224), .ZN(n293) );
  OAI22D0 U53 ( .A1(n297), .A2(n109), .B1(n227), .B2(n111), .ZN(
        \shifted_products[6][3] ) );
  OAI22D0 U54 ( .A1(n318), .A2(n92), .B1(n230), .B2(n94), .ZN(
        \shifted_products[9][3] ) );
  NR2D0 U55 ( .A1(n318), .A2(n83), .ZN(\shifted_products[11][1] ) );
  AN2XD1 U56 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(\products[2][5] ), 
        .Z(n10) );
  AN2XD1 U57 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .Z(n11) );
  OAI21D1 U58 ( .A1(n282), .A2(n127), .B(n281), .ZN(\shifted_products[3][9] )
         );
  NR2D1 U59 ( .A1(n315), .A2(n316), .ZN(n276) );
  NR2D1 U60 ( .A1(n307), .A2(n130), .ZN(\shifted_products[3][0] ) );
  NR2D0 U61 ( .A1(n315), .A2(n316), .ZN(n9) );
  AN2D1 U62 ( .A1(\shifted_products[3][9] ), .A2(\products[2][5] ), .Z(n12) );
  AOI222D2 U63 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[0][9] ), .B1(\add_14_root_add_199_I16/carry[6] ), 
        .B2(\shifted_products[1][6] ), .C1(\shifted_products[1][6] ), .C2(
        \shifted_products[0][9] ), .ZN(n54) );
  OA222D1 U64 ( .A1(n54), .A2(n53), .B1(n54), .B2(n216), .C1(n53), .C2(n216), 
        .Z(n14) );
  CKND1 U65 ( .I(n295), .ZN(n227) );
  XOR3D4 U66 ( .A1(\products[9][5] ), .A2(n42), .A3(n40), .Z(n15) );
  AOI222D1 U67 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(\products[8][5] ), .B1(\add_10_root_add_199_I16/carry[9] ), .B2(\shifted_products[9][9] ), .C1(
        \shifted_products[9][9] ), .C2(\products[8][5] ), .ZN(n39) );
  AOI222D1 U68 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \products[12][5] ), .B1(\add_8_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[13][11] ), .C1(\shifted_products[13][11] ), .C2(
        \products[12][5] ), .ZN(n32) );
  XOR3D2 U69 ( .A1(\products[5][5] ), .A2(n48), .A3(n119), .Z(n16) );
  XOR3D2 U70 ( .A1(\products[13][5] ), .A2(n34), .A3(n73), .Z(n17) );
  XOR3D1 U71 ( .A1(\products[11][5] ), .A2(n36), .A3(n21), .Z(n18) );
  OAI22D0 U72 ( .A1(n307), .A2(n216), .B1(n9), .B2(n217), .ZN(
        \shifted_products[1][6] ) );
  NR2D0 U73 ( .A1(n312), .A2(n237), .ZN(n320) );
  CKAN2D0 U75 ( .A1(n277), .A2(n28), .Z(n282) );
  OAI21D0 U76 ( .A1(n57), .A2(n28), .B(n267), .ZN(\shifted_products[15][15] )
         );
  NR2D0 U77 ( .A1(n30), .A2(n60), .ZN(\shifted_products[15][0] ) );
  CKND2D0 U78 ( .A1(n294), .A2(n223), .ZN(n266) );
  CKND1 U79 ( .I(\products[13][5] ), .ZN(n67) );
  NR2D0 U80 ( .A1(n106), .A2(n30), .ZN(\shifted_products[7][0] ) );
  CKND2D0 U81 ( .A1(\products[12][5] ), .A2(n312), .ZN(n254) );
  CKND2D0 U82 ( .A1(\products[8][5] ), .A2(n312), .ZN(n313) );
  CKND1 U83 ( .I(\products[7][5] ), .ZN(n101) );
  CKND2D0 U84 ( .A1(\products[3][5] ), .A2(n293), .ZN(n281) );
  NR2D0 U85 ( .A1(n264), .A2(n237), .ZN(n253) );
  CKND2D0 U86 ( .A1(\products[2][5] ), .A2(n293), .ZN(n278) );
  CKND2D0 U87 ( .A1(\products[10][5] ), .A2(n264), .ZN(n247) );
  CKND1 U88 ( .I(\products[6][5] ), .ZN(n107) );
  CKND2D0 U89 ( .A1(\products[15][5] ), .A2(n264), .ZN(n274) );
  NR2D0 U90 ( .A1(n30), .A2(n59), .ZN(\shifted_products[15][1] ) );
  CKAN2D0 U91 ( .A1(n288), .A2(n299), .Z(n287) );
  CKND1 U92 ( .I(\products[5][5] ), .ZN(n113) );
  CKAN2D0 U93 ( .A1(n288), .A2(n307), .Z(n289) );
  OAI22D0 U94 ( .A1(n285), .A2(n119), .B1(n284), .B2(n121), .ZN(
        \shifted_products[4][5] ) );
  OAI22D0 U95 ( .A1(n285), .A2(n73), .B1(n283), .B2(n75), .ZN(
        \shifted_products[12][5] ) );
  OAI22D0 U96 ( .A1(n30), .A2(n115), .B1(n287), .B2(n117), .ZN(
        \shifted_products[5][3] ) );
  OAI22D0 U97 ( .A1(n285), .A2(n121), .B1(n284), .B2(n123), .ZN(
        \shifted_products[4][3] ) );
  OAI22D0 U98 ( .A1(n30), .A2(n57), .B1(n229), .B2(n59), .ZN(
        \shifted_products[15][3] ) );
  OAI22D0 U99 ( .A1(n318), .A2(n81), .B1(n5), .B2(n83), .ZN(
        \shifted_products[11][3] ) );
  NR2D0 U100 ( .A1(n224), .A2(n86), .ZN(\shifted_products[10][3] ) );
  OAI22D0 U101 ( .A1(n307), .A2(n125), .B1(n280), .B2(n127), .ZN(
        \shifted_products[3][5] ) );
  OAI21D0 U102 ( .A1(n282), .A2(n134), .B(n278), .ZN(\shifted_products[2][5] )
         );
  OAI22D0 U103 ( .A1(n307), .A2(n127), .B1(n280), .B2(n129), .ZN(
        \shifted_products[3][3] ) );
  NR2D0 U104 ( .A1(n222), .A2(n132), .ZN(\shifted_products[2][3] ) );
  NR2D0 U105 ( .A1(n223), .A2(n97), .ZN(\shifted_products[8][3] ) );
  OAI22D0 U106 ( .A1(n29), .A2(n69), .B1(n226), .B2(n71), .ZN(
        \shifted_products[13][3] ) );
  OAI22D0 U107 ( .A1(n285), .A2(n75), .B1(n283), .B2(n77), .ZN(
        \shifted_products[12][3] ) );
  OAI22D0 U108 ( .A1(n103), .A2(n29), .B1(n225), .B2(n105), .ZN(
        \shifted_products[7][3] ) );
  OAI21D0 U109 ( .A1(n59), .A2(n28), .B(n267), .ZN(\shifted_products[15][13] )
         );
  NR2D0 U110 ( .A1(n307), .A2(n129), .ZN(\shifted_products[3][1] ) );
  NR2D0 U111 ( .A1(n30), .A2(n117), .ZN(\shifted_products[5][1] ) );
  NR2D0 U113 ( .A1(n285), .A2(n77), .ZN(\shifted_products[12][1] ) );
  NR2D0 U114 ( .A1(n30), .A2(n71), .ZN(\shifted_products[13][1] ) );
  NR2D0 U115 ( .A1(n105), .A2(n30), .ZN(\shifted_products[7][1] ) );
  NR2D0 U116 ( .A1(n224), .A2(n88), .ZN(\shifted_products[10][1] ) );
  OA21D0 U117 ( .A1(n282), .A2(n126), .B(n281), .Z(n25) );
  CKAN2D0 U118 ( .A1(\products[0][5] ), .A2(n30), .Z(\shifted_products[0][9] )
         );
  XNR3D0 U119 ( .A1(\products[3][5] ), .A2(n50), .A3(n23), .ZN(n22) );
  XNR3D4 U120 ( .A1(\products[7][5] ), .A2(n107), .A3(n20), .ZN(n19) );
  AO222D1 U121 ( .A1(n45), .A2(\products[6][5] ), .B1(n45), .B2(
        \products[7][5] ), .C1(\products[6][5] ), .C2(\products[7][5] ), .Z(
        n20) );
  CKAN2D0 U122 ( .A1(n288), .A2(n318), .Z(n258) );
  OAI21D0 U123 ( .A1(n56), .A2(n28), .B(n267), .ZN(\shifted_products[15][16] )
         );
  INR2XD0 U124 ( .A1(n268), .B1(n286), .ZN(n283) );
  INR2D0 U125 ( .A1(n301), .B1(n279), .ZN(n280) );
  INR2D0 U126 ( .A1(n311), .B1(n293), .ZN(n298) );
  INR2D2 U127 ( .A1(n268), .B1(n237), .ZN(n299) );
  INR2D0 U128 ( .A1(n311), .B1(n264), .ZN(n263) );
  CKND2D0 U129 ( .A1(n28), .A2(n291), .ZN(n308) );
  CKND2D0 U131 ( .A1(n294), .A2(n291), .ZN(n261) );
  NR2D0 U132 ( .A1(n285), .A2(n124), .ZN(\shifted_products[4][0] ) );
  NR2D0 U133 ( .A1(n285), .A2(n78), .ZN(\shifted_products[12][0] ) );
  AOI22D0 U135 ( .A1(\products[6][4] ), .A2(n295), .B1(\products[6][0] ), .B2(
        n308), .ZN(n296) );
  NR2D0 U136 ( .A1(n224), .A2(n89), .ZN(\shifted_products[10][0] ) );
  NR2D0 U137 ( .A1(n223), .A2(n100), .ZN(\shifted_products[8][0] ) );
  CKND1 U138 ( .I(\products[15][4] ), .ZN(n56) );
  OAI21D0 U139 ( .A1(n282), .A2(n128), .B(n281), .ZN(\shifted_products[3][8] )
         );
  OAI21D0 U140 ( .A1(n282), .A2(n131), .B(n278), .ZN(\shifted_products[2][8] )
         );
  NR2D0 U141 ( .A1(n222), .A2(n135), .ZN(\shifted_products[2][0] ) );
  CKND2D0 U142 ( .A1(n299), .A2(n306), .ZN(n302) );
  CKND2D0 U143 ( .A1(n288), .A2(n268), .ZN(n255) );
  CKND1 U144 ( .I(\products[6][3] ), .ZN(n109) );
  CKND1 U145 ( .I(\products[14][4] ), .ZN(n62) );
  CKND1 U146 ( .I(\products[7][4] ), .ZN(n102) );
  CKND1 U147 ( .I(\products[12][3] ), .ZN(n75) );
  CKND1 U148 ( .I(\products[13][4] ), .ZN(n68) );
  CKND1 U149 ( .I(\products[5][3] ), .ZN(n115) );
  OAI21D0 U150 ( .A1(n314), .A2(n97), .B(n313), .ZN(\shifted_products[8][7] )
         );
  CKND1 U151 ( .I(\products[6][4] ), .ZN(n108) );
  OAI21D0 U152 ( .A1(n314), .A2(n75), .B(n254), .ZN(\shifted_products[12][9] )
         );
  OAI22D0 U153 ( .A1(n223), .A2(n96), .B1(n314), .B2(n100), .ZN(
        \shifted_products[8][4] ) );
  OAI21D0 U154 ( .A1(n314), .A2(n99), .B(n313), .ZN(\shifted_products[8][5] )
         );
  OAI21D0 U155 ( .A1(n314), .A2(n77), .B(n254), .ZN(\shifted_products[12][7] )
         );
  OAI22D0 U156 ( .A1(n224), .A2(n85), .B1(n248), .B2(n89), .ZN(
        \shifted_products[10][4] ) );
  FA1D1 U157 ( .A(\shifted_products[2][6] ), .B(\shifted_products[3][6] ), 
        .CI(\add_13_root_add_199_I16/carry[6] ), .CO(
        \add_13_root_add_199_I16/carry[7] ), .S(N82) );
  OAI21D0 U158 ( .A1(n282), .A2(n133), .B(n278), .ZN(\shifted_products[2][6] )
         );
  OAI22D0 U159 ( .A1(n285), .A2(n120), .B1(n284), .B2(n122), .ZN(
        \shifted_products[4][4] ) );
  OAI22D0 U160 ( .A1(n285), .A2(n74), .B1(n283), .B2(n76), .ZN(
        \shifted_products[12][4] ) );
  OAI21D0 U161 ( .A1(n314), .A2(n98), .B(n313), .ZN(\shifted_products[8][6] )
         );
  AOI22D0 U162 ( .A1(\products[9][4] ), .A2(n316), .B1(\products[9][0] ), .B2(
        n315), .ZN(n317) );
  AOI22D0 U163 ( .A1(\products[15][4] ), .A2(n269), .B1(\products[15][0] ), 
        .B2(n271), .ZN(n270) );
  AOI22D0 U164 ( .A1(\products[11][0] ), .A2(n251), .B1(\products[11][4] ), 
        .B2(n279), .ZN(n252) );
  OAI22D0 U165 ( .A1(n30), .A2(n116), .B1(n287), .B2(n118), .ZN(
        \shifted_products[5][2] ) );
  OAI22D0 U166 ( .A1(n285), .A2(n122), .B1(n284), .B2(n124), .ZN(
        \shifted_products[4][2] ) );
  OAI22D0 U167 ( .A1(n30), .A2(n70), .B1(n226), .B2(n72), .ZN(
        \shifted_products[13][2] ) );
  OAI22D0 U168 ( .A1(n285), .A2(n76), .B1(n283), .B2(n78), .ZN(
        \shifted_products[12][2] ) );
  OAI22D0 U169 ( .A1(n30), .A2(n58), .B1(n229), .B2(n60), .ZN(
        \shifted_products[15][2] ) );
  OAI22D0 U170 ( .A1(n297), .A2(n64), .B1(n228), .B2(n66), .ZN(
        \shifted_products[14][2] ) );
  OAI22D0 U171 ( .A1(n307), .A2(n217), .B1(n9), .B2(n219), .ZN(
        \shifted_products[1][4] ) );
  OAI22D0 U172 ( .A1(n307), .A2(n218), .B1(n9), .B2(n220), .ZN(
        \shifted_products[1][3] ) );
  OAI22D0 U173 ( .A1(n318), .A2(n82), .B1(n5), .B2(n84), .ZN(
        \shifted_products[11][2] ) );
  NR2D0 U174 ( .A1(n224), .A2(n87), .ZN(\shifted_products[10][2] ) );
  OAI22D0 U175 ( .A1(n307), .A2(n126), .B1(n280), .B2(n128), .ZN(
        \shifted_products[3][4] ) );
  OAI22D0 U176 ( .A1(n222), .A2(n131), .B1(n282), .B2(n135), .ZN(
        \shifted_products[2][4] ) );
  OAI22D0 U177 ( .A1(n307), .A2(n128), .B1(n280), .B2(n130), .ZN(
        \shifted_products[3][2] ) );
  NR2D0 U178 ( .A1(n222), .A2(n133), .ZN(\shifted_products[2][2] ) );
  OAI22D0 U179 ( .A1(n318), .A2(n93), .B1(n230), .B2(n95), .ZN(
        \shifted_products[9][2] ) );
  NR2D0 U180 ( .A1(n223), .A2(n98), .ZN(\shifted_products[8][2] ) );
  OAI22D0 U181 ( .A1(n297), .A2(n110), .B1(n227), .B2(n112), .ZN(
        \shifted_products[6][2] ) );
  NR2D0 U182 ( .A1(n307), .A2(n220), .ZN(\shifted_products[1][1] ) );
  CKAN2D0 U183 ( .A1(n307), .A2(n306), .Z(n310) );
  CKND1 U184 ( .I(\products[5][4] ), .ZN(n114) );
  CKND1 U185 ( .I(\products[4][4] ), .ZN(n120) );
  CKND1 U186 ( .I(\products[4][3] ), .ZN(n121) );
  CKAN2D0 U187 ( .A1(n318), .A2(n306), .Z(n273) );
  CKND2D0 U188 ( .A1(n277), .A2(n301), .ZN(n251) );
  CKND2D0 U189 ( .A1(n246), .A2(n245), .ZN(n306) );
  CKND2D0 U190 ( .A1(n246), .A2(n242), .ZN(n301) );
  AOI22D0 U191 ( .A1(\products[7][2] ), .A2(n303), .B1(\products[7][4] ), .B2(
        n302), .ZN(n304) );
  AOI22D0 U192 ( .A1(\products[13][4] ), .A2(n255), .B1(\products[13][2] ), 
        .B2(n286), .ZN(n256) );
  OAI21D0 U193 ( .A1(n314), .A2(n76), .B(n254), .ZN(\shifted_products[12][8] )
         );
  AOI22D0 U194 ( .A1(\products[13][4] ), .A2(n286), .B1(\products[13][2] ), 
        .B2(n237), .ZN(n257) );
  OAI22D0 U195 ( .A1(n307), .A2(n219), .B1(n9), .B2(n221), .ZN(
        \shifted_products[1][2] ) );
  INVD1 U196 ( .I(n312), .ZN(n223) );
  INVD1 U197 ( .I(n293), .ZN(n222) );
  CKBD1 U198 ( .I(n305), .Z(n30) );
  CKBD1 U199 ( .I(n305), .Z(n29) );
  CKBD1 U200 ( .I(n305), .Z(n31) );
  INVD1 U201 ( .I(n316), .ZN(n230) );
  ND2D1 U202 ( .A1(n318), .A2(n5), .ZN(n264) );
  OAI22D1 U203 ( .A1(n290), .A2(n115), .B1(n289), .B2(n113), .ZN(
        \shifted_products[5][7] ) );
  ND2D1 U204 ( .A1(n228), .A2(n294), .ZN(n295) );
  INVD1 U205 ( .I(n255), .ZN(n226) );
  NR2D1 U206 ( .A1(n297), .A2(n66), .ZN(\shifted_products[14][0] ) );
  AOI222D0 U207 ( .A1(n38), .A2(\products[10][5] ), .B1(n38), .B2(
        \products[11][5] ), .C1(\products[10][5] ), .C2(\products[11][5] ), 
        .ZN(n21) );
  FA1D0 U208 ( .A(\shifted_products[10][1] ), .B(\shifted_products[11][1] ), 
        .CI(\add_9_root_add_199_I16/carry[1] ), .CO(
        \add_9_root_add_199_I16/carry[2] ), .S(N175) );
  FA1D0 U209 ( .A(\shifted_products[12][5] ), .B(\shifted_products[13][5] ), 
        .CI(\add_8_root_add_199_I16/carry[5] ), .CO(
        \add_8_root_add_199_I16/carry[6] ), .S(N206) );
  OAI222D0 U210 ( .A1(n232), .A2(n71), .B1(n226), .B2(n69), .C1(n29), .C2(n67), 
        .ZN(\shifted_products[13][5] ) );
  FA1D0 U211 ( .A(\shifted_products[4][5] ), .B(\shifted_products[5][5] ), 
        .CI(\add_12_root_add_199_I16/carry[5] ), .CO(
        \add_12_root_add_199_I16/carry[6] ), .S(N104) );
  OAI222D0 U212 ( .A1(n287), .A2(n115), .B1(n290), .B2(n117), .C1(n29), .C2(
        n113), .ZN(\shifted_products[5][5] ) );
  FA1D0 U213 ( .A(\shifted_products[4][3] ), .B(\shifted_products[5][3] ), 
        .CI(\add_12_root_add_199_I16/carry[3] ), .CO(
        \add_12_root_add_199_I16/carry[4] ), .S(N102) );
  FA1D0 U214 ( .A(\shifted_products[2][3] ), .B(\shifted_products[3][3] ), 
        .CI(\add_13_root_add_199_I16/carry[3] ), .CO(
        \add_13_root_add_199_I16/carry[4] ), .S(N79) );
  FA1D0 U215 ( .A(\shifted_products[10][3] ), .B(\shifted_products[11][3] ), 
        .CI(\add_9_root_add_199_I16/carry[3] ), .CO(
        \add_9_root_add_199_I16/carry[4] ), .S(N177) );
  FA1D0 U216 ( .A(\shifted_products[2][5] ), .B(\shifted_products[3][5] ), 
        .CI(\add_13_root_add_199_I16/carry[5] ), .CO(
        \add_13_root_add_199_I16/carry[6] ), .S(N81) );
  FA1D0 U217 ( .A(\shifted_products[10][9] ), .B(\shifted_products[11][9] ), 
        .CI(\add_9_root_add_199_I16/carry[9] ), .CO(
        \add_9_root_add_199_I16/carry[10] ), .S(N183) );
  OAI22D1 U219 ( .A1(n231), .A2(n81), .B1(n253), .B2(n79), .ZN(
        \shifted_products[11][9] ) );
  OAI21D1 U220 ( .A1(n27), .A2(n88), .B(n249), .ZN(\shifted_products[10][9] )
         );
  FA1D0 U221 ( .A(\shifted_products[6][3] ), .B(\shifted_products[7][3] ), 
        .CI(\add_11_root_add_199_I16/carry[3] ), .CO(
        \add_11_root_add_199_I16/carry[4] ), .S(N126) );
  FA1D0 U222 ( .A(\shifted_products[12][3] ), .B(\shifted_products[13][3] ), 
        .CI(\add_8_root_add_199_I16/carry[3] ), .CO(
        \add_8_root_add_199_I16/carry[4] ), .S(N204) );
  OAI22D1 U223 ( .A1(n297), .A2(n63), .B1(n228), .B2(n65), .ZN(
        \shifted_products[14][3] ) );
  FA1D0 U224 ( .A(\shifted_products[8][3] ), .B(\shifted_products[9][3] ), 
        .CI(\add_10_root_add_199_I16/carry[3] ), .CO(
        \add_10_root_add_199_I16/carry[4] ), .S(N151) );
  OAI21D1 U225 ( .A1(n275), .A2(n57), .B(n265), .ZN(\shifted_products[15][11] ) );
  OAI21D1 U226 ( .A1(n27), .A2(n65), .B(n259), .ZN(\shifted_products[14][11] )
         );
  OAI21D1 U227 ( .A1(n27), .A2(n63), .B(n259), .ZN(\shifted_products[14][13] )
         );
  FA1D0 U228 ( .A(\shifted_products[2][7] ), .B(\shifted_products[3][7] ), 
        .CI(\add_13_root_add_199_I16/carry[7] ), .CO(
        \add_13_root_add_199_I16/carry[8] ), .S(N83) );
  OAI21D1 U229 ( .A1(n282), .A2(n129), .B(n281), .ZN(\shifted_products[3][7] )
         );
  OAI21D1 U230 ( .A1(n282), .A2(n132), .B(n278), .ZN(\shifted_products[2][7] )
         );
  FA1D0 U231 ( .A(\shifted_products[10][11] ), .B(\shifted_products[11][11] ), 
        .CI(\add_9_root_add_199_I16/carry[11] ), .CO(
        \add_9_root_add_199_I16/carry[12] ), .S(N185) );
  OAI21D1 U232 ( .A1(n27), .A2(n83), .B(n250), .ZN(\shifted_products[11][11] )
         );
  OAI21D1 U233 ( .A1(n27), .A2(n86), .B(n249), .ZN(\shifted_products[10][11] )
         );
  FA1D0 U234 ( .A(\shifted_products[2][1] ), .B(\shifted_products[3][1] ), 
        .CI(\add_13_root_add_199_I16/carry[1] ), .CO(
        \add_13_root_add_199_I16/carry[2] ), .S(N77) );
  NR2D1 U235 ( .A1(n222), .A2(n134), .ZN(\shifted_products[2][1] ) );
  FA1D0 U236 ( .A(\shifted_products[6][1] ), .B(\shifted_products[7][1] ), 
        .CI(\add_11_root_add_199_I16/carry[1] ), .CO(
        \add_11_root_add_199_I16/carry[2] ), .S(N124) );
  NR2D1 U237 ( .A1(n297), .A2(n111), .ZN(\shifted_products[6][1] ) );
  FA1D0 U238 ( .A(\shifted_products[8][1] ), .B(\shifted_products[9][1] ), 
        .CI(\add_10_root_add_199_I16/carry[1] ), .CO(
        \add_10_root_add_199_I16/carry[2] ), .S(N149) );
  NR2D1 U240 ( .A1(n318), .A2(n94), .ZN(\shifted_products[9][1] ) );
  NR2D1 U241 ( .A1(n223), .A2(n99), .ZN(\shifted_products[8][1] ) );
  NR2D1 U242 ( .A1(n297), .A2(n65), .ZN(\shifted_products[14][1] ) );
  FA1D0 U243 ( .A(\shifted_products[4][1] ), .B(\shifted_products[5][1] ), 
        .CI(\add_12_root_add_199_I16/carry[1] ), .CO(
        \add_12_root_add_199_I16/carry[2] ), .S(N100) );
  NR2D1 U244 ( .A1(n285), .A2(n123), .ZN(\shifted_products[4][1] ) );
  FA1D0 U245 ( .A(\shifted_products[12][1] ), .B(\shifted_products[13][1] ), 
        .CI(\add_8_root_add_199_I16/carry[1] ), .CO(
        \add_8_root_add_199_I16/carry[2] ), .S(N202) );
  FA1D0 U246 ( .A(\products[0][5] ), .B(\shifted_products[1][5] ), .CI(
        \add_14_root_add_199_I16/carry[5] ), .CO(
        \add_14_root_add_199_I16/carry[6] ), .S(N59) );
  OAI22D1 U247 ( .A1(n307), .A2(n216), .B1(n9), .B2(n218), .ZN(
        \shifted_products[1][5] ) );
  NR2D1 U248 ( .A1(n297), .A2(n112), .ZN(\shifted_products[6][0] ) );
  INVD1 U249 ( .I(\products[4][5] ), .ZN(n119) );
  INVD1 U250 ( .I(\products[12][5] ), .ZN(n73) );
  INVD1 U251 ( .I(\products[1][5] ), .ZN(n216) );
  NR2D1 U252 ( .A1(n286), .A2(n315), .ZN(n290) );
  INVD1 U253 ( .I(n308), .ZN(n234) );
  OAI22D1 U254 ( .A1(n239), .A2(n69), .B1(n320), .B2(n67), .ZN(
        \shifted_products[13][11] ) );
  OAI22D1 U255 ( .A1(n239), .A2(n92), .B1(n320), .B2(n90), .ZN(
        \shifted_products[9][9] ) );
  OAI22D1 U256 ( .A1(n234), .A2(n103), .B1(n298), .B2(n101), .ZN(
        \shifted_products[7][11] ) );
  INVD1 U257 ( .I(\products[9][5] ), .ZN(n90) );
  INVD1 U258 ( .I(\products[14][5] ), .ZN(n61) );
  INVD1 U259 ( .I(\products[11][5] ), .ZN(n79) );
  OAI22D1 U260 ( .A1(n239), .A2(n68), .B1(n320), .B2(n67), .ZN(
        \shifted_products[13][12] ) );
  OAI22D1 U261 ( .A1(n239), .A2(n91), .B1(n320), .B2(n90), .ZN(
        \shifted_products[9][10] ) );
  ND2D1 U262 ( .A1(\products[14][5] ), .A2(n266), .ZN(n259) );
  ND2D1 U263 ( .A1(\products[10][5] ), .A2(n266), .ZN(n249) );
  ND2D1 U264 ( .A1(\products[15][5] ), .A2(n266), .ZN(n267) );
  ND2D1 U265 ( .A1(\products[11][5] ), .A2(n266), .ZN(n250) );
  INVD1 U266 ( .I(n260), .ZN(n228) );
  INVD1 U267 ( .I(n315), .ZN(n239) );
  OAI22D1 U268 ( .A1(n290), .A2(n114), .B1(n289), .B2(n113), .ZN(
        \shifted_products[5][8] ) );
  INVD1 U269 ( .I(n261), .ZN(n233) );
  OA22D0 U270 ( .A1(n234), .A2(n102), .B1(n298), .B2(n101), .Z(n24) );
  INVD1 U271 ( .I(\products[15][5] ), .ZN(n55) );
  INVD1 U272 ( .I(n269), .ZN(n229) );
  INVD1 U273 ( .I(n303), .ZN(n236) );
  INVD1 U274 ( .I(n302), .ZN(n225) );
  INVD1 U275 ( .I(n271), .ZN(n238) );
  INVD1 U276 ( .I(n286), .ZN(n232) );
  NR2D1 U277 ( .A1(n318), .A2(n95), .ZN(\shifted_products[9][0] ) );
  NR2D1 U278 ( .A1(n318), .A2(n84), .ZN(\shifted_products[11][0] ) );
  INVD1 U279 ( .I(\products[3][5] ), .ZN(n125) );
  OAI21D1 U280 ( .A1(n27), .A2(n81), .B(n250), .ZN(\shifted_products[11][13] )
         );
  OA21D1 U281 ( .A1(n27), .A2(n80), .B(n250), .Z(n26) );
  INVD1 U282 ( .I(n251), .ZN(n231) );
  ND2D1 U283 ( .A1(n291), .A2(n300), .ZN(n286) );
  INVD1 U284 ( .I(\products[13][3] ), .ZN(n69) );
  ND2D1 U285 ( .A1(n300), .A2(n306), .ZN(n279) );
  NR2D1 U286 ( .A1(n307), .A2(n221), .ZN(\shifted_products[1][0] ) );
  INVD1 U287 ( .I(\products[3][3] ), .ZN(n127) );
  FA1D0 U288 ( .A(\shifted_products[6][7] ), .B(\shifted_products[7][7] ), 
        .CI(\add_11_root_add_199_I16/carry[7] ), .CO(
        \add_11_root_add_199_I16/carry[8] ), .S(N130) );
  OAI222D0 U289 ( .A1(n236), .A2(n103), .B1(n310), .B2(n101), .C1(n105), .C2(
        n311), .ZN(\shifted_products[7][7] ) );
  OAI222D0 U290 ( .A1(n222), .A2(n107), .B1(n234), .B2(n111), .C1(n311), .C2(
        n109), .ZN(\shifted_products[6][7] ) );
  FA1D0 U291 ( .A(\shifted_products[8][7] ), .B(\shifted_products[9][7] ), 
        .CI(\add_10_root_add_199_I16/carry[7] ), .CO(
        \add_10_root_add_199_I16/carry[8] ), .S(N155) );
  OAI222D0 U292 ( .A1(n239), .A2(n94), .B1(n223), .B2(n90), .C1(n92), .C2(n319), .ZN(\shifted_products[9][7] ) );
  OAI222D0 U293 ( .A1(n29), .A2(n56), .B1(n229), .B2(n58), .C1(n60), .C2(n300), 
        .ZN(\shifted_products[15][4] ) );
  OAI222D0 U294 ( .A1(n297), .A2(n62), .B1(n228), .B2(n64), .C1(n311), .C2(n66), .ZN(\shifted_products[14][4] ) );
  OAI222D0 U295 ( .A1(n29), .A2(n55), .B1(n229), .B2(n57), .C1(n59), .C2(n300), 
        .ZN(\shifted_products[15][5] ) );
  OAI222D0 U296 ( .A1(n297), .A2(n61), .B1(n228), .B2(n63), .C1(n311), .C2(n65), .ZN(\shifted_products[14][5] ) );
  OAI222D0 U297 ( .A1(n238), .A2(n59), .B1(n273), .B2(n55), .C1(n57), .C2(n300), .ZN(\shifted_products[15][7] ) );
  OAI222D0 U298 ( .A1(n224), .A2(n61), .B1(n233), .B2(n65), .C1(n311), .C2(n63), .ZN(\shifted_products[14][7] ) );
  FA1D0 U299 ( .A(\shifted_products[8][4] ), .B(\shifted_products[9][4] ), 
        .CI(\add_10_root_add_199_I16/carry[4] ), .CO(
        \add_10_root_add_199_I16/carry[5] ), .S(N152) );
  OAI222D0 U300 ( .A1(n318), .A2(n91), .B1(n230), .B2(n93), .C1(n319), .C2(n95), .ZN(\shifted_products[9][4] ) );
  FA1D0 U301 ( .A(\shifted_products[10][4] ), .B(\shifted_products[11][4] ), 
        .CI(\add_9_root_add_199_I16/carry[4] ), .CO(
        \add_9_root_add_199_I16/carry[5] ), .S(N178) );
  OAI222D0 U302 ( .A1(n318), .A2(n80), .B1(n5), .B2(n82), .C1(n319), .C2(n84), 
        .ZN(\shifted_products[11][4] ) );
  FA1D0 U303 ( .A(\shifted_products[12][7] ), .B(\shifted_products[13][7] ), 
        .CI(\add_8_root_add_199_I16/carry[7] ), .CO(
        \add_8_root_add_199_I16/carry[8] ), .S(N208) );
  OAI222D0 U304 ( .A1(n232), .A2(n69), .B1(n258), .B2(n67), .C1(n319), .C2(n71), .ZN(\shifted_products[13][7] ) );
  FA1D0 U305 ( .A(\shifted_products[8][5] ), .B(\shifted_products[9][5] ), 
        .CI(\add_10_root_add_199_I16/carry[5] ), .CO(
        \add_10_root_add_199_I16/carry[6] ), .S(N153) );
  OAI222D0 U306 ( .A1(n318), .A2(n90), .B1(n230), .B2(n92), .C1(n319), .C2(n94), .ZN(\shifted_products[9][5] ) );
  FA1D0 U307 ( .A(\shifted_products[10][5] ), .B(\shifted_products[11][5] ), 
        .CI(\add_9_root_add_199_I16/carry[5] ), .CO(
        \add_9_root_add_199_I16/carry[6] ), .S(N179) );
  OAI222D0 U308 ( .A1(n318), .A2(n79), .B1(n5), .B2(n81), .C1(n319), .C2(n83), 
        .ZN(\shifted_products[11][5] ) );
  OAI21D1 U309 ( .A1(n248), .A2(n88), .B(n247), .ZN(\shifted_products[10][5] )
         );
  FA1D0 U310 ( .A(\shifted_products[6][9] ), .B(\shifted_products[7][9] ), 
        .CI(\add_11_root_add_199_I16/carry[9] ), .CO(
        \add_11_root_add_199_I16/carry[10] ), .S(N132) );
  OAI222D0 U311 ( .A1(n222), .A2(n101), .B1(n234), .B2(n105), .C1(n311), .C2(
        n103), .ZN(\shifted_products[7][9] ) );
  OAI22D1 U312 ( .A1(n234), .A2(n109), .B1(n298), .B2(n107), .ZN(
        \shifted_products[6][9] ) );
  FA1D0 U313 ( .A(\shifted_products[12][9] ), .B(\shifted_products[13][9] ), 
        .CI(\add_8_root_add_199_I16/carry[9] ), .CO(
        \add_8_root_add_199_I16/carry[10] ), .S(N210) );
  OAI222D0 U314 ( .A1(n239), .A2(n71), .B1(n223), .B2(n67), .C1(n319), .C2(n69), .ZN(\shifted_products[13][9] ) );
  FA1D0 U315 ( .A(\shifted_products[10][7] ), .B(\shifted_products[11][7] ), 
        .CI(\add_9_root_add_199_I16/carry[7] ), .CO(
        \add_9_root_add_199_I16/carry[8] ), .S(N181) );
  OAI21D1 U316 ( .A1(n248), .A2(n86), .B(n247), .ZN(\shifted_products[10][7] )
         );
  OAI222D0 U317 ( .A1(n224), .A2(n79), .B1(n231), .B2(n83), .C1(n319), .C2(n81), .ZN(\shifted_products[11][7] ) );
  FA1D0 U318 ( .A(\shifted_products[10][8] ), .B(\shifted_products[11][8] ), 
        .CI(\add_9_root_add_199_I16/carry[8] ), .CO(
        \add_9_root_add_199_I16/carry[9] ), .S(N182) );
  OAI222D0 U319 ( .A1(n224), .A2(n79), .B1(n231), .B2(n82), .C1(n319), .C2(n80), .ZN(\shifted_products[11][8] ) );
  OAI221D0 U320 ( .A1(n248), .A2(n85), .B1(n28), .B2(n89), .C(n247), .ZN(
        \shifted_products[10][8] ) );
  FA1D0 U321 ( .A(\shifted_products[10][10] ), .B(\shifted_products[11][10] ), 
        .CI(\add_9_root_add_199_I16/carry[10] ), .CO(
        \add_9_root_add_199_I16/carry[11] ), .S(N184) );
  OAI222D0 U322 ( .A1(n231), .A2(n80), .B1(n253), .B2(n79), .C1(n27), .C2(n84), 
        .ZN(\shifted_products[11][10] ) );
  OAI21D1 U323 ( .A1(n27), .A2(n87), .B(n249), .ZN(\shifted_products[10][10] )
         );
  FA1D0 U324 ( .A(\shifted_products[12][4] ), .B(\shifted_products[13][4] ), 
        .CI(\add_8_root_add_199_I16/carry[4] ), .CO(
        \add_8_root_add_199_I16/carry[5] ), .S(N205) );
  OAI222D0 U325 ( .A1(n232), .A2(n72), .B1(n226), .B2(n70), .C1(n29), .C2(n68), 
        .ZN(\shifted_products[13][4] ) );
  FA1D0 U326 ( .A(\shifted_products[6][5] ), .B(\shifted_products[7][5] ), 
        .CI(\add_11_root_add_199_I16/carry[5] ), .CO(
        \add_11_root_add_199_I16/carry[6] ), .S(N128) );
  OAI222D0 U327 ( .A1(n297), .A2(n107), .B1(n227), .B2(n109), .C1(n311), .C2(
        n111), .ZN(\shifted_products[6][5] ) );
  OAI222D0 U328 ( .A1(n225), .A2(n103), .B1(n236), .B2(n105), .C1(n101), .C2(
        n30), .ZN(\shifted_products[7][5] ) );
  OAI222D0 U329 ( .A1(n282), .A2(n130), .B1(n280), .B2(n126), .C1(n307), .C2(
        n125), .ZN(\shifted_products[3][6] ) );
  FA1D0 U330 ( .A(\shifted_products[4][4] ), .B(\shifted_products[5][4] ), 
        .CI(\add_12_root_add_199_I16/carry[4] ), .CO(
        \add_12_root_add_199_I16/carry[5] ), .S(N103) );
  OAI222D0 U331 ( .A1(n287), .A2(n116), .B1(n290), .B2(n118), .C1(n29), .C2(
        n114), .ZN(\shifted_products[5][4] ) );
  FA1D0 U332 ( .A(\shifted_products[6][4] ), .B(\shifted_products[7][4] ), 
        .CI(\add_11_root_add_199_I16/carry[4] ), .CO(
        \add_11_root_add_199_I16/carry[5] ), .S(N127) );
  OAI222D0 U333 ( .A1(n297), .A2(n108), .B1(n227), .B2(n110), .C1(n311), .C2(
        n112), .ZN(\shifted_products[6][4] ) );
  OAI222D0 U334 ( .A1(n225), .A2(n104), .B1(n236), .B2(n106), .C1(n102), .C2(
        n30), .ZN(\shifted_products[7][4] ) );
  FA1D0 U335 ( .A(\shifted_products[8][6] ), .B(\shifted_products[9][6] ), 
        .CI(\add_10_root_add_199_I16/carry[6] ), .CO(
        \add_10_root_add_199_I16/carry[7] ), .S(N154) );
  OAI221D0 U336 ( .A1(n318), .A2(n90), .B1(n93), .B2(n319), .C(n317), .ZN(
        \shifted_products[9][6] ) );
  OAI221D0 U337 ( .A1(n29), .A2(n55), .B1(n58), .B2(n300), .C(n270), .ZN(
        \shifted_products[15][6] ) );
  OAI221D0 U338 ( .A1(n297), .A2(n61), .B1(n311), .B2(n64), .C(n262), .ZN(
        \shifted_products[14][6] ) );
  FA1D0 U339 ( .A(\shifted_products[10][6] ), .B(\shifted_products[11][6] ), 
        .CI(\add_9_root_add_199_I16/carry[6] ), .CO(
        \add_9_root_add_199_I16/carry[7] ), .S(N180) );
  OAI221D0 U340 ( .A1(n318), .A2(n79), .B1(n319), .B2(n82), .C(n252), .ZN(
        \shifted_products[11][6] ) );
  OAI21D1 U341 ( .A1(n248), .A2(n87), .B(n247), .ZN(\shifted_products[10][6] )
         );
  OAI22D1 U342 ( .A1(n233), .A2(n63), .B1(n263), .B2(n61), .ZN(
        \shifted_products[14][9] ) );
  OAI221D0 U343 ( .A1(n275), .A2(n59), .B1(n238), .B2(n57), .C(n274), .ZN(
        \shifted_products[15][9] ) );
  OAI221D0 U344 ( .A1(n275), .A2(n58), .B1(n238), .B2(n56), .C(n274), .ZN(
        \shifted_products[15][10] ) );
  OAI222D0 U345 ( .A1(n233), .A2(n62), .B1(n263), .B2(n61), .C1(n27), .C2(n66), 
        .ZN(\shifted_products[14][10] ) );
  FA1D0 U346 ( .A(\shifted_products[6][8] ), .B(\shifted_products[7][8] ), 
        .CI(\add_11_root_add_199_I16/carry[8] ), .CO(
        \add_11_root_add_199_I16/carry[9] ), .S(N131) );
  OAI221D0 U347 ( .A1(n310), .A2(n101), .B1(n236), .B2(n102), .C(n309), .ZN(
        \shifted_products[7][8] ) );
  OAI222D0 U348 ( .A1(n222), .A2(n107), .B1(n234), .B2(n110), .C1(n311), .C2(
        n108), .ZN(\shifted_products[6][8] ) );
  OAI221D0 U349 ( .A1(n275), .A2(n56), .B1(n60), .B2(n28), .C(n265), .ZN(
        \shifted_products[15][12] ) );
  OAI21D1 U350 ( .A1(n27), .A2(n64), .B(n259), .ZN(\shifted_products[14][12] )
         );
  FA1D0 U351 ( .A(\shifted_products[4][2] ), .B(\shifted_products[5][2] ), 
        .CI(\add_12_root_add_199_I16/carry[2] ), .CO(
        \add_12_root_add_199_I16/carry[3] ), .S(N101) );
  FA1D0 U352 ( .A(\shifted_products[2][2] ), .B(\shifted_products[3][2] ), 
        .CI(\add_13_root_add_199_I16/carry[2] ), .CO(
        \add_13_root_add_199_I16/carry[3] ), .S(N78) );
  FA1D0 U353 ( .A(\shifted_products[10][2] ), .B(\shifted_products[11][2] ), 
        .CI(\add_9_root_add_199_I16/carry[2] ), .CO(
        \add_9_root_add_199_I16/carry[3] ), .S(N176) );
  FA1D0 U354 ( .A(\shifted_products[2][4] ), .B(\shifted_products[3][4] ), 
        .CI(\add_13_root_add_199_I16/carry[4] ), .CO(
        \add_13_root_add_199_I16/carry[5] ), .S(N80) );
  FA1D0 U355 ( .A(\shifted_products[6][2] ), .B(\shifted_products[7][2] ), 
        .CI(\add_11_root_add_199_I16/carry[2] ), .CO(
        \add_11_root_add_199_I16/carry[3] ), .S(N125) );
  OAI22D1 U356 ( .A1(n104), .A2(n29), .B1(n225), .B2(n106), .ZN(
        \shifted_products[7][2] ) );
  FA1D0 U357 ( .A(\shifted_products[12][2] ), .B(\shifted_products[13][2] ), 
        .CI(\add_8_root_add_199_I16/carry[2] ), .CO(
        \add_8_root_add_199_I16/carry[3] ), .S(N203) );
  FA1D0 U358 ( .A(\shifted_products[8][2] ), .B(\shifted_products[9][2] ), 
        .CI(\add_10_root_add_199_I16/carry[2] ), .CO(
        \add_10_root_add_199_I16/carry[3] ), .S(N150) );
  FA1D0 U359 ( .A(\products[0][3] ), .B(\shifted_products[1][3] ), .CI(
        \add_14_root_add_199_I16/carry[3] ), .CO(
        \add_14_root_add_199_I16/carry[4] ), .S(N57) );
  FA1D0 U360 ( .A(\products[0][4] ), .B(\shifted_products[1][4] ), .CI(
        \add_14_root_add_199_I16/carry[4] ), .CO(
        \add_14_root_add_199_I16/carry[5] ), .S(N58) );
  FA1D0 U361 ( .A(\products[0][1] ), .B(\shifted_products[1][1] ), .CI(
        \add_14_root_add_199_I16/carry[1] ), .CO(
        \add_14_root_add_199_I16/carry[2] ), .S(N55) );
  INVD1 U362 ( .I(\products[12][4] ), .ZN(n74) );
  INVD1 U363 ( .I(\products[3][4] ), .ZN(n126) );
  OAI222D0 U364 ( .A1(n222), .A2(n101), .B1(n234), .B2(n104), .C1(n311), .C2(
        n102), .ZN(\shifted_products[7][10] ) );
  OAI22D1 U365 ( .A1(n234), .A2(n108), .B1(n298), .B2(n107), .ZN(
        \shifted_products[6][10] ) );
  OAI21D1 U366 ( .A1(n58), .A2(n28), .B(n267), .ZN(\shifted_products[15][14] )
         );
  OAI21D1 U367 ( .A1(n28), .A2(n62), .B(n259), .ZN(\shifted_products[14][14] )
         );
  FA1D0 U368 ( .A(\shifted_products[10][12] ), .B(\shifted_products[11][12] ), 
        .CI(\add_9_root_add_199_I16/carry[12] ), .CO(
        \add_9_root_add_199_I16/carry[13] ), .S(N186) );
  OAI21D1 U369 ( .A1(n27), .A2(n82), .B(n250), .ZN(\shifted_products[11][12] )
         );
  OAI21D1 U370 ( .A1(n27), .A2(n85), .B(n249), .ZN(\shifted_products[10][12] )
         );
  OAI21D1 U371 ( .A1(n314), .A2(n74), .B(n254), .ZN(\shifted_products[12][10] ) );
  OAI222D0 U372 ( .A1(n239), .A2(n70), .B1(n223), .B2(n67), .C1(n319), .C2(n68), .ZN(\shifted_products[13][10] ) );
  FA1D0 U373 ( .A(\shifted_products[8][8] ), .B(\shifted_products[9][8] ), 
        .CI(\add_10_root_add_199_I16/carry[8] ), .CO(
        \add_10_root_add_199_I16/carry[9] ), .S(N156) );
  OAI21D1 U374 ( .A1(n314), .A2(n96), .B(n313), .ZN(\shifted_products[8][8] )
         );
  OAI222D0 U375 ( .A1(n239), .A2(n93), .B1(n223), .B2(n90), .C1(n319), .C2(n91), .ZN(\shifted_products[9][8] ) );
  FA1D0 U376 ( .A(\shifted_products[4][6] ), .B(\shifted_products[5][6] ), 
        .CI(\add_12_root_add_199_I16/carry[6] ), .CO(
        \add_12_root_add_199_I16/carry[7] ), .S(N105) );
  OAI22D1 U377 ( .A1(n285), .A2(n119), .B1(n284), .B2(n120), .ZN(
        \shifted_products[4][6] ) );
  OAI222D0 U378 ( .A1(n287), .A2(n114), .B1(n290), .B2(n116), .C1(n29), .C2(
        n113), .ZN(\shifted_products[5][6] ) );
  NR2D1 U379 ( .A1(n30), .A2(n118), .ZN(\shifted_products[5][0] ) );
  INVD1 U380 ( .I(\products[1][4] ), .ZN(n217) );
  INVD1 U381 ( .I(\products[1][3] ), .ZN(n218) );
  INVD1 U382 ( .I(\products[2][4] ), .ZN(n131) );
  INVD1 U383 ( .I(\products[2][3] ), .ZN(n132) );
  CKBD1 U384 ( .I(n292), .Z(n28) );
  INVD1 U385 ( .I(\products[15][3] ), .ZN(n57) );
  AOI22D1 U386 ( .A1(\products[14][0] ), .A2(n261), .B1(\products[14][4] ), 
        .B2(n260), .ZN(n262) );
  INVD1 U387 ( .I(\products[14][3] ), .ZN(n63) );
  INVD1 U388 ( .I(\products[11][3] ), .ZN(n81) );
  INVD1 U389 ( .I(\products[7][3] ), .ZN(n103) );
  INVD1 U390 ( .I(\products[9][3] ), .ZN(n92) );
  INVD1 U391 ( .I(\products[11][4] ), .ZN(n80) );
  ND2D1 U392 ( .A1(n300), .A2(n268), .ZN(n260) );
  ND2D1 U393 ( .A1(n268), .A2(n306), .ZN(n269) );
  ND2D1 U394 ( .A1(n301), .A2(n300), .ZN(n303) );
  INVD1 U395 ( .I(\products[9][4] ), .ZN(n91) );
  INVD1 U396 ( .I(\products[10][4] ), .ZN(n85) );
  INVD1 U397 ( .I(\products[10][3] ), .ZN(n86) );
  INVD1 U398 ( .I(\products[8][4] ), .ZN(n96) );
  INVD1 U399 ( .I(\products[8][3] ), .ZN(n97) );
  CKBD1 U400 ( .I(n292), .Z(n27) );
  INVD1 U401 ( .I(\products[15][1] ), .ZN(n59) );
  INVD1 U402 ( .I(\products[7][1] ), .ZN(n105) );
  INVD1 U403 ( .I(\products[14][1] ), .ZN(n65) );
  INVD1 U404 ( .I(\products[13][1] ), .ZN(n71) );
  INVD1 U405 ( .I(\products[6][1] ), .ZN(n111) );
  INVD1 U406 ( .I(\products[5][1] ), .ZN(n117) );
  INVD1 U407 ( .I(\products[12][1] ), .ZN(n77) );
  INVD1 U408 ( .I(\products[3][1] ), .ZN(n129) );
  INVD1 U409 ( .I(\products[4][1] ), .ZN(n123) );
  INVD1 U410 ( .I(\products[1][1] ), .ZN(n220) );
  INVD1 U411 ( .I(\products[2][1] ), .ZN(n134) );
  INVD1 U412 ( .I(\products[15][0] ), .ZN(n60) );
  INVD1 U413 ( .I(\products[14][0] ), .ZN(n66) );
  INVD1 U414 ( .I(\products[11][0] ), .ZN(n84) );
  INVD1 U415 ( .I(\products[7][0] ), .ZN(n106) );
  INVD1 U416 ( .I(\products[6][0] ), .ZN(n112) );
  INVD1 U417 ( .I(\products[9][0] ), .ZN(n95) );
  INVD1 U418 ( .I(\products[11][1] ), .ZN(n83) );
  INVD1 U419 ( .I(\products[9][1] ), .ZN(n94) );
  INVD1 U420 ( .I(\products[10][1] ), .ZN(n88) );
  INVD1 U421 ( .I(\products[8][1] ), .ZN(n99) );
  INVD1 U422 ( .I(\products[13][2] ), .ZN(n70) );
  INVD1 U423 ( .I(\products[12][2] ), .ZN(n76) );
  FA1D0 U424 ( .A(\shifted_products[6][6] ), .B(\shifted_products[7][6] ), 
        .CI(\add_11_root_add_199_I16/carry[6] ), .CO(
        \add_11_root_add_199_I16/carry[7] ), .S(N129) );
  OAI221D0 U425 ( .A1(n101), .A2(n29), .B1(n311), .B2(n106), .C(n304), .ZN(
        \shifted_products[7][6] ) );
  OAI221D0 U426 ( .A1(n297), .A2(n107), .B1(n311), .B2(n110), .C(n296), .ZN(
        \shifted_products[6][6] ) );
  FA1D0 U427 ( .A(\shifted_products[12][6] ), .B(\shifted_products[13][6] ), 
        .CI(\add_8_root_add_199_I16/carry[6] ), .CO(
        \add_8_root_add_199_I16/carry[7] ), .S(N207) );
  OAI222D0 U428 ( .A1(n285), .A2(n73), .B1(n283), .B2(n74), .C1(n314), .C2(n78), .ZN(\shifted_products[12][6] ) );
  OAI221D0 U429 ( .A1(n29), .A2(n67), .B1(n319), .B2(n72), .C(n256), .ZN(
        \shifted_products[13][6] ) );
  OAI221D0 U430 ( .A1(n273), .A2(n55), .B1(n275), .B2(n60), .C(n272), .ZN(
        \shifted_products[15][8] ) );
  OAI222D0 U431 ( .A1(n224), .A2(n61), .B1(n233), .B2(n64), .C1(n311), .C2(n62), .ZN(\shifted_products[14][8] ) );
  FA1D0 U432 ( .A(\shifted_products[12][8] ), .B(\shifted_products[13][8] ), 
        .CI(\add_8_root_add_199_I16/carry[8] ), .CO(
        \add_8_root_add_199_I16/carry[9] ), .S(N209) );
  OAI221D0 U433 ( .A1(n258), .A2(n67), .B1(n239), .B2(n72), .C(n257), .ZN(
        \shifted_products[13][8] ) );
  FA1D0 U434 ( .A(\products[0][2] ), .B(\shifted_products[1][2] ), .CI(
        \add_14_root_add_199_I16/carry[2] ), .CO(
        \add_14_root_add_199_I16/carry[3] ), .S(N56) );
  INVD1 U435 ( .I(\products[5][2] ), .ZN(n116) );
  INVD1 U436 ( .I(\products[4][2] ), .ZN(n122) );
  INVD1 U437 ( .I(\products[1][2] ), .ZN(n219) );
  INVD1 U438 ( .I(\products[15][2] ), .ZN(n58) );
  INVD1 U439 ( .I(\products[14][2] ), .ZN(n64) );
  INVD1 U440 ( .I(\products[11][2] ), .ZN(n82) );
  INVD1 U441 ( .I(\products[6][2] ), .ZN(n110) );
  INVD1 U442 ( .I(\products[9][2] ), .ZN(n93) );
  INVD1 U443 ( .I(\products[7][2] ), .ZN(n104) );
  INVD1 U444 ( .I(\products[3][2] ), .ZN(n128) );
  INVD1 U445 ( .I(\products[10][2] ), .ZN(n87) );
  INVD1 U446 ( .I(\products[2][2] ), .ZN(n133) );
  INVD1 U447 ( .I(\products[8][2] ), .ZN(n98) );
  INVD1 U448 ( .I(\products[13][0] ), .ZN(n72) );
  INVD1 U449 ( .I(\products[10][0] ), .ZN(n89) );
  INVD1 U450 ( .I(\products[3][0] ), .ZN(n130) );
  INVD1 U451 ( .I(\products[5][0] ), .ZN(n118) );
  INVD1 U452 ( .I(\products[12][0] ), .ZN(n78) );
  INVD1 U453 ( .I(\products[4][0] ), .ZN(n124) );
  INVD1 U454 ( .I(\products[1][0] ), .ZN(n221) );
  INVD1 U455 ( .I(\products[2][0] ), .ZN(n135) );
  INVD1 U456 ( .I(\products[8][0] ), .ZN(n100) );
  INR3D0 U457 ( .A1(input_bitwidth[2]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[1]), .ZN(n242) );
  INR3D0 U458 ( .A1(weight_bitwidth[0]), .B1(weight_bitwidth[1]), .B2(
        weight_bitwidth[2]), .ZN(n241) );
  INR3D0 U459 ( .A1(input_bitwidth[0]), .B1(input_bitwidth[1]), .B2(
        input_bitwidth[2]), .ZN(n245) );
  INR3D0 U460 ( .A1(input_bitwidth[1]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[2]), .ZN(n244) );
  INR3D0 U461 ( .A1(weight_bitwidth[1]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[2]), .ZN(n246) );
  INR3D0 U462 ( .A1(weight_bitwidth[2]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[1]), .ZN(n243) );
  TIEL U463 ( .ZN(n240) );
  AN2D0 U464 ( .A1(\products[0][0] ), .A2(\shifted_products[1][0] ), .Z(
        \add_14_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U465 ( .A1(\shifted_products[1][0] ), .A2(\products[0][0] ), .Z(N54) );
  AN2D0 U466 ( .A1(\shifted_products[2][0] ), .A2(\shifted_products[3][0] ), 
        .Z(\add_13_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U467 ( .A1(\shifted_products[3][0] ), .A2(\shifted_products[2][0] ), 
        .Z(N76) );
  AN2D0 U468 ( .A1(\shifted_products[12][0] ), .A2(\shifted_products[13][0] ), 
        .Z(\add_8_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U469 ( .A1(\shifted_products[13][0] ), .A2(
        \shifted_products[12][0] ), .Z(N201) );
  AN2D0 U470 ( .A1(\shifted_products[6][0] ), .A2(\shifted_products[7][0] ), 
        .Z(\add_11_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U471 ( .A1(\shifted_products[7][0] ), .A2(\shifted_products[6][0] ), 
        .Z(N123) );
  AN2D0 U472 ( .A1(\shifted_products[4][0] ), .A2(\shifted_products[5][0] ), 
        .Z(\add_12_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U473 ( .A1(\shifted_products[5][0] ), .A2(\shifted_products[4][0] ), 
        .Z(N99) );
  AN2D0 U474 ( .A1(\shifted_products[8][0] ), .A2(\shifted_products[9][0] ), 
        .Z(\add_10_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U475 ( .A1(\shifted_products[9][0] ), .A2(\shifted_products[8][0] ), 
        .Z(N148) );
  AN2D0 U476 ( .A1(\shifted_products[10][0] ), .A2(\shifted_products[11][0] ), 
        .Z(\add_9_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U477 ( .A1(\shifted_products[11][0] ), .A2(
        \shifted_products[10][0] ), .Z(N174) );
  XOR3D0 U478 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[13][11] ), .A3(\products[12][5] ), .Z(N212) );
  XOR3D0 U479 ( .A1(\shifted_products[13][12] ), .A2(n32), .A3(n73), .Z(N213)
         );
  XOR3D0 U480 ( .A1(\products[13][5] ), .A2(\products[12][5] ), .A3(n33), .Z(
        N214) );
  CKND0 U481 ( .I(\shifted_products[13][12] ), .ZN(n35) );
  XNR3D0 U482 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \shifted_products[11][13] ), .A3(n36), .ZN(N187) );
  XNR3D0 U483 ( .A1(n26), .A2(n37), .A3(n36), .ZN(N188) );
  XNR3D0 U484 ( .A1(\products[11][5] ), .A2(n36), .A3(n38), .ZN(N189) );
  OAI222D0 U485 ( .A1(n37), .A2(n36), .B1(n37), .B2(n26), .C1(n36), .C2(n26), 
        .ZN(n38) );
  CKND0 U486 ( .I(\products[10][5] ), .ZN(n36) );
  XOR3D0 U487 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[9][9] ), .A3(\products[8][5] ), .Z(N157) );
  XOR3D0 U488 ( .A1(\shifted_products[9][10] ), .A2(n39), .A3(n40), .Z(N158)
         );
  XOR3D0 U489 ( .A1(\products[9][5] ), .A2(\products[8][5] ), .A3(n41), .Z(
        N159) );
  CKND0 U490 ( .I(\shifted_products[9][10] ), .ZN(n43) );
  CKND0 U491 ( .I(\products[8][5] ), .ZN(n40) );
  XNR3D0 U492 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[7][11] ), .A3(n107), .ZN(N134) );
  XNR3D0 U493 ( .A1(n24), .A2(n44), .A3(n107), .ZN(N135) );
  XNR3D0 U494 ( .A1(\products[7][5] ), .A2(n107), .A3(n45), .ZN(N136) );
  XOR3D0 U495 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(
        \shifted_products[5][7] ), .A3(\products[4][5] ), .Z(N106) );
  XOR3D0 U496 ( .A1(\shifted_products[5][8] ), .A2(n46), .A3(n119), .Z(N107)
         );
  XOR3D0 U497 ( .A1(\products[5][5] ), .A2(\products[4][5] ), .A3(n47), .Z(
        N108) );
  CKND0 U498 ( .I(\shifted_products[5][8] ), .ZN(n49) );
  XNR3D0 U499 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .A3(n50), .ZN(N85) );
  XNR3D0 U500 ( .A1(\products[3][5] ), .A2(n50), .A3(n52), .ZN(N87) );
  CKND0 U501 ( .I(\products[2][5] ), .ZN(n50) );
  XNR3D0 U502 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[1][6] ), .A3(n53), .ZN(N60) );
  XNR3D0 U503 ( .A1(n216), .A2(n54), .A3(n53), .ZN(N61) );
  CKND0 U504 ( .I(\shifted_products[0][9] ), .ZN(n53) );
endmodule


module fusion_unit_12_DW01_add_0_DW01_add_16 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  CKAN2D0 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D0 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module fusion_unit_12 ( clk, nRST, input_bitwidth, weight_bitwidth, input_sign, 
        weight_sign, input_forward, weight, psum_in, psum, input_to_right );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  input [3:0] input_sign;
  input [3:0] weight_sign;
  input [31:0] input_forward;
  input [31:0] weight;
  input [31:0] psum_in;
  output [31:0] psum;
  output [31:0] input_to_right;
  input clk, nRST;
  wire   \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] , n2;
  wire   [31:0] shift_add_out;
  assign input_to_right[31] = input_forward[31];
  assign input_to_right[30] = input_forward[30];
  assign input_to_right[29] = input_forward[29];
  assign input_to_right[28] = input_forward[28];
  assign input_to_right[27] = input_forward[27];
  assign input_to_right[26] = input_forward[26];
  assign input_to_right[25] = input_forward[25];
  assign input_to_right[24] = input_forward[24];
  assign input_to_right[23] = input_forward[23];
  assign input_to_right[22] = input_forward[22];
  assign input_to_right[21] = input_forward[21];
  assign input_to_right[20] = input_forward[20];
  assign input_to_right[19] = input_forward[19];
  assign input_to_right[18] = input_forward[18];
  assign input_to_right[17] = input_forward[17];
  assign input_to_right[16] = input_forward[16];
  assign input_to_right[15] = input_forward[15];
  assign input_to_right[14] = input_forward[14];
  assign input_to_right[13] = input_forward[13];
  assign input_to_right[12] = input_forward[12];
  assign input_to_right[11] = input_forward[11];
  assign input_to_right[10] = input_forward[10];
  assign input_to_right[9] = input_forward[9];
  assign input_to_right[8] = input_forward[8];
  assign input_to_right[7] = input_forward[7];
  assign input_to_right[6] = input_forward[6];
  assign input_to_right[5] = input_forward[5];
  assign input_to_right[4] = input_forward[4];
  assign input_to_right[3] = input_forward[3];
  assign input_to_right[2] = input_forward[2];
  assign input_to_right[1] = input_forward[1];
  assign input_to_right[0] = input_forward[0];

  bit_brick_207 \genblk1[0].BB  ( .x(input_forward[1:0]), .y(weight[1:0]), 
        .sx(input_sign[0]), .sy(weight_sign[0]), .product({\products[0][5] , 
        \products[0][4] , \products[0][3] , \products[0][2] , \products[0][1] , 
        \products[0][0] }) );
  bit_brick_206 \genblk1[1].BB  ( .x(input_forward[3:2]), .y(weight[3:2]), 
        .sx(input_sign[0]), .sy(weight_sign[1]), .product({\products[1][5] , 
        \products[1][4] , \products[1][3] , \products[1][2] , \products[1][1] , 
        \products[1][0] }) );
  bit_brick_205 \genblk1[2].BB  ( .x(input_forward[5:4]), .y(weight[5:4]), 
        .sx(input_sign[0]), .sy(weight_sign[2]), .product({\products[2][5] , 
        \products[2][4] , \products[2][3] , \products[2][2] , \products[2][1] , 
        \products[2][0] }) );
  bit_brick_204 \genblk1[3].BB  ( .x(input_forward[7:6]), .y(weight[7:6]), 
        .sx(input_sign[0]), .sy(weight_sign[3]), .product({\products[3][5] , 
        \products[3][4] , \products[3][3] , \products[3][2] , \products[3][1] , 
        \products[3][0] }) );
  bit_brick_203 \genblk1[4].BB  ( .x(input_forward[9:8]), .y(weight[9:8]), 
        .sx(input_sign[1]), .sy(weight_sign[0]), .product({\products[4][5] , 
        \products[4][4] , \products[4][3] , \products[4][2] , \products[4][1] , 
        \products[4][0] }) );
  bit_brick_202 \genblk1[5].BB  ( .x(input_forward[11:10]), .y(weight[11:10]), 
        .sx(input_sign[1]), .sy(weight_sign[1]), .product({\products[5][5] , 
        \products[5][4] , \products[5][3] , \products[5][2] , \products[5][1] , 
        \products[5][0] }) );
  bit_brick_201 \genblk1[6].BB  ( .x(input_forward[13:12]), .y(weight[13:12]), 
        .sx(input_sign[1]), .sy(weight_sign[2]), .product({\products[6][5] , 
        \products[6][4] , \products[6][3] , \products[6][2] , \products[6][1] , 
        \products[6][0] }) );
  bit_brick_200 \genblk1[7].BB  ( .x(input_forward[15:14]), .y(weight[15:14]), 
        .sx(input_sign[1]), .sy(weight_sign[3]), .product({\products[7][5] , 
        \products[7][4] , \products[7][3] , \products[7][2] , \products[7][1] , 
        \products[7][0] }) );
  bit_brick_199 \genblk1[8].BB  ( .x(input_forward[17:16]), .y(weight[17:16]), 
        .sx(input_sign[2]), .sy(weight_sign[0]), .product({\products[8][5] , 
        \products[8][4] , \products[8][3] , \products[8][2] , \products[8][1] , 
        \products[8][0] }) );
  bit_brick_198 \genblk1[9].BB  ( .x(input_forward[19:18]), .y(weight[19:18]), 
        .sx(input_sign[2]), .sy(weight_sign[1]), .product({\products[9][5] , 
        \products[9][4] , \products[9][3] , \products[9][2] , \products[9][1] , 
        \products[9][0] }) );
  bit_brick_197 \genblk1[10].BB  ( .x(input_forward[21:20]), .y(weight[21:20]), 
        .sx(input_sign[2]), .sy(weight_sign[2]), .product({\products[10][5] , 
        \products[10][4] , \products[10][3] , \products[10][2] , 
        \products[10][1] , \products[10][0] }) );
  bit_brick_196 \genblk1[11].BB  ( .x(input_forward[23:22]), .y(weight[23:22]), 
        .sx(input_sign[2]), .sy(weight_sign[3]), .product({\products[11][5] , 
        \products[11][4] , \products[11][3] , \products[11][2] , 
        \products[11][1] , \products[11][0] }) );
  bit_brick_195 \genblk1[12].BB  ( .x(input_forward[25:24]), .y(weight[25:24]), 
        .sx(input_sign[3]), .sy(weight_sign[0]), .product({\products[12][5] , 
        \products[12][4] , \products[12][3] , \products[12][2] , 
        \products[12][1] , \products[12][0] }) );
  bit_brick_194 \genblk1[13].BB  ( .x(input_forward[27:26]), .y(weight[27:26]), 
        .sx(input_sign[3]), .sy(weight_sign[1]), .product({\products[13][5] , 
        \products[13][4] , \products[13][3] , \products[13][2] , 
        \products[13][1] , \products[13][0] }) );
  bit_brick_193 \genblk1[14].BB  ( .x(input_forward[29:28]), .y(weight[29:28]), 
        .sx(input_sign[3]), .sy(weight_sign[2]), .product({\products[14][5] , 
        \products[14][4] , \products[14][3] , \products[14][2] , 
        \products[14][1] , \products[14][0] }) );
  bit_brick_192 \genblk1[15].BB  ( .x(input_forward[31:30]), .y(weight[31:30]), 
        .sx(input_sign[3]), .sy(weight_sign[3]), .product({\products[15][5] , 
        \products[15][4] , \products[15][3] , \products[15][2] , 
        \products[15][1] , \products[15][0] }) );
  shift_add_12 shift_add ( .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .products({\products[15][5] , \products[15][4] , 
        \products[15][3] , \products[15][2] , \products[15][1] , 
        \products[15][0] , \products[14][5] , \products[14][4] , 
        \products[14][3] , \products[14][2] , \products[14][1] , 
        \products[14][0] , \products[13][5] , \products[13][4] , 
        \products[13][3] , \products[13][2] , \products[13][1] , 
        \products[13][0] , \products[12][5] , \products[12][4] , 
        \products[12][3] , \products[12][2] , \products[12][1] , 
        \products[12][0] , \products[11][5] , \products[11][4] , 
        \products[11][3] , \products[11][2] , \products[11][1] , 
        \products[11][0] , \products[10][5] , \products[10][4] , 
        \products[10][3] , \products[10][2] , \products[10][1] , 
        \products[10][0] , \products[9][5] , \products[9][4] , 
        \products[9][3] , \products[9][2] , \products[9][1] , \products[9][0] , 
        \products[8][5] , \products[8][4] , \products[8][3] , \products[8][2] , 
        \products[8][1] , \products[8][0] , \products[7][5] , \products[7][4] , 
        \products[7][3] , \products[7][2] , \products[7][1] , \products[7][0] , 
        \products[6][5] , \products[6][4] , \products[6][3] , \products[6][2] , 
        \products[6][1] , \products[6][0] , \products[5][5] , \products[5][4] , 
        \products[5][3] , \products[5][2] , \products[5][1] , \products[5][0] , 
        \products[4][5] , \products[4][4] , \products[4][3] , \products[4][2] , 
        \products[4][1] , \products[4][0] , \products[3][5] , \products[3][4] , 
        \products[3][3] , \products[3][2] , \products[3][1] , \products[3][0] , 
        \products[2][5] , \products[2][4] , \products[2][3] , \products[2][2] , 
        \products[2][1] , \products[2][0] , \products[1][5] , \products[1][4] , 
        \products[1][3] , \products[1][2] , \products[1][1] , \products[1][0] , 
        \products[0][5] , \products[0][4] , \products[0][3] , \products[0][2] , 
        \products[0][1] , \products[0][0] }), .shift_add_out(shift_add_out) );
  fusion_unit_12_DW01_add_0_DW01_add_16 add_53 ( .A(shift_add_out), .B(psum_in), .CI(n2), .SUM(psum) );
  TIEL U1 ( .ZN(n2) );
endmodule


module WBUF_ARRAY_SIZE4_DATA_W32_11 ( clk, nRST, WBUF_wr_en, WBUF_data_in, 
        WBUF_data_out );
  input [31:0] WBUF_data_in;
  output [31:0] WBUF_data_out;
  input clk, nRST, WBUF_wr_en;
  wire   n1, n2, n3, n4, n5, n6;

  EDFCNQD1 \WBUF_data_out_reg[31]  ( .D(WBUF_data_in[31]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[31]) );
  EDFCNQD1 \WBUF_data_out_reg[30]  ( .D(WBUF_data_in[30]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[30]) );
  EDFCNQD1 \WBUF_data_out_reg[29]  ( .D(WBUF_data_in[29]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[29]) );
  EDFCNQD1 \WBUF_data_out_reg[28]  ( .D(WBUF_data_in[28]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[28]) );
  EDFCNQD1 \WBUF_data_out_reg[27]  ( .D(WBUF_data_in[27]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[27]) );
  EDFCNQD1 \WBUF_data_out_reg[26]  ( .D(WBUF_data_in[26]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[26]) );
  EDFCNQD1 \WBUF_data_out_reg[25]  ( .D(WBUF_data_in[25]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[25]) );
  EDFCNQD1 \WBUF_data_out_reg[24]  ( .D(WBUF_data_in[24]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[24]) );
  EDFCNQD1 \WBUF_data_out_reg[23]  ( .D(WBUF_data_in[23]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[23]) );
  EDFCNQD1 \WBUF_data_out_reg[22]  ( .D(WBUF_data_in[22]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[22]) );
  EDFCNQD1 \WBUF_data_out_reg[21]  ( .D(WBUF_data_in[21]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[21]) );
  EDFCNQD1 \WBUF_data_out_reg[20]  ( .D(WBUF_data_in[20]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[20]) );
  EDFCNQD1 \WBUF_data_out_reg[19]  ( .D(WBUF_data_in[19]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[19]) );
  EDFCNQD1 \WBUF_data_out_reg[18]  ( .D(WBUF_data_in[18]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[18]) );
  EDFCNQD1 \WBUF_data_out_reg[17]  ( .D(WBUF_data_in[17]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[17]) );
  EDFCNQD1 \WBUF_data_out_reg[16]  ( .D(WBUF_data_in[16]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[16]) );
  EDFCNQD1 \WBUF_data_out_reg[15]  ( .D(WBUF_data_in[15]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[15]) );
  EDFCNQD1 \WBUF_data_out_reg[14]  ( .D(WBUF_data_in[14]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[14]) );
  EDFCNQD1 \WBUF_data_out_reg[13]  ( .D(WBUF_data_in[13]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[13]) );
  EDFCNQD1 \WBUF_data_out_reg[12]  ( .D(WBUF_data_in[12]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[12]) );
  EDFCNQD1 \WBUF_data_out_reg[11]  ( .D(WBUF_data_in[11]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[11]) );
  EDFCNQD1 \WBUF_data_out_reg[10]  ( .D(WBUF_data_in[10]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[10]) );
  EDFCNQD1 \WBUF_data_out_reg[9]  ( .D(WBUF_data_in[9]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[9]) );
  EDFCNQD1 \WBUF_data_out_reg[8]  ( .D(WBUF_data_in[8]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[8]) );
  EDFCNQD1 \WBUF_data_out_reg[7]  ( .D(WBUF_data_in[7]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[7]) );
  EDFCNQD1 \WBUF_data_out_reg[6]  ( .D(WBUF_data_in[6]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[6]) );
  EDFCNQD1 \WBUF_data_out_reg[5]  ( .D(WBUF_data_in[5]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[5]) );
  EDFCNQD1 \WBUF_data_out_reg[4]  ( .D(WBUF_data_in[4]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[4]) );
  EDFCNQD1 \WBUF_data_out_reg[3]  ( .D(WBUF_data_in[3]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[3]) );
  EDFCNQD1 \WBUF_data_out_reg[2]  ( .D(WBUF_data_in[2]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[2]) );
  EDFCNQD1 \WBUF_data_out_reg[1]  ( .D(WBUF_data_in[1]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[1]) );
  EDFCNQD1 \WBUF_data_out_reg[0]  ( .D(WBUF_data_in[0]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[0]) );
  CKBD1 U2 ( .I(WBUF_wr_en), .Z(n5) );
  CKBD1 U3 ( .I(WBUF_wr_en), .Z(n4) );
  CKBD1 U4 ( .I(nRST), .Z(n1) );
  CKBD1 U5 ( .I(nRST), .Z(n2) );
  CKBD1 U6 ( .I(nRST), .Z(n3) );
  CKBD1 U7 ( .I(WBUF_wr_en), .Z(n6) );
endmodule


module w_mux_11 ( clk, nRST, input_bitwidth, rd_en, data_in, data_out );
  input [2:0] input_bitwidth;
  input [31:0] data_in;
  output [31:0] data_out;
  input clk, nRST, rd_en;
  wire   N40, N41, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129,
         n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140,
         n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151,
         n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162,
         n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173,
         n174, n175, n176, n177, n178;
  wire   [1:0] rd_ptr;
  wire   [31:0] next_data_out;

  EDFCNQD1 \rd_ptr_reg[0]  ( .D(N40), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[0]) );
  EDFCNQD1 \rd_ptr_reg[1]  ( .D(N41), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[1]) );
  DFCNQD1 \data_out_reg[31]  ( .D(next_data_out[31]), .CP(clk), .CDN(n1), .Q(
        data_out[31]) );
  DFCNQD1 \data_out_reg[30]  ( .D(next_data_out[30]), .CP(clk), .CDN(n3), .Q(
        data_out[30]) );
  DFCNQD1 \data_out_reg[29]  ( .D(next_data_out[29]), .CP(clk), .CDN(n3), .Q(
        data_out[29]) );
  DFCNQD1 \data_out_reg[28]  ( .D(next_data_out[28]), .CP(clk), .CDN(n3), .Q(
        data_out[28]) );
  DFCNQD1 \data_out_reg[27]  ( .D(next_data_out[27]), .CP(clk), .CDN(n3), .Q(
        data_out[27]) );
  DFCNQD1 \data_out_reg[26]  ( .D(next_data_out[26]), .CP(clk), .CDN(n3), .Q(
        data_out[26]) );
  DFCNQD1 \data_out_reg[25]  ( .D(next_data_out[25]), .CP(clk), .CDN(n2), .Q(
        data_out[25]) );
  DFCNQD1 \data_out_reg[24]  ( .D(next_data_out[24]), .CP(clk), .CDN(n2), .Q(
        data_out[24]) );
  DFCNQD1 \data_out_reg[23]  ( .D(next_data_out[23]), .CP(clk), .CDN(n3), .Q(
        data_out[23]) );
  DFCNQD1 \data_out_reg[22]  ( .D(next_data_out[22]), .CP(clk), .CDN(n2), .Q(
        data_out[22]) );
  DFCNQD1 \data_out_reg[21]  ( .D(next_data_out[21]), .CP(clk), .CDN(n2), .Q(
        data_out[21]) );
  DFCNQD1 \data_out_reg[20]  ( .D(next_data_out[20]), .CP(clk), .CDN(n2), .Q(
        data_out[20]) );
  DFCNQD1 \data_out_reg[19]  ( .D(next_data_out[19]), .CP(clk), .CDN(n2), .Q(
        data_out[19]) );
  DFCNQD1 \data_out_reg[18]  ( .D(next_data_out[18]), .CP(clk), .CDN(n2), .Q(
        data_out[18]) );
  DFCNQD1 \data_out_reg[17]  ( .D(next_data_out[17]), .CP(clk), .CDN(n2), .Q(
        data_out[17]) );
  DFCNQD1 \data_out_reg[16]  ( .D(next_data_out[16]), .CP(clk), .CDN(n2), .Q(
        data_out[16]) );
  DFCNQD1 \data_out_reg[15]  ( .D(next_data_out[15]), .CP(clk), .CDN(n2), .Q(
        data_out[15]) );
  DFCNQD1 \data_out_reg[14]  ( .D(next_data_out[14]), .CP(clk), .CDN(n2), .Q(
        data_out[14]) );
  DFCNQD1 \data_out_reg[13]  ( .D(next_data_out[13]), .CP(clk), .CDN(n2), .Q(
        data_out[13]) );
  DFCNQD1 \data_out_reg[12]  ( .D(next_data_out[12]), .CP(clk), .CDN(n1), .Q(
        data_out[12]) );
  DFCNQD1 \data_out_reg[11]  ( .D(next_data_out[11]), .CP(clk), .CDN(n1), .Q(
        data_out[11]) );
  DFCNQD1 \data_out_reg[10]  ( .D(next_data_out[10]), .CP(clk), .CDN(n1), .Q(
        data_out[10]) );
  DFCNQD1 \data_out_reg[9]  ( .D(next_data_out[9]), .CP(clk), .CDN(n1), .Q(
        data_out[9]) );
  DFCNQD1 \data_out_reg[8]  ( .D(next_data_out[8]), .CP(clk), .CDN(n1), .Q(
        data_out[8]) );
  DFCNQD1 \data_out_reg[7]  ( .D(next_data_out[7]), .CP(clk), .CDN(n1), .Q(
        data_out[7]) );
  DFCNQD1 \data_out_reg[6]  ( .D(next_data_out[6]), .CP(clk), .CDN(n1), .Q(
        data_out[6]) );
  DFCNQD1 \data_out_reg[5]  ( .D(next_data_out[5]), .CP(clk), .CDN(n1), .Q(
        data_out[5]) );
  DFCNQD1 \data_out_reg[4]  ( .D(next_data_out[4]), .CP(clk), .CDN(n1), .Q(
        data_out[4]) );
  DFCNQD1 \data_out_reg[3]  ( .D(next_data_out[3]), .CP(clk), .CDN(n1), .Q(
        data_out[3]) );
  DFCNQD1 \data_out_reg[2]  ( .D(next_data_out[2]), .CP(clk), .CDN(n1), .Q(
        data_out[2]) );
  DFCNQD1 \data_out_reg[1]  ( .D(next_data_out[1]), .CP(clk), .CDN(n1), .Q(
        data_out[1]) );
  DFCNQD1 \data_out_reg[0]  ( .D(next_data_out[0]), .CP(clk), .CDN(n2), .Q(
        data_out[0]) );
  OA21D1 U20 ( .A1(n161), .A2(n160), .B(n159), .Z(n170) );
  OA21D1 U23 ( .A1(n156), .A2(n160), .B(n155), .Z(n169) );
  OA21D1 U26 ( .A1(n154), .A2(n160), .B(n153), .Z(n167) );
  OA21D1 U29 ( .A1(n152), .A2(n160), .B(n151), .Z(n166) );
  OA21D1 U32 ( .A1(n150), .A2(n160), .B(n149), .Z(n177) );
  OA21D1 U35 ( .A1(n148), .A2(n160), .B(n147), .Z(n165) );
  OA21D1 U38 ( .A1(n146), .A2(n160), .B(n145), .Z(n164) );
  OA21D1 U41 ( .A1(n144), .A2(n160), .B(n149), .Z(n163) );
  OA21D1 U47 ( .A1(n139), .A2(n160), .B(n138), .Z(n162) );
  OA21D1 U50 ( .A1(n137), .A2(n160), .B(n159), .Z(n175) );
  OA21D1 U56 ( .A1(n134), .A2(n160), .B(n155), .Z(n174) );
  OA21D1 U62 ( .A1(n131), .A2(n160), .B(n153), .Z(n173) );
  OA21D1 U68 ( .A1(n128), .A2(n160), .B(n151), .Z(n172) );
  OA21D1 U74 ( .A1(n125), .A2(n160), .B(n147), .Z(n171) );
  OA21D1 U80 ( .A1(n122), .A2(n160), .B(n145), .Z(n168) );
  OA21D1 U86 ( .A1(n119), .A2(n160), .B(n138), .Z(n176) );
  AN2XD1 U90 ( .A1(rd_ptr[1]), .A2(rd_ptr[0]), .Z(n140) );
  AN4XD1 U91 ( .A1(input_bitwidth[2]), .A2(rd_en), .A3(n5), .A4(n7), .Z(n143)
         );
  MAOI22D1 U97 ( .A1(n115), .A2(n12), .B1(n115), .B2(n114), .ZN(n113) );
  NR2D1 U3 ( .A1(n13), .A2(rd_ptr[1]), .ZN(n158) );
  NR2D1 U4 ( .A1(rd_ptr[0]), .A2(rd_ptr[1]), .ZN(n157) );
  AOI21D1 U5 ( .A1(n12), .A2(n116), .B(n113), .ZN(N41) );
  OAI21D1 U6 ( .A1(n111), .A2(n10), .B(n177), .ZN(next_data_out[1]) );
  OAI21D1 U7 ( .A1(n37), .A2(n10), .B(n177), .ZN(next_data_out[9]) );
  OAI21D1 U8 ( .A1(n8), .A2(n112), .B(n176), .ZN(next_data_out[0]) );
  OAI21D1 U9 ( .A1(n9), .A2(n110), .B(n168), .ZN(next_data_out[2]) );
  OAI21D1 U10 ( .A1(n9), .A2(n109), .B(n171), .ZN(next_data_out[3]) );
  OAI21D1 U11 ( .A1(n9), .A2(n108), .B(n172), .ZN(next_data_out[4]) );
  OAI21D1 U12 ( .A1(n8), .A2(n36), .B(n168), .ZN(next_data_out[10]) );
  OAI21D1 U13 ( .A1(n8), .A2(n35), .B(n171), .ZN(next_data_out[11]) );
  OAI21D1 U14 ( .A1(n8), .A2(n34), .B(n172), .ZN(next_data_out[12]) );
  OAI21D1 U15 ( .A1(n9), .A2(n33), .B(n173), .ZN(next_data_out[13]) );
  OAI21D1 U16 ( .A1(n8), .A2(n32), .B(n174), .ZN(next_data_out[14]) );
  OAI21D1 U17 ( .A1(n8), .A2(n31), .B(n175), .ZN(next_data_out[15]) );
  OAI21D1 U18 ( .A1(n10), .A2(n107), .B(n173), .ZN(next_data_out[5]) );
  OAI21D1 U19 ( .A1(n10), .A2(n106), .B(n174), .ZN(next_data_out[6]) );
  OAI21D1 U21 ( .A1(n10), .A2(n105), .B(n175), .ZN(next_data_out[7]) );
  OAI21D1 U22 ( .A1(n10), .A2(n38), .B(n176), .ZN(next_data_out[8]) );
  CKBD1 U24 ( .I(n178), .Z(n8) );
  CKBD1 U25 ( .I(n178), .Z(n9) );
  CKBD1 U27 ( .I(n178), .Z(n10) );
  INVD1 U28 ( .I(n6), .ZN(n7) );
  INVD1 U30 ( .I(n4), .ZN(n5) );
  INVD1 U31 ( .I(n116), .ZN(n11) );
  INVD1 U33 ( .I(n157), .ZN(n14) );
  INVD1 U34 ( .I(n158), .ZN(n12) );
  ND2D1 U36 ( .A1(n114), .A2(rd_en), .ZN(n178) );
  NR3D0 U37 ( .A1(n4), .A2(input_bitwidth[2]), .A3(n7), .ZN(n115) );
  NR3D0 U39 ( .A1(n6), .A2(input_bitwidth[2]), .A3(n5), .ZN(n114) );
  ND2D1 U40 ( .A1(rd_en), .A2(n115), .ZN(n160) );
  ND2D1 U42 ( .A1(n143), .A2(n118), .ZN(n138) );
  OAI221D0 U43 ( .A1(n12), .A2(n38), .B1(n14), .B2(n112), .C(n117), .ZN(n118)
         );
  AOI22D1 U44 ( .A1(data_in[24]), .A2(n140), .B1(data_in[16]), .B2(n11), .ZN(
        n117) );
  ND2D1 U45 ( .A1(n143), .A2(n142), .ZN(n149) );
  OAI221D0 U46 ( .A1(n12), .A2(n37), .B1(n14), .B2(n111), .C(n141), .ZN(n142)
         );
  AOI22D1 U48 ( .A1(data_in[25]), .A2(n140), .B1(n11), .B2(data_in[17]), .ZN(
        n141) );
  ND2D1 U49 ( .A1(n143), .A2(n121), .ZN(n145) );
  OAI221D0 U51 ( .A1(n12), .A2(n36), .B1(n14), .B2(n110), .C(n120), .ZN(n121)
         );
  AOI22D1 U52 ( .A1(data_in[26]), .A2(n140), .B1(data_in[18]), .B2(n11), .ZN(
        n120) );
  ND2D1 U53 ( .A1(n143), .A2(n124), .ZN(n147) );
  OAI221D0 U54 ( .A1(n12), .A2(n35), .B1(n14), .B2(n109), .C(n123), .ZN(n124)
         );
  AOI22D1 U55 ( .A1(data_in[27]), .A2(n140), .B1(data_in[19]), .B2(n11), .ZN(
        n123) );
  ND2D1 U57 ( .A1(n143), .A2(n127), .ZN(n151) );
  OAI221D0 U58 ( .A1(n12), .A2(n34), .B1(n14), .B2(n108), .C(n126), .ZN(n127)
         );
  AOI22D1 U59 ( .A1(data_in[28]), .A2(n140), .B1(data_in[20]), .B2(n11), .ZN(
        n126) );
  ND2D1 U60 ( .A1(n143), .A2(n130), .ZN(n153) );
  OAI221D0 U61 ( .A1(n12), .A2(n33), .B1(n14), .B2(n107), .C(n129), .ZN(n130)
         );
  AOI22D1 U63 ( .A1(data_in[29]), .A2(n140), .B1(data_in[21]), .B2(n11), .ZN(
        n129) );
  ND2D1 U64 ( .A1(n143), .A2(n133), .ZN(n155) );
  OAI221D0 U65 ( .A1(n12), .A2(n32), .B1(n14), .B2(n106), .C(n132), .ZN(n133)
         );
  AOI22D1 U66 ( .A1(data_in[30]), .A2(n140), .B1(data_in[22]), .B2(n11), .ZN(
        n132) );
  ND2D1 U67 ( .A1(n143), .A2(n136), .ZN(n159) );
  OAI221D0 U69 ( .A1(n12), .A2(n31), .B1(n14), .B2(n105), .C(n135), .ZN(n136)
         );
  AOI22D1 U70 ( .A1(data_in[31]), .A2(n140), .B1(data_in[23]), .B2(n11), .ZN(
        n135) );
  AOI22D1 U71 ( .A1(data_in[16]), .A2(n158), .B1(data_in[0]), .B2(n157), .ZN(
        n119) );
  AOI22D1 U72 ( .A1(data_in[17]), .A2(n158), .B1(data_in[1]), .B2(n157), .ZN(
        n150) );
  AOI22D1 U73 ( .A1(data_in[18]), .A2(n158), .B1(data_in[2]), .B2(n157), .ZN(
        n122) );
  AOI22D1 U75 ( .A1(data_in[19]), .A2(n158), .B1(data_in[3]), .B2(n157), .ZN(
        n125) );
  AOI22D1 U76 ( .A1(data_in[20]), .A2(n158), .B1(data_in[4]), .B2(n157), .ZN(
        n128) );
  AOI22D1 U77 ( .A1(data_in[21]), .A2(n158), .B1(data_in[5]), .B2(n157), .ZN(
        n131) );
  AOI22D1 U78 ( .A1(data_in[22]), .A2(n158), .B1(data_in[6]), .B2(n157), .ZN(
        n134) );
  AOI22D1 U79 ( .A1(data_in[23]), .A2(n158), .B1(data_in[7]), .B2(n157), .ZN(
        n137) );
  AOI22D1 U81 ( .A1(data_in[24]), .A2(n158), .B1(data_in[8]), .B2(n157), .ZN(
        n139) );
  AOI22D1 U82 ( .A1(data_in[25]), .A2(n158), .B1(data_in[9]), .B2(n157), .ZN(
        n144) );
  AOI22D1 U83 ( .A1(data_in[26]), .A2(n158), .B1(data_in[10]), .B2(n157), .ZN(
        n146) );
  AOI22D1 U84 ( .A1(data_in[27]), .A2(n158), .B1(data_in[11]), .B2(n157), .ZN(
        n148) );
  AOI22D1 U85 ( .A1(data_in[28]), .A2(n158), .B1(data_in[12]), .B2(n157), .ZN(
        n152) );
  AOI22D1 U87 ( .A1(data_in[29]), .A2(n158), .B1(data_in[13]), .B2(n157), .ZN(
        n154) );
  AOI22D1 U88 ( .A1(data_in[30]), .A2(n158), .B1(data_in[14]), .B2(n157), .ZN(
        n156) );
  AOI22D1 U89 ( .A1(data_in[31]), .A2(n158), .B1(data_in[15]), .B2(n157), .ZN(
        n161) );
  NR2D1 U92 ( .A1(rd_ptr[0]), .A2(n114), .ZN(N40) );
  OAI21D1 U93 ( .A1(n29), .A2(n10), .B(n163), .ZN(next_data_out[17]) );
  INVD1 U94 ( .I(data_in[17]), .ZN(n29) );
  OAI21D1 U95 ( .A1(n8), .A2(n30), .B(n162), .ZN(next_data_out[16]) );
  INVD1 U96 ( .I(data_in[16]), .ZN(n30) );
  OAI21D1 U98 ( .A1(n8), .A2(n28), .B(n164), .ZN(next_data_out[18]) );
  INVD1 U99 ( .I(data_in[18]), .ZN(n28) );
  OAI21D1 U100 ( .A1(n8), .A2(n27), .B(n165), .ZN(next_data_out[19]) );
  INVD1 U101 ( .I(data_in[19]), .ZN(n27) );
  OAI21D1 U102 ( .A1(n8), .A2(n26), .B(n166), .ZN(next_data_out[20]) );
  INVD1 U103 ( .I(data_in[20]), .ZN(n26) );
  OAI21D1 U104 ( .A1(n8), .A2(n25), .B(n167), .ZN(next_data_out[21]) );
  INVD1 U105 ( .I(data_in[21]), .ZN(n25) );
  OAI21D1 U106 ( .A1(n8), .A2(n24), .B(n169), .ZN(next_data_out[22]) );
  INVD1 U107 ( .I(data_in[22]), .ZN(n24) );
  OAI21D1 U108 ( .A1(n9), .A2(n23), .B(n170), .ZN(next_data_out[23]) );
  INVD1 U109 ( .I(data_in[23]), .ZN(n23) );
  OAI21D1 U110 ( .A1(n9), .A2(n22), .B(n162), .ZN(next_data_out[24]) );
  INVD1 U111 ( .I(data_in[24]), .ZN(n22) );
  OAI21D1 U112 ( .A1(n9), .A2(n20), .B(n164), .ZN(next_data_out[26]) );
  INVD1 U113 ( .I(data_in[26]), .ZN(n20) );
  OAI21D1 U114 ( .A1(n9), .A2(n19), .B(n165), .ZN(next_data_out[27]) );
  INVD1 U115 ( .I(data_in[27]), .ZN(n19) );
  OAI21D1 U116 ( .A1(n9), .A2(n18), .B(n166), .ZN(next_data_out[28]) );
  INVD1 U117 ( .I(data_in[28]), .ZN(n18) );
  OAI21D1 U118 ( .A1(n9), .A2(n17), .B(n167), .ZN(next_data_out[29]) );
  INVD1 U119 ( .I(data_in[29]), .ZN(n17) );
  OAI21D1 U120 ( .A1(n9), .A2(n16), .B(n169), .ZN(next_data_out[30]) );
  INVD1 U121 ( .I(data_in[30]), .ZN(n16) );
  OAI21D1 U122 ( .A1(n9), .A2(n15), .B(n170), .ZN(next_data_out[31]) );
  INVD1 U123 ( .I(data_in[31]), .ZN(n15) );
  OAI21D1 U124 ( .A1(n21), .A2(n10), .B(n163), .ZN(next_data_out[25]) );
  INVD1 U125 ( .I(data_in[25]), .ZN(n21) );
  CKBD1 U126 ( .I(input_bitwidth[0]), .Z(n4) );
  CKBD1 U127 ( .I(input_bitwidth[1]), .Z(n6) );
  ND2D1 U128 ( .A1(rd_ptr[1]), .A2(n13), .ZN(n116) );
  INVD1 U129 ( .I(rd_ptr[0]), .ZN(n13) );
  INVD1 U130 ( .I(data_in[1]), .ZN(n111) );
  INVD1 U131 ( .I(data_in[9]), .ZN(n37) );
  INVD1 U132 ( .I(data_in[0]), .ZN(n112) );
  INVD1 U133 ( .I(data_in[2]), .ZN(n110) );
  INVD1 U134 ( .I(data_in[3]), .ZN(n109) );
  INVD1 U135 ( .I(data_in[4]), .ZN(n108) );
  INVD1 U136 ( .I(data_in[5]), .ZN(n107) );
  INVD1 U137 ( .I(data_in[6]), .ZN(n106) );
  INVD1 U138 ( .I(data_in[7]), .ZN(n105) );
  INVD1 U139 ( .I(data_in[8]), .ZN(n38) );
  INVD1 U140 ( .I(data_in[10]), .ZN(n36) );
  INVD1 U141 ( .I(data_in[11]), .ZN(n35) );
  INVD1 U142 ( .I(data_in[12]), .ZN(n34) );
  INVD1 U143 ( .I(data_in[13]), .ZN(n33) );
  INVD1 U144 ( .I(data_in[14]), .ZN(n32) );
  INVD1 U145 ( .I(data_in[15]), .ZN(n31) );
  CKBD1 U146 ( .I(nRST), .Z(n2) );
  CKBD1 U147 ( .I(nRST), .Z(n1) );
  CKBD1 U148 ( .I(nRST), .Z(n3) );
endmodule


module IBUF_ARRAY_SIZE4_DATA_W32_2 ( clk, nRST, IBUF_wr_en, IBUF_data_in, 
        IBUF_data_out );
  input [31:0] IBUF_data_in;
  output [31:0] IBUF_data_out;
  input clk, nRST, IBUF_wr_en;
  wire   n1, n2, n3, n4, n5, n6;

  EDFCNQD1 \IBUF_data_out_reg[31]  ( .D(IBUF_data_in[31]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[31]) );
  EDFCNQD1 \IBUF_data_out_reg[30]  ( .D(IBUF_data_in[30]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[30]) );
  EDFCNQD1 \IBUF_data_out_reg[29]  ( .D(IBUF_data_in[29]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[29]) );
  EDFCNQD1 \IBUF_data_out_reg[28]  ( .D(IBUF_data_in[28]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[28]) );
  EDFCNQD1 \IBUF_data_out_reg[27]  ( .D(IBUF_data_in[27]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[27]) );
  EDFCNQD1 \IBUF_data_out_reg[26]  ( .D(IBUF_data_in[26]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[26]) );
  EDFCNQD1 \IBUF_data_out_reg[25]  ( .D(IBUF_data_in[25]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[25]) );
  EDFCNQD1 \IBUF_data_out_reg[24]  ( .D(IBUF_data_in[24]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[24]) );
  EDFCNQD1 \IBUF_data_out_reg[23]  ( .D(IBUF_data_in[23]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[23]) );
  EDFCNQD1 \IBUF_data_out_reg[22]  ( .D(IBUF_data_in[22]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[22]) );
  EDFCNQD1 \IBUF_data_out_reg[21]  ( .D(IBUF_data_in[21]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[21]) );
  EDFCNQD1 \IBUF_data_out_reg[20]  ( .D(IBUF_data_in[20]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[20]) );
  EDFCNQD1 \IBUF_data_out_reg[19]  ( .D(IBUF_data_in[19]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[19]) );
  EDFCNQD1 \IBUF_data_out_reg[18]  ( .D(IBUF_data_in[18]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[18]) );
  EDFCNQD1 \IBUF_data_out_reg[17]  ( .D(IBUF_data_in[17]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[17]) );
  EDFCNQD1 \IBUF_data_out_reg[16]  ( .D(IBUF_data_in[16]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[16]) );
  EDFCNQD1 \IBUF_data_out_reg[15]  ( .D(IBUF_data_in[15]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[15]) );
  EDFCNQD1 \IBUF_data_out_reg[14]  ( .D(IBUF_data_in[14]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[14]) );
  EDFCNQD1 \IBUF_data_out_reg[13]  ( .D(IBUF_data_in[13]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[13]) );
  EDFCNQD1 \IBUF_data_out_reg[12]  ( .D(IBUF_data_in[12]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[12]) );
  EDFCNQD1 \IBUF_data_out_reg[11]  ( .D(IBUF_data_in[11]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[11]) );
  EDFCNQD1 \IBUF_data_out_reg[10]  ( .D(IBUF_data_in[10]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[10]) );
  EDFCNQD1 \IBUF_data_out_reg[9]  ( .D(IBUF_data_in[9]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[9]) );
  EDFCNQD1 \IBUF_data_out_reg[8]  ( .D(IBUF_data_in[8]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[8]) );
  EDFCNQD1 \IBUF_data_out_reg[7]  ( .D(IBUF_data_in[7]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[7]) );
  EDFCNQD1 \IBUF_data_out_reg[6]  ( .D(IBUF_data_in[6]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[6]) );
  EDFCNQD1 \IBUF_data_out_reg[5]  ( .D(IBUF_data_in[5]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[5]) );
  EDFCNQD1 \IBUF_data_out_reg[4]  ( .D(IBUF_data_in[4]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[4]) );
  EDFCNQD1 \IBUF_data_out_reg[3]  ( .D(IBUF_data_in[3]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[3]) );
  EDFCNQD1 \IBUF_data_out_reg[2]  ( .D(IBUF_data_in[2]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[2]) );
  EDFCNQD1 \IBUF_data_out_reg[1]  ( .D(IBUF_data_in[1]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[1]) );
  EDFCNQD1 \IBUF_data_out_reg[0]  ( .D(IBUF_data_in[0]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[0]) );
  CKBD1 U2 ( .I(IBUF_wr_en), .Z(n5) );
  CKBD1 U3 ( .I(IBUF_wr_en), .Z(n4) );
  CKBD1 U4 ( .I(nRST), .Z(n1) );
  CKBD1 U5 ( .I(nRST), .Z(n2) );
  CKBD1 U6 ( .I(nRST), .Z(n3) );
  CKBD1 U7 ( .I(IBUF_wr_en), .Z(n6) );
endmodule


module in_mux_2 ( clk, nRST, weight_bitwidth, rd_en, data_in, data_out );
  input [2:0] weight_bitwidth;
  input [31:0] data_in;
  output [31:0] data_out;
  input clk, nRST, rd_en;
  wire   N40, N41, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129,
         n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140,
         n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151,
         n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162,
         n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173,
         n174, n175, n176, n177, n178;
  wire   [1:0] rd_ptr;
  wire   [31:0] next_data_out;

  EDFCNQD1 \rd_ptr_reg[0]  ( .D(N40), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[0]) );
  EDFCNQD1 \rd_ptr_reg[1]  ( .D(N41), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[1]) );
  DFCNQD1 \data_out_reg[31]  ( .D(next_data_out[31]), .CP(clk), .CDN(n1), .Q(
        data_out[31]) );
  DFCNQD1 \data_out_reg[30]  ( .D(next_data_out[30]), .CP(clk), .CDN(n3), .Q(
        data_out[30]) );
  DFCNQD1 \data_out_reg[29]  ( .D(next_data_out[29]), .CP(clk), .CDN(n3), .Q(
        data_out[29]) );
  DFCNQD1 \data_out_reg[28]  ( .D(next_data_out[28]), .CP(clk), .CDN(n3), .Q(
        data_out[28]) );
  DFCNQD1 \data_out_reg[27]  ( .D(next_data_out[27]), .CP(clk), .CDN(n3), .Q(
        data_out[27]) );
  DFCNQD1 \data_out_reg[26]  ( .D(next_data_out[26]), .CP(clk), .CDN(n3), .Q(
        data_out[26]) );
  DFCNQD1 \data_out_reg[25]  ( .D(next_data_out[25]), .CP(clk), .CDN(n3), .Q(
        data_out[25]) );
  DFCNQD1 \data_out_reg[24]  ( .D(next_data_out[24]), .CP(clk), .CDN(n2), .Q(
        data_out[24]) );
  DFCNQD1 \data_out_reg[23]  ( .D(next_data_out[23]), .CP(clk), .CDN(n2), .Q(
        data_out[23]) );
  DFCNQD1 \data_out_reg[22]  ( .D(next_data_out[22]), .CP(clk), .CDN(n2), .Q(
        data_out[22]) );
  DFCNQD1 \data_out_reg[21]  ( .D(next_data_out[21]), .CP(clk), .CDN(n2), .Q(
        data_out[21]) );
  DFCNQD1 \data_out_reg[20]  ( .D(next_data_out[20]), .CP(clk), .CDN(n2), .Q(
        data_out[20]) );
  DFCNQD1 \data_out_reg[19]  ( .D(next_data_out[19]), .CP(clk), .CDN(n2), .Q(
        data_out[19]) );
  DFCNQD1 \data_out_reg[18]  ( .D(next_data_out[18]), .CP(clk), .CDN(n2), .Q(
        data_out[18]) );
  DFCNQD1 \data_out_reg[17]  ( .D(next_data_out[17]), .CP(clk), .CDN(n2), .Q(
        data_out[17]) );
  DFCNQD1 \data_out_reg[16]  ( .D(next_data_out[16]), .CP(clk), .CDN(n2), .Q(
        data_out[16]) );
  DFCNQD1 \data_out_reg[15]  ( .D(next_data_out[15]), .CP(clk), .CDN(n2), .Q(
        data_out[15]) );
  DFCNQD1 \data_out_reg[14]  ( .D(next_data_out[14]), .CP(clk), .CDN(n2), .Q(
        data_out[14]) );
  DFCNQD1 \data_out_reg[13]  ( .D(next_data_out[13]), .CP(clk), .CDN(n2), .Q(
        data_out[13]) );
  DFCNQD1 \data_out_reg[12]  ( .D(next_data_out[12]), .CP(clk), .CDN(n1), .Q(
        data_out[12]) );
  DFCNQD1 \data_out_reg[11]  ( .D(next_data_out[11]), .CP(clk), .CDN(n1), .Q(
        data_out[11]) );
  DFCNQD1 \data_out_reg[10]  ( .D(next_data_out[10]), .CP(clk), .CDN(n1), .Q(
        data_out[10]) );
  DFCNQD1 \data_out_reg[9]  ( .D(next_data_out[9]), .CP(clk), .CDN(n1), .Q(
        data_out[9]) );
  DFCNQD1 \data_out_reg[8]  ( .D(next_data_out[8]), .CP(clk), .CDN(n1), .Q(
        data_out[8]) );
  DFCNQD1 \data_out_reg[7]  ( .D(next_data_out[7]), .CP(clk), .CDN(n1), .Q(
        data_out[7]) );
  DFCNQD1 \data_out_reg[6]  ( .D(next_data_out[6]), .CP(clk), .CDN(n1), .Q(
        data_out[6]) );
  DFCNQD1 \data_out_reg[5]  ( .D(next_data_out[5]), .CP(clk), .CDN(n1), .Q(
        data_out[5]) );
  DFCNQD1 \data_out_reg[4]  ( .D(next_data_out[4]), .CP(clk), .CDN(n1), .Q(
        data_out[4]) );
  DFCNQD1 \data_out_reg[3]  ( .D(next_data_out[3]), .CP(clk), .CDN(n1), .Q(
        data_out[3]) );
  DFCNQD1 \data_out_reg[2]  ( .D(next_data_out[2]), .CP(clk), .CDN(n1), .Q(
        data_out[2]) );
  DFCNQD1 \data_out_reg[1]  ( .D(next_data_out[1]), .CP(clk), .CDN(n1), .Q(
        data_out[1]) );
  DFCNQD1 \data_out_reg[0]  ( .D(next_data_out[0]), .CP(clk), .CDN(n2), .Q(
        data_out[0]) );
  OA21D1 U8 ( .A1(n173), .A2(n172), .B(n171), .Z(n175) );
  OA21D1 U11 ( .A1(n168), .A2(n172), .B(n167), .Z(n174) );
  OA21D1 U18 ( .A1(n162), .A2(n172), .B(n161), .Z(n165) );
  OA21D1 U21 ( .A1(n160), .A2(n172), .B(n159), .Z(n164) );
  OA21D1 U26 ( .A1(n156), .A2(n172), .B(n161), .Z(n158) );
  OA21D1 U32 ( .A1(n151), .A2(n172), .B(n159), .Z(n157) );
  OA21D1 U40 ( .A1(n146), .A2(n172), .B(n145), .Z(n148) );
  OA21D1 U43 ( .A1(n144), .A2(n172), .B(n143), .Z(n147) );
  OA21D1 U46 ( .A1(n142), .A2(n172), .B(n171), .Z(n166) );
  OA21D1 U54 ( .A1(n137), .A2(n172), .B(n145), .Z(n139) );
  OA21D1 U60 ( .A1(n134), .A2(n172), .B(n143), .Z(n138) );
  OA21D1 U68 ( .A1(n129), .A2(n172), .B(n128), .Z(n131) );
  OA21D1 U71 ( .A1(n127), .A2(n172), .B(n126), .Z(n130) );
  OA21D1 U74 ( .A1(n125), .A2(n172), .B(n128), .Z(n177) );
  OA21D1 U80 ( .A1(n122), .A2(n172), .B(n126), .Z(n176) );
  OA21D1 U86 ( .A1(n119), .A2(n172), .B(n167), .Z(n163) );
  AN2XD1 U90 ( .A1(rd_ptr[1]), .A2(rd_ptr[0]), .Z(n152) );
  AN4XD1 U91 ( .A1(weight_bitwidth[2]), .A2(rd_en), .A3(n5), .A4(n7), .Z(n155)
         );
  MAOI22D1 U97 ( .A1(n115), .A2(n12), .B1(n115), .B2(n114), .ZN(n113) );
  NR2D1 U3 ( .A1(n13), .A2(rd_ptr[1]), .ZN(n170) );
  NR2D1 U4 ( .A1(rd_ptr[0]), .A2(rd_ptr[1]), .ZN(n169) );
  AOI21D1 U5 ( .A1(n12), .A2(n116), .B(n113), .ZN(N41) );
  OAI21D1 U6 ( .A1(n109), .A2(n10), .B(n166), .ZN(next_data_out[3]) );
  OAI21D1 U7 ( .A1(n35), .A2(n10), .B(n177), .ZN(next_data_out[11]) );
  OAI21D1 U9 ( .A1(n9), .A2(n112), .B(n163), .ZN(next_data_out[0]) );
  OAI21D1 U10 ( .A1(n8), .A2(n111), .B(n166), .ZN(next_data_out[1]) );
  OAI21D1 U12 ( .A1(n9), .A2(n110), .B(n163), .ZN(next_data_out[2]) );
  OAI21D1 U13 ( .A1(n9), .A2(n106), .B(n174), .ZN(next_data_out[6]) );
  OAI21D1 U14 ( .A1(n8), .A2(n37), .B(n177), .ZN(next_data_out[9]) );
  OAI21D1 U15 ( .A1(n8), .A2(n36), .B(n176), .ZN(next_data_out[10]) );
  OAI21D1 U16 ( .A1(n8), .A2(n34), .B(n130), .ZN(next_data_out[12]) );
  OAI21D1 U17 ( .A1(n8), .A2(n33), .B(n131), .ZN(next_data_out[13]) );
  OAI21D1 U19 ( .A1(n8), .A2(n32), .B(n130), .ZN(next_data_out[14]) );
  OAI21D1 U20 ( .A1(n8), .A2(n31), .B(n131), .ZN(next_data_out[15]) );
  OAI21D1 U22 ( .A1(n10), .A2(n108), .B(n174), .ZN(next_data_out[4]) );
  OAI21D1 U23 ( .A1(n10), .A2(n107), .B(n175), .ZN(next_data_out[5]) );
  OAI21D1 U24 ( .A1(n10), .A2(n105), .B(n175), .ZN(next_data_out[7]) );
  OAI21D1 U25 ( .A1(n10), .A2(n38), .B(n176), .ZN(next_data_out[8]) );
  CKBD1 U27 ( .I(n178), .Z(n8) );
  CKBD1 U28 ( .I(n178), .Z(n9) );
  CKBD1 U29 ( .I(n178), .Z(n10) );
  INVD1 U30 ( .I(n6), .ZN(n7) );
  INVD1 U31 ( .I(n4), .ZN(n5) );
  INVD1 U33 ( .I(n116), .ZN(n11) );
  INVD1 U34 ( .I(n169), .ZN(n14) );
  INVD1 U35 ( .I(n170), .ZN(n12) );
  ND2D1 U36 ( .A1(n114), .A2(rd_en), .ZN(n178) );
  NR3D0 U37 ( .A1(n4), .A2(weight_bitwidth[2]), .A3(n7), .ZN(n115) );
  NR3D0 U38 ( .A1(n6), .A2(weight_bitwidth[2]), .A3(n5), .ZN(n114) );
  ND2D1 U39 ( .A1(rd_en), .A2(n115), .ZN(n172) );
  ND2D1 U41 ( .A1(n155), .A2(n118), .ZN(n167) );
  OAI221D0 U42 ( .A1(n12), .A2(n38), .B1(n14), .B2(n112), .C(n117), .ZN(n118)
         );
  AOI22D1 U44 ( .A1(data_in[24]), .A2(n152), .B1(data_in[16]), .B2(n11), .ZN(
        n117) );
  ND2D1 U45 ( .A1(n155), .A2(n141), .ZN(n171) );
  OAI221D0 U47 ( .A1(n12), .A2(n37), .B1(n14), .B2(n111), .C(n140), .ZN(n141)
         );
  AOI22D1 U48 ( .A1(data_in[25]), .A2(n152), .B1(data_in[17]), .B2(n11), .ZN(
        n140) );
  ND2D1 U49 ( .A1(n155), .A2(n121), .ZN(n126) );
  OAI221D0 U50 ( .A1(n12), .A2(n36), .B1(n14), .B2(n110), .C(n120), .ZN(n121)
         );
  AOI22D1 U51 ( .A1(data_in[26]), .A2(n152), .B1(data_in[18]), .B2(n11), .ZN(
        n120) );
  ND2D1 U52 ( .A1(n155), .A2(n124), .ZN(n128) );
  OAI221D0 U53 ( .A1(n12), .A2(n35), .B1(n14), .B2(n109), .C(n123), .ZN(n124)
         );
  AOI22D1 U55 ( .A1(data_in[27]), .A2(n152), .B1(n11), .B2(data_in[19]), .ZN(
        n123) );
  ND2D1 U56 ( .A1(n155), .A2(n133), .ZN(n143) );
  OAI221D0 U57 ( .A1(n12), .A2(n34), .B1(n14), .B2(n108), .C(n132), .ZN(n133)
         );
  AOI22D1 U58 ( .A1(data_in[28]), .A2(n152), .B1(data_in[20]), .B2(n11), .ZN(
        n132) );
  ND2D1 U59 ( .A1(n155), .A2(n136), .ZN(n145) );
  OAI221D0 U61 ( .A1(n12), .A2(n33), .B1(n14), .B2(n107), .C(n135), .ZN(n136)
         );
  AOI22D1 U62 ( .A1(data_in[29]), .A2(n152), .B1(data_in[21]), .B2(n11), .ZN(
        n135) );
  ND2D1 U63 ( .A1(n155), .A2(n150), .ZN(n159) );
  OAI221D0 U64 ( .A1(n12), .A2(n32), .B1(n14), .B2(n106), .C(n149), .ZN(n150)
         );
  AOI22D1 U65 ( .A1(data_in[30]), .A2(n152), .B1(data_in[22]), .B2(n11), .ZN(
        n149) );
  ND2D1 U66 ( .A1(n155), .A2(n154), .ZN(n161) );
  OAI221D0 U67 ( .A1(n12), .A2(n31), .B1(n14), .B2(n105), .C(n153), .ZN(n154)
         );
  AOI22D1 U69 ( .A1(data_in[31]), .A2(n152), .B1(data_in[23]), .B2(n11), .ZN(
        n153) );
  AOI22D1 U70 ( .A1(data_in[16]), .A2(n170), .B1(data_in[0]), .B2(n169), .ZN(
        n119) );
  AOI22D1 U72 ( .A1(data_in[17]), .A2(n170), .B1(data_in[1]), .B2(n169), .ZN(
        n142) );
  AOI22D1 U73 ( .A1(data_in[24]), .A2(n170), .B1(data_in[8]), .B2(n169), .ZN(
        n168) );
  AOI22D1 U75 ( .A1(data_in[25]), .A2(n170), .B1(data_in[9]), .B2(n169), .ZN(
        n173) );
  AOI22D1 U76 ( .A1(data_in[18]), .A2(n170), .B1(data_in[2]), .B2(n169), .ZN(
        n122) );
  AOI22D1 U77 ( .A1(data_in[19]), .A2(n170), .B1(data_in[3]), .B2(n169), .ZN(
        n125) );
  AOI22D1 U78 ( .A1(data_in[26]), .A2(n170), .B1(data_in[10]), .B2(n169), .ZN(
        n127) );
  AOI22D1 U79 ( .A1(data_in[27]), .A2(n170), .B1(data_in[11]), .B2(n169), .ZN(
        n129) );
  AOI22D1 U81 ( .A1(data_in[20]), .A2(n170), .B1(data_in[4]), .B2(n169), .ZN(
        n134) );
  AOI22D1 U82 ( .A1(data_in[21]), .A2(n170), .B1(data_in[5]), .B2(n169), .ZN(
        n137) );
  AOI22D1 U83 ( .A1(data_in[28]), .A2(n170), .B1(data_in[12]), .B2(n169), .ZN(
        n144) );
  AOI22D1 U84 ( .A1(data_in[29]), .A2(n170), .B1(data_in[13]), .B2(n169), .ZN(
        n146) );
  AOI22D1 U85 ( .A1(data_in[22]), .A2(n170), .B1(data_in[6]), .B2(n169), .ZN(
        n151) );
  AOI22D1 U87 ( .A1(data_in[23]), .A2(n170), .B1(data_in[7]), .B2(n169), .ZN(
        n156) );
  AOI22D1 U88 ( .A1(data_in[30]), .A2(n170), .B1(data_in[14]), .B2(n169), .ZN(
        n160) );
  AOI22D1 U89 ( .A1(data_in[31]), .A2(n170), .B1(data_in[15]), .B2(n169), .ZN(
        n162) );
  NR2D1 U92 ( .A1(rd_ptr[0]), .A2(n114), .ZN(N40) );
  OAI21D1 U93 ( .A1(n27), .A2(n10), .B(n139), .ZN(next_data_out[19]) );
  INVD1 U94 ( .I(data_in[19]), .ZN(n27) );
  OAI21D1 U95 ( .A1(n8), .A2(n30), .B(n138), .ZN(next_data_out[16]) );
  INVD1 U96 ( .I(data_in[16]), .ZN(n30) );
  OAI21D1 U98 ( .A1(n8), .A2(n29), .B(n139), .ZN(next_data_out[17]) );
  INVD1 U99 ( .I(data_in[17]), .ZN(n29) );
  OAI21D1 U100 ( .A1(n8), .A2(n28), .B(n138), .ZN(next_data_out[18]) );
  INVD1 U101 ( .I(data_in[18]), .ZN(n28) );
  OAI21D1 U102 ( .A1(n8), .A2(n26), .B(n147), .ZN(next_data_out[20]) );
  INVD1 U103 ( .I(data_in[20]), .ZN(n26) );
  OAI21D1 U104 ( .A1(n8), .A2(n25), .B(n148), .ZN(next_data_out[21]) );
  INVD1 U105 ( .I(data_in[21]), .ZN(n25) );
  OAI21D1 U106 ( .A1(n9), .A2(n24), .B(n147), .ZN(next_data_out[22]) );
  INVD1 U107 ( .I(data_in[22]), .ZN(n24) );
  OAI21D1 U108 ( .A1(n9), .A2(n23), .B(n148), .ZN(next_data_out[23]) );
  INVD1 U109 ( .I(data_in[23]), .ZN(n23) );
  OAI21D1 U110 ( .A1(n9), .A2(n22), .B(n157), .ZN(next_data_out[24]) );
  INVD1 U111 ( .I(data_in[24]), .ZN(n22) );
  OAI21D1 U112 ( .A1(n9), .A2(n21), .B(n158), .ZN(next_data_out[25]) );
  INVD1 U113 ( .I(data_in[25]), .ZN(n21) );
  OAI21D1 U114 ( .A1(n9), .A2(n20), .B(n157), .ZN(next_data_out[26]) );
  INVD1 U115 ( .I(data_in[26]), .ZN(n20) );
  OAI21D1 U116 ( .A1(n9), .A2(n18), .B(n164), .ZN(next_data_out[28]) );
  INVD1 U117 ( .I(data_in[28]), .ZN(n18) );
  OAI21D1 U118 ( .A1(n9), .A2(n17), .B(n165), .ZN(next_data_out[29]) );
  INVD1 U119 ( .I(data_in[29]), .ZN(n17) );
  OAI21D1 U120 ( .A1(n9), .A2(n16), .B(n164), .ZN(next_data_out[30]) );
  INVD1 U121 ( .I(data_in[30]), .ZN(n16) );
  OAI21D1 U122 ( .A1(n9), .A2(n15), .B(n165), .ZN(next_data_out[31]) );
  INVD1 U123 ( .I(data_in[31]), .ZN(n15) );
  OAI21D1 U124 ( .A1(n19), .A2(n10), .B(n158), .ZN(next_data_out[27]) );
  INVD1 U125 ( .I(data_in[27]), .ZN(n19) );
  CKBD1 U126 ( .I(weight_bitwidth[0]), .Z(n4) );
  CKBD1 U127 ( .I(weight_bitwidth[1]), .Z(n6) );
  ND2D1 U128 ( .A1(rd_ptr[1]), .A2(n13), .ZN(n116) );
  INVD1 U129 ( .I(rd_ptr[0]), .ZN(n13) );
  INVD1 U130 ( .I(data_in[3]), .ZN(n109) );
  INVD1 U131 ( .I(data_in[11]), .ZN(n35) );
  INVD1 U132 ( .I(data_in[0]), .ZN(n112) );
  INVD1 U133 ( .I(data_in[1]), .ZN(n111) );
  INVD1 U134 ( .I(data_in[2]), .ZN(n110) );
  INVD1 U135 ( .I(data_in[4]), .ZN(n108) );
  INVD1 U136 ( .I(data_in[5]), .ZN(n107) );
  INVD1 U137 ( .I(data_in[6]), .ZN(n106) );
  INVD1 U138 ( .I(data_in[7]), .ZN(n105) );
  INVD1 U139 ( .I(data_in[8]), .ZN(n38) );
  INVD1 U140 ( .I(data_in[9]), .ZN(n37) );
  INVD1 U141 ( .I(data_in[10]), .ZN(n36) );
  INVD1 U142 ( .I(data_in[12]), .ZN(n34) );
  INVD1 U143 ( .I(data_in[13]), .ZN(n33) );
  INVD1 U144 ( .I(data_in[14]), .ZN(n32) );
  INVD1 U145 ( .I(data_in[15]), .ZN(n31) );
  CKBD1 U146 ( .I(nRST), .Z(n2) );
  CKBD1 U147 ( .I(nRST), .Z(n1) );
  CKBD1 U148 ( .I(nRST), .Z(n3) );
endmodule


module bit_brick_191 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_190 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_189 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_188 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_187 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_186 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_185 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_184 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_183 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_182 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[0]), .ZN(n3) );
  INVD1 U6 ( .I(y[1]), .ZN(n4) );
  INVD1 U7 ( .I(x[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_181 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_180 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_179 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_178 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_177 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_176 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module shift_add_11_DW01_add_14_DW01_add_64 ( A, B, CI, SUM, CO );
  input [28:0] A;
  input [28:0] B;
  output [28:0] SUM;
  input CI;
  output CO;
  wire   n1, \SUM[18] , n3, n4, n5, n6, n7;
  wire   [28:1] carry;
  assign SUM[27] = \SUM[18] ;
  assign SUM[28] = \SUM[18] ;
  assign SUM[26] = \SUM[18] ;
  assign SUM[25] = \SUM[18] ;
  assign SUM[24] = \SUM[18] ;
  assign SUM[23] = \SUM[18] ;
  assign SUM[22] = \SUM[18] ;
  assign SUM[21] = \SUM[18] ;
  assign SUM[20] = \SUM[18] ;
  assign SUM[19] = \SUM[18] ;
  assign SUM[18] = \SUM[18] ;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D0 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  AOI222D1 U3 ( .A1(carry[15]), .A2(A[27]), .B1(carry[15]), .B2(B[15]), .C1(
        B[15]), .C2(A[27]), .ZN(n5) );
  XNR3D4 U4 ( .A1(B[27]), .A2(n7), .A3(n3), .ZN(\SUM[18] ) );
  AO222D1 U5 ( .A1(n4), .A2(A[27]), .B1(n4), .B2(B[27]), .C1(A[27]), .C2(B[27]), .Z(n3) );
  CKND0 U6 ( .I(A[27]), .ZN(n7) );
  CKND0 U7 ( .I(B[16]), .ZN(n6) );
  OAI222D0 U8 ( .A1(n5), .A2(n7), .B1(n5), .B2(n6), .C1(n7), .C2(n6), .ZN(n4)
         );
  XNR3D0 U9 ( .A1(B[27]), .A2(n7), .A3(n4), .ZN(SUM[17]) );
  XNR3D0 U10 ( .A1(n6), .A2(n5), .A3(n7), .ZN(SUM[16]) );
  XNR3D0 U11 ( .A1(carry[15]), .A2(B[15]), .A3(n7), .ZN(SUM[15]) );
endmodule


module shift_add_11_DW01_add_6_DW01_add_56 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_11_DW01_add_5_DW01_add_55 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_11_DW01_add_4_DW01_add_54 ( A, B, CI, SUM, CO );
  input [30:0] A;
  input [30:0] B;
  output [30:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [30:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  XOR3D1 U1_30 ( .A1(A[30]), .A2(B[30]), .A3(carry[30]), .Z(SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_11_DW01_add_3_DW01_add_53 ( A, B, CI, SUM, CO );
  input [29:0] A;
  input [29:0] B;
  output [29:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3;
  wire   [29:1] carry;
  assign SUM[29] = SUM[23];
  assign SUM[28] = SUM[23];
  assign SUM[27] = SUM[23];
  assign SUM[26] = SUM[23];
  assign SUM[25] = SUM[23];
  assign SUM[24] = SUM[23];

  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D1 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  XOR3D4 U1 ( .A1(B[22]), .A2(A[21]), .A3(n3), .Z(SUM[23]) );
  AN2XD1 U2 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U3 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  AO222D1 U4 ( .A1(n2), .A2(A[21]), .B1(n2), .B2(B[22]), .C1(A[21]), .C2(B[22]), .Z(n3) );
  AO222D1 U5 ( .A1(carry[21]), .A2(A[21]), .B1(B[21]), .B2(carry[21]), .C1(
        B[21]), .C2(A[21]), .Z(n2) );
  XOR3D0 U6 ( .A1(carry[21]), .A2(B[21]), .A3(A[21]), .Z(SUM[21]) );
  XOR3D0 U7 ( .A1(B[22]), .A2(A[21]), .A3(n2), .Z(SUM[22]) );
endmodule


module shift_add_11_DW01_add_2_DW01_add_52 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_11_DW01_add_1_DW01_add_51 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_11_DW01_add_0_DW01_add_50 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_11 ( input_bitwidth, weight_bitwidth, .products({
        \products[15][5] , \products[15][4] , \products[15][3] , 
        \products[15][2] , \products[15][1] , \products[15][0] , 
        \products[14][5] , \products[14][4] , \products[14][3] , 
        \products[14][2] , \products[14][1] , \products[14][0] , 
        \products[13][5] , \products[13][4] , \products[13][3] , 
        \products[13][2] , \products[13][1] , \products[13][0] , 
        \products[12][5] , \products[12][4] , \products[12][3] , 
        \products[12][2] , \products[12][1] , \products[12][0] , 
        \products[11][5] , \products[11][4] , \products[11][3] , 
        \products[11][2] , \products[11][1] , \products[11][0] , 
        \products[10][5] , \products[10][4] , \products[10][3] , 
        \products[10][2] , \products[10][1] , \products[10][0] , 
        \products[9][5] , \products[9][4] , \products[9][3] , \products[9][2] , 
        \products[9][1] , \products[9][0] , \products[8][5] , \products[8][4] , 
        \products[8][3] , \products[8][2] , \products[8][1] , \products[8][0] , 
        \products[7][5] , \products[7][4] , \products[7][3] , \products[7][2] , 
        \products[7][1] , \products[7][0] , \products[6][5] , \products[6][4] , 
        \products[6][3] , \products[6][2] , \products[6][1] , \products[6][0] , 
        \products[5][5] , \products[5][4] , \products[5][3] , \products[5][2] , 
        \products[5][1] , \products[5][0] , \products[4][5] , \products[4][4] , 
        \products[4][3] , \products[4][2] , \products[4][1] , \products[4][0] , 
        \products[3][5] , \products[3][4] , \products[3][3] , \products[3][2] , 
        \products[3][1] , \products[3][0] , \products[2][5] , \products[2][4] , 
        \products[2][3] , \products[2][2] , \products[2][1] , \products[2][0] , 
        \products[1][5] , \products[1][4] , \products[1][3] , \products[1][2] , 
        \products[1][1] , \products[1][0] , \products[0][5] , \products[0][4] , 
        \products[0][3] , \products[0][2] , \products[0][1] , \products[0][0] 
        }), shift_add_out );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  output [31:0] shift_add_out;
  input \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] ;
  wire   \shifted_products[15][16] , \shifted_products[15][15] ,
         \shifted_products[15][14] , \shifted_products[15][13] ,
         \shifted_products[15][12] , \shifted_products[15][11] ,
         \shifted_products[15][10] , \shifted_products[15][9] ,
         \shifted_products[15][8] , \shifted_products[15][7] ,
         \shifted_products[15][6] , \shifted_products[15][5] ,
         \shifted_products[15][4] , \shifted_products[15][3] ,
         \shifted_products[15][2] , \shifted_products[15][1] ,
         \shifted_products[15][0] , \shifted_products[14][14] ,
         \shifted_products[14][13] , \shifted_products[14][12] ,
         \shifted_products[14][11] , \shifted_products[14][10] ,
         \shifted_products[14][9] , \shifted_products[14][8] ,
         \shifted_products[14][7] , \shifted_products[14][6] ,
         \shifted_products[14][5] , \shifted_products[14][4] ,
         \shifted_products[14][3] , \shifted_products[14][2] ,
         \shifted_products[14][1] , \shifted_products[14][0] ,
         \shifted_products[13][12] , \shifted_products[13][11] ,
         \shifted_products[13][10] , \shifted_products[13][9] ,
         \shifted_products[13][8] , \shifted_products[13][7] ,
         \shifted_products[13][6] , \shifted_products[13][5] ,
         \shifted_products[13][4] , \shifted_products[13][3] ,
         \shifted_products[13][2] , \shifted_products[13][1] ,
         \shifted_products[13][0] , \shifted_products[12][10] ,
         \shifted_products[12][9] , \shifted_products[12][8] ,
         \shifted_products[12][7] , \shifted_products[12][6] ,
         \shifted_products[12][5] , \shifted_products[12][4] ,
         \shifted_products[12][3] , \shifted_products[12][2] ,
         \shifted_products[12][1] , \shifted_products[12][0] ,
         \shifted_products[11][13] , \shifted_products[11][12] ,
         \shifted_products[11][11] , \shifted_products[11][10] ,
         \shifted_products[11][9] , \shifted_products[11][8] ,
         \shifted_products[11][7] , \shifted_products[11][6] ,
         \shifted_products[11][5] , \shifted_products[11][4] ,
         \shifted_products[11][3] , \shifted_products[11][2] ,
         \shifted_products[11][1] , \shifted_products[11][0] ,
         \shifted_products[10][12] , \shifted_products[10][11] ,
         \shifted_products[10][10] , \shifted_products[10][9] ,
         \shifted_products[10][8] , \shifted_products[10][7] ,
         \shifted_products[10][6] , \shifted_products[10][5] ,
         \shifted_products[10][4] , \shifted_products[10][3] ,
         \shifted_products[10][2] , \shifted_products[10][1] ,
         \shifted_products[10][0] , \shifted_products[9][10] ,
         \shifted_products[9][9] , \shifted_products[9][8] ,
         \shifted_products[9][7] , \shifted_products[9][6] ,
         \shifted_products[9][5] , \shifted_products[9][4] ,
         \shifted_products[9][3] , \shifted_products[9][2] ,
         \shifted_products[9][1] , \shifted_products[9][0] ,
         \shifted_products[8][8] , \shifted_products[8][7] ,
         \shifted_products[8][6] , \shifted_products[8][5] ,
         \shifted_products[8][4] , \shifted_products[8][3] ,
         \shifted_products[8][2] , \shifted_products[8][1] ,
         \shifted_products[8][0] , \shifted_products[7][11] ,
         \shifted_products[7][10] , \shifted_products[7][9] ,
         \shifted_products[7][8] , \shifted_products[7][7] ,
         \shifted_products[7][6] , \shifted_products[7][5] ,
         \shifted_products[7][4] , \shifted_products[7][3] ,
         \shifted_products[7][2] , \shifted_products[7][1] ,
         \shifted_products[7][0] , \shifted_products[6][10] ,
         \shifted_products[6][9] , \shifted_products[6][8] ,
         \shifted_products[6][7] , \shifted_products[6][6] ,
         \shifted_products[6][5] , \shifted_products[6][4] ,
         \shifted_products[6][3] , \shifted_products[6][2] ,
         \shifted_products[6][1] , \shifted_products[6][0] ,
         \shifted_products[5][8] , \shifted_products[5][7] ,
         \shifted_products[5][6] , \shifted_products[5][5] ,
         \shifted_products[5][4] , \shifted_products[5][3] ,
         \shifted_products[5][2] , \shifted_products[5][1] ,
         \shifted_products[5][0] , \shifted_products[4][6] ,
         \shifted_products[4][5] , \shifted_products[4][4] ,
         \shifted_products[4][3] , \shifted_products[4][2] ,
         \shifted_products[4][1] , \shifted_products[4][0] ,
         \shifted_products[3][9] , \shifted_products[3][8] ,
         \shifted_products[3][7] , \shifted_products[3][6] ,
         \shifted_products[3][5] , \shifted_products[3][4] ,
         \shifted_products[3][3] , \shifted_products[3][2] ,
         \shifted_products[3][1] , \shifted_products[3][0] ,
         \shifted_products[2][8] , \shifted_products[2][7] ,
         \shifted_products[2][6] , \shifted_products[2][5] ,
         \shifted_products[2][4] , \shifted_products[2][3] ,
         \shifted_products[2][2] , \shifted_products[2][1] ,
         \shifted_products[2][0] , \shifted_products[1][6] ,
         \shifted_products[1][5] , \shifted_products[1][4] ,
         \shifted_products[1][3] , \shifted_products[1][2] ,
         \shifted_products[1][1] , \shifted_products[1][0] ,
         \shifted_products[0][9] , N99, N87, N86, N85, N84, N83, N82, N81, N80,
         N79, N78, N77, N76, N61, N60, N59, N58, N57, N56, N55, N54, N446,
         N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435,
         N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424,
         N423, N422, N421, N420, N419, N418, N417, N416, N415, N414, N413,
         N412, N411, N410, N409, N408, N407, N406, N405, N404, N403, N402,
         N401, N400, N399, N398, N397, N396, N395, N394, N393, N392, N391,
         N390, N389, N388, N387, N386, N385, N384, N383, N382, N381, N380,
         N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369,
         N368, N367, N366, N365, N364, N363, N362, N361, N360, N359, N358,
         N357, N356, N355, N354, N353, N352, N351, N350, N349, N348, N347,
         N346, N345, N344, N343, N342, N341, N340, N339, N338, N337, N336,
         N335, N334, N333, N332, N331, N330, N329, N328, N327, N326, N325,
         N324, N323, N322, N321, N320, N319, N318, N317, N316, N315, N314,
         N313, N312, N311, N310, N309, N308, N307, N306, N305, N304, N303,
         N302, N301, N300, N299, N298, N297, N296, N295, N294, N293, N292,
         N291, N290, N289, N288, N287, N286, N285, N284, N283, N282, N281,
         N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270,
         N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259,
         N258, N257, N256, N255, N254, N253, N252, N251, N250, N249, N248,
         N247, N246, N245, N244, N243, N242, N241, N240, N239, N238, N237,
         N236, N235, N234, N233, N232, N231, N230, N229, N214, N213, N212,
         N211, N210, N209, N208, N207, N206, N205, N204, N203, N202, N201,
         N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, N179,
         N178, N177, N176, N175, N174, N159, N158, N157, N156, N155, N154,
         N153, N152, N151, N150, N149, N148, N136, N135, N134, N133, N132,
         N131, N130, N129, N128, N127, N126, N125, N124, N123, N108, N107,
         N106, N105, N104, N103, N102, N101, N100,
         \add_14_root_add_199_I16/carry[6] ,
         \add_14_root_add_199_I16/carry[5] ,
         \add_14_root_add_199_I16/carry[4] ,
         \add_14_root_add_199_I16/carry[3] ,
         \add_14_root_add_199_I16/carry[2] ,
         \add_14_root_add_199_I16/carry[1] ,
         \add_13_root_add_199_I16/carry[9] ,
         \add_13_root_add_199_I16/carry[8] ,
         \add_13_root_add_199_I16/carry[7] ,
         \add_13_root_add_199_I16/carry[6] ,
         \add_13_root_add_199_I16/carry[5] ,
         \add_13_root_add_199_I16/carry[4] ,
         \add_13_root_add_199_I16/carry[3] ,
         \add_13_root_add_199_I16/carry[2] ,
         \add_13_root_add_199_I16/carry[1] ,
         \add_12_root_add_199_I16/carry[7] ,
         \add_12_root_add_199_I16/carry[6] ,
         \add_12_root_add_199_I16/carry[5] ,
         \add_12_root_add_199_I16/carry[4] ,
         \add_12_root_add_199_I16/carry[3] ,
         \add_12_root_add_199_I16/carry[2] ,
         \add_12_root_add_199_I16/carry[1] ,
         \add_11_root_add_199_I16/carry[11] ,
         \add_11_root_add_199_I16/carry[10] ,
         \add_11_root_add_199_I16/carry[9] ,
         \add_11_root_add_199_I16/carry[8] ,
         \add_11_root_add_199_I16/carry[7] ,
         \add_11_root_add_199_I16/carry[6] ,
         \add_11_root_add_199_I16/carry[5] ,
         \add_11_root_add_199_I16/carry[4] ,
         \add_11_root_add_199_I16/carry[3] ,
         \add_11_root_add_199_I16/carry[2] ,
         \add_11_root_add_199_I16/carry[1] ,
         \add_10_root_add_199_I16/carry[9] ,
         \add_10_root_add_199_I16/carry[8] ,
         \add_10_root_add_199_I16/carry[7] ,
         \add_10_root_add_199_I16/carry[6] ,
         \add_10_root_add_199_I16/carry[5] ,
         \add_10_root_add_199_I16/carry[4] ,
         \add_10_root_add_199_I16/carry[3] ,
         \add_10_root_add_199_I16/carry[2] ,
         \add_10_root_add_199_I16/carry[1] ,
         \add_9_root_add_199_I16/carry[13] ,
         \add_9_root_add_199_I16/carry[12] ,
         \add_9_root_add_199_I16/carry[11] ,
         \add_9_root_add_199_I16/carry[10] , \add_9_root_add_199_I16/carry[9] ,
         \add_9_root_add_199_I16/carry[8] , \add_9_root_add_199_I16/carry[7] ,
         \add_9_root_add_199_I16/carry[6] , \add_9_root_add_199_I16/carry[5] ,
         \add_9_root_add_199_I16/carry[4] , \add_9_root_add_199_I16/carry[3] ,
         \add_9_root_add_199_I16/carry[2] , \add_9_root_add_199_I16/carry[1] ,
         \add_8_root_add_199_I16/carry[11] ,
         \add_8_root_add_199_I16/carry[10] , \add_8_root_add_199_I16/carry[9] ,
         \add_8_root_add_199_I16/carry[8] , \add_8_root_add_199_I16/carry[7] ,
         \add_8_root_add_199_I16/carry[6] , \add_8_root_add_199_I16/carry[5] ,
         \add_8_root_add_199_I16/carry[4] , \add_8_root_add_199_I16/carry[3] ,
         \add_8_root_add_199_I16/carry[2] , \add_8_root_add_199_I16/carry[1] ,
         n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72,
         n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86,
         n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100,
         n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, n111,
         n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122,
         n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133,
         n134, n135, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246,
         n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257,
         n258, n259, n260, n261, n262, n263, n264, n265, n266, n267, n268,
         n269, n270, n271, n272, n273, n274, n275, n276, n277, n278, n279,
         n280, n281, n282, n283, n284, n285, n286, n287, n288, n289, n290,
         n291, n292, n293, n294, n295, n296, n297, n298, n299, n300, n301,
         n302, n303, n304, n305, n306, n307, n308, n309, n310, n311, n312,
         n313, n314, n315, n316, n317, n318, n319, n320, n321, n322, n323,
         n324, n325, n326, n327;

  MAOI22D1 U26 ( .A1(\products[7][0] ), .A2(n315), .B1(n111), .B2(n318), .ZN(
        n316) );
  AN2XD1 U74 ( .A1(n321), .A2(n290), .Z(n291) );
  MAOI22D1 U112 ( .A1(\products[15][2] ), .A2(n278), .B1(n63), .B2(n307), .ZN(
        n279) );
  OA21D1 U130 ( .A1(n245), .A2(n62), .B(n281), .Z(n272) );
  AN2XD1 U134 ( .A1(n308), .A2(n298), .Z(n282) );
  AN2XD1 U191 ( .A1(n318), .A2(n313), .Z(n295) );
  AN2XD1 U239 ( .A1(n298), .A2(n318), .Z(n284) );
  shift_add_11_DW01_add_14_DW01_add_64 add_7_root_add_199_I16 ( .A({
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \shifted_products[14][14] , 
        \shifted_products[14][13] , \shifted_products[14][12] , 
        \shifted_products[14][11] , \shifted_products[14][10] , 
        \shifted_products[14][9] , \shifted_products[14][8] , 
        \shifted_products[14][7] , \shifted_products[14][6] , 
        \shifted_products[14][5] , \shifted_products[14][4] , 
        \shifted_products[14][3] , \shifted_products[14][2] , 
        \shifted_products[14][1] , \shifted_products[14][0] }), .B({
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \shifted_products[15][16] , \shifted_products[15][15] , 
        \shifted_products[15][14] , \shifted_products[15][13] , 
        \shifted_products[15][12] , \shifted_products[15][11] , 
        \shifted_products[15][10] , \shifted_products[15][9] , 
        \shifted_products[15][8] , \shifted_products[15][7] , 
        \shifted_products[15][6] , \shifted_products[15][5] , 
        \shifted_products[15][4] , \shifted_products[15][3] , 
        \shifted_products[15][2] , \shifted_products[15][1] , 
        \shifted_products[15][0] }), .CI(n247), .SUM({N257, N256, N255, N254, 
        N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, N243, N242, 
        N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, N231, N230, 
        N229}) );
  shift_add_11_DW01_add_6_DW01_add_56 add_4_root_add_0_root_add_199_I16 ( .A({
        n24, n24, n24, n24, n24, n24, n24, n24, n24, n24, n24, n24, n24, n24, 
        n24, n24, n24, n24, N214, N213, N212, N211, N210, N209, N208, N207, 
        N206, N205, N204, N203, N202, N201}), .B({N257, N257, N257, N257, N256, 
        N255, N254, N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, 
        N243, N242, N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, 
        N231, N230, N229}), .CI(n247), .SUM({N382, N381, N380, N379, N378, 
        N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, N367, N366, 
        N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, N355, N354, 
        N353, N352, N351}) );
  shift_add_11_DW01_add_5_DW01_add_55 add_3_root_add_0_root_add_199_I16 ( .A({
        n25, n25, n25, n25, n25, n25, n25, n25, n25, n25, n25, n25, n25, n25, 
        n25, n25, N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, 
        N179, N178, N177, N176, N175, N174}), .B({n22, n22, n22, n22, n22, n22, 
        n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, 
        N159, N158, N157, N156, N155, N154, N153, N152, N151, N150, N149, N148}), .CI(n247), .SUM({N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, 
        N340, N339, N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, 
        N328, N327, N326, N325, N324, N323, N322, N321, N320, N319}) );
  shift_add_11_DW01_add_4_DW01_add_54 add_5_root_add_199_I16 ( .A({n23, n23, 
        n23, n23, n23, n23, n23, n23, n23, n23, n23, n23, n23, n23, n23, n23, 
        n23, n23, n23, n23, n23, N108, N107, N106, N105, N104, N103, N102, 
        N101, N100, N99}), .B({n28, n28, n28, n28, n28, n28, n28, n28, n28, 
        n28, n28, n28, n28, n28, n28, n28, n28, N136, N135, N134, N133, N132, 
        N131, N130, N129, N128, N127, N126, N125, N124, N123}), .CI(n247), 
        .SUM({N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}) );
  shift_add_11_DW01_add_3_DW01_add_53 add_6_root_add_199_I16 ( .A({n20, n20, 
        n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, 
        n20, n20, n20, n20, n20, n20, N61, N60, N59, N58, N57, N56, N55, N54}), 
        .B({n26, n26, n26, n26, n26, n26, n26, n26, n26, n26, n26, n26, n26, 
        n26, n26, n26, n26, n26, N87, N86, N85, N84, N83, N82, N81, N80, N79, 
        N78, N77, N76}), .CI(n247), .SUM({N287, N286, N285, N284, N283, N282, 
        N281, N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270, 
        N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259, N258}) );
  shift_add_11_DW01_add_2_DW01_add_52 add_2_root_add_0_root_add_199_I16 ( .A({
        N318, N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}), .B({N382, N381, N380, 
        N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, 
        N367, N366, N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, 
        N355, N354, N353, N352, N351}), .CI(n247), .SUM({N446, N445, N444, 
        N443, N442, N441, N440, N439, N438, N437, N436, N435, N434, N433, N432, 
        N431, N430, N429, N428, N427, N426, N425, N424, N423, N422, N421, N420, 
        N419, N418, N417, N416, N415}) );
  shift_add_11_DW01_add_1_DW01_add_51 add_1_root_add_0_root_add_199_I16 ( .A({
        N446, N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435, 
        N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424, N423, 
        N422, N421, N420, N419, N418, N417, N416, N415}), .B({N287, N287, N287, 
        N286, N285, N284, N283, N282, N281, N280, N279, N278, N277, N276, N275, 
        N274, N273, N272, N271, N270, N269, N268, N267, N266, N265, N264, N263, 
        N262, N261, N260, N259, N258}), .CI(n247), .SUM({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}) );
  shift_add_11_DW01_add_0_DW01_add_50 add_0_root_add_0_root_add_199_I16 ( .A({
        N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, N340, N339, 
        N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, N328, N327, 
        N326, N325, N324, N323, N322, N321, N320, N319}), .B({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}), .CI(n247), .SUM(shift_add_out) );
  NR2D3 U2 ( .A1(n322), .A2(n323), .ZN(n283) );
  ND2D3 U3 ( .A1(n284), .A2(n242), .ZN(n323) );
  ND2D2 U4 ( .A1(n35), .A2(n308), .ZN(n322) );
  AOI222D1 U5 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(\products[6][5] ), .B1(\add_11_root_add_199_I16/carry[11] ), .B2(\shifted_products[7][11] ), 
        .C1(\shifted_products[7][11] ), .C2(\products[6][5] ), .ZN(n51) );
  AN2XD1 U6 ( .A1(n313), .A2(n38), .Z(n3) );
  FA1D0 U7 ( .A(\shifted_products[12][10] ), .B(\shifted_products[13][10] ), 
        .CI(\add_8_root_add_199_I16/carry[10] ), .CO(
        \add_8_root_add_199_I16/carry[11] ), .S(N211) );
  FA1D0 U8 ( .A(\shifted_products[4][6] ), .B(\shifted_products[5][6] ), .CI(
        \add_12_root_add_199_I16/carry[6] ), .CO(
        \add_12_root_add_199_I16/carry[7] ), .S(N105) );
  ND2D1 U9 ( .A1(n253), .A2(n252), .ZN(n313) );
  INR2D1 U10 ( .A1(n308), .B1(n244), .ZN(n301) );
  NR3D0 U11 ( .A1(n10), .A2(n11), .A3(n12), .ZN(n55) );
  XNR3D2 U12 ( .A1(\products[7][5] ), .A2(n114), .A3(n29), .ZN(n28) );
  NR3D0 U13 ( .A1(n7), .A2(n8), .A3(n9), .ZN(n41) );
  CKXOR2D1 U14 ( .A1(n223), .A2(n60), .Z(n1) );
  FA1D1 U15 ( .A(\shifted_products[2][8] ), .B(\shifted_products[3][8] ), .CI(
        \add_13_root_add_199_I16/carry[8] ), .CO(
        \add_13_root_add_199_I16/carry[9] ), .S(N84) );
  CKBD1 U16 ( .I(n314), .Z(n2) );
  INR2D1 U17 ( .A1(n325), .B1(n244), .ZN(n314) );
  AOI222D1 U18 ( .A1(n48), .A2(\products[8][5] ), .B1(n48), .B2(
        \products[9][5] ), .C1(\products[8][5] ), .C2(\products[9][5] ), .ZN(
        n49) );
  AOI222D2 U19 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(\products[4][5] ), .B1(\add_12_root_add_199_I16/carry[7] ), .B2(\shifted_products[5][7] ), .C1(
        \shifted_products[5][7] ), .C2(\products[4][5] ), .ZN(n53) );
  AOI222D2 U20 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \products[12][5] ), .B1(\add_8_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[13][11] ), .C1(\shifted_products[13][11] ), .C2(
        \products[12][5] ), .ZN(n39) );
  CKAN2D1 U21 ( .A1(n313), .A2(n38), .Z(n304) );
  OR2XD1 U22 ( .A1(n51), .A2(n114), .Z(n4) );
  OR2XD1 U23 ( .A1(n51), .A2(n32), .Z(n5) );
  OR2D1 U24 ( .A1(n114), .A2(n32), .Z(n6) );
  ND3D2 U25 ( .A1(n4), .A2(n5), .A3(n6), .ZN(n52) );
  AN2XD1 U27 ( .A1(n40), .A2(\products[13][5] ), .Z(n8) );
  NR2D0 U28 ( .A1(n37), .A2(n79), .ZN(\shifted_products[13][0] ) );
  CKND2D1 U29 ( .A1(n253), .A2(n251), .ZN(n307) );
  OAI222D1 U30 ( .A1(n53), .A2(n126), .B1(n53), .B2(n56), .C1(n126), .C2(n56), 
        .ZN(n54) );
  AN2XD1 U31 ( .A1(n54), .A2(\products[5][5] ), .Z(n11) );
  CKND2D1 U32 ( .A1(n249), .A2(n248), .ZN(n326) );
  AN2D1 U33 ( .A1(n40), .A2(\products[12][5] ), .Z(n7) );
  AN2D1 U34 ( .A1(\products[12][5] ), .A2(\products[13][5] ), .Z(n9) );
  OAI222D1 U35 ( .A1(n39), .A2(n80), .B1(n39), .B2(n42), .C1(n80), .C2(n42), 
        .ZN(n40) );
  AN2D1 U36 ( .A1(n54), .A2(\products[4][5] ), .Z(n10) );
  AN2XD1 U37 ( .A1(\products[4][5] ), .A2(\products[5][5] ), .Z(n12) );
  CKAN2D0 U38 ( .A1(n301), .A2(n284), .Z(n255) );
  CKND2D0 U39 ( .A1(n235), .A2(n301), .ZN(n302) );
  CKND2D1 U40 ( .A1(n301), .A2(n231), .ZN(n300) );
  AOI222D1 U41 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[0][9] ), .B1(\add_14_root_add_199_I16/carry[6] ), 
        .B2(\shifted_products[1][6] ), .C1(\shifted_products[1][6] ), .C2(
        \shifted_products[0][9] ), .ZN(n61) );
  CKND2D4 U42 ( .A1(n18), .A2(n19), .ZN(n20) );
  ND3D2 U43 ( .A1(n13), .A2(n14), .A3(n15), .ZN(n59) );
  ND2D2 U44 ( .A1(n306), .A2(n283), .ZN(n312) );
  CKND2D0 U45 ( .A1(n1), .A2(n21), .ZN(n18) );
  OR2XD1 U46 ( .A1(n58), .A2(n57), .Z(n13) );
  OR2XD1 U47 ( .A1(n58), .A2(n31), .Z(n14) );
  OR2D1 U48 ( .A1(n57), .A2(n31), .Z(n15) );
  AOI222D2 U49 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(\products[2][5] ), .B1(\add_13_root_add_199_I16/carry[9] ), .B2(\shifted_products[3][9] ), .C1(
        \shifted_products[3][9] ), .C2(\products[2][5] ), .ZN(n58) );
  OAI22D0 U50 ( .A1(n2), .A2(n223), .B1(n283), .B2(n225), .ZN(
        \shifted_products[1][5] ) );
  ND2D3 U51 ( .A1(n16), .A2(n17), .ZN(n19) );
  INVD1 U52 ( .I(n1), .ZN(n16) );
  INVD1 U53 ( .I(n21), .ZN(n17) );
  AN2D4 U54 ( .A1(n275), .A2(n38), .Z(n325) );
  INR2D1 U55 ( .A1(n318), .B1(n271), .ZN(n270) );
  CKND2D0 U56 ( .A1(n251), .A2(n250), .ZN(n298) );
  CKND2D0 U57 ( .A1(n253), .A2(n249), .ZN(n308) );
  CKND2D0 U58 ( .A1(n250), .A2(n249), .ZN(n299) );
  CKND2D0 U59 ( .A1(n251), .A2(n248), .ZN(n275) );
  OA222D0 U60 ( .A1(n61), .A2(n60), .B1(n61), .B2(n223), .C1(n60), .C2(n223), 
        .Z(n21) );
  AOI222D0 U61 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \products[10][5] ), .B1(\add_9_root_add_199_I16/carry[13] ), .B2(
        \shifted_products[11][13] ), .C1(\shifted_products[11][13] ), .C2(
        \products[10][5] ), .ZN(n44) );
  CKAN2D0 U62 ( .A1(n301), .A2(n35), .Z(n321) );
  INVD2 U63 ( .I(n286), .ZN(n242) );
  OAI22D0 U64 ( .A1(n3), .A2(n116), .B1(n234), .B2(n118), .ZN(
        \shifted_products[6][3] ) );
  INR2D1 U65 ( .A1(n318), .B1(n300), .ZN(n305) );
  CKND2 U66 ( .I(n271), .ZN(n231) );
  XOR3D4 U67 ( .A1(\products[9][5] ), .A2(n49), .A3(n47), .Z(n22) );
  AOI222D1 U68 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(\products[8][5] ), .B1(\add_10_root_add_199_I16/carry[9] ), .B2(\shifted_products[9][9] ), .C1(
        \shifted_products[9][9] ), .C2(\products[8][5] ), .ZN(n46) );
  XOR3D2 U69 ( .A1(\products[5][5] ), .A2(n55), .A3(n126), .Z(n23) );
  XOR3D2 U70 ( .A1(\products[13][5] ), .A2(n41), .A3(n80), .Z(n24) );
  XOR3D1 U71 ( .A1(\products[11][5] ), .A2(n43), .A3(n30), .Z(n25) );
  AN2D2 U72 ( .A1(n295), .A2(n38), .Z(n292) );
  OAI22D0 U73 ( .A1(n2), .A2(n223), .B1(n283), .B2(n224), .ZN(
        \shifted_products[1][6] ) );
  NR2D0 U75 ( .A1(n319), .A2(n244), .ZN(n327) );
  CKAN2D0 U76 ( .A1(n284), .A2(n35), .Z(n289) );
  OAI21D0 U77 ( .A1(n64), .A2(n35), .B(n274), .ZN(\shifted_products[15][15] )
         );
  NR2D0 U78 ( .A1(n37), .A2(n67), .ZN(\shifted_products[15][0] ) );
  CKND2D0 U79 ( .A1(n301), .A2(n230), .ZN(n273) );
  CKND2D0 U80 ( .A1(n231), .A2(n284), .ZN(n319) );
  CKND1 U81 ( .I(\products[13][5] ), .ZN(n74) );
  NR2D0 U82 ( .A1(n113), .A2(n37), .ZN(\shifted_products[7][0] ) );
  CKND2D0 U83 ( .A1(\products[12][5] ), .A2(n319), .ZN(n261) );
  CKND2D0 U84 ( .A1(\products[8][5] ), .A2(n319), .ZN(n320) );
  CKND1 U85 ( .I(\products[7][5] ), .ZN(n108) );
  CKND2D0 U86 ( .A1(\products[3][5] ), .A2(n300), .ZN(n288) );
  NR2D0 U87 ( .A1(n271), .A2(n244), .ZN(n260) );
  CKND2D0 U88 ( .A1(\products[2][5] ), .A2(n300), .ZN(n285) );
  CKND2D0 U89 ( .A1(\products[10][5] ), .A2(n271), .ZN(n254) );
  CKND1 U90 ( .I(\products[6][5] ), .ZN(n114) );
  CKND1 U91 ( .I(\products[14][5] ), .ZN(n68) );
  CKND2D0 U92 ( .A1(\products[15][5] ), .A2(n271), .ZN(n281) );
  CKAN2D0 U93 ( .A1(n295), .A2(n306), .Z(n294) );
  CKND1 U94 ( .I(\products[5][5] ), .ZN(n120) );
  CKAN2D0 U95 ( .A1(n295), .A2(n2), .Z(n296) );
  OAI22D0 U96 ( .A1(n292), .A2(n126), .B1(n291), .B2(n128), .ZN(
        \shifted_products[4][5] ) );
  OAI22D0 U97 ( .A1(n292), .A2(n80), .B1(n290), .B2(n82), .ZN(
        \shifted_products[12][5] ) );
  OAI22D0 U98 ( .A1(n37), .A2(n122), .B1(n294), .B2(n124), .ZN(
        \shifted_products[5][3] ) );
  OAI22D0 U99 ( .A1(n292), .A2(n128), .B1(n291), .B2(n130), .ZN(
        \shifted_products[4][3] ) );
  OAI22D0 U100 ( .A1(n37), .A2(n64), .B1(n236), .B2(n66), .ZN(
        \shifted_products[15][3] ) );
  OAI22D0 U101 ( .A1(n3), .A2(n70), .B1(n235), .B2(n72), .ZN(
        \shifted_products[14][3] ) );
  OAI22D0 U102 ( .A1(n325), .A2(n88), .B1(n242), .B2(n90), .ZN(
        \shifted_products[11][3] ) );
  NR2D0 U103 ( .A1(n231), .A2(n93), .ZN(\shifted_products[10][3] ) );
  OAI22D0 U104 ( .A1(n2), .A2(n132), .B1(n287), .B2(n134), .ZN(
        \shifted_products[3][5] ) );
  OAI21D0 U105 ( .A1(n289), .A2(n221), .B(n285), .ZN(\shifted_products[2][5] )
         );
  OAI22D0 U106 ( .A1(n2), .A2(n134), .B1(n287), .B2(n216), .ZN(
        \shifted_products[3][3] ) );
  NR2D0 U107 ( .A1(n229), .A2(n219), .ZN(\shifted_products[2][3] ) );
  NR2D0 U108 ( .A1(n230), .A2(n104), .ZN(\shifted_products[8][3] ) );
  OAI22D0 U109 ( .A1(n36), .A2(n76), .B1(n233), .B2(n78), .ZN(
        \shifted_products[13][3] ) );
  OAI22D0 U110 ( .A1(n292), .A2(n82), .B1(n290), .B2(n84), .ZN(
        \shifted_products[12][3] ) );
  OAI22D0 U111 ( .A1(n110), .A2(n36), .B1(n232), .B2(n112), .ZN(
        \shifted_products[7][3] ) );
  OAI21D0 U113 ( .A1(n66), .A2(n35), .B(n274), .ZN(\shifted_products[15][13] )
         );
  NR2D0 U114 ( .A1(n2), .A2(n216), .ZN(\shifted_products[3][1] ) );
  NR2D0 U115 ( .A1(n37), .A2(n124), .ZN(\shifted_products[5][1] ) );
  NR2D0 U116 ( .A1(n292), .A2(n84), .ZN(\shifted_products[12][1] ) );
  NR2D0 U117 ( .A1(n37), .A2(n78), .ZN(\shifted_products[13][1] ) );
  NR2D0 U118 ( .A1(n112), .A2(n37), .ZN(\shifted_products[7][1] ) );
  NR2D0 U119 ( .A1(n231), .A2(n95), .ZN(\shifted_products[10][1] ) );
  NR2D0 U120 ( .A1(n37), .A2(n66), .ZN(\shifted_products[15][1] ) );
  OA21D0 U121 ( .A1(n289), .A2(n133), .B(n288), .Z(n31) );
  CKND1 U122 ( .I(\products[4][5] ), .ZN(n126) );
  CKAN2D0 U123 ( .A1(\products[0][5] ), .A2(n37), .Z(\shifted_products[0][9] )
         );
  XNR3D4 U124 ( .A1(\products[3][5] ), .A2(n57), .A3(n27), .ZN(n26) );
  AO222D1 U125 ( .A1(n59), .A2(\products[2][5] ), .B1(n59), .B2(
        \products[3][5] ), .C1(\products[2][5] ), .C2(\products[3][5] ), .Z(
        n27) );
  AO222D1 U126 ( .A1(n52), .A2(\products[6][5] ), .B1(n52), .B2(
        \products[7][5] ), .C1(\products[6][5] ), .C2(\products[7][5] ), .Z(
        n29) );
  CKAN2D0 U127 ( .A1(n295), .A2(n325), .Z(n265) );
  OAI21D0 U128 ( .A1(n63), .A2(n35), .B(n274), .ZN(\shifted_products[15][16] )
         );
  INR2XD0 U129 ( .A1(n275), .B1(n293), .ZN(n290) );
  INR2D0 U131 ( .A1(n308), .B1(n286), .ZN(n287) );
  NR2D0 U132 ( .A1(n2), .A2(n217), .ZN(\shifted_products[3][0] ) );
  INR2D2 U133 ( .A1(n275), .B1(n244), .ZN(n306) );
  CKND2D0 U135 ( .A1(n35), .A2(n298), .ZN(n315) );
  CKND2D0 U136 ( .A1(n301), .A2(n298), .ZN(n268) );
  AOI22D0 U137 ( .A1(\products[14][0] ), .A2(n268), .B1(\products[14][4] ), 
        .B2(n267), .ZN(n269) );
  NR2D0 U138 ( .A1(n292), .A2(n131), .ZN(\shifted_products[4][0] ) );
  NR2D0 U139 ( .A1(n292), .A2(n85), .ZN(\shifted_products[12][0] ) );
  AOI22D0 U140 ( .A1(\products[6][4] ), .A2(n302), .B1(\products[6][0] ), .B2(
        n315), .ZN(n303) );
  NR2D0 U141 ( .A1(n231), .A2(n96), .ZN(\shifted_products[10][0] ) );
  NR2D0 U142 ( .A1(n230), .A2(n107), .ZN(\shifted_products[8][0] ) );
  CKND1 U143 ( .I(\products[15][4] ), .ZN(n63) );
  CKND1 U144 ( .I(\products[14][3] ), .ZN(n70) );
  OAI21D0 U145 ( .A1(n289), .A2(n218), .B(n285), .ZN(\shifted_products[2][8] )
         );
  OAI21D0 U146 ( .A1(n289), .A2(n135), .B(n288), .ZN(\shifted_products[3][8] )
         );
  NR2D0 U147 ( .A1(n229), .A2(n222), .ZN(\shifted_products[2][0] ) );
  CKND1 U148 ( .I(\products[13][3] ), .ZN(n76) );
  CKND1 U149 ( .I(\products[7][3] ), .ZN(n110) );
  CKND2D0 U150 ( .A1(n306), .A2(n313), .ZN(n309) );
  CKND2D0 U151 ( .A1(n295), .A2(n275), .ZN(n262) );
  CKND1 U152 ( .I(\products[6][3] ), .ZN(n116) );
  CKND1 U153 ( .I(\products[14][4] ), .ZN(n69) );
  CKND1 U154 ( .I(\products[7][4] ), .ZN(n109) );
  CKND1 U155 ( .I(\products[12][3] ), .ZN(n82) );
  CKND1 U156 ( .I(\products[13][4] ), .ZN(n75) );
  CKND1 U157 ( .I(\products[5][3] ), .ZN(n122) );
  OAI21D0 U158 ( .A1(n321), .A2(n104), .B(n320), .ZN(\shifted_products[8][7] )
         );
  CKND1 U159 ( .I(\products[6][4] ), .ZN(n115) );
  OAI21D0 U160 ( .A1(n321), .A2(n82), .B(n261), .ZN(\shifted_products[12][9] )
         );
  OAI22D0 U161 ( .A1(n230), .A2(n103), .B1(n321), .B2(n107), .ZN(
        \shifted_products[8][4] ) );
  OAI21D0 U162 ( .A1(n321), .A2(n106), .B(n320), .ZN(\shifted_products[8][5] )
         );
  OAI21D0 U163 ( .A1(n321), .A2(n84), .B(n261), .ZN(\shifted_products[12][7] )
         );
  OAI22D0 U164 ( .A1(n231), .A2(n92), .B1(n255), .B2(n96), .ZN(
        \shifted_products[10][4] ) );
  FA1D1 U165 ( .A(\shifted_products[2][6] ), .B(\shifted_products[3][6] ), 
        .CI(\add_13_root_add_199_I16/carry[6] ), .CO(
        \add_13_root_add_199_I16/carry[7] ), .S(N82) );
  OAI21D0 U166 ( .A1(n289), .A2(n220), .B(n285), .ZN(\shifted_products[2][6] )
         );
  OAI22D0 U167 ( .A1(n292), .A2(n127), .B1(n291), .B2(n129), .ZN(
        \shifted_products[4][4] ) );
  OAI22D0 U168 ( .A1(n292), .A2(n81), .B1(n290), .B2(n83), .ZN(
        \shifted_products[12][4] ) );
  OAI21D0 U169 ( .A1(n321), .A2(n105), .B(n320), .ZN(\shifted_products[8][6] )
         );
  AOI22D0 U170 ( .A1(\products[9][4] ), .A2(n323), .B1(\products[9][0] ), .B2(
        n322), .ZN(n324) );
  AOI22D0 U171 ( .A1(\products[15][4] ), .A2(n276), .B1(\products[15][0] ), 
        .B2(n278), .ZN(n277) );
  AOI22D0 U172 ( .A1(\products[11][0] ), .A2(n258), .B1(\products[11][4] ), 
        .B2(n286), .ZN(n259) );
  OAI22D0 U173 ( .A1(n240), .A2(n70), .B1(n270), .B2(n68), .ZN(
        \shifted_products[14][9] ) );
  OAI22D0 U174 ( .A1(n37), .A2(n123), .B1(n294), .B2(n125), .ZN(
        \shifted_products[5][2] ) );
  OAI22D0 U175 ( .A1(n292), .A2(n129), .B1(n291), .B2(n131), .ZN(
        \shifted_products[4][2] ) );
  OAI22D0 U176 ( .A1(n37), .A2(n77), .B1(n233), .B2(n79), .ZN(
        \shifted_products[13][2] ) );
  OAI22D0 U177 ( .A1(n292), .A2(n83), .B1(n290), .B2(n85), .ZN(
        \shifted_products[12][2] ) );
  OAI22D0 U178 ( .A1(n37), .A2(n65), .B1(n236), .B2(n67), .ZN(
        \shifted_products[15][2] ) );
  OAI22D0 U179 ( .A1(n3), .A2(n71), .B1(n235), .B2(n73), .ZN(
        \shifted_products[14][2] ) );
  OAI22D0 U180 ( .A1(n2), .A2(n224), .B1(n283), .B2(n226), .ZN(
        \shifted_products[1][4] ) );
  OAI22D0 U181 ( .A1(n2), .A2(n225), .B1(n283), .B2(n227), .ZN(
        \shifted_products[1][3] ) );
  OAI22D0 U182 ( .A1(n325), .A2(n89), .B1(n242), .B2(n91), .ZN(
        \shifted_products[11][2] ) );
  NR2D0 U183 ( .A1(n231), .A2(n94), .ZN(\shifted_products[10][2] ) );
  OAI22D0 U184 ( .A1(n2), .A2(n133), .B1(n287), .B2(n135), .ZN(
        \shifted_products[3][4] ) );
  OAI22D0 U185 ( .A1(n229), .A2(n218), .B1(n289), .B2(n222), .ZN(
        \shifted_products[2][4] ) );
  OAI22D0 U186 ( .A1(n2), .A2(n135), .B1(n287), .B2(n217), .ZN(
        \shifted_products[3][2] ) );
  NR2D0 U187 ( .A1(n229), .A2(n220), .ZN(\shifted_products[2][2] ) );
  OAI22D0 U188 ( .A1(n325), .A2(n100), .B1(n237), .B2(n102), .ZN(
        \shifted_products[9][2] ) );
  NR2D0 U189 ( .A1(n230), .A2(n105), .ZN(\shifted_products[8][2] ) );
  OAI22D0 U190 ( .A1(n3), .A2(n117), .B1(n234), .B2(n119), .ZN(
        \shifted_products[6][2] ) );
  NR2D0 U192 ( .A1(n2), .A2(n227), .ZN(\shifted_products[1][1] ) );
  CKAN2D0 U193 ( .A1(n2), .A2(n313), .Z(n317) );
  CKND1 U194 ( .I(\products[5][4] ), .ZN(n121) );
  CKND1 U195 ( .I(\products[4][4] ), .ZN(n127) );
  CKND1 U196 ( .I(\products[4][3] ), .ZN(n128) );
  CKAN2D0 U197 ( .A1(n325), .A2(n313), .Z(n280) );
  CKND2D0 U198 ( .A1(n284), .A2(n308), .ZN(n258) );
  CKND2D2 U199 ( .A1(n250), .A2(n252), .ZN(n318) );
  CKND1 U200 ( .I(\products[6][2] ), .ZN(n117) );
  CKND1 U201 ( .I(\products[12][2] ), .ZN(n83) );
  AOI22D0 U202 ( .A1(\products[7][2] ), .A2(n310), .B1(\products[7][4] ), .B2(
        n309), .ZN(n311) );
  AOI22D0 U203 ( .A1(\products[13][4] ), .A2(n262), .B1(\products[13][2] ), 
        .B2(n293), .ZN(n263) );
  OAI21D0 U204 ( .A1(n321), .A2(n83), .B(n261), .ZN(\shifted_products[12][8] )
         );
  AOI22D0 U205 ( .A1(\products[13][4] ), .A2(n293), .B1(\products[13][2] ), 
        .B2(n244), .ZN(n264) );
  OAI22D0 U206 ( .A1(n2), .A2(n226), .B1(n283), .B2(n228), .ZN(
        \shifted_products[1][2] ) );
  CKND1 U207 ( .I(\products[5][2] ), .ZN(n123) );
  CKND1 U208 ( .I(\products[4][2] ), .ZN(n129) );
  INVD1 U209 ( .I(n319), .ZN(n230) );
  INVD1 U210 ( .I(n300), .ZN(n229) );
  INVD1 U211 ( .I(n302), .ZN(n234) );
  CKBD1 U212 ( .I(n312), .Z(n37) );
  CKBD1 U213 ( .I(n312), .Z(n36) );
  CKBD1 U214 ( .I(n312), .Z(n38) );
  INVD1 U215 ( .I(n323), .ZN(n237) );
  NR2D1 U216 ( .A1(n293), .A2(n322), .ZN(n297) );
  OAI22D1 U217 ( .A1(n297), .A2(n122), .B1(n296), .B2(n120), .ZN(
        \shifted_products[5][7] ) );
  ND2D1 U218 ( .A1(n325), .A2(n242), .ZN(n271) );
  INVD1 U219 ( .I(\products[15][5] ), .ZN(n62) );
  INVD1 U220 ( .I(n262), .ZN(n233) );
  NR2D1 U221 ( .A1(n3), .A2(n73), .ZN(\shifted_products[14][0] ) );
  INVD1 U222 ( .I(n309), .ZN(n232) );
  AOI222D0 U223 ( .A1(n45), .A2(\products[10][5] ), .B1(n45), .B2(
        \products[11][5] ), .C1(\products[10][5] ), .C2(\products[11][5] ), 
        .ZN(n30) );
  FA1D0 U224 ( .A(\shifted_products[12][5] ), .B(\shifted_products[13][5] ), 
        .CI(\add_8_root_add_199_I16/carry[5] ), .CO(
        \add_8_root_add_199_I16/carry[6] ), .S(N206) );
  OAI222D0 U225 ( .A1(n239), .A2(n78), .B1(n233), .B2(n76), .C1(n36), .C2(n74), 
        .ZN(\shifted_products[13][5] ) );
  FA1D0 U226 ( .A(\shifted_products[4][5] ), .B(\shifted_products[5][5] ), 
        .CI(\add_12_root_add_199_I16/carry[5] ), .CO(
        \add_12_root_add_199_I16/carry[6] ), .S(N104) );
  OAI222D0 U227 ( .A1(n294), .A2(n122), .B1(n297), .B2(n124), .C1(n36), .C2(
        n120), .ZN(\shifted_products[5][5] ) );
  FA1D0 U228 ( .A(\shifted_products[10][3] ), .B(\shifted_products[11][3] ), 
        .CI(\add_9_root_add_199_I16/carry[3] ), .CO(
        \add_9_root_add_199_I16/carry[4] ), .S(N177) );
  FA1D0 U229 ( .A(\shifted_products[4][3] ), .B(\shifted_products[5][3] ), 
        .CI(\add_12_root_add_199_I16/carry[3] ), .CO(
        \add_12_root_add_199_I16/carry[4] ), .S(N102) );
  FA1D0 U230 ( .A(\shifted_products[2][3] ), .B(\shifted_products[3][3] ), 
        .CI(\add_13_root_add_199_I16/carry[3] ), .CO(
        \add_13_root_add_199_I16/carry[4] ), .S(N79) );
  FA1D0 U231 ( .A(\shifted_products[2][5] ), .B(\shifted_products[3][5] ), 
        .CI(\add_13_root_add_199_I16/carry[5] ), .CO(
        \add_13_root_add_199_I16/carry[6] ), .S(N81) );
  FA1D0 U232 ( .A(\shifted_products[10][9] ), .B(\shifted_products[11][9] ), 
        .CI(\add_9_root_add_199_I16/carry[9] ), .CO(
        \add_9_root_add_199_I16/carry[10] ), .S(N183) );
  OAI22D1 U233 ( .A1(n238), .A2(n88), .B1(n260), .B2(n86), .ZN(
        \shifted_products[11][9] ) );
  OAI21D1 U234 ( .A1(n34), .A2(n95), .B(n256), .ZN(\shifted_products[10][9] )
         );
  FA1D0 U235 ( .A(\shifted_products[6][3] ), .B(\shifted_products[7][3] ), 
        .CI(\add_11_root_add_199_I16/carry[3] ), .CO(
        \add_11_root_add_199_I16/carry[4] ), .S(N126) );
  FA1D0 U236 ( .A(\shifted_products[12][3] ), .B(\shifted_products[13][3] ), 
        .CI(\add_8_root_add_199_I16/carry[3] ), .CO(
        \add_8_root_add_199_I16/carry[4] ), .S(N204) );
  FA1D0 U237 ( .A(\shifted_products[8][3] ), .B(\shifted_products[9][3] ), 
        .CI(\add_10_root_add_199_I16/carry[3] ), .CO(
        \add_10_root_add_199_I16/carry[4] ), .S(N151) );
  OAI22D1 U238 ( .A1(n325), .A2(n99), .B1(n237), .B2(n101), .ZN(
        \shifted_products[9][3] ) );
  OAI21D1 U240 ( .A1(n282), .A2(n64), .B(n272), .ZN(\shifted_products[15][11] ) );
  OAI21D1 U241 ( .A1(n34), .A2(n72), .B(n266), .ZN(\shifted_products[14][11] )
         );
  OAI21D1 U242 ( .A1(n34), .A2(n70), .B(n266), .ZN(\shifted_products[14][13] )
         );
  FA1D0 U243 ( .A(\shifted_products[10][11] ), .B(\shifted_products[11][11] ), 
        .CI(\add_9_root_add_199_I16/carry[11] ), .CO(
        \add_9_root_add_199_I16/carry[12] ), .S(N185) );
  OAI21D1 U244 ( .A1(n34), .A2(n90), .B(n257), .ZN(\shifted_products[11][11] )
         );
  OAI21D1 U245 ( .A1(n34), .A2(n93), .B(n256), .ZN(\shifted_products[10][11] )
         );
  FA1D0 U246 ( .A(\shifted_products[2][1] ), .B(\shifted_products[3][1] ), 
        .CI(\add_13_root_add_199_I16/carry[1] ), .CO(
        \add_13_root_add_199_I16/carry[2] ), .S(N77) );
  NR2D1 U247 ( .A1(n229), .A2(n221), .ZN(\shifted_products[2][1] ) );
  FA1D0 U248 ( .A(\shifted_products[6][1] ), .B(\shifted_products[7][1] ), 
        .CI(\add_11_root_add_199_I16/carry[1] ), .CO(
        \add_11_root_add_199_I16/carry[2] ), .S(N124) );
  NR2D1 U249 ( .A1(n304), .A2(n118), .ZN(\shifted_products[6][1] ) );
  FA1D0 U250 ( .A(\shifted_products[8][1] ), .B(\shifted_products[9][1] ), 
        .CI(\add_10_root_add_199_I16/carry[1] ), .CO(
        \add_10_root_add_199_I16/carry[2] ), .S(N149) );
  NR2D1 U251 ( .A1(n325), .A2(n101), .ZN(\shifted_products[9][1] ) );
  NR2D1 U252 ( .A1(n230), .A2(n106), .ZN(\shifted_products[8][1] ) );
  FA1D0 U253 ( .A(\shifted_products[10][1] ), .B(\shifted_products[11][1] ), 
        .CI(\add_9_root_add_199_I16/carry[1] ), .CO(
        \add_9_root_add_199_I16/carry[2] ), .S(N175) );
  NR2D1 U254 ( .A1(n325), .A2(n90), .ZN(\shifted_products[11][1] ) );
  NR2D1 U255 ( .A1(n304), .A2(n72), .ZN(\shifted_products[14][1] ) );
  FA1D0 U256 ( .A(\shifted_products[4][1] ), .B(\shifted_products[5][1] ), 
        .CI(\add_12_root_add_199_I16/carry[1] ), .CO(
        \add_12_root_add_199_I16/carry[2] ), .S(N100) );
  NR2D1 U257 ( .A1(n292), .A2(n130), .ZN(\shifted_products[4][1] ) );
  FA1D0 U258 ( .A(\shifted_products[12][1] ), .B(\shifted_products[13][1] ), 
        .CI(\add_8_root_add_199_I16/carry[1] ), .CO(
        \add_8_root_add_199_I16/carry[2] ), .S(N202) );
  NR2D1 U259 ( .A1(n325), .A2(n102), .ZN(\shifted_products[9][0] ) );
  FA1D0 U260 ( .A(\products[0][5] ), .B(\shifted_products[1][5] ), .CI(
        \add_14_root_add_199_I16/carry[5] ), .CO(
        \add_14_root_add_199_I16/carry[6] ), .S(N59) );
  NR2D1 U261 ( .A1(n304), .A2(n119), .ZN(\shifted_products[6][0] ) );
  INVD1 U262 ( .I(\products[12][5] ), .ZN(n80) );
  FA1D0 U263 ( .A(\shifted_products[2][7] ), .B(\shifted_products[3][7] ), 
        .CI(\add_13_root_add_199_I16/carry[7] ), .CO(
        \add_13_root_add_199_I16/carry[8] ), .S(N83) );
  OAI21D1 U264 ( .A1(n289), .A2(n216), .B(n288), .ZN(\shifted_products[3][7] )
         );
  OAI21D1 U265 ( .A1(n289), .A2(n219), .B(n285), .ZN(\shifted_products[2][7] )
         );
  INVD1 U266 ( .I(\products[1][5] ), .ZN(n223) );
  INVD1 U267 ( .I(n315), .ZN(n241) );
  OAI21D1 U268 ( .A1(n289), .A2(n134), .B(n288), .ZN(\shifted_products[3][9] )
         );
  OAI22D1 U269 ( .A1(n246), .A2(n76), .B1(n327), .B2(n74), .ZN(
        \shifted_products[13][11] ) );
  OAI22D1 U270 ( .A1(n246), .A2(n99), .B1(n327), .B2(n97), .ZN(
        \shifted_products[9][9] ) );
  OAI22D1 U271 ( .A1(n241), .A2(n110), .B1(n305), .B2(n108), .ZN(
        \shifted_products[7][11] ) );
  INVD1 U272 ( .I(\products[9][5] ), .ZN(n97) );
  INVD1 U273 ( .I(\products[11][5] ), .ZN(n86) );
  OAI21D1 U274 ( .A1(n34), .A2(n88), .B(n257), .ZN(\shifted_products[11][13] )
         );
  OAI22D1 U275 ( .A1(n246), .A2(n75), .B1(n327), .B2(n74), .ZN(
        \shifted_products[13][12] ) );
  OAI22D1 U276 ( .A1(n246), .A2(n98), .B1(n327), .B2(n97), .ZN(
        \shifted_products[9][10] ) );
  ND2D1 U277 ( .A1(\products[14][5] ), .A2(n273), .ZN(n266) );
  ND2D1 U278 ( .A1(\products[10][5] ), .A2(n273), .ZN(n256) );
  ND2D1 U279 ( .A1(\products[15][5] ), .A2(n273), .ZN(n274) );
  ND2D1 U280 ( .A1(\products[11][5] ), .A2(n273), .ZN(n257) );
  INVD1 U281 ( .I(n267), .ZN(n235) );
  INVD1 U282 ( .I(n322), .ZN(n246) );
  OAI22D1 U283 ( .A1(n297), .A2(n121), .B1(n296), .B2(n120), .ZN(
        \shifted_products[5][8] ) );
  INVD1 U284 ( .I(n268), .ZN(n240) );
  INVD1 U285 ( .I(n258), .ZN(n238) );
  OA22D0 U286 ( .A1(n241), .A2(n109), .B1(n305), .B2(n108), .Z(n32) );
  INVD1 U287 ( .I(n276), .ZN(n236) );
  INVD1 U288 ( .I(n310), .ZN(n243) );
  INVD1 U289 ( .I(n278), .ZN(n245) );
  INVD1 U290 ( .I(n293), .ZN(n239) );
  NR2D1 U291 ( .A1(n325), .A2(n91), .ZN(\shifted_products[11][0] ) );
  INVD1 U292 ( .I(\products[3][5] ), .ZN(n132) );
  OA21D1 U293 ( .A1(n34), .A2(n87), .B(n257), .Z(n33) );
  INVD1 U294 ( .I(n326), .ZN(n244) );
  ND2D1 U295 ( .A1(n298), .A2(n307), .ZN(n293) );
  INVD1 U296 ( .I(\products[15][3] ), .ZN(n64) );
  ND2D1 U297 ( .A1(n307), .A2(n313), .ZN(n286) );
  NR2D1 U298 ( .A1(n2), .A2(n228), .ZN(\shifted_products[1][0] ) );
  INVD1 U299 ( .I(\products[3][3] ), .ZN(n134) );
  FA1D0 U300 ( .A(\shifted_products[6][7] ), .B(\shifted_products[7][7] ), 
        .CI(\add_11_root_add_199_I16/carry[7] ), .CO(
        \add_11_root_add_199_I16/carry[8] ), .S(N130) );
  OAI222D0 U301 ( .A1(n229), .A2(n114), .B1(n241), .B2(n118), .C1(n318), .C2(
        n116), .ZN(\shifted_products[6][7] ) );
  OAI222D0 U302 ( .A1(n243), .A2(n110), .B1(n317), .B2(n108), .C1(n112), .C2(
        n318), .ZN(\shifted_products[7][7] ) );
  FA1D0 U303 ( .A(\shifted_products[8][7] ), .B(\shifted_products[9][7] ), 
        .CI(\add_10_root_add_199_I16/carry[7] ), .CO(
        \add_10_root_add_199_I16/carry[8] ), .S(N155) );
  OAI222D0 U304 ( .A1(n246), .A2(n101), .B1(n230), .B2(n97), .C1(n99), .C2(
        n326), .ZN(\shifted_products[9][7] ) );
  OAI222D0 U305 ( .A1(n36), .A2(n63), .B1(n236), .B2(n65), .C1(n67), .C2(n307), 
        .ZN(\shifted_products[15][4] ) );
  OAI222D0 U306 ( .A1(n3), .A2(n69), .B1(n235), .B2(n71), .C1(n318), .C2(n73), 
        .ZN(\shifted_products[14][4] ) );
  OAI222D0 U307 ( .A1(n36), .A2(n62), .B1(n236), .B2(n64), .C1(n66), .C2(n307), 
        .ZN(\shifted_products[15][5] ) );
  OAI222D0 U308 ( .A1(n3), .A2(n68), .B1(n235), .B2(n70), .C1(n318), .C2(n72), 
        .ZN(\shifted_products[14][5] ) );
  OAI222D0 U309 ( .A1(n231), .A2(n68), .B1(n240), .B2(n72), .C1(n318), .C2(n70), .ZN(\shifted_products[14][7] ) );
  OAI222D0 U310 ( .A1(n245), .A2(n66), .B1(n280), .B2(n62), .C1(n64), .C2(n307), .ZN(\shifted_products[15][7] ) );
  FA1D0 U311 ( .A(\shifted_products[8][4] ), .B(\shifted_products[9][4] ), 
        .CI(\add_10_root_add_199_I16/carry[4] ), .CO(
        \add_10_root_add_199_I16/carry[5] ), .S(N152) );
  OAI222D0 U312 ( .A1(n325), .A2(n98), .B1(n237), .B2(n100), .C1(n326), .C2(
        n102), .ZN(\shifted_products[9][4] ) );
  FA1D0 U313 ( .A(\shifted_products[10][4] ), .B(\shifted_products[11][4] ), 
        .CI(\add_9_root_add_199_I16/carry[4] ), .CO(
        \add_9_root_add_199_I16/carry[5] ), .S(N178) );
  OAI222D0 U314 ( .A1(n325), .A2(n87), .B1(n242), .B2(n89), .C1(n326), .C2(n91), .ZN(\shifted_products[11][4] ) );
  FA1D0 U315 ( .A(\shifted_products[12][7] ), .B(\shifted_products[13][7] ), 
        .CI(\add_8_root_add_199_I16/carry[7] ), .CO(
        \add_8_root_add_199_I16/carry[8] ), .S(N208) );
  OAI222D0 U316 ( .A1(n239), .A2(n76), .B1(n265), .B2(n74), .C1(n326), .C2(n78), .ZN(\shifted_products[13][7] ) );
  FA1D0 U317 ( .A(\shifted_products[8][5] ), .B(\shifted_products[9][5] ), 
        .CI(\add_10_root_add_199_I16/carry[5] ), .CO(
        \add_10_root_add_199_I16/carry[6] ), .S(N153) );
  OAI222D0 U318 ( .A1(n325), .A2(n97), .B1(n237), .B2(n99), .C1(n326), .C2(
        n101), .ZN(\shifted_products[9][5] ) );
  FA1D0 U319 ( .A(\shifted_products[10][5] ), .B(\shifted_products[11][5] ), 
        .CI(\add_9_root_add_199_I16/carry[5] ), .CO(
        \add_9_root_add_199_I16/carry[6] ), .S(N179) );
  OAI222D0 U320 ( .A1(n325), .A2(n86), .B1(n242), .B2(n88), .C1(n326), .C2(n90), .ZN(\shifted_products[11][5] ) );
  OAI21D1 U321 ( .A1(n255), .A2(n95), .B(n254), .ZN(\shifted_products[10][5] )
         );
  FA1D0 U322 ( .A(\shifted_products[6][9] ), .B(\shifted_products[7][9] ), 
        .CI(\add_11_root_add_199_I16/carry[9] ), .CO(
        \add_11_root_add_199_I16/carry[10] ), .S(N132) );
  OAI222D0 U323 ( .A1(n229), .A2(n108), .B1(n241), .B2(n112), .C1(n318), .C2(
        n110), .ZN(\shifted_products[7][9] ) );
  OAI22D1 U324 ( .A1(n241), .A2(n116), .B1(n305), .B2(n114), .ZN(
        \shifted_products[6][9] ) );
  FA1D0 U325 ( .A(\shifted_products[12][9] ), .B(\shifted_products[13][9] ), 
        .CI(\add_8_root_add_199_I16/carry[9] ), .CO(
        \add_8_root_add_199_I16/carry[10] ), .S(N210) );
  OAI222D0 U326 ( .A1(n246), .A2(n78), .B1(n230), .B2(n74), .C1(n326), .C2(n76), .ZN(\shifted_products[13][9] ) );
  FA1D0 U327 ( .A(\shifted_products[10][7] ), .B(\shifted_products[11][7] ), 
        .CI(\add_9_root_add_199_I16/carry[7] ), .CO(
        \add_9_root_add_199_I16/carry[8] ), .S(N181) );
  OAI222D0 U328 ( .A1(n231), .A2(n86), .B1(n238), .B2(n90), .C1(n326), .C2(n88), .ZN(\shifted_products[11][7] ) );
  OAI21D1 U329 ( .A1(n255), .A2(n93), .B(n254), .ZN(\shifted_products[10][7] )
         );
  FA1D0 U330 ( .A(\shifted_products[10][8] ), .B(\shifted_products[11][8] ), 
        .CI(\add_9_root_add_199_I16/carry[8] ), .CO(
        \add_9_root_add_199_I16/carry[9] ), .S(N182) );
  OAI222D0 U331 ( .A1(n231), .A2(n86), .B1(n238), .B2(n89), .C1(n326), .C2(n87), .ZN(\shifted_products[11][8] ) );
  OAI221D0 U332 ( .A1(n255), .A2(n92), .B1(n35), .B2(n96), .C(n254), .ZN(
        \shifted_products[10][8] ) );
  FA1D0 U333 ( .A(\shifted_products[10][10] ), .B(\shifted_products[11][10] ), 
        .CI(\add_9_root_add_199_I16/carry[10] ), .CO(
        \add_9_root_add_199_I16/carry[11] ), .S(N184) );
  OAI222D0 U334 ( .A1(n238), .A2(n87), .B1(n260), .B2(n86), .C1(n34), .C2(n91), 
        .ZN(\shifted_products[11][10] ) );
  OAI21D1 U335 ( .A1(n34), .A2(n94), .B(n256), .ZN(\shifted_products[10][10] )
         );
  FA1D0 U336 ( .A(\shifted_products[12][4] ), .B(\shifted_products[13][4] ), 
        .CI(\add_8_root_add_199_I16/carry[4] ), .CO(
        \add_8_root_add_199_I16/carry[5] ), .S(N205) );
  OAI222D0 U337 ( .A1(n239), .A2(n79), .B1(n233), .B2(n77), .C1(n36), .C2(n75), 
        .ZN(\shifted_products[13][4] ) );
  FA1D0 U338 ( .A(\shifted_products[6][5] ), .B(\shifted_products[7][5] ), 
        .CI(\add_11_root_add_199_I16/carry[5] ), .CO(
        \add_11_root_add_199_I16/carry[6] ), .S(N128) );
  OAI222D0 U339 ( .A1(n3), .A2(n114), .B1(n234), .B2(n116), .C1(n318), .C2(
        n118), .ZN(\shifted_products[6][5] ) );
  OAI222D0 U340 ( .A1(n232), .A2(n110), .B1(n243), .B2(n112), .C1(n108), .C2(
        n37), .ZN(\shifted_products[7][5] ) );
  OAI222D0 U341 ( .A1(n289), .A2(n217), .B1(n287), .B2(n133), .C1(n2), .C2(
        n132), .ZN(\shifted_products[3][6] ) );
  FA1D0 U342 ( .A(\shifted_products[4][4] ), .B(\shifted_products[5][4] ), 
        .CI(\add_12_root_add_199_I16/carry[4] ), .CO(
        \add_12_root_add_199_I16/carry[5] ), .S(N103) );
  OAI222D0 U343 ( .A1(n294), .A2(n123), .B1(n297), .B2(n125), .C1(n36), .C2(
        n121), .ZN(\shifted_products[5][4] ) );
  FA1D0 U344 ( .A(\shifted_products[6][4] ), .B(\shifted_products[7][4] ), 
        .CI(\add_11_root_add_199_I16/carry[4] ), .CO(
        \add_11_root_add_199_I16/carry[5] ), .S(N127) );
  OAI222D0 U345 ( .A1(n3), .A2(n115), .B1(n234), .B2(n117), .C1(n318), .C2(
        n119), .ZN(\shifted_products[6][4] ) );
  OAI222D0 U346 ( .A1(n232), .A2(n111), .B1(n243), .B2(n113), .C1(n109), .C2(
        n37), .ZN(\shifted_products[7][4] ) );
  FA1D0 U347 ( .A(\shifted_products[8][6] ), .B(\shifted_products[9][6] ), 
        .CI(\add_10_root_add_199_I16/carry[6] ), .CO(
        \add_10_root_add_199_I16/carry[7] ), .S(N154) );
  OAI221D0 U348 ( .A1(n325), .A2(n97), .B1(n100), .B2(n326), .C(n324), .ZN(
        \shifted_products[9][6] ) );
  OAI221D0 U349 ( .A1(n36), .A2(n62), .B1(n65), .B2(n307), .C(n277), .ZN(
        \shifted_products[15][6] ) );
  OAI221D0 U350 ( .A1(n3), .A2(n68), .B1(n318), .B2(n71), .C(n269), .ZN(
        \shifted_products[14][6] ) );
  FA1D0 U351 ( .A(\shifted_products[10][6] ), .B(\shifted_products[11][6] ), 
        .CI(\add_9_root_add_199_I16/carry[6] ), .CO(
        \add_9_root_add_199_I16/carry[7] ), .S(N180) );
  OAI221D0 U352 ( .A1(n325), .A2(n86), .B1(n326), .B2(n89), .C(n259), .ZN(
        \shifted_products[11][6] ) );
  OAI21D1 U353 ( .A1(n255), .A2(n94), .B(n254), .ZN(\shifted_products[10][6] )
         );
  OAI221D0 U354 ( .A1(n282), .A2(n66), .B1(n245), .B2(n64), .C(n281), .ZN(
        \shifted_products[15][9] ) );
  OAI221D0 U355 ( .A1(n282), .A2(n65), .B1(n245), .B2(n63), .C(n281), .ZN(
        \shifted_products[15][10] ) );
  OAI222D0 U356 ( .A1(n240), .A2(n69), .B1(n270), .B2(n68), .C1(n34), .C2(n73), 
        .ZN(\shifted_products[14][10] ) );
  FA1D0 U357 ( .A(\shifted_products[6][8] ), .B(\shifted_products[7][8] ), 
        .CI(\add_11_root_add_199_I16/carry[8] ), .CO(
        \add_11_root_add_199_I16/carry[9] ), .S(N131) );
  OAI221D0 U358 ( .A1(n317), .A2(n108), .B1(n243), .B2(n109), .C(n316), .ZN(
        \shifted_products[7][8] ) );
  OAI222D0 U359 ( .A1(n229), .A2(n114), .B1(n241), .B2(n117), .C1(n318), .C2(
        n115), .ZN(\shifted_products[6][8] ) );
  OAI221D0 U360 ( .A1(n282), .A2(n63), .B1(n67), .B2(n35), .C(n272), .ZN(
        \shifted_products[15][12] ) );
  OAI21D1 U361 ( .A1(n34), .A2(n71), .B(n266), .ZN(\shifted_products[14][12] )
         );
  FA1D0 U362 ( .A(\shifted_products[10][2] ), .B(\shifted_products[11][2] ), 
        .CI(\add_9_root_add_199_I16/carry[2] ), .CO(
        \add_9_root_add_199_I16/carry[3] ), .S(N176) );
  FA1D0 U363 ( .A(\shifted_products[4][2] ), .B(\shifted_products[5][2] ), 
        .CI(\add_12_root_add_199_I16/carry[2] ), .CO(
        \add_12_root_add_199_I16/carry[3] ), .S(N101) );
  FA1D0 U364 ( .A(\shifted_products[2][2] ), .B(\shifted_products[3][2] ), 
        .CI(\add_13_root_add_199_I16/carry[2] ), .CO(
        \add_13_root_add_199_I16/carry[3] ), .S(N78) );
  FA1D0 U365 ( .A(\shifted_products[2][4] ), .B(\shifted_products[3][4] ), 
        .CI(\add_13_root_add_199_I16/carry[4] ), .CO(
        \add_13_root_add_199_I16/carry[5] ), .S(N80) );
  FA1D0 U366 ( .A(\shifted_products[6][2] ), .B(\shifted_products[7][2] ), 
        .CI(\add_11_root_add_199_I16/carry[2] ), .CO(
        \add_11_root_add_199_I16/carry[3] ), .S(N125) );
  OAI22D1 U367 ( .A1(n111), .A2(n36), .B1(n232), .B2(n113), .ZN(
        \shifted_products[7][2] ) );
  FA1D0 U368 ( .A(\shifted_products[12][2] ), .B(\shifted_products[13][2] ), 
        .CI(\add_8_root_add_199_I16/carry[2] ), .CO(
        \add_8_root_add_199_I16/carry[3] ), .S(N203) );
  FA1D0 U369 ( .A(\shifted_products[8][2] ), .B(\shifted_products[9][2] ), 
        .CI(\add_10_root_add_199_I16/carry[2] ), .CO(
        \add_10_root_add_199_I16/carry[3] ), .S(N150) );
  FA1D0 U370 ( .A(\products[0][3] ), .B(\shifted_products[1][3] ), .CI(
        \add_14_root_add_199_I16/carry[3] ), .CO(
        \add_14_root_add_199_I16/carry[4] ), .S(N57) );
  FA1D0 U371 ( .A(\products[0][4] ), .B(\shifted_products[1][4] ), .CI(
        \add_14_root_add_199_I16/carry[4] ), .CO(
        \add_14_root_add_199_I16/carry[5] ), .S(N58) );
  FA1D0 U372 ( .A(\products[0][1] ), .B(\shifted_products[1][1] ), .CI(
        \add_14_root_add_199_I16/carry[1] ), .CO(
        \add_14_root_add_199_I16/carry[2] ), .S(N55) );
  INVD1 U373 ( .I(\products[12][4] ), .ZN(n81) );
  INVD1 U374 ( .I(\products[3][4] ), .ZN(n133) );
  FA1D0 U375 ( .A(\shifted_products[6][10] ), .B(\shifted_products[7][10] ), 
        .CI(\add_11_root_add_199_I16/carry[10] ), .CO(
        \add_11_root_add_199_I16/carry[11] ), .S(N133) );
  OAI222D0 U376 ( .A1(n229), .A2(n108), .B1(n241), .B2(n111), .C1(n318), .C2(
        n109), .ZN(\shifted_products[7][10] ) );
  OAI22D1 U377 ( .A1(n241), .A2(n115), .B1(n305), .B2(n114), .ZN(
        \shifted_products[6][10] ) );
  OAI21D1 U378 ( .A1(n65), .A2(n35), .B(n274), .ZN(\shifted_products[15][14] )
         );
  OAI21D1 U379 ( .A1(n35), .A2(n69), .B(n266), .ZN(\shifted_products[14][14] )
         );
  FA1D0 U380 ( .A(\shifted_products[10][12] ), .B(\shifted_products[11][12] ), 
        .CI(\add_9_root_add_199_I16/carry[12] ), .CO(
        \add_9_root_add_199_I16/carry[13] ), .S(N186) );
  OAI21D1 U381 ( .A1(n34), .A2(n89), .B(n257), .ZN(\shifted_products[11][12] )
         );
  OAI21D1 U382 ( .A1(n34), .A2(n92), .B(n256), .ZN(\shifted_products[10][12] )
         );
  OAI21D1 U383 ( .A1(n321), .A2(n81), .B(n261), .ZN(\shifted_products[12][10] ) );
  OAI222D0 U384 ( .A1(n246), .A2(n77), .B1(n230), .B2(n74), .C1(n326), .C2(n75), .ZN(\shifted_products[13][10] ) );
  FA1D0 U385 ( .A(\shifted_products[8][8] ), .B(\shifted_products[9][8] ), 
        .CI(\add_10_root_add_199_I16/carry[8] ), .CO(
        \add_10_root_add_199_I16/carry[9] ), .S(N156) );
  OAI21D1 U386 ( .A1(n321), .A2(n103), .B(n320), .ZN(\shifted_products[8][8] )
         );
  OAI222D0 U387 ( .A1(n246), .A2(n100), .B1(n230), .B2(n97), .C1(n326), .C2(
        n98), .ZN(\shifted_products[9][8] ) );
  OAI22D1 U388 ( .A1(n292), .A2(n126), .B1(n291), .B2(n127), .ZN(
        \shifted_products[4][6] ) );
  OAI222D0 U389 ( .A1(n294), .A2(n121), .B1(n297), .B2(n123), .C1(n36), .C2(
        n120), .ZN(\shifted_products[5][6] ) );
  NR2D1 U390 ( .A1(n37), .A2(n125), .ZN(\shifted_products[5][0] ) );
  INVD1 U391 ( .I(\products[1][4] ), .ZN(n224) );
  INVD1 U392 ( .I(\products[1][3] ), .ZN(n225) );
  INVD1 U393 ( .I(\products[2][4] ), .ZN(n218) );
  CKBD1 U394 ( .I(n299), .Z(n35) );
  ND2D1 U395 ( .A1(n326), .A2(n318), .ZN(n278) );
  INVD1 U396 ( .I(\products[11][3] ), .ZN(n88) );
  INVD1 U397 ( .I(\products[9][3] ), .ZN(n99) );
  INVD1 U398 ( .I(\products[11][4] ), .ZN(n87) );
  ND2D1 U399 ( .A1(n307), .A2(n275), .ZN(n267) );
  ND2D1 U400 ( .A1(n275), .A2(n313), .ZN(n276) );
  ND2D1 U401 ( .A1(n308), .A2(n307), .ZN(n310) );
  INVD1 U402 ( .I(\products[9][4] ), .ZN(n98) );
  INVD1 U403 ( .I(\products[10][4] ), .ZN(n92) );
  INVD1 U404 ( .I(\products[10][3] ), .ZN(n93) );
  INVD1 U405 ( .I(\products[8][4] ), .ZN(n103) );
  INVD1 U406 ( .I(\products[2][3] ), .ZN(n219) );
  INVD1 U407 ( .I(\products[8][3] ), .ZN(n104) );
  CKBD1 U408 ( .I(n299), .Z(n34) );
  INVD1 U409 ( .I(\products[15][1] ), .ZN(n66) );
  INVD1 U410 ( .I(\products[7][1] ), .ZN(n112) );
  INVD1 U411 ( .I(\products[14][1] ), .ZN(n72) );
  INVD1 U412 ( .I(\products[13][1] ), .ZN(n78) );
  INVD1 U413 ( .I(\products[6][1] ), .ZN(n118) );
  INVD1 U414 ( .I(\products[5][1] ), .ZN(n124) );
  INVD1 U415 ( .I(\products[12][1] ), .ZN(n84) );
  INVD1 U416 ( .I(\products[3][1] ), .ZN(n216) );
  INVD1 U417 ( .I(\products[4][1] ), .ZN(n130) );
  INVD1 U418 ( .I(\products[1][1] ), .ZN(n227) );
  INVD1 U419 ( .I(\products[2][1] ), .ZN(n221) );
  INVD1 U420 ( .I(\products[15][0] ), .ZN(n67) );
  INVD1 U421 ( .I(\products[14][0] ), .ZN(n73) );
  INVD1 U422 ( .I(\products[11][0] ), .ZN(n91) );
  INVD1 U423 ( .I(\products[7][0] ), .ZN(n113) );
  INVD1 U424 ( .I(\products[6][0] ), .ZN(n119) );
  INVD1 U425 ( .I(\products[9][0] ), .ZN(n102) );
  INVD1 U426 ( .I(\products[11][1] ), .ZN(n90) );
  INVD1 U427 ( .I(\products[9][1] ), .ZN(n101) );
  INVD1 U428 ( .I(\products[10][1] ), .ZN(n95) );
  INVD1 U429 ( .I(\products[8][1] ), .ZN(n106) );
  INVD1 U430 ( .I(\products[15][2] ), .ZN(n65) );
  INVD1 U431 ( .I(\products[14][2] ), .ZN(n71) );
  INVD1 U432 ( .I(\products[13][2] ), .ZN(n77) );
  INVD1 U433 ( .I(\products[7][2] ), .ZN(n111) );
  FA1D0 U434 ( .A(\shifted_products[6][6] ), .B(\shifted_products[7][6] ), 
        .CI(\add_11_root_add_199_I16/carry[6] ), .CO(
        \add_11_root_add_199_I16/carry[7] ), .S(N129) );
  OAI221D0 U435 ( .A1(n108), .A2(n36), .B1(n318), .B2(n113), .C(n311), .ZN(
        \shifted_products[7][6] ) );
  OAI221D0 U436 ( .A1(n3), .A2(n114), .B1(n318), .B2(n117), .C(n303), .ZN(
        \shifted_products[6][6] ) );
  FA1D0 U437 ( .A(\shifted_products[12][6] ), .B(\shifted_products[13][6] ), 
        .CI(\add_8_root_add_199_I16/carry[6] ), .CO(
        \add_8_root_add_199_I16/carry[7] ), .S(N207) );
  OAI222D0 U438 ( .A1(n292), .A2(n80), .B1(n290), .B2(n81), .C1(n321), .C2(n85), .ZN(\shifted_products[12][6] ) );
  OAI221D0 U439 ( .A1(n36), .A2(n74), .B1(n326), .B2(n79), .C(n263), .ZN(
        \shifted_products[13][6] ) );
  OAI222D0 U440 ( .A1(n231), .A2(n68), .B1(n240), .B2(n71), .C1(n318), .C2(n69), .ZN(\shifted_products[14][8] ) );
  OAI221D0 U441 ( .A1(n280), .A2(n62), .B1(n282), .B2(n67), .C(n279), .ZN(
        \shifted_products[15][8] ) );
  FA1D0 U442 ( .A(\shifted_products[12][8] ), .B(\shifted_products[13][8] ), 
        .CI(\add_8_root_add_199_I16/carry[8] ), .CO(
        \add_8_root_add_199_I16/carry[9] ), .S(N209) );
  OAI221D0 U443 ( .A1(n265), .A2(n74), .B1(n246), .B2(n79), .C(n264), .ZN(
        \shifted_products[13][8] ) );
  FA1D0 U444 ( .A(\products[0][2] ), .B(\shifted_products[1][2] ), .CI(
        \add_14_root_add_199_I16/carry[2] ), .CO(
        \add_14_root_add_199_I16/carry[3] ), .S(N56) );
  INVD1 U445 ( .I(\products[1][2] ), .ZN(n226) );
  INVD1 U446 ( .I(\products[11][2] ), .ZN(n89) );
  INVD1 U447 ( .I(\products[9][2] ), .ZN(n100) );
  INVD1 U448 ( .I(\products[3][2] ), .ZN(n135) );
  INVD1 U449 ( .I(\products[10][2] ), .ZN(n94) );
  INVD1 U450 ( .I(\products[2][2] ), .ZN(n220) );
  INVD1 U451 ( .I(\products[8][2] ), .ZN(n105) );
  INVD1 U452 ( .I(\products[13][0] ), .ZN(n79) );
  INVD1 U453 ( .I(\products[5][0] ), .ZN(n125) );
  INVD1 U454 ( .I(\products[12][0] ), .ZN(n85) );
  INVD1 U455 ( .I(\products[1][0] ), .ZN(n228) );
  INVD1 U456 ( .I(\products[4][0] ), .ZN(n131) );
  INVD1 U457 ( .I(\products[10][0] ), .ZN(n96) );
  INVD1 U458 ( .I(\products[3][0] ), .ZN(n217) );
  INVD1 U459 ( .I(\products[2][0] ), .ZN(n222) );
  INVD1 U460 ( .I(\products[8][0] ), .ZN(n107) );
  INR3D0 U461 ( .A1(input_bitwidth[2]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[1]), .ZN(n249) );
  INR3D0 U462 ( .A1(weight_bitwidth[0]), .B1(weight_bitwidth[1]), .B2(
        weight_bitwidth[2]), .ZN(n248) );
  INR3D0 U463 ( .A1(input_bitwidth[0]), .B1(input_bitwidth[1]), .B2(
        input_bitwidth[2]), .ZN(n252) );
  INR3D0 U464 ( .A1(input_bitwidth[1]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[2]), .ZN(n251) );
  INR3D0 U465 ( .A1(weight_bitwidth[1]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[2]), .ZN(n253) );
  INR3D0 U466 ( .A1(weight_bitwidth[2]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[1]), .ZN(n250) );
  TIEL U467 ( .ZN(n247) );
  AN2D0 U468 ( .A1(\shifted_products[2][0] ), .A2(\shifted_products[3][0] ), 
        .Z(\add_13_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U469 ( .A1(\shifted_products[3][0] ), .A2(\shifted_products[2][0] ), 
        .Z(N76) );
  AN2D0 U470 ( .A1(\products[0][0] ), .A2(\shifted_products[1][0] ), .Z(
        \add_14_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U471 ( .A1(\shifted_products[1][0] ), .A2(\products[0][0] ), .Z(N54) );
  AN2D0 U472 ( .A1(\shifted_products[12][0] ), .A2(\shifted_products[13][0] ), 
        .Z(\add_8_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U473 ( .A1(\shifted_products[13][0] ), .A2(
        \shifted_products[12][0] ), .Z(N201) );
  AN2D0 U474 ( .A1(\shifted_products[6][0] ), .A2(\shifted_products[7][0] ), 
        .Z(\add_11_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U475 ( .A1(\shifted_products[7][0] ), .A2(\shifted_products[6][0] ), 
        .Z(N123) );
  AN2D0 U476 ( .A1(\shifted_products[4][0] ), .A2(\shifted_products[5][0] ), 
        .Z(\add_12_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U477 ( .A1(\shifted_products[5][0] ), .A2(\shifted_products[4][0] ), 
        .Z(N99) );
  AN2D0 U478 ( .A1(\shifted_products[8][0] ), .A2(\shifted_products[9][0] ), 
        .Z(\add_10_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U479 ( .A1(\shifted_products[9][0] ), .A2(\shifted_products[8][0] ), 
        .Z(N148) );
  AN2D0 U480 ( .A1(\shifted_products[10][0] ), .A2(\shifted_products[11][0] ), 
        .Z(\add_9_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U481 ( .A1(\shifted_products[11][0] ), .A2(
        \shifted_products[10][0] ), .Z(N174) );
  XOR3D0 U482 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[13][11] ), .A3(\products[12][5] ), .Z(N212) );
  XOR3D0 U483 ( .A1(\shifted_products[13][12] ), .A2(n39), .A3(n80), .Z(N213)
         );
  XOR3D0 U484 ( .A1(\products[13][5] ), .A2(\products[12][5] ), .A3(n40), .Z(
        N214) );
  CKND0 U485 ( .I(\shifted_products[13][12] ), .ZN(n42) );
  XNR3D0 U486 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \shifted_products[11][13] ), .A3(n43), .ZN(N187) );
  XNR3D0 U487 ( .A1(n33), .A2(n44), .A3(n43), .ZN(N188) );
  XNR3D0 U488 ( .A1(\products[11][5] ), .A2(n43), .A3(n45), .ZN(N189) );
  OAI222D0 U489 ( .A1(n44), .A2(n43), .B1(n44), .B2(n33), .C1(n43), .C2(n33), 
        .ZN(n45) );
  CKND0 U490 ( .I(\products[10][5] ), .ZN(n43) );
  XOR3D0 U491 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[9][9] ), .A3(\products[8][5] ), .Z(N157) );
  XOR3D0 U492 ( .A1(\shifted_products[9][10] ), .A2(n46), .A3(n47), .Z(N158)
         );
  XOR3D0 U493 ( .A1(\products[9][5] ), .A2(\products[8][5] ), .A3(n48), .Z(
        N159) );
  OAI222D0 U494 ( .A1(n46), .A2(n47), .B1(n46), .B2(n50), .C1(n47), .C2(n50), 
        .ZN(n48) );
  CKND0 U495 ( .I(\shifted_products[9][10] ), .ZN(n50) );
  CKND0 U496 ( .I(\products[8][5] ), .ZN(n47) );
  XNR3D0 U497 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[7][11] ), .A3(n114), .ZN(N134) );
  XNR3D0 U498 ( .A1(n32), .A2(n51), .A3(n114), .ZN(N135) );
  XNR3D0 U499 ( .A1(\products[7][5] ), .A2(n114), .A3(n52), .ZN(N136) );
  XOR3D0 U500 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(
        \shifted_products[5][7] ), .A3(\products[4][5] ), .Z(N106) );
  XOR3D0 U501 ( .A1(\shifted_products[5][8] ), .A2(n53), .A3(n126), .Z(N107)
         );
  XOR3D0 U502 ( .A1(\products[5][5] ), .A2(\products[4][5] ), .A3(n54), .Z(
        N108) );
  CKND0 U503 ( .I(\shifted_products[5][8] ), .ZN(n56) );
  XNR3D0 U504 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .A3(n57), .ZN(N85) );
  XNR3D0 U505 ( .A1(n31), .A2(n58), .A3(n57), .ZN(N86) );
  XNR3D0 U506 ( .A1(\products[3][5] ), .A2(n57), .A3(n59), .ZN(N87) );
  CKND0 U507 ( .I(\products[2][5] ), .ZN(n57) );
  XNR3D0 U508 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[1][6] ), .A3(n60), .ZN(N60) );
  XNR3D0 U509 ( .A1(n223), .A2(n61), .A3(n60), .ZN(N61) );
  CKND0 U510 ( .I(\shifted_products[0][9] ), .ZN(n60) );
endmodule


module fusion_unit_11_DW01_add_0_DW01_add_15 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module fusion_unit_11 ( clk, nRST, input_bitwidth, weight_bitwidth, input_sign, 
        weight_sign, input_forward, weight, psum_in, psum, input_to_right );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  input [3:0] input_sign;
  input [3:0] weight_sign;
  input [31:0] input_forward;
  input [31:0] weight;
  input [31:0] psum_in;
  output [31:0] psum;
  output [31:0] input_to_right;
  input clk, nRST;
  wire   \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] , n2;
  wire   [31:0] shift_add_out;
  assign input_to_right[31] = input_forward[31];
  assign input_to_right[30] = input_forward[30];
  assign input_to_right[29] = input_forward[29];
  assign input_to_right[28] = input_forward[28];
  assign input_to_right[27] = input_forward[27];
  assign input_to_right[26] = input_forward[26];
  assign input_to_right[25] = input_forward[25];
  assign input_to_right[24] = input_forward[24];
  assign input_to_right[23] = input_forward[23];
  assign input_to_right[22] = input_forward[22];
  assign input_to_right[21] = input_forward[21];
  assign input_to_right[20] = input_forward[20];
  assign input_to_right[19] = input_forward[19];
  assign input_to_right[18] = input_forward[18];
  assign input_to_right[17] = input_forward[17];
  assign input_to_right[16] = input_forward[16];
  assign input_to_right[15] = input_forward[15];
  assign input_to_right[14] = input_forward[14];
  assign input_to_right[13] = input_forward[13];
  assign input_to_right[12] = input_forward[12];
  assign input_to_right[11] = input_forward[11];
  assign input_to_right[10] = input_forward[10];
  assign input_to_right[9] = input_forward[9];
  assign input_to_right[8] = input_forward[8];
  assign input_to_right[7] = input_forward[7];
  assign input_to_right[6] = input_forward[6];
  assign input_to_right[5] = input_forward[5];
  assign input_to_right[4] = input_forward[4];
  assign input_to_right[3] = input_forward[3];
  assign input_to_right[2] = input_forward[2];
  assign input_to_right[1] = input_forward[1];
  assign input_to_right[0] = input_forward[0];

  bit_brick_191 \genblk1[0].BB  ( .x(input_forward[1:0]), .y(weight[1:0]), 
        .sx(input_sign[0]), .sy(weight_sign[0]), .product({\products[0][5] , 
        \products[0][4] , \products[0][3] , \products[0][2] , \products[0][1] , 
        \products[0][0] }) );
  bit_brick_190 \genblk1[1].BB  ( .x(input_forward[3:2]), .y(weight[3:2]), 
        .sx(input_sign[0]), .sy(weight_sign[1]), .product({\products[1][5] , 
        \products[1][4] , \products[1][3] , \products[1][2] , \products[1][1] , 
        \products[1][0] }) );
  bit_brick_189 \genblk1[2].BB  ( .x(input_forward[5:4]), .y(weight[5:4]), 
        .sx(input_sign[0]), .sy(weight_sign[2]), .product({\products[2][5] , 
        \products[2][4] , \products[2][3] , \products[2][2] , \products[2][1] , 
        \products[2][0] }) );
  bit_brick_188 \genblk1[3].BB  ( .x(input_forward[7:6]), .y(weight[7:6]), 
        .sx(input_sign[0]), .sy(weight_sign[3]), .product({\products[3][5] , 
        \products[3][4] , \products[3][3] , \products[3][2] , \products[3][1] , 
        \products[3][0] }) );
  bit_brick_187 \genblk1[4].BB  ( .x(input_forward[9:8]), .y(weight[9:8]), 
        .sx(input_sign[1]), .sy(weight_sign[0]), .product({\products[4][5] , 
        \products[4][4] , \products[4][3] , \products[4][2] , \products[4][1] , 
        \products[4][0] }) );
  bit_brick_186 \genblk1[5].BB  ( .x(input_forward[11:10]), .y(weight[11:10]), 
        .sx(input_sign[1]), .sy(weight_sign[1]), .product({\products[5][5] , 
        \products[5][4] , \products[5][3] , \products[5][2] , \products[5][1] , 
        \products[5][0] }) );
  bit_brick_185 \genblk1[6].BB  ( .x(input_forward[13:12]), .y(weight[13:12]), 
        .sx(input_sign[1]), .sy(weight_sign[2]), .product({\products[6][5] , 
        \products[6][4] , \products[6][3] , \products[6][2] , \products[6][1] , 
        \products[6][0] }) );
  bit_brick_184 \genblk1[7].BB  ( .x(input_forward[15:14]), .y(weight[15:14]), 
        .sx(input_sign[1]), .sy(weight_sign[3]), .product({\products[7][5] , 
        \products[7][4] , \products[7][3] , \products[7][2] , \products[7][1] , 
        \products[7][0] }) );
  bit_brick_183 \genblk1[8].BB  ( .x(input_forward[17:16]), .y(weight[17:16]), 
        .sx(input_sign[2]), .sy(weight_sign[0]), .product({\products[8][5] , 
        \products[8][4] , \products[8][3] , \products[8][2] , \products[8][1] , 
        \products[8][0] }) );
  bit_brick_182 \genblk1[9].BB  ( .x(input_forward[19:18]), .y(weight[19:18]), 
        .sx(input_sign[2]), .sy(weight_sign[1]), .product({\products[9][5] , 
        \products[9][4] , \products[9][3] , \products[9][2] , \products[9][1] , 
        \products[9][0] }) );
  bit_brick_181 \genblk1[10].BB  ( .x(input_forward[21:20]), .y(weight[21:20]), 
        .sx(input_sign[2]), .sy(weight_sign[2]), .product({\products[10][5] , 
        \products[10][4] , \products[10][3] , \products[10][2] , 
        \products[10][1] , \products[10][0] }) );
  bit_brick_180 \genblk1[11].BB  ( .x(input_forward[23:22]), .y(weight[23:22]), 
        .sx(input_sign[2]), .sy(weight_sign[3]), .product({\products[11][5] , 
        \products[11][4] , \products[11][3] , \products[11][2] , 
        \products[11][1] , \products[11][0] }) );
  bit_brick_179 \genblk1[12].BB  ( .x(input_forward[25:24]), .y(weight[25:24]), 
        .sx(input_sign[3]), .sy(weight_sign[0]), .product({\products[12][5] , 
        \products[12][4] , \products[12][3] , \products[12][2] , 
        \products[12][1] , \products[12][0] }) );
  bit_brick_178 \genblk1[13].BB  ( .x(input_forward[27:26]), .y(weight[27:26]), 
        .sx(input_sign[3]), .sy(weight_sign[1]), .product({\products[13][5] , 
        \products[13][4] , \products[13][3] , \products[13][2] , 
        \products[13][1] , \products[13][0] }) );
  bit_brick_177 \genblk1[14].BB  ( .x(input_forward[29:28]), .y(weight[29:28]), 
        .sx(input_sign[3]), .sy(weight_sign[2]), .product({\products[14][5] , 
        \products[14][4] , \products[14][3] , \products[14][2] , 
        \products[14][1] , \products[14][0] }) );
  bit_brick_176 \genblk1[15].BB  ( .x(input_forward[31:30]), .y(weight[31:30]), 
        .sx(input_sign[3]), .sy(weight_sign[3]), .product({\products[15][5] , 
        \products[15][4] , \products[15][3] , \products[15][2] , 
        \products[15][1] , \products[15][0] }) );
  shift_add_11 shift_add ( .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .products({\products[15][5] , \products[15][4] , 
        \products[15][3] , \products[15][2] , \products[15][1] , 
        \products[15][0] , \products[14][5] , \products[14][4] , 
        \products[14][3] , \products[14][2] , \products[14][1] , 
        \products[14][0] , \products[13][5] , \products[13][4] , 
        \products[13][3] , \products[13][2] , \products[13][1] , 
        \products[13][0] , \products[12][5] , \products[12][4] , 
        \products[12][3] , \products[12][2] , \products[12][1] , 
        \products[12][0] , \products[11][5] , \products[11][4] , 
        \products[11][3] , \products[11][2] , \products[11][1] , 
        \products[11][0] , \products[10][5] , \products[10][4] , 
        \products[10][3] , \products[10][2] , \products[10][1] , 
        \products[10][0] , \products[9][5] , \products[9][4] , 
        \products[9][3] , \products[9][2] , \products[9][1] , \products[9][0] , 
        \products[8][5] , \products[8][4] , \products[8][3] , \products[8][2] , 
        \products[8][1] , \products[8][0] , \products[7][5] , \products[7][4] , 
        \products[7][3] , \products[7][2] , \products[7][1] , \products[7][0] , 
        \products[6][5] , \products[6][4] , \products[6][3] , \products[6][2] , 
        \products[6][1] , \products[6][0] , \products[5][5] , \products[5][4] , 
        \products[5][3] , \products[5][2] , \products[5][1] , \products[5][0] , 
        \products[4][5] , \products[4][4] , \products[4][3] , \products[4][2] , 
        \products[4][1] , \products[4][0] , \products[3][5] , \products[3][4] , 
        \products[3][3] , \products[3][2] , \products[3][1] , \products[3][0] , 
        \products[2][5] , \products[2][4] , \products[2][3] , \products[2][2] , 
        \products[2][1] , \products[2][0] , \products[1][5] , \products[1][4] , 
        \products[1][3] , \products[1][2] , \products[1][1] , \products[1][0] , 
        \products[0][5] , \products[0][4] , \products[0][3] , \products[0][2] , 
        \products[0][1] , \products[0][0] }), .shift_add_out(shift_add_out) );
  fusion_unit_11_DW01_add_0_DW01_add_15 add_53 ( .A(shift_add_out), .B(psum_in), .CI(n2), .SUM(psum) );
  TIEL U1 ( .ZN(n2) );
endmodule


module WBUF_ARRAY_SIZE4_DATA_W32_10 ( clk, nRST, WBUF_wr_en, WBUF_data_in, 
        WBUF_data_out );
  input [31:0] WBUF_data_in;
  output [31:0] WBUF_data_out;
  input clk, nRST, WBUF_wr_en;
  wire   n1, n2, n3, n4, n5, n6;

  EDFCNQD1 \WBUF_data_out_reg[31]  ( .D(WBUF_data_in[31]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[31]) );
  EDFCNQD1 \WBUF_data_out_reg[30]  ( .D(WBUF_data_in[30]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[30]) );
  EDFCNQD1 \WBUF_data_out_reg[29]  ( .D(WBUF_data_in[29]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[29]) );
  EDFCNQD1 \WBUF_data_out_reg[28]  ( .D(WBUF_data_in[28]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[28]) );
  EDFCNQD1 \WBUF_data_out_reg[27]  ( .D(WBUF_data_in[27]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[27]) );
  EDFCNQD1 \WBUF_data_out_reg[26]  ( .D(WBUF_data_in[26]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[26]) );
  EDFCNQD1 \WBUF_data_out_reg[25]  ( .D(WBUF_data_in[25]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[25]) );
  EDFCNQD1 \WBUF_data_out_reg[24]  ( .D(WBUF_data_in[24]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[24]) );
  EDFCNQD1 \WBUF_data_out_reg[23]  ( .D(WBUF_data_in[23]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[23]) );
  EDFCNQD1 \WBUF_data_out_reg[22]  ( .D(WBUF_data_in[22]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[22]) );
  EDFCNQD1 \WBUF_data_out_reg[21]  ( .D(WBUF_data_in[21]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[21]) );
  EDFCNQD1 \WBUF_data_out_reg[20]  ( .D(WBUF_data_in[20]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[20]) );
  EDFCNQD1 \WBUF_data_out_reg[19]  ( .D(WBUF_data_in[19]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[19]) );
  EDFCNQD1 \WBUF_data_out_reg[18]  ( .D(WBUF_data_in[18]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[18]) );
  EDFCNQD1 \WBUF_data_out_reg[17]  ( .D(WBUF_data_in[17]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[17]) );
  EDFCNQD1 \WBUF_data_out_reg[16]  ( .D(WBUF_data_in[16]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[16]) );
  EDFCNQD1 \WBUF_data_out_reg[15]  ( .D(WBUF_data_in[15]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[15]) );
  EDFCNQD1 \WBUF_data_out_reg[14]  ( .D(WBUF_data_in[14]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[14]) );
  EDFCNQD1 \WBUF_data_out_reg[13]  ( .D(WBUF_data_in[13]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[13]) );
  EDFCNQD1 \WBUF_data_out_reg[12]  ( .D(WBUF_data_in[12]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[12]) );
  EDFCNQD1 \WBUF_data_out_reg[11]  ( .D(WBUF_data_in[11]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[11]) );
  EDFCNQD1 \WBUF_data_out_reg[10]  ( .D(WBUF_data_in[10]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[10]) );
  EDFCNQD1 \WBUF_data_out_reg[9]  ( .D(WBUF_data_in[9]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[9]) );
  EDFCNQD1 \WBUF_data_out_reg[8]  ( .D(WBUF_data_in[8]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[8]) );
  EDFCNQD1 \WBUF_data_out_reg[7]  ( .D(WBUF_data_in[7]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[7]) );
  EDFCNQD1 \WBUF_data_out_reg[6]  ( .D(WBUF_data_in[6]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[6]) );
  EDFCNQD1 \WBUF_data_out_reg[5]  ( .D(WBUF_data_in[5]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[5]) );
  EDFCNQD1 \WBUF_data_out_reg[4]  ( .D(WBUF_data_in[4]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[4]) );
  EDFCNQD1 \WBUF_data_out_reg[3]  ( .D(WBUF_data_in[3]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[3]) );
  EDFCNQD1 \WBUF_data_out_reg[2]  ( .D(WBUF_data_in[2]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[2]) );
  EDFCNQD1 \WBUF_data_out_reg[1]  ( .D(WBUF_data_in[1]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[1]) );
  EDFCNQD1 \WBUF_data_out_reg[0]  ( .D(WBUF_data_in[0]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[0]) );
  CKBD1 U2 ( .I(WBUF_wr_en), .Z(n5) );
  CKBD1 U3 ( .I(WBUF_wr_en), .Z(n4) );
  CKBD1 U4 ( .I(nRST), .Z(n1) );
  CKBD1 U5 ( .I(nRST), .Z(n2) );
  CKBD1 U6 ( .I(nRST), .Z(n3) );
  CKBD1 U7 ( .I(WBUF_wr_en), .Z(n6) );
endmodule


module w_mux_10 ( clk, nRST, input_bitwidth, rd_en, data_in, data_out );
  input [2:0] input_bitwidth;
  input [31:0] data_in;
  output [31:0] data_out;
  input clk, nRST, rd_en;
  wire   N40, N41, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129,
         n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140,
         n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151,
         n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162,
         n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173,
         n174, n175, n176, n177, n178;
  wire   [1:0] rd_ptr;
  wire   [31:0] next_data_out;

  EDFCNQD1 \rd_ptr_reg[0]  ( .D(N40), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[0]) );
  EDFCNQD1 \rd_ptr_reg[1]  ( .D(N41), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[1]) );
  DFCNQD1 \data_out_reg[31]  ( .D(next_data_out[31]), .CP(clk), .CDN(n1), .Q(
        data_out[31]) );
  DFCNQD1 \data_out_reg[30]  ( .D(next_data_out[30]), .CP(clk), .CDN(n3), .Q(
        data_out[30]) );
  DFCNQD1 \data_out_reg[29]  ( .D(next_data_out[29]), .CP(clk), .CDN(n3), .Q(
        data_out[29]) );
  DFCNQD1 \data_out_reg[28]  ( .D(next_data_out[28]), .CP(clk), .CDN(n3), .Q(
        data_out[28]) );
  DFCNQD1 \data_out_reg[27]  ( .D(next_data_out[27]), .CP(clk), .CDN(n3), .Q(
        data_out[27]) );
  DFCNQD1 \data_out_reg[26]  ( .D(next_data_out[26]), .CP(clk), .CDN(n3), .Q(
        data_out[26]) );
  DFCNQD1 \data_out_reg[25]  ( .D(next_data_out[25]), .CP(clk), .CDN(n2), .Q(
        data_out[25]) );
  DFCNQD1 \data_out_reg[24]  ( .D(next_data_out[24]), .CP(clk), .CDN(n2), .Q(
        data_out[24]) );
  DFCNQD1 \data_out_reg[23]  ( .D(next_data_out[23]), .CP(clk), .CDN(n3), .Q(
        data_out[23]) );
  DFCNQD1 \data_out_reg[22]  ( .D(next_data_out[22]), .CP(clk), .CDN(n2), .Q(
        data_out[22]) );
  DFCNQD1 \data_out_reg[21]  ( .D(next_data_out[21]), .CP(clk), .CDN(n2), .Q(
        data_out[21]) );
  DFCNQD1 \data_out_reg[20]  ( .D(next_data_out[20]), .CP(clk), .CDN(n2), .Q(
        data_out[20]) );
  DFCNQD1 \data_out_reg[19]  ( .D(next_data_out[19]), .CP(clk), .CDN(n2), .Q(
        data_out[19]) );
  DFCNQD1 \data_out_reg[18]  ( .D(next_data_out[18]), .CP(clk), .CDN(n2), .Q(
        data_out[18]) );
  DFCNQD1 \data_out_reg[17]  ( .D(next_data_out[17]), .CP(clk), .CDN(n2), .Q(
        data_out[17]) );
  DFCNQD1 \data_out_reg[16]  ( .D(next_data_out[16]), .CP(clk), .CDN(n2), .Q(
        data_out[16]) );
  DFCNQD1 \data_out_reg[15]  ( .D(next_data_out[15]), .CP(clk), .CDN(n2), .Q(
        data_out[15]) );
  DFCNQD1 \data_out_reg[14]  ( .D(next_data_out[14]), .CP(clk), .CDN(n2), .Q(
        data_out[14]) );
  DFCNQD1 \data_out_reg[13]  ( .D(next_data_out[13]), .CP(clk), .CDN(n2), .Q(
        data_out[13]) );
  DFCNQD1 \data_out_reg[12]  ( .D(next_data_out[12]), .CP(clk), .CDN(n1), .Q(
        data_out[12]) );
  DFCNQD1 \data_out_reg[11]  ( .D(next_data_out[11]), .CP(clk), .CDN(n1), .Q(
        data_out[11]) );
  DFCNQD1 \data_out_reg[10]  ( .D(next_data_out[10]), .CP(clk), .CDN(n1), .Q(
        data_out[10]) );
  DFCNQD1 \data_out_reg[9]  ( .D(next_data_out[9]), .CP(clk), .CDN(n1), .Q(
        data_out[9]) );
  DFCNQD1 \data_out_reg[8]  ( .D(next_data_out[8]), .CP(clk), .CDN(n1), .Q(
        data_out[8]) );
  DFCNQD1 \data_out_reg[7]  ( .D(next_data_out[7]), .CP(clk), .CDN(n1), .Q(
        data_out[7]) );
  DFCNQD1 \data_out_reg[6]  ( .D(next_data_out[6]), .CP(clk), .CDN(n1), .Q(
        data_out[6]) );
  DFCNQD1 \data_out_reg[5]  ( .D(next_data_out[5]), .CP(clk), .CDN(n1), .Q(
        data_out[5]) );
  DFCNQD1 \data_out_reg[4]  ( .D(next_data_out[4]), .CP(clk), .CDN(n1), .Q(
        data_out[4]) );
  DFCNQD1 \data_out_reg[3]  ( .D(next_data_out[3]), .CP(clk), .CDN(n1), .Q(
        data_out[3]) );
  DFCNQD1 \data_out_reg[2]  ( .D(next_data_out[2]), .CP(clk), .CDN(n1), .Q(
        data_out[2]) );
  DFCNQD1 \data_out_reg[1]  ( .D(next_data_out[1]), .CP(clk), .CDN(n1), .Q(
        data_out[1]) );
  DFCNQD1 \data_out_reg[0]  ( .D(next_data_out[0]), .CP(clk), .CDN(n2), .Q(
        data_out[0]) );
  OA21D1 U20 ( .A1(n161), .A2(n160), .B(n159), .Z(n170) );
  OA21D1 U23 ( .A1(n156), .A2(n160), .B(n155), .Z(n169) );
  OA21D1 U26 ( .A1(n154), .A2(n160), .B(n153), .Z(n167) );
  OA21D1 U29 ( .A1(n152), .A2(n160), .B(n151), .Z(n166) );
  OA21D1 U32 ( .A1(n150), .A2(n160), .B(n149), .Z(n177) );
  OA21D1 U35 ( .A1(n148), .A2(n160), .B(n147), .Z(n165) );
  OA21D1 U38 ( .A1(n146), .A2(n160), .B(n145), .Z(n164) );
  OA21D1 U41 ( .A1(n144), .A2(n160), .B(n149), .Z(n163) );
  OA21D1 U47 ( .A1(n139), .A2(n160), .B(n138), .Z(n162) );
  OA21D1 U50 ( .A1(n137), .A2(n160), .B(n159), .Z(n175) );
  OA21D1 U56 ( .A1(n134), .A2(n160), .B(n155), .Z(n174) );
  OA21D1 U62 ( .A1(n131), .A2(n160), .B(n153), .Z(n173) );
  OA21D1 U68 ( .A1(n128), .A2(n160), .B(n151), .Z(n172) );
  OA21D1 U74 ( .A1(n125), .A2(n160), .B(n147), .Z(n171) );
  OA21D1 U80 ( .A1(n122), .A2(n160), .B(n145), .Z(n168) );
  OA21D1 U86 ( .A1(n119), .A2(n160), .B(n138), .Z(n176) );
  AN2XD1 U90 ( .A1(rd_ptr[1]), .A2(rd_ptr[0]), .Z(n140) );
  AN4XD1 U91 ( .A1(input_bitwidth[2]), .A2(rd_en), .A3(n5), .A4(n7), .Z(n143)
         );
  MAOI22D1 U97 ( .A1(n115), .A2(n12), .B1(n115), .B2(n114), .ZN(n113) );
  NR2D1 U3 ( .A1(n13), .A2(rd_ptr[1]), .ZN(n158) );
  NR2D1 U4 ( .A1(rd_ptr[0]), .A2(rd_ptr[1]), .ZN(n157) );
  AOI21D1 U5 ( .A1(n12), .A2(n116), .B(n113), .ZN(N41) );
  OAI21D1 U6 ( .A1(n111), .A2(n10), .B(n177), .ZN(next_data_out[1]) );
  OAI21D1 U7 ( .A1(n37), .A2(n10), .B(n177), .ZN(next_data_out[9]) );
  OAI21D1 U8 ( .A1(n8), .A2(n112), .B(n176), .ZN(next_data_out[0]) );
  OAI21D1 U9 ( .A1(n9), .A2(n110), .B(n168), .ZN(next_data_out[2]) );
  OAI21D1 U10 ( .A1(n9), .A2(n109), .B(n171), .ZN(next_data_out[3]) );
  OAI21D1 U11 ( .A1(n9), .A2(n108), .B(n172), .ZN(next_data_out[4]) );
  OAI21D1 U12 ( .A1(n8), .A2(n36), .B(n168), .ZN(next_data_out[10]) );
  OAI21D1 U13 ( .A1(n8), .A2(n35), .B(n171), .ZN(next_data_out[11]) );
  OAI21D1 U14 ( .A1(n8), .A2(n34), .B(n172), .ZN(next_data_out[12]) );
  OAI21D1 U15 ( .A1(n9), .A2(n33), .B(n173), .ZN(next_data_out[13]) );
  OAI21D1 U16 ( .A1(n8), .A2(n32), .B(n174), .ZN(next_data_out[14]) );
  OAI21D1 U17 ( .A1(n8), .A2(n31), .B(n175), .ZN(next_data_out[15]) );
  OAI21D1 U18 ( .A1(n10), .A2(n107), .B(n173), .ZN(next_data_out[5]) );
  OAI21D1 U19 ( .A1(n10), .A2(n106), .B(n174), .ZN(next_data_out[6]) );
  OAI21D1 U21 ( .A1(n10), .A2(n105), .B(n175), .ZN(next_data_out[7]) );
  OAI21D1 U22 ( .A1(n10), .A2(n38), .B(n176), .ZN(next_data_out[8]) );
  CKBD1 U24 ( .I(n178), .Z(n8) );
  CKBD1 U25 ( .I(n178), .Z(n9) );
  CKBD1 U27 ( .I(n178), .Z(n10) );
  INVD1 U28 ( .I(n6), .ZN(n7) );
  INVD1 U30 ( .I(n4), .ZN(n5) );
  INVD1 U31 ( .I(n116), .ZN(n11) );
  INVD1 U33 ( .I(n157), .ZN(n14) );
  INVD1 U34 ( .I(n158), .ZN(n12) );
  ND2D1 U36 ( .A1(n114), .A2(rd_en), .ZN(n178) );
  NR3D0 U37 ( .A1(n4), .A2(input_bitwidth[2]), .A3(n7), .ZN(n115) );
  NR3D0 U39 ( .A1(n6), .A2(input_bitwidth[2]), .A3(n5), .ZN(n114) );
  ND2D1 U40 ( .A1(rd_en), .A2(n115), .ZN(n160) );
  ND2D1 U42 ( .A1(n143), .A2(n118), .ZN(n138) );
  OAI221D0 U43 ( .A1(n12), .A2(n38), .B1(n14), .B2(n112), .C(n117), .ZN(n118)
         );
  AOI22D1 U44 ( .A1(data_in[24]), .A2(n140), .B1(data_in[16]), .B2(n11), .ZN(
        n117) );
  ND2D1 U45 ( .A1(n143), .A2(n142), .ZN(n149) );
  OAI221D0 U46 ( .A1(n12), .A2(n37), .B1(n14), .B2(n111), .C(n141), .ZN(n142)
         );
  AOI22D1 U48 ( .A1(data_in[25]), .A2(n140), .B1(n11), .B2(data_in[17]), .ZN(
        n141) );
  ND2D1 U49 ( .A1(n143), .A2(n121), .ZN(n145) );
  OAI221D0 U51 ( .A1(n12), .A2(n36), .B1(n14), .B2(n110), .C(n120), .ZN(n121)
         );
  AOI22D1 U52 ( .A1(data_in[26]), .A2(n140), .B1(data_in[18]), .B2(n11), .ZN(
        n120) );
  ND2D1 U53 ( .A1(n143), .A2(n124), .ZN(n147) );
  OAI221D0 U54 ( .A1(n12), .A2(n35), .B1(n14), .B2(n109), .C(n123), .ZN(n124)
         );
  AOI22D1 U55 ( .A1(data_in[27]), .A2(n140), .B1(data_in[19]), .B2(n11), .ZN(
        n123) );
  ND2D1 U57 ( .A1(n143), .A2(n127), .ZN(n151) );
  OAI221D0 U58 ( .A1(n12), .A2(n34), .B1(n14), .B2(n108), .C(n126), .ZN(n127)
         );
  AOI22D1 U59 ( .A1(data_in[28]), .A2(n140), .B1(data_in[20]), .B2(n11), .ZN(
        n126) );
  ND2D1 U60 ( .A1(n143), .A2(n130), .ZN(n153) );
  OAI221D0 U61 ( .A1(n12), .A2(n33), .B1(n14), .B2(n107), .C(n129), .ZN(n130)
         );
  AOI22D1 U63 ( .A1(data_in[29]), .A2(n140), .B1(data_in[21]), .B2(n11), .ZN(
        n129) );
  ND2D1 U64 ( .A1(n143), .A2(n133), .ZN(n155) );
  OAI221D0 U65 ( .A1(n12), .A2(n32), .B1(n14), .B2(n106), .C(n132), .ZN(n133)
         );
  AOI22D1 U66 ( .A1(data_in[30]), .A2(n140), .B1(data_in[22]), .B2(n11), .ZN(
        n132) );
  ND2D1 U67 ( .A1(n143), .A2(n136), .ZN(n159) );
  OAI221D0 U69 ( .A1(n12), .A2(n31), .B1(n14), .B2(n105), .C(n135), .ZN(n136)
         );
  AOI22D1 U70 ( .A1(data_in[31]), .A2(n140), .B1(data_in[23]), .B2(n11), .ZN(
        n135) );
  AOI22D1 U71 ( .A1(data_in[16]), .A2(n158), .B1(data_in[0]), .B2(n157), .ZN(
        n119) );
  AOI22D1 U72 ( .A1(data_in[17]), .A2(n158), .B1(data_in[1]), .B2(n157), .ZN(
        n150) );
  AOI22D1 U73 ( .A1(data_in[18]), .A2(n158), .B1(data_in[2]), .B2(n157), .ZN(
        n122) );
  AOI22D1 U75 ( .A1(data_in[19]), .A2(n158), .B1(data_in[3]), .B2(n157), .ZN(
        n125) );
  AOI22D1 U76 ( .A1(data_in[20]), .A2(n158), .B1(data_in[4]), .B2(n157), .ZN(
        n128) );
  AOI22D1 U77 ( .A1(data_in[21]), .A2(n158), .B1(data_in[5]), .B2(n157), .ZN(
        n131) );
  AOI22D1 U78 ( .A1(data_in[22]), .A2(n158), .B1(data_in[6]), .B2(n157), .ZN(
        n134) );
  AOI22D1 U79 ( .A1(data_in[23]), .A2(n158), .B1(data_in[7]), .B2(n157), .ZN(
        n137) );
  AOI22D1 U81 ( .A1(data_in[24]), .A2(n158), .B1(data_in[8]), .B2(n157), .ZN(
        n139) );
  AOI22D1 U82 ( .A1(data_in[25]), .A2(n158), .B1(data_in[9]), .B2(n157), .ZN(
        n144) );
  AOI22D1 U83 ( .A1(data_in[26]), .A2(n158), .B1(data_in[10]), .B2(n157), .ZN(
        n146) );
  AOI22D1 U84 ( .A1(data_in[27]), .A2(n158), .B1(data_in[11]), .B2(n157), .ZN(
        n148) );
  AOI22D1 U85 ( .A1(data_in[28]), .A2(n158), .B1(data_in[12]), .B2(n157), .ZN(
        n152) );
  AOI22D1 U87 ( .A1(data_in[29]), .A2(n158), .B1(data_in[13]), .B2(n157), .ZN(
        n154) );
  AOI22D1 U88 ( .A1(data_in[30]), .A2(n158), .B1(data_in[14]), .B2(n157), .ZN(
        n156) );
  AOI22D1 U89 ( .A1(data_in[31]), .A2(n158), .B1(data_in[15]), .B2(n157), .ZN(
        n161) );
  NR2D1 U92 ( .A1(rd_ptr[0]), .A2(n114), .ZN(N40) );
  OAI21D1 U93 ( .A1(n29), .A2(n10), .B(n163), .ZN(next_data_out[17]) );
  INVD1 U94 ( .I(data_in[17]), .ZN(n29) );
  OAI21D1 U95 ( .A1(n8), .A2(n30), .B(n162), .ZN(next_data_out[16]) );
  INVD1 U96 ( .I(data_in[16]), .ZN(n30) );
  OAI21D1 U98 ( .A1(n8), .A2(n28), .B(n164), .ZN(next_data_out[18]) );
  INVD1 U99 ( .I(data_in[18]), .ZN(n28) );
  OAI21D1 U100 ( .A1(n8), .A2(n27), .B(n165), .ZN(next_data_out[19]) );
  INVD1 U101 ( .I(data_in[19]), .ZN(n27) );
  OAI21D1 U102 ( .A1(n8), .A2(n26), .B(n166), .ZN(next_data_out[20]) );
  INVD1 U103 ( .I(data_in[20]), .ZN(n26) );
  OAI21D1 U104 ( .A1(n8), .A2(n25), .B(n167), .ZN(next_data_out[21]) );
  INVD1 U105 ( .I(data_in[21]), .ZN(n25) );
  OAI21D1 U106 ( .A1(n8), .A2(n24), .B(n169), .ZN(next_data_out[22]) );
  INVD1 U107 ( .I(data_in[22]), .ZN(n24) );
  OAI21D1 U108 ( .A1(n9), .A2(n23), .B(n170), .ZN(next_data_out[23]) );
  INVD1 U109 ( .I(data_in[23]), .ZN(n23) );
  OAI21D1 U110 ( .A1(n9), .A2(n22), .B(n162), .ZN(next_data_out[24]) );
  INVD1 U111 ( .I(data_in[24]), .ZN(n22) );
  OAI21D1 U112 ( .A1(n9), .A2(n20), .B(n164), .ZN(next_data_out[26]) );
  INVD1 U113 ( .I(data_in[26]), .ZN(n20) );
  OAI21D1 U114 ( .A1(n9), .A2(n19), .B(n165), .ZN(next_data_out[27]) );
  INVD1 U115 ( .I(data_in[27]), .ZN(n19) );
  OAI21D1 U116 ( .A1(n9), .A2(n18), .B(n166), .ZN(next_data_out[28]) );
  INVD1 U117 ( .I(data_in[28]), .ZN(n18) );
  OAI21D1 U118 ( .A1(n9), .A2(n17), .B(n167), .ZN(next_data_out[29]) );
  INVD1 U119 ( .I(data_in[29]), .ZN(n17) );
  OAI21D1 U120 ( .A1(n9), .A2(n16), .B(n169), .ZN(next_data_out[30]) );
  INVD1 U121 ( .I(data_in[30]), .ZN(n16) );
  OAI21D1 U122 ( .A1(n9), .A2(n15), .B(n170), .ZN(next_data_out[31]) );
  INVD1 U123 ( .I(data_in[31]), .ZN(n15) );
  OAI21D1 U124 ( .A1(n21), .A2(n10), .B(n163), .ZN(next_data_out[25]) );
  INVD1 U125 ( .I(data_in[25]), .ZN(n21) );
  CKBD1 U126 ( .I(input_bitwidth[0]), .Z(n4) );
  CKBD1 U127 ( .I(input_bitwidth[1]), .Z(n6) );
  ND2D1 U128 ( .A1(rd_ptr[1]), .A2(n13), .ZN(n116) );
  INVD1 U129 ( .I(rd_ptr[0]), .ZN(n13) );
  INVD1 U130 ( .I(data_in[1]), .ZN(n111) );
  INVD1 U131 ( .I(data_in[9]), .ZN(n37) );
  INVD1 U132 ( .I(data_in[0]), .ZN(n112) );
  INVD1 U133 ( .I(data_in[2]), .ZN(n110) );
  INVD1 U134 ( .I(data_in[3]), .ZN(n109) );
  INVD1 U135 ( .I(data_in[4]), .ZN(n108) );
  INVD1 U136 ( .I(data_in[5]), .ZN(n107) );
  INVD1 U137 ( .I(data_in[6]), .ZN(n106) );
  INVD1 U138 ( .I(data_in[7]), .ZN(n105) );
  INVD1 U139 ( .I(data_in[8]), .ZN(n38) );
  INVD1 U140 ( .I(data_in[10]), .ZN(n36) );
  INVD1 U141 ( .I(data_in[11]), .ZN(n35) );
  INVD1 U142 ( .I(data_in[12]), .ZN(n34) );
  INVD1 U143 ( .I(data_in[13]), .ZN(n33) );
  INVD1 U144 ( .I(data_in[14]), .ZN(n32) );
  INVD1 U145 ( .I(data_in[15]), .ZN(n31) );
  CKBD1 U146 ( .I(nRST), .Z(n2) );
  CKBD1 U147 ( .I(nRST), .Z(n1) );
  CKBD1 U148 ( .I(nRST), .Z(n3) );
endmodule


module bit_brick_175 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_174 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_173 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_172 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_171 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_170 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_169 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_168 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_167 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_166 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_165 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_164 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_163 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_162 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_161 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_160 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module shift_add_10_DW01_add_14_DW01_add_79 ( A, B, CI, SUM, CO );
  input [28:0] A;
  input [28:0] B;
  output [28:0] SUM;
  input CI;
  output CO;
  wire   n1, \SUM[18] , n3, n4, n5, n6, n7;
  wire   [28:1] carry;
  assign SUM[27] = \SUM[18] ;
  assign SUM[28] = \SUM[18] ;
  assign SUM[26] = \SUM[18] ;
  assign SUM[25] = \SUM[18] ;
  assign SUM[24] = \SUM[18] ;
  assign SUM[23] = \SUM[18] ;
  assign SUM[22] = \SUM[18] ;
  assign SUM[21] = \SUM[18] ;
  assign SUM[20] = \SUM[18] ;
  assign SUM[19] = \SUM[18] ;
  assign SUM[18] = \SUM[18] ;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  AOI222XD4 U1 ( .A1(carry[15]), .A2(A[27]), .B1(carry[15]), .B2(B[15]), .C1(
        B[15]), .C2(A[27]), .ZN(n5) );
  XNR3D2 U2 ( .A1(B[27]), .A2(n7), .A3(n3), .ZN(\SUM[18] ) );
  AN2XD1 U3 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  OAI222D1 U4 ( .A1(n5), .A2(n7), .B1(n5), .B2(n6), .C1(n7), .C2(n6), .ZN(n4)
         );
  CKXOR2D0 U5 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  AO222D1 U6 ( .A1(n4), .A2(A[27]), .B1(n4), .B2(B[27]), .C1(A[27]), .C2(B[27]), .Z(n3) );
  CKND0 U7 ( .I(A[27]), .ZN(n7) );
  CKND0 U8 ( .I(B[16]), .ZN(n6) );
  XNR3D0 U9 ( .A1(B[27]), .A2(n7), .A3(n4), .ZN(SUM[17]) );
  XNR3D0 U10 ( .A1(n6), .A2(n5), .A3(n7), .ZN(SUM[16]) );
  XNR3D0 U11 ( .A1(carry[15]), .A2(B[15]), .A3(n7), .ZN(SUM[15]) );
endmodule


module shift_add_10_DW01_add_6_DW01_add_71 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_10_DW01_add_5_DW01_add_70 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_10_DW01_add_4_DW01_add_69 ( A, B, CI, SUM, CO );
  input [30:0] A;
  input [30:0] B;
  output [30:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [30:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  XOR3D1 U1_30 ( .A1(A[30]), .A2(B[30]), .A3(carry[30]), .Z(SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_10_DW01_add_3_DW01_add_68 ( A, B, CI, SUM, CO );
  input [29:0] A;
  input [29:0] B;
  output [29:0] SUM;
  input CI;
  output CO;
  wire   SUM_23, \SUM[26] , n2, n3, n4;
  wire   [29:1] carry;
  assign SUM[25] = \SUM[26] ;
  assign SUM[27] = \SUM[26] ;
  assign SUM[29] = \SUM[26] ;
  assign SUM[24] = \SUM[26] ;
  assign SUM[23] = \SUM[26] ;
  assign SUM[28] = \SUM[26] ;
  assign SUM[26] = \SUM[26] ;

  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n2), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  BUFFD2 U1 ( .I(SUM_23), .Z(\SUM[26] ) );
  XNR3D0 U2 ( .A1(B[22]), .A2(A[21]), .A3(n3), .ZN(SUM_23) );
  AN2XD1 U3 ( .A1(B[0]), .A2(A[0]), .Z(n2) );
  AOI222D1 U4 ( .A1(n4), .A2(A[21]), .B1(n4), .B2(B[22]), .C1(A[21]), .C2(
        B[22]), .ZN(n3) );
  CKXOR2D1 U5 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  XOR3D0 U6 ( .A1(carry[21]), .A2(B[21]), .A3(A[21]), .Z(SUM[21]) );
  AO222D0 U7 ( .A1(carry[21]), .A2(A[21]), .B1(B[21]), .B2(carry[21]), .C1(
        B[21]), .C2(A[21]), .Z(n4) );
  XOR3D0 U8 ( .A1(B[22]), .A2(A[21]), .A3(n4), .Z(SUM[22]) );
endmodule


module shift_add_10_DW01_add_2_DW01_add_67 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_10_DW01_add_1_DW01_add_66 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D1 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D1 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D1 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D1 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D1 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D1 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_10_DW01_add_0_DW01_add_65 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_10 ( input_bitwidth, weight_bitwidth, .products({
        \products[15][5] , \products[15][4] , \products[15][3] , 
        \products[15][2] , \products[15][1] , \products[15][0] , 
        \products[14][5] , \products[14][4] , \products[14][3] , 
        \products[14][2] , \products[14][1] , \products[14][0] , 
        \products[13][5] , \products[13][4] , \products[13][3] , 
        \products[13][2] , \products[13][1] , \products[13][0] , 
        \products[12][5] , \products[12][4] , \products[12][3] , 
        \products[12][2] , \products[12][1] , \products[12][0] , 
        \products[11][5] , \products[11][4] , \products[11][3] , 
        \products[11][2] , \products[11][1] , \products[11][0] , 
        \products[10][5] , \products[10][4] , \products[10][3] , 
        \products[10][2] , \products[10][1] , \products[10][0] , 
        \products[9][5] , \products[9][4] , \products[9][3] , \products[9][2] , 
        \products[9][1] , \products[9][0] , \products[8][5] , \products[8][4] , 
        \products[8][3] , \products[8][2] , \products[8][1] , \products[8][0] , 
        \products[7][5] , \products[7][4] , \products[7][3] , \products[7][2] , 
        \products[7][1] , \products[7][0] , \products[6][5] , \products[6][4] , 
        \products[6][3] , \products[6][2] , \products[6][1] , \products[6][0] , 
        \products[5][5] , \products[5][4] , \products[5][3] , \products[5][2] , 
        \products[5][1] , \products[5][0] , \products[4][5] , \products[4][4] , 
        \products[4][3] , \products[4][2] , \products[4][1] , \products[4][0] , 
        \products[3][5] , \products[3][4] , \products[3][3] , \products[3][2] , 
        \products[3][1] , \products[3][0] , \products[2][5] , \products[2][4] , 
        \products[2][3] , \products[2][2] , \products[2][1] , \products[2][0] , 
        \products[1][5] , \products[1][4] , \products[1][3] , \products[1][2] , 
        \products[1][1] , \products[1][0] , \products[0][5] , \products[0][4] , 
        \products[0][3] , \products[0][2] , \products[0][1] , \products[0][0] 
        }), shift_add_out );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  output [31:0] shift_add_out;
  input \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] ;
  wire   \shifted_products[15][16] , \shifted_products[15][15] ,
         \shifted_products[15][14] , \shifted_products[15][13] ,
         \shifted_products[15][12] , \shifted_products[15][11] ,
         \shifted_products[15][10] , \shifted_products[15][9] ,
         \shifted_products[15][8] , \shifted_products[15][7] ,
         \shifted_products[15][6] , \shifted_products[15][5] ,
         \shifted_products[15][4] , \shifted_products[15][3] ,
         \shifted_products[15][2] , \shifted_products[15][1] ,
         \shifted_products[15][0] , \shifted_products[14][14] ,
         \shifted_products[14][13] , \shifted_products[14][12] ,
         \shifted_products[14][11] , \shifted_products[14][10] ,
         \shifted_products[14][9] , \shifted_products[14][8] ,
         \shifted_products[14][7] , \shifted_products[14][6] ,
         \shifted_products[14][5] , \shifted_products[14][4] ,
         \shifted_products[14][3] , \shifted_products[14][2] ,
         \shifted_products[14][1] , \shifted_products[14][0] ,
         \shifted_products[13][12] , \shifted_products[13][11] ,
         \shifted_products[13][10] , \shifted_products[13][9] ,
         \shifted_products[13][8] , \shifted_products[13][7] ,
         \shifted_products[13][6] , \shifted_products[13][5] ,
         \shifted_products[13][4] , \shifted_products[13][3] ,
         \shifted_products[13][2] , \shifted_products[13][1] ,
         \shifted_products[13][0] , \shifted_products[12][10] ,
         \shifted_products[12][9] , \shifted_products[12][8] ,
         \shifted_products[12][7] , \shifted_products[12][6] ,
         \shifted_products[12][5] , \shifted_products[12][4] ,
         \shifted_products[12][3] , \shifted_products[12][2] ,
         \shifted_products[12][1] , \shifted_products[12][0] ,
         \shifted_products[11][13] , \shifted_products[11][12] ,
         \shifted_products[11][11] , \shifted_products[11][10] ,
         \shifted_products[11][9] , \shifted_products[11][8] ,
         \shifted_products[11][7] , \shifted_products[11][6] ,
         \shifted_products[11][5] , \shifted_products[11][4] ,
         \shifted_products[11][3] , \shifted_products[11][2] ,
         \shifted_products[11][1] , \shifted_products[11][0] ,
         \shifted_products[10][12] , \shifted_products[10][11] ,
         \shifted_products[10][10] , \shifted_products[10][9] ,
         \shifted_products[10][8] , \shifted_products[10][7] ,
         \shifted_products[10][6] , \shifted_products[10][5] ,
         \shifted_products[10][4] , \shifted_products[10][3] ,
         \shifted_products[10][2] , \shifted_products[10][1] ,
         \shifted_products[10][0] , \shifted_products[9][10] ,
         \shifted_products[9][9] , \shifted_products[9][8] ,
         \shifted_products[9][7] , \shifted_products[9][6] ,
         \shifted_products[9][5] , \shifted_products[9][4] ,
         \shifted_products[9][3] , \shifted_products[9][2] ,
         \shifted_products[9][1] , \shifted_products[9][0] ,
         \shifted_products[8][8] , \shifted_products[8][7] ,
         \shifted_products[8][6] , \shifted_products[8][5] ,
         \shifted_products[8][4] , \shifted_products[8][3] ,
         \shifted_products[8][2] , \shifted_products[8][1] ,
         \shifted_products[8][0] , \shifted_products[7][11] ,
         \shifted_products[7][10] , \shifted_products[7][9] ,
         \shifted_products[7][8] , \shifted_products[7][7] ,
         \shifted_products[7][6] , \shifted_products[7][5] ,
         \shifted_products[7][4] , \shifted_products[7][3] ,
         \shifted_products[7][2] , \shifted_products[7][1] ,
         \shifted_products[7][0] , \shifted_products[6][10] ,
         \shifted_products[6][9] , \shifted_products[6][8] ,
         \shifted_products[6][7] , \shifted_products[6][6] ,
         \shifted_products[6][5] , \shifted_products[6][4] ,
         \shifted_products[6][3] , \shifted_products[6][2] ,
         \shifted_products[6][1] , \shifted_products[6][0] ,
         \shifted_products[5][8] , \shifted_products[5][7] ,
         \shifted_products[5][6] , \shifted_products[5][5] ,
         \shifted_products[5][4] , \shifted_products[5][3] ,
         \shifted_products[5][2] , \shifted_products[5][1] ,
         \shifted_products[5][0] , \shifted_products[4][6] ,
         \shifted_products[4][5] , \shifted_products[4][4] ,
         \shifted_products[4][3] , \shifted_products[4][2] ,
         \shifted_products[4][1] , \shifted_products[4][0] ,
         \shifted_products[3][9] , \shifted_products[3][8] ,
         \shifted_products[3][7] , \shifted_products[3][6] ,
         \shifted_products[3][5] , \shifted_products[3][4] ,
         \shifted_products[3][3] , \shifted_products[3][2] ,
         \shifted_products[3][1] , \shifted_products[3][0] ,
         \shifted_products[2][8] , \shifted_products[2][7] ,
         \shifted_products[2][6] , \shifted_products[2][5] ,
         \shifted_products[2][4] , \shifted_products[2][3] ,
         \shifted_products[2][2] , \shifted_products[2][1] ,
         \shifted_products[2][0] , \shifted_products[1][6] ,
         \shifted_products[1][5] , \shifted_products[1][4] ,
         \shifted_products[1][3] , \shifted_products[1][2] ,
         \shifted_products[1][1] , \shifted_products[1][0] ,
         \shifted_products[0][9] , N99, N98, N87, N86, N85, N84, N83, N82, N81,
         N80, N79, N78, N77, N76, N61, N60, N59, N58, N57, N56, N55, N54, N446,
         N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435,
         N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424,
         N423, N422, N421, N420, N419, N418, N417, N416, N415, N414, N413,
         N412, N411, N410, N409, N408, N407, N406, N405, N404, N403, N402,
         N401, N400, N399, N398, N397, N396, N395, N394, N393, N392, N391,
         N390, N389, N388, N387, N386, N385, N384, N383, N382, N381, N380,
         N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369,
         N368, N367, N366, N365, N364, N363, N362, N361, N360, N359, N358,
         N357, N356, N355, N354, N353, N352, N351, N350, N349, N348, N347,
         N346, N345, N344, N343, N342, N341, N340, N339, N338, N337, N336,
         N335, N334, N333, N332, N331, N330, N329, N328, N327, N326, N325,
         N324, N323, N322, N321, N320, N319, N318, N317, N316, N315, N314,
         N313, N312, N311, N310, N309, N308, N307, N306, N305, N304, N303,
         N302, N301, N300, N299, N298, N297, N296, N295, N294, N293, N292,
         N291, N290, N289, N288, N287, N286, N285, N284, N283, N282, N281,
         N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270,
         N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259,
         N258, N257, N256, N255, N254, N253, N252, N251, N250, N249, N248,
         N247, N246, N245, N244, N243, N242, N241, N240, N239, N238, N237,
         N236, N235, N234, N233, N232, N231, N230, N229, N214, N213, N212,
         N211, N210, N209, N208, N207, N206, N205, N204, N203, N202, N201,
         N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, N179,
         N178, N177, N176, N175, N174, N159, N158, N157, N156, N155, N154,
         N153, N152, N151, N150, N149, N148, N136, N135, N134, N133, N132,
         N131, N130, N129, N128, N127, N126, N125, N124, N123, N108, N107,
         N106, N105, N104, N103, N102, N101, N100,
         \add_14_root_add_199_I16/carry[6] ,
         \add_14_root_add_199_I16/carry[5] ,
         \add_14_root_add_199_I16/carry[4] ,
         \add_14_root_add_199_I16/carry[3] ,
         \add_14_root_add_199_I16/carry[2] ,
         \add_14_root_add_199_I16/carry[1] ,
         \add_13_root_add_199_I16/carry[9] ,
         \add_13_root_add_199_I16/carry[8] ,
         \add_13_root_add_199_I16/carry[7] ,
         \add_13_root_add_199_I16/carry[6] ,
         \add_13_root_add_199_I16/carry[5] ,
         \add_13_root_add_199_I16/carry[4] ,
         \add_13_root_add_199_I16/carry[3] ,
         \add_13_root_add_199_I16/carry[2] ,
         \add_13_root_add_199_I16/carry[1] ,
         \add_12_root_add_199_I16/carry[7] ,
         \add_12_root_add_199_I16/carry[6] ,
         \add_12_root_add_199_I16/carry[5] ,
         \add_12_root_add_199_I16/carry[4] ,
         \add_12_root_add_199_I16/carry[3] ,
         \add_12_root_add_199_I16/carry[2] ,
         \add_12_root_add_199_I16/carry[1] ,
         \add_11_root_add_199_I16/carry[11] ,
         \add_11_root_add_199_I16/carry[10] ,
         \add_11_root_add_199_I16/carry[9] ,
         \add_11_root_add_199_I16/carry[8] ,
         \add_11_root_add_199_I16/carry[7] ,
         \add_11_root_add_199_I16/carry[6] ,
         \add_11_root_add_199_I16/carry[5] ,
         \add_11_root_add_199_I16/carry[4] ,
         \add_11_root_add_199_I16/carry[3] ,
         \add_11_root_add_199_I16/carry[2] ,
         \add_11_root_add_199_I16/carry[1] ,
         \add_10_root_add_199_I16/carry[9] ,
         \add_10_root_add_199_I16/carry[8] ,
         \add_10_root_add_199_I16/carry[7] ,
         \add_10_root_add_199_I16/carry[6] ,
         \add_10_root_add_199_I16/carry[5] ,
         \add_10_root_add_199_I16/carry[4] ,
         \add_10_root_add_199_I16/carry[3] ,
         \add_10_root_add_199_I16/carry[2] ,
         \add_10_root_add_199_I16/carry[1] ,
         \add_9_root_add_199_I16/carry[13] ,
         \add_9_root_add_199_I16/carry[12] ,
         \add_9_root_add_199_I16/carry[11] ,
         \add_9_root_add_199_I16/carry[10] , \add_9_root_add_199_I16/carry[9] ,
         \add_9_root_add_199_I16/carry[8] , \add_9_root_add_199_I16/carry[7] ,
         \add_9_root_add_199_I16/carry[6] , \add_9_root_add_199_I16/carry[5] ,
         \add_9_root_add_199_I16/carry[4] , \add_9_root_add_199_I16/carry[3] ,
         \add_9_root_add_199_I16/carry[2] , \add_9_root_add_199_I16/carry[1] ,
         \add_8_root_add_199_I16/carry[11] ,
         \add_8_root_add_199_I16/carry[10] , \add_8_root_add_199_I16/carry[9] ,
         \add_8_root_add_199_I16/carry[8] , \add_8_root_add_199_I16/carry[7] ,
         \add_8_root_add_199_I16/carry[6] , \add_8_root_add_199_I16/carry[5] ,
         \add_8_root_add_199_I16/carry[4] , \add_8_root_add_199_I16/carry[3] ,
         \add_8_root_add_199_I16/carry[2] , \add_8_root_add_199_I16/carry[1] ,
         n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72,
         n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86,
         n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100,
         n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, n111,
         n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122,
         n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133,
         n134, n135, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246,
         n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257,
         n258, n259, n260, n261, n262, n263, n264, n265, n266, n267, n268,
         n269, n270, n271, n272, n273, n274, n275, n276, n277, n278, n279,
         n280, n281, n282, n283, n284, n285, n286, n287, n288, n289, n290,
         n291, n292, n293, n294, n295, n296, n297, n298, n299, n300, n301,
         n302, n303, n304, n305, n306, n307, n308, n309, n310, n311, n312,
         n313, n314, n315, n316, n317, n318, n319, n320, n321, n322, n323,
         n324, n325, n326, n327;

  MAOI22D1 U26 ( .A1(\products[7][0] ), .A2(n315), .B1(n111), .B2(n318), .ZN(
        n316) );
  AN2XD1 U66 ( .A1(n295), .A2(n306), .Z(n294) );
  AN2XD1 U74 ( .A1(n321), .A2(n290), .Z(n291) );
  OA21D1 U130 ( .A1(n245), .A2(n62), .B(n281), .Z(n272) );
  AN2XD1 U134 ( .A1(n308), .A2(n298), .Z(n282) );
  AN2XD1 U161 ( .A1(n295), .A2(n325), .Z(n265) );
  AN2XD1 U239 ( .A1(n298), .A2(n318), .Z(n284) );
  shift_add_10_DW01_add_14_DW01_add_79 add_7_root_add_199_I16 ( .A({
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \shifted_products[14][14] , 
        \shifted_products[14][13] , \shifted_products[14][12] , 
        \shifted_products[14][11] , \shifted_products[14][10] , 
        \shifted_products[14][9] , \shifted_products[14][8] , 
        \shifted_products[14][7] , \shifted_products[14][6] , 
        \shifted_products[14][5] , \shifted_products[14][4] , 
        \shifted_products[14][3] , \shifted_products[14][2] , 
        \shifted_products[14][1] , \shifted_products[14][0] }), .B({
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \shifted_products[15][16] , \shifted_products[15][15] , 
        \shifted_products[15][14] , \shifted_products[15][13] , 
        \shifted_products[15][12] , \shifted_products[15][11] , 
        \shifted_products[15][10] , \shifted_products[15][9] , 
        \shifted_products[15][8] , \shifted_products[15][7] , 
        \shifted_products[15][6] , \shifted_products[15][5] , 
        \shifted_products[15][4] , \shifted_products[15][3] , 
        \shifted_products[15][2] , \shifted_products[15][1] , 
        \shifted_products[15][0] }), .CI(n247), .SUM({N257, N256, N255, N254, 
        N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, N243, N242, 
        N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, N231, N230, 
        N229}) );
  shift_add_10_DW01_add_6_DW01_add_71 add_4_root_add_0_root_add_199_I16 ( .A({
        n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, 
        n21, n21, n21, n21, N214, N213, N212, N211, N210, N209, N208, N207, 
        N206, N205, N204, N203, N202, N201}), .B({N257, N257, N257, N257, N256, 
        N255, N254, N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, 
        N243, N242, N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, 
        N231, N230, N229}), .CI(n247), .SUM({N382, N381, N380, N379, N378, 
        N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, N367, N366, 
        N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, N355, N354, 
        N353, N352, N351}) );
  shift_add_10_DW01_add_5_DW01_add_70 add_3_root_add_0_root_add_199_I16 ( .A({
        n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, 
        n22, n22, N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, 
        N179, N178, N177, N176, N175, N174}), .B({n2, n2, n2, n2, n2, n2, n2, 
        n2, n2, n2, n2, n2, n2, n2, n2, n2, n2, n2, n2, n1, N159, N158, N157, 
        N156, N155, N154, N153, N152, N151, N150, N149, N148}), .CI(n247), 
        .SUM({N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, N340, 
        N339, N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, N328, 
        N327, N326, N325, N324, N323, N322, N321, N320, N319}) );
  shift_add_10_DW01_add_4_DW01_add_69 add_5_root_add_199_I16 ( .A({n20, n20, 
        n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, 
        n20, n20, n20, n20, n20, N108, N107, N106, N105, N104, N103, N102, 
        N101, N100, N99}), .B({n23, n23, n23, n23, n23, n23, n23, n23, n23, 
        n23, n23, n23, n23, n23, n23, n23, n23, N136, N135, N134, N133, N132, 
        N131, N130, N129, N128, N127, N126, N125, N124, N123}), .CI(n247), 
        .SUM({N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}) );
  shift_add_10_DW01_add_3_DW01_add_68 add_6_root_add_199_I16 ( .A({n17, n17, 
        n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, 
        n17, n17, n17, n17, n17, n17, N61, N60, N59, N58, N57, N56, N55, N54}), 
        .B({N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, 
        N98, N98, N98, N98, N98, N87, N86, N85, N84, N83, N82, N81, N80, N79, 
        N78, N77, N76}), .CI(n247), .SUM({N287, N286, N285, N284, N283, N282, 
        N281, N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270, 
        N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259, N258}) );
  shift_add_10_DW01_add_2_DW01_add_67 add_2_root_add_0_root_add_199_I16 ( .A({
        N318, N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}), .B({N382, N381, N380, 
        N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, 
        N367, N366, N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, 
        N355, N354, N353, N352, N351}), .CI(n247), .SUM({N446, N445, N444, 
        N443, N442, N441, N440, N439, N438, N437, N436, N435, N434, N433, N432, 
        N431, N430, N429, N428, N427, N426, N425, N424, N423, N422, N421, N420, 
        N419, N418, N417, N416, N415}) );
  shift_add_10_DW01_add_1_DW01_add_66 add_1_root_add_0_root_add_199_I16 ( .A({
        N446, N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435, 
        N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424, N423, 
        N422, N421, N420, N419, N418, N417, N416, N415}), .B({N287, N287, N287, 
        N286, N285, N284, N283, N282, N281, N280, N279, N278, N277, N276, N275, 
        N274, N273, N272, N271, N270, N269, N268, N267, N266, N265, N264, N263, 
        N262, N261, N260, N259, N258}), .CI(n247), .SUM({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}) );
  shift_add_10_DW01_add_0_DW01_add_65 add_0_root_add_0_root_add_199_I16 ( .A({
        N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, N340, N339, 
        N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, N328, N327, 
        N326, N325, N324, N323, N322, N321, N320, N319}), .B({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}), .CI(n247), .SUM(shift_add_out) );
  FA1D1 U2 ( .A(\shifted_products[4][6] ), .B(\shifted_products[5][6] ), .CI(
        \add_12_root_add_199_I16/carry[6] ), .CO(
        \add_12_root_add_199_I16/carry[7] ), .S(N105) );
  FA1D1 U3 ( .A(\shifted_products[12][10] ), .B(\shifted_products[13][10] ), 
        .CI(\add_8_root_add_199_I16/carry[10] ), .CO(
        \add_8_root_add_199_I16/carry[11] ), .S(N211) );
  AOI222D2 U4 ( .A1(n59), .A2(\products[2][5] ), .B1(n59), .B2(
        \products[3][5] ), .C1(\products[2][5] ), .C2(\products[3][5] ), .ZN(
        n30) );
  INR3D1 U5 ( .A1(input_bitwidth[0]), .B1(input_bitwidth[1]), .B2(
        input_bitwidth[2]), .ZN(n252) );
  IAO22D1 U6 ( .B1(\products[15][2] ), .B2(n278), .A1(n63), .A2(n307), .ZN(
        n279) );
  CKND2D0 U7 ( .A1(n308), .A2(n307), .ZN(n310) );
  CKND2D0 U8 ( .A1(n307), .A2(n275), .ZN(n267) );
  CKND2D0 U9 ( .A1(n298), .A2(n307), .ZN(n293) );
  AOI222XD4 U10 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[0][9] ), .B1(\add_14_root_add_199_I16/carry[6] ), 
        .B2(\shifted_products[1][6] ), .C1(\shifted_products[1][6] ), .C2(
        \shifted_products[0][9] ), .ZN(n61) );
  FA1D2 U11 ( .A(\products[0][5] ), .B(\shifted_products[1][5] ), .CI(
        \add_14_root_add_199_I16/carry[5] ), .CO(
        \add_14_root_add_199_I16/carry[6] ), .S(N59) );
  CKBD1 U12 ( .I(n19), .Z(n1) );
  BUFFD2 U13 ( .I(n19), .Z(n2) );
  XOR3D1 U14 ( .A1(\products[9][5] ), .A2(n49), .A3(n47), .Z(n19) );
  INVD4 U15 ( .I(n29), .ZN(N98) );
  AOI222XD4 U16 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \products[6][5] ), .B1(\add_11_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[7][11] ), .C1(\shifted_products[7][11] ), .C2(
        \products[6][5] ), .ZN(n51) );
  FA1D2 U17 ( .A(\shifted_products[6][10] ), .B(\shifted_products[7][10] ), 
        .CI(\add_11_root_add_199_I16/carry[10] ), .CO(
        \add_11_root_add_199_I16/carry[11] ), .S(N133) );
  INVD1 U18 ( .I(\products[2][5] ), .ZN(n57) );
  ND2D2 U19 ( .A1(n301), .A2(n231), .ZN(n300) );
  ND2D1 U20 ( .A1(n306), .A2(n283), .ZN(n312) );
  INR3D0 U21 ( .A1(input_bitwidth[2]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[1]), .ZN(n249) );
  NR3D1 U22 ( .A1(n25), .A2(n26), .A3(n27), .ZN(n58) );
  OA21D1 U23 ( .A1(n289), .A2(n133), .B(n288), .Z(n31) );
  ND2D1 U24 ( .A1(n284), .A2(n242), .ZN(n323) );
  ND2D1 U25 ( .A1(n35), .A2(n308), .ZN(n322) );
  INVD1 U27 ( .I(n286), .ZN(n242) );
  NR2D1 U28 ( .A1(n314), .A2(n227), .ZN(\shifted_products[1][1] ) );
  NR3D1 U29 ( .A1(n11), .A2(n12), .A3(n13), .ZN(n55) );
  AN2XD1 U30 ( .A1(n54), .A2(\products[5][5] ), .Z(n12) );
  XNR3D2 U31 ( .A1(\products[7][5] ), .A2(n114), .A3(n24), .ZN(n23) );
  XNR3D2 U32 ( .A1(n223), .A2(n18), .A3(n60), .ZN(n17) );
  NR3D1 U33 ( .A1(n14), .A2(n15), .A3(n16), .ZN(n41) );
  OAI222D1 U34 ( .A1(n46), .A2(n47), .B1(n46), .B2(n50), .C1(n47), .C2(n50), 
        .ZN(n48) );
  ND2D1 U35 ( .A1(n249), .A2(n248), .ZN(n326) );
  AN2XD1 U36 ( .A1(n40), .A2(\products[13][5] ), .Z(n15) );
  OAI222D1 U37 ( .A1(n39), .A2(n80), .B1(n39), .B2(n42), .C1(n80), .C2(n42), 
        .ZN(n40) );
  NR2D2 U38 ( .A1(n314), .A2(n228), .ZN(\shifted_products[1][0] ) );
  INR2XD4 U39 ( .A1(n325), .B1(n244), .ZN(n314) );
  INR2D2 U40 ( .A1(n275), .B1(n244), .ZN(n306) );
  CKND3 U41 ( .I(n326), .ZN(n244) );
  CKAN2D0 U42 ( .A1(n313), .A2(n38), .Z(n3) );
  CKND2D1 U43 ( .A1(n253), .A2(n252), .ZN(n313) );
  OR2XD1 U44 ( .A1(n51), .A2(n114), .Z(n4) );
  OR2XD1 U45 ( .A1(n51), .A2(n32), .Z(n5) );
  OR2D1 U46 ( .A1(n114), .A2(n32), .Z(n6) );
  ND3D2 U47 ( .A1(n4), .A2(n5), .A3(n6), .ZN(n52) );
  NR2D1 U48 ( .A1(n322), .A2(n323), .ZN(n7) );
  OR2XD1 U49 ( .A1(n58), .A2(n57), .Z(n8) );
  OR2XD1 U50 ( .A1(n58), .A2(n31), .Z(n9) );
  OR2XD1 U51 ( .A1(n57), .A2(n31), .Z(n10) );
  ND3D2 U52 ( .A1(n8), .A2(n9), .A3(n10), .ZN(n59) );
  CKND2D2 U53 ( .A1(n250), .A2(n252), .ZN(n318) );
  AN2D1 U54 ( .A1(n54), .A2(\products[4][5] ), .Z(n11) );
  AN2XD1 U55 ( .A1(\products[4][5] ), .A2(\products[5][5] ), .Z(n13) );
  OAI222D1 U56 ( .A1(n53), .A2(n126), .B1(n53), .B2(n56), .C1(n126), .C2(n56), 
        .ZN(n54) );
  NR2D0 U57 ( .A1(n37), .A2(n79), .ZN(\shifted_products[13][0] ) );
  AN2D1 U58 ( .A1(n40), .A2(\products[12][5] ), .Z(n14) );
  AN2D1 U59 ( .A1(\products[12][5] ), .A2(\products[13][5] ), .Z(n16) );
  AN2D1 U60 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(\products[2][5] ), 
        .Z(n25) );
  AN2D2 U61 ( .A1(n295), .A2(n38), .Z(n292) );
  NR2D0 U62 ( .A1(n314), .A2(n217), .ZN(\shifted_products[3][0] ) );
  AOI222D0 U63 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \products[10][5] ), .B1(\add_9_root_add_199_I16/carry[13] ), .B2(
        \shifted_products[11][13] ), .C1(\shifted_products[11][13] ), .C2(
        \products[10][5] ), .ZN(n44) );
  CKAN2D0 U64 ( .A1(n301), .A2(n35), .Z(n321) );
  OAI22D0 U65 ( .A1(n3), .A2(n116), .B1(n234), .B2(n118), .ZN(
        \shifted_products[6][3] ) );
  OAI22D0 U67 ( .A1(n325), .A2(n99), .B1(n237), .B2(n101), .ZN(
        \shifted_products[9][3] ) );
  NR2D0 U68 ( .A1(n325), .A2(n90), .ZN(\shifted_products[11][1] ) );
  INR2D1 U69 ( .A1(n308), .B1(n244), .ZN(n301) );
  CKND2D1 U70 ( .A1(n253), .A2(n251), .ZN(n307) );
  OA222D1 U71 ( .A1(n61), .A2(n60), .B1(n61), .B2(n223), .C1(n60), .C2(n223), 
        .Z(n18) );
  CKND2 U72 ( .I(n271), .ZN(n231) );
  XNR3D1 U73 ( .A1(n31), .A2(n58), .A3(n57), .ZN(N86) );
  OAI22D0 U75 ( .A1(n314), .A2(n132), .B1(n287), .B2(n134), .ZN(
        \shifted_products[3][5] ) );
  OAI22D0 U76 ( .A1(n314), .A2(n134), .B1(n287), .B2(n216), .ZN(
        \shifted_products[3][3] ) );
  NR2D0 U77 ( .A1(n229), .A2(n219), .ZN(\shifted_products[2][3] ) );
  FA1D1 U78 ( .A(\shifted_products[2][7] ), .B(\shifted_products[3][7] ), .CI(
        \add_13_root_add_199_I16/carry[7] ), .CO(
        \add_13_root_add_199_I16/carry[8] ), .S(N83) );
  NR2D0 U79 ( .A1(n314), .A2(n216), .ZN(\shifted_products[3][1] ) );
  AOI222D1 U80 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(\products[4][5] ), .B1(\add_12_root_add_199_I16/carry[7] ), .B2(\shifted_products[5][7] ), .C1(
        \shifted_products[5][7] ), .C2(\products[4][5] ), .ZN(n53) );
  AOI222D1 U81 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(\products[8][5] ), .B1(\add_10_root_add_199_I16/carry[9] ), .B2(\shifted_products[9][9] ), .C1(
        \shifted_products[9][9] ), .C2(\products[8][5] ), .ZN(n46) );
  AOI222D1 U82 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \products[12][5] ), .B1(\add_8_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[13][11] ), .C1(\shifted_products[13][11] ), .C2(
        \products[12][5] ), .ZN(n39) );
  XOR3D2 U83 ( .A1(\products[5][5] ), .A2(n55), .A3(n126), .Z(n20) );
  XOR3D2 U84 ( .A1(\products[13][5] ), .A2(n41), .A3(n80), .Z(n21) );
  XOR3D1 U85 ( .A1(\products[11][5] ), .A2(n43), .A3(n28), .Z(n22) );
  OAI22D0 U86 ( .A1(n314), .A2(n223), .B1(n7), .B2(n224), .ZN(
        \shifted_products[1][6] ) );
  OAI22D0 U87 ( .A1(n241), .A2(n110), .B1(n305), .B2(n108), .ZN(
        \shifted_products[7][11] ) );
  NR2D0 U88 ( .A1(n319), .A2(n244), .ZN(n327) );
  CKAN2D0 U89 ( .A1(n284), .A2(n35), .Z(n289) );
  OAI21D0 U90 ( .A1(n64), .A2(n35), .B(n274), .ZN(\shifted_products[15][15] )
         );
  NR2D0 U91 ( .A1(n37), .A2(n67), .ZN(\shifted_products[15][0] ) );
  CKND2D0 U92 ( .A1(n301), .A2(n230), .ZN(n273) );
  CKND2D0 U93 ( .A1(n231), .A2(n284), .ZN(n319) );
  CKND1 U94 ( .I(\products[13][5] ), .ZN(n74) );
  NR2D0 U95 ( .A1(n113), .A2(n37), .ZN(\shifted_products[7][0] ) );
  CKND2D0 U96 ( .A1(\products[12][5] ), .A2(n319), .ZN(n261) );
  CKND2D0 U97 ( .A1(\products[8][5] ), .A2(n319), .ZN(n320) );
  CKND1 U98 ( .I(\products[7][5] ), .ZN(n108) );
  CKND2D0 U99 ( .A1(\products[3][5] ), .A2(n300), .ZN(n288) );
  NR2D0 U100 ( .A1(n271), .A2(n244), .ZN(n260) );
  CKND2D0 U101 ( .A1(\products[2][5] ), .A2(n300), .ZN(n285) );
  CKND2D0 U102 ( .A1(\products[10][5] ), .A2(n271), .ZN(n254) );
  CKND1 U103 ( .I(\products[6][5] ), .ZN(n114) );
  CKND1 U104 ( .I(\products[14][5] ), .ZN(n68) );
  CKAN2D0 U105 ( .A1(n301), .A2(n284), .Z(n255) );
  CKND2D0 U106 ( .A1(\products[15][5] ), .A2(n271), .ZN(n281) );
  CKND2D1 U107 ( .A1(n235), .A2(n301), .ZN(n302) );
  CKND1 U108 ( .I(\products[5][5] ), .ZN(n120) );
  CKAN2D0 U109 ( .A1(n295), .A2(n314), .Z(n296) );
  OAI22D0 U110 ( .A1(n292), .A2(n126), .B1(n291), .B2(n128), .ZN(
        \shifted_products[4][5] ) );
  OAI22D0 U111 ( .A1(n292), .A2(n80), .B1(n290), .B2(n82), .ZN(
        \shifted_products[12][5] ) );
  OAI22D0 U112 ( .A1(n37), .A2(n122), .B1(n294), .B2(n124), .ZN(
        \shifted_products[5][3] ) );
  OAI22D0 U113 ( .A1(n292), .A2(n128), .B1(n291), .B2(n130), .ZN(
        \shifted_products[4][3] ) );
  OAI22D0 U114 ( .A1(n37), .A2(n64), .B1(n236), .B2(n66), .ZN(
        \shifted_products[15][3] ) );
  OAI22D0 U115 ( .A1(n3), .A2(n70), .B1(n235), .B2(n72), .ZN(
        \shifted_products[14][3] ) );
  OAI22D0 U116 ( .A1(n325), .A2(n88), .B1(n242), .B2(n90), .ZN(
        \shifted_products[11][3] ) );
  NR2D0 U117 ( .A1(n231), .A2(n93), .ZN(\shifted_products[10][3] ) );
  NR2D0 U118 ( .A1(n230), .A2(n104), .ZN(\shifted_products[8][3] ) );
  OAI22D0 U119 ( .A1(n36), .A2(n76), .B1(n233), .B2(n78), .ZN(
        \shifted_products[13][3] ) );
  OAI22D0 U120 ( .A1(n292), .A2(n82), .B1(n290), .B2(n84), .ZN(
        \shifted_products[12][3] ) );
  OAI22D0 U121 ( .A1(n110), .A2(n36), .B1(n232), .B2(n112), .ZN(
        \shifted_products[7][3] ) );
  OAI21D0 U122 ( .A1(n66), .A2(n35), .B(n274), .ZN(\shifted_products[15][13] )
         );
  NR2D0 U123 ( .A1(n37), .A2(n124), .ZN(\shifted_products[5][1] ) );
  NR2D0 U124 ( .A1(n292), .A2(n84), .ZN(\shifted_products[12][1] ) );
  NR2D0 U125 ( .A1(n37), .A2(n78), .ZN(\shifted_products[13][1] ) );
  NR2D0 U126 ( .A1(n112), .A2(n37), .ZN(\shifted_products[7][1] ) );
  NR2D0 U127 ( .A1(n231), .A2(n95), .ZN(\shifted_products[10][1] ) );
  NR2D0 U128 ( .A1(n37), .A2(n66), .ZN(\shifted_products[15][1] ) );
  CKND1 U129 ( .I(\products[4][5] ), .ZN(n126) );
  CKAN2D0 U131 ( .A1(\products[0][5] ), .A2(n37), .Z(\shifted_products[0][9] )
         );
  AO222D1 U132 ( .A1(n52), .A2(\products[6][5] ), .B1(n52), .B2(
        \products[7][5] ), .C1(\products[6][5] ), .C2(\products[7][5] ), .Z(
        n24) );
  OAI21D0 U133 ( .A1(n63), .A2(n35), .B(n274), .ZN(\shifted_products[15][16] )
         );
  AN2XD1 U135 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .Z(n26) );
  OAI21D0 U136 ( .A1(n289), .A2(n134), .B(n288), .ZN(\shifted_products[3][9] )
         );
  AN2D4 U137 ( .A1(n275), .A2(n38), .Z(n325) );
  NR2D0 U138 ( .A1(n229), .A2(n222), .ZN(\shifted_products[2][0] ) );
  FA1D1 U139 ( .A(\shifted_products[2][6] ), .B(\shifted_products[3][6] ), 
        .CI(\add_13_root_add_199_I16/carry[6] ), .CO(
        \add_13_root_add_199_I16/carry[7] ), .S(N82) );
  OAI21D0 U140 ( .A1(n289), .A2(n220), .B(n285), .ZN(\shifted_products[2][6] )
         );
  OAI22D0 U141 ( .A1(n314), .A2(n224), .B1(n7), .B2(n226), .ZN(
        \shifted_products[1][4] ) );
  OAI22D0 U142 ( .A1(n314), .A2(n225), .B1(n7), .B2(n227), .ZN(
        \shifted_products[1][3] ) );
  OAI22D0 U143 ( .A1(n314), .A2(n133), .B1(n287), .B2(n135), .ZN(
        \shifted_products[3][4] ) );
  OAI22D0 U144 ( .A1(n229), .A2(n218), .B1(n289), .B2(n222), .ZN(
        \shifted_products[2][4] ) );
  OAI22D0 U145 ( .A1(n314), .A2(n135), .B1(n287), .B2(n217), .ZN(
        \shifted_products[3][2] ) );
  NR2D0 U146 ( .A1(n229), .A2(n220), .ZN(\shifted_products[2][2] ) );
  INR2XD0 U147 ( .A1(n275), .B1(n293), .ZN(n290) );
  CKAN2D0 U148 ( .A1(n313), .A2(n38), .Z(n304) );
  INR2D0 U149 ( .A1(n308), .B1(n286), .ZN(n287) );
  CKND2D0 U150 ( .A1(n326), .A2(n318), .ZN(n278) );
  CKND2D0 U151 ( .A1(n35), .A2(n298), .ZN(n315) );
  CKAN2D0 U152 ( .A1(n318), .A2(n313), .Z(n295) );
  CKND2D0 U153 ( .A1(n301), .A2(n298), .ZN(n268) );
  AOI22D0 U154 ( .A1(\products[14][0] ), .A2(n268), .B1(\products[14][4] ), 
        .B2(n267), .ZN(n269) );
  NR2D0 U155 ( .A1(n292), .A2(n131), .ZN(\shifted_products[4][0] ) );
  NR2D0 U156 ( .A1(n292), .A2(n85), .ZN(\shifted_products[12][0] ) );
  AOI22D0 U157 ( .A1(\products[6][4] ), .A2(n302), .B1(\products[6][0] ), .B2(
        n315), .ZN(n303) );
  NR2D0 U158 ( .A1(n231), .A2(n96), .ZN(\shifted_products[10][0] ) );
  NR2D0 U159 ( .A1(n230), .A2(n107), .ZN(\shifted_products[8][0] ) );
  CKND1 U160 ( .I(\products[15][4] ), .ZN(n63) );
  CKND1 U162 ( .I(\products[14][3] ), .ZN(n70) );
  OAI21D0 U163 ( .A1(n289), .A2(n135), .B(n288), .ZN(\shifted_products[3][8] )
         );
  OAI21D0 U164 ( .A1(n289), .A2(n218), .B(n285), .ZN(\shifted_products[2][8] )
         );
  CKND1 U165 ( .I(\products[13][3] ), .ZN(n76) );
  CKND1 U166 ( .I(\products[7][3] ), .ZN(n110) );
  CKND2D0 U167 ( .A1(n306), .A2(n313), .ZN(n309) );
  CKND2D0 U168 ( .A1(n295), .A2(n275), .ZN(n262) );
  CKND1 U169 ( .I(\products[6][3] ), .ZN(n116) );
  CKND1 U170 ( .I(\products[14][4] ), .ZN(n69) );
  CKND1 U171 ( .I(\products[7][4] ), .ZN(n109) );
  CKND1 U172 ( .I(\products[12][3] ), .ZN(n82) );
  CKND1 U173 ( .I(\products[13][4] ), .ZN(n75) );
  CKND1 U174 ( .I(\products[5][3] ), .ZN(n122) );
  OAI21D0 U175 ( .A1(n321), .A2(n104), .B(n320), .ZN(\shifted_products[8][7] )
         );
  CKND1 U176 ( .I(\products[6][4] ), .ZN(n115) );
  OAI21D0 U177 ( .A1(n321), .A2(n82), .B(n261), .ZN(\shifted_products[12][9] )
         );
  OAI22D0 U178 ( .A1(n230), .A2(n103), .B1(n321), .B2(n107), .ZN(
        \shifted_products[8][4] ) );
  OAI21D0 U179 ( .A1(n321), .A2(n106), .B(n320), .ZN(\shifted_products[8][5] )
         );
  OAI21D0 U180 ( .A1(n321), .A2(n84), .B(n261), .ZN(\shifted_products[12][7] )
         );
  OAI22D0 U181 ( .A1(n231), .A2(n92), .B1(n255), .B2(n96), .ZN(
        \shifted_products[10][4] ) );
  OAI22D0 U182 ( .A1(n292), .A2(n127), .B1(n291), .B2(n129), .ZN(
        \shifted_products[4][4] ) );
  OAI22D0 U183 ( .A1(n292), .A2(n81), .B1(n290), .B2(n83), .ZN(
        \shifted_products[12][4] ) );
  OAI21D0 U184 ( .A1(n321), .A2(n105), .B(n320), .ZN(\shifted_products[8][6] )
         );
  AOI22D0 U185 ( .A1(\products[9][4] ), .A2(n323), .B1(\products[9][0] ), .B2(
        n322), .ZN(n324) );
  AOI22D0 U186 ( .A1(\products[15][4] ), .A2(n276), .B1(\products[15][0] ), 
        .B2(n278), .ZN(n277) );
  AOI22D0 U187 ( .A1(\products[11][0] ), .A2(n258), .B1(\products[11][4] ), 
        .B2(n286), .ZN(n259) );
  OAI22D0 U188 ( .A1(n240), .A2(n70), .B1(n270), .B2(n68), .ZN(
        \shifted_products[14][9] ) );
  OAI22D0 U189 ( .A1(n37), .A2(n123), .B1(n294), .B2(n125), .ZN(
        \shifted_products[5][2] ) );
  OAI22D0 U190 ( .A1(n292), .A2(n129), .B1(n291), .B2(n131), .ZN(
        \shifted_products[4][2] ) );
  OAI22D0 U191 ( .A1(n37), .A2(n77), .B1(n233), .B2(n79), .ZN(
        \shifted_products[13][2] ) );
  OAI22D0 U192 ( .A1(n292), .A2(n83), .B1(n290), .B2(n85), .ZN(
        \shifted_products[12][2] ) );
  OAI22D0 U193 ( .A1(n37), .A2(n65), .B1(n236), .B2(n67), .ZN(
        \shifted_products[15][2] ) );
  OAI22D0 U194 ( .A1(n3), .A2(n71), .B1(n235), .B2(n73), .ZN(
        \shifted_products[14][2] ) );
  OAI22D0 U195 ( .A1(n325), .A2(n89), .B1(n242), .B2(n91), .ZN(
        \shifted_products[11][2] ) );
  NR2D0 U196 ( .A1(n231), .A2(n94), .ZN(\shifted_products[10][2] ) );
  OAI22D0 U197 ( .A1(n325), .A2(n100), .B1(n237), .B2(n102), .ZN(
        \shifted_products[9][2] ) );
  NR2D0 U198 ( .A1(n230), .A2(n105), .ZN(\shifted_products[8][2] ) );
  OAI22D0 U199 ( .A1(n3), .A2(n117), .B1(n234), .B2(n119), .ZN(
        \shifted_products[6][2] ) );
  CKAN2D0 U200 ( .A1(n314), .A2(n313), .Z(n317) );
  CKND1 U201 ( .I(\products[5][4] ), .ZN(n121) );
  CKND1 U202 ( .I(\products[4][4] ), .ZN(n127) );
  CKND1 U203 ( .I(\products[4][3] ), .ZN(n128) );
  CKAN2D0 U204 ( .A1(n325), .A2(n313), .Z(n280) );
  CKND2D0 U205 ( .A1(n284), .A2(n308), .ZN(n258) );
  OAI22D0 U206 ( .A1(n314), .A2(n226), .B1(n7), .B2(n228), .ZN(
        \shifted_products[1][2] ) );
  CKND2D0 U207 ( .A1(n251), .A2(n248), .ZN(n275) );
  CKND2D0 U208 ( .A1(n253), .A2(n249), .ZN(n308) );
  CKND2D0 U209 ( .A1(n251), .A2(n250), .ZN(n298) );
  CKND2D0 U210 ( .A1(n250), .A2(n249), .ZN(n299) );
  CKND1 U211 ( .I(\products[6][2] ), .ZN(n117) );
  CKND1 U212 ( .I(\products[12][2] ), .ZN(n83) );
  AOI22D0 U213 ( .A1(\products[7][2] ), .A2(n310), .B1(\products[7][4] ), .B2(
        n309), .ZN(n311) );
  AOI22D0 U214 ( .A1(\products[13][4] ), .A2(n262), .B1(\products[13][2] ), 
        .B2(n293), .ZN(n263) );
  OAI21D0 U215 ( .A1(n321), .A2(n83), .B(n261), .ZN(\shifted_products[12][8] )
         );
  AOI22D0 U216 ( .A1(\products[13][4] ), .A2(n293), .B1(\products[13][2] ), 
        .B2(n244), .ZN(n264) );
  CKND1 U217 ( .I(\products[5][2] ), .ZN(n123) );
  CKND1 U218 ( .I(\products[4][2] ), .ZN(n129) );
  AN2D1 U219 ( .A1(\shifted_products[3][9] ), .A2(\products[2][5] ), .Z(n27)
         );
  FA1D1 U220 ( .A(\shifted_products[2][8] ), .B(\shifted_products[3][8] ), 
        .CI(\add_13_root_add_199_I16/carry[8] ), .CO(
        \add_13_root_add_199_I16/carry[9] ), .S(N84) );
  INVD1 U221 ( .I(n319), .ZN(n230) );
  INVD1 U222 ( .I(n302), .ZN(n234) );
  INVD1 U223 ( .I(n300), .ZN(n229) );
  CKBD1 U224 ( .I(n312), .Z(n37) );
  CKBD1 U225 ( .I(n312), .Z(n36) );
  CKBD1 U226 ( .I(n312), .Z(n38) );
  INVD1 U227 ( .I(n323), .ZN(n237) );
  ND2D1 U228 ( .A1(n325), .A2(n242), .ZN(n271) );
  NR2D1 U229 ( .A1(n322), .A2(n323), .ZN(n283) );
  OAI22D1 U230 ( .A1(n297), .A2(n122), .B1(n296), .B2(n120), .ZN(
        \shifted_products[5][7] ) );
  INVD1 U231 ( .I(\products[15][5] ), .ZN(n62) );
  INVD1 U232 ( .I(n262), .ZN(n233) );
  NR2D1 U233 ( .A1(n3), .A2(n73), .ZN(\shifted_products[14][0] ) );
  INVD1 U234 ( .I(n309), .ZN(n232) );
  AOI222D0 U235 ( .A1(n45), .A2(\products[10][5] ), .B1(n45), .B2(
        \products[11][5] ), .C1(\products[10][5] ), .C2(\products[11][5] ), 
        .ZN(n28) );
  FA1D0 U236 ( .A(\shifted_products[10][1] ), .B(\shifted_products[11][1] ), 
        .CI(\add_9_root_add_199_I16/carry[1] ), .CO(
        \add_9_root_add_199_I16/carry[2] ), .S(N175) );
  FA1D0 U237 ( .A(\shifted_products[12][5] ), .B(\shifted_products[13][5] ), 
        .CI(\add_8_root_add_199_I16/carry[5] ), .CO(
        \add_8_root_add_199_I16/carry[6] ), .S(N206) );
  OAI222D0 U238 ( .A1(n239), .A2(n78), .B1(n233), .B2(n76), .C1(n36), .C2(n74), 
        .ZN(\shifted_products[13][5] ) );
  FA1D0 U240 ( .A(\shifted_products[4][5] ), .B(\shifted_products[5][5] ), 
        .CI(\add_12_root_add_199_I16/carry[5] ), .CO(
        \add_12_root_add_199_I16/carry[6] ), .S(N104) );
  OAI222D0 U241 ( .A1(n294), .A2(n122), .B1(n297), .B2(n124), .C1(n36), .C2(
        n120), .ZN(\shifted_products[5][5] ) );
  FA1D0 U242 ( .A(\shifted_products[4][3] ), .B(\shifted_products[5][3] ), 
        .CI(\add_12_root_add_199_I16/carry[3] ), .CO(
        \add_12_root_add_199_I16/carry[4] ), .S(N102) );
  FA1D0 U243 ( .A(\shifted_products[2][3] ), .B(\shifted_products[3][3] ), 
        .CI(\add_13_root_add_199_I16/carry[3] ), .CO(
        \add_13_root_add_199_I16/carry[4] ), .S(N79) );
  FA1D0 U244 ( .A(\shifted_products[10][3] ), .B(\shifted_products[11][3] ), 
        .CI(\add_9_root_add_199_I16/carry[3] ), .CO(
        \add_9_root_add_199_I16/carry[4] ), .S(N177) );
  FA1D0 U245 ( .A(\shifted_products[2][5] ), .B(\shifted_products[3][5] ), 
        .CI(\add_13_root_add_199_I16/carry[5] ), .CO(
        \add_13_root_add_199_I16/carry[6] ), .S(N81) );
  OAI21D1 U246 ( .A1(n289), .A2(n221), .B(n285), .ZN(\shifted_products[2][5] )
         );
  FA1D0 U247 ( .A(\shifted_products[10][9] ), .B(\shifted_products[11][9] ), 
        .CI(\add_9_root_add_199_I16/carry[9] ), .CO(
        \add_9_root_add_199_I16/carry[10] ), .S(N183) );
  OAI22D1 U248 ( .A1(n238), .A2(n88), .B1(n260), .B2(n86), .ZN(
        \shifted_products[11][9] ) );
  OAI21D1 U249 ( .A1(n34), .A2(n95), .B(n256), .ZN(\shifted_products[10][9] )
         );
  FA1D0 U250 ( .A(\shifted_products[6][3] ), .B(\shifted_products[7][3] ), 
        .CI(\add_11_root_add_199_I16/carry[3] ), .CO(
        \add_11_root_add_199_I16/carry[4] ), .S(N126) );
  FA1D0 U251 ( .A(\shifted_products[12][3] ), .B(\shifted_products[13][3] ), 
        .CI(\add_8_root_add_199_I16/carry[3] ), .CO(
        \add_8_root_add_199_I16/carry[4] ), .S(N204) );
  FA1D0 U252 ( .A(\shifted_products[8][3] ), .B(\shifted_products[9][3] ), 
        .CI(\add_10_root_add_199_I16/carry[3] ), .CO(
        \add_10_root_add_199_I16/carry[4] ), .S(N151) );
  OAI21D1 U253 ( .A1(n282), .A2(n64), .B(n272), .ZN(\shifted_products[15][11] ) );
  OAI21D1 U254 ( .A1(n34), .A2(n72), .B(n266), .ZN(\shifted_products[14][11] )
         );
  OAI21D1 U255 ( .A1(n34), .A2(n70), .B(n266), .ZN(\shifted_products[14][13] )
         );
  OAI21D1 U256 ( .A1(n289), .A2(n216), .B(n288), .ZN(\shifted_products[3][7] )
         );
  OAI21D1 U257 ( .A1(n289), .A2(n219), .B(n285), .ZN(\shifted_products[2][7] )
         );
  FA1D0 U258 ( .A(\shifted_products[10][11] ), .B(\shifted_products[11][11] ), 
        .CI(\add_9_root_add_199_I16/carry[11] ), .CO(
        \add_9_root_add_199_I16/carry[12] ), .S(N185) );
  OAI21D1 U259 ( .A1(n34), .A2(n90), .B(n257), .ZN(\shifted_products[11][11] )
         );
  OAI21D1 U260 ( .A1(n34), .A2(n93), .B(n256), .ZN(\shifted_products[10][11] )
         );
  FA1D0 U261 ( .A(\shifted_products[2][1] ), .B(\shifted_products[3][1] ), 
        .CI(\add_13_root_add_199_I16/carry[1] ), .CO(
        \add_13_root_add_199_I16/carry[2] ), .S(N77) );
  NR2D1 U262 ( .A1(n229), .A2(n221), .ZN(\shifted_products[2][1] ) );
  FA1D0 U263 ( .A(\shifted_products[6][1] ), .B(\shifted_products[7][1] ), 
        .CI(\add_11_root_add_199_I16/carry[1] ), .CO(
        \add_11_root_add_199_I16/carry[2] ), .S(N124) );
  NR2D1 U264 ( .A1(n304), .A2(n118), .ZN(\shifted_products[6][1] ) );
  FA1D0 U265 ( .A(\shifted_products[8][1] ), .B(\shifted_products[9][1] ), 
        .CI(\add_10_root_add_199_I16/carry[1] ), .CO(
        \add_10_root_add_199_I16/carry[2] ), .S(N149) );
  NR2D1 U266 ( .A1(n325), .A2(n101), .ZN(\shifted_products[9][1] ) );
  NR2D1 U267 ( .A1(n230), .A2(n106), .ZN(\shifted_products[8][1] ) );
  NR2D1 U268 ( .A1(n304), .A2(n72), .ZN(\shifted_products[14][1] ) );
  FA1D0 U269 ( .A(\shifted_products[4][1] ), .B(\shifted_products[5][1] ), 
        .CI(\add_12_root_add_199_I16/carry[1] ), .CO(
        \add_12_root_add_199_I16/carry[2] ), .S(N100) );
  NR2D1 U270 ( .A1(n292), .A2(n130), .ZN(\shifted_products[4][1] ) );
  FA1D0 U271 ( .A(\shifted_products[12][1] ), .B(\shifted_products[13][1] ), 
        .CI(\add_8_root_add_199_I16/carry[1] ), .CO(
        \add_8_root_add_199_I16/carry[2] ), .S(N202) );
  OAI22D1 U272 ( .A1(n314), .A2(n223), .B1(n7), .B2(n225), .ZN(
        \shifted_products[1][5] ) );
  NR2D1 U273 ( .A1(n304), .A2(n119), .ZN(\shifted_products[6][0] ) );
  INVD1 U274 ( .I(\products[12][5] ), .ZN(n80) );
  XNR3D1 U275 ( .A1(\products[3][5] ), .A2(n57), .A3(n30), .ZN(n29) );
  INVD1 U276 ( .I(\products[1][5] ), .ZN(n223) );
  NR2D1 U277 ( .A1(n293), .A2(n322), .ZN(n297) );
  INVD1 U278 ( .I(n315), .ZN(n241) );
  OAI22D1 U279 ( .A1(n246), .A2(n76), .B1(n327), .B2(n74), .ZN(
        \shifted_products[13][11] ) );
  OAI22D1 U280 ( .A1(n246), .A2(n99), .B1(n327), .B2(n97), .ZN(
        \shifted_products[9][9] ) );
  INVD1 U281 ( .I(\products[9][5] ), .ZN(n97) );
  INVD1 U282 ( .I(\products[11][5] ), .ZN(n86) );
  OAI21D1 U283 ( .A1(n34), .A2(n88), .B(n257), .ZN(\shifted_products[11][13] )
         );
  OAI22D1 U284 ( .A1(n246), .A2(n75), .B1(n327), .B2(n74), .ZN(
        \shifted_products[13][12] ) );
  OAI22D1 U285 ( .A1(n246), .A2(n98), .B1(n327), .B2(n97), .ZN(
        \shifted_products[9][10] ) );
  ND2D1 U286 ( .A1(\products[14][5] ), .A2(n273), .ZN(n266) );
  ND2D1 U287 ( .A1(\products[10][5] ), .A2(n273), .ZN(n256) );
  ND2D1 U288 ( .A1(\products[15][5] ), .A2(n273), .ZN(n274) );
  ND2D1 U289 ( .A1(\products[11][5] ), .A2(n273), .ZN(n257) );
  INVD1 U290 ( .I(n267), .ZN(n235) );
  INVD1 U291 ( .I(n322), .ZN(n246) );
  OAI22D1 U292 ( .A1(n297), .A2(n121), .B1(n296), .B2(n120), .ZN(
        \shifted_products[5][8] ) );
  INVD1 U293 ( .I(n268), .ZN(n240) );
  INVD1 U294 ( .I(n258), .ZN(n238) );
  OA22D0 U295 ( .A1(n241), .A2(n109), .B1(n305), .B2(n108), .Z(n32) );
  INVD1 U296 ( .I(n276), .ZN(n236) );
  INVD1 U297 ( .I(n310), .ZN(n243) );
  INVD1 U298 ( .I(n278), .ZN(n245) );
  INVD1 U299 ( .I(n293), .ZN(n239) );
  NR2D1 U300 ( .A1(n325), .A2(n102), .ZN(\shifted_products[9][0] ) );
  NR2D1 U301 ( .A1(n325), .A2(n91), .ZN(\shifted_products[11][0] ) );
  INVD1 U302 ( .I(\products[3][5] ), .ZN(n132) );
  OA21D1 U303 ( .A1(n34), .A2(n87), .B(n257), .Z(n33) );
  INVD1 U304 ( .I(\products[15][3] ), .ZN(n64) );
  ND2D1 U305 ( .A1(n307), .A2(n313), .ZN(n286) );
  FA1D0 U306 ( .A(\shifted_products[6][7] ), .B(\shifted_products[7][7] ), 
        .CI(\add_11_root_add_199_I16/carry[7] ), .CO(
        \add_11_root_add_199_I16/carry[8] ), .S(N130) );
  OAI222D0 U307 ( .A1(n243), .A2(n110), .B1(n317), .B2(n108), .C1(n112), .C2(
        n318), .ZN(\shifted_products[7][7] ) );
  OAI222D0 U308 ( .A1(n229), .A2(n114), .B1(n241), .B2(n118), .C1(n318), .C2(
        n116), .ZN(\shifted_products[6][7] ) );
  FA1D0 U309 ( .A(\shifted_products[8][7] ), .B(\shifted_products[9][7] ), 
        .CI(\add_10_root_add_199_I16/carry[7] ), .CO(
        \add_10_root_add_199_I16/carry[8] ), .S(N155) );
  OAI222D0 U310 ( .A1(n246), .A2(n101), .B1(n230), .B2(n97), .C1(n99), .C2(
        n326), .ZN(\shifted_products[9][7] ) );
  OAI222D0 U311 ( .A1(n36), .A2(n63), .B1(n236), .B2(n65), .C1(n67), .C2(n307), 
        .ZN(\shifted_products[15][4] ) );
  OAI222D0 U312 ( .A1(n3), .A2(n69), .B1(n235), .B2(n71), .C1(n318), .C2(n73), 
        .ZN(\shifted_products[14][4] ) );
  OAI222D0 U313 ( .A1(n36), .A2(n62), .B1(n236), .B2(n64), .C1(n66), .C2(n307), 
        .ZN(\shifted_products[15][5] ) );
  OAI222D0 U314 ( .A1(n3), .A2(n68), .B1(n235), .B2(n70), .C1(n318), .C2(n72), 
        .ZN(\shifted_products[14][5] ) );
  OAI222D0 U315 ( .A1(n245), .A2(n66), .B1(n280), .B2(n62), .C1(n64), .C2(n307), .ZN(\shifted_products[15][7] ) );
  OAI222D0 U316 ( .A1(n231), .A2(n68), .B1(n240), .B2(n72), .C1(n318), .C2(n70), .ZN(\shifted_products[14][7] ) );
  FA1D0 U317 ( .A(\shifted_products[8][4] ), .B(\shifted_products[9][4] ), 
        .CI(\add_10_root_add_199_I16/carry[4] ), .CO(
        \add_10_root_add_199_I16/carry[5] ), .S(N152) );
  OAI222D0 U318 ( .A1(n325), .A2(n98), .B1(n237), .B2(n100), .C1(n326), .C2(
        n102), .ZN(\shifted_products[9][4] ) );
  FA1D0 U319 ( .A(\shifted_products[10][4] ), .B(\shifted_products[11][4] ), 
        .CI(\add_9_root_add_199_I16/carry[4] ), .CO(
        \add_9_root_add_199_I16/carry[5] ), .S(N178) );
  OAI222D0 U320 ( .A1(n325), .A2(n87), .B1(n242), .B2(n89), .C1(n326), .C2(n91), .ZN(\shifted_products[11][4] ) );
  FA1D0 U321 ( .A(\shifted_products[12][7] ), .B(\shifted_products[13][7] ), 
        .CI(\add_8_root_add_199_I16/carry[7] ), .CO(
        \add_8_root_add_199_I16/carry[8] ), .S(N208) );
  OAI222D0 U322 ( .A1(n239), .A2(n76), .B1(n265), .B2(n74), .C1(n326), .C2(n78), .ZN(\shifted_products[13][7] ) );
  FA1D0 U323 ( .A(\shifted_products[8][5] ), .B(\shifted_products[9][5] ), 
        .CI(\add_10_root_add_199_I16/carry[5] ), .CO(
        \add_10_root_add_199_I16/carry[6] ), .S(N153) );
  OAI222D0 U324 ( .A1(n325), .A2(n97), .B1(n237), .B2(n99), .C1(n326), .C2(
        n101), .ZN(\shifted_products[9][5] ) );
  FA1D0 U325 ( .A(\shifted_products[10][5] ), .B(\shifted_products[11][5] ), 
        .CI(\add_9_root_add_199_I16/carry[5] ), .CO(
        \add_9_root_add_199_I16/carry[6] ), .S(N179) );
  OAI222D0 U326 ( .A1(n325), .A2(n86), .B1(n242), .B2(n88), .C1(n326), .C2(n90), .ZN(\shifted_products[11][5] ) );
  OAI21D1 U327 ( .A1(n255), .A2(n95), .B(n254), .ZN(\shifted_products[10][5] )
         );
  FA1D0 U328 ( .A(\shifted_products[6][9] ), .B(\shifted_products[7][9] ), 
        .CI(\add_11_root_add_199_I16/carry[9] ), .CO(
        \add_11_root_add_199_I16/carry[10] ), .S(N132) );
  OAI222D0 U329 ( .A1(n229), .A2(n108), .B1(n241), .B2(n112), .C1(n318), .C2(
        n110), .ZN(\shifted_products[7][9] ) );
  OAI22D1 U330 ( .A1(n241), .A2(n116), .B1(n305), .B2(n114), .ZN(
        \shifted_products[6][9] ) );
  FA1D0 U331 ( .A(\shifted_products[12][9] ), .B(\shifted_products[13][9] ), 
        .CI(\add_8_root_add_199_I16/carry[9] ), .CO(
        \add_8_root_add_199_I16/carry[10] ), .S(N210) );
  OAI222D0 U332 ( .A1(n246), .A2(n78), .B1(n230), .B2(n74), .C1(n326), .C2(n76), .ZN(\shifted_products[13][9] ) );
  FA1D0 U333 ( .A(\shifted_products[10][7] ), .B(\shifted_products[11][7] ), 
        .CI(\add_9_root_add_199_I16/carry[7] ), .CO(
        \add_9_root_add_199_I16/carry[8] ), .S(N181) );
  OAI21D1 U334 ( .A1(n255), .A2(n93), .B(n254), .ZN(\shifted_products[10][7] )
         );
  OAI222D0 U335 ( .A1(n231), .A2(n86), .B1(n238), .B2(n90), .C1(n326), .C2(n88), .ZN(\shifted_products[11][7] ) );
  FA1D0 U336 ( .A(\shifted_products[10][8] ), .B(\shifted_products[11][8] ), 
        .CI(\add_9_root_add_199_I16/carry[8] ), .CO(
        \add_9_root_add_199_I16/carry[9] ), .S(N182) );
  OAI222D0 U337 ( .A1(n231), .A2(n86), .B1(n238), .B2(n89), .C1(n326), .C2(n87), .ZN(\shifted_products[11][8] ) );
  OAI221D0 U338 ( .A1(n255), .A2(n92), .B1(n35), .B2(n96), .C(n254), .ZN(
        \shifted_products[10][8] ) );
  FA1D0 U339 ( .A(\shifted_products[10][10] ), .B(\shifted_products[11][10] ), 
        .CI(\add_9_root_add_199_I16/carry[10] ), .CO(
        \add_9_root_add_199_I16/carry[11] ), .S(N184) );
  OAI222D0 U340 ( .A1(n238), .A2(n87), .B1(n260), .B2(n86), .C1(n34), .C2(n91), 
        .ZN(\shifted_products[11][10] ) );
  OAI21D1 U341 ( .A1(n34), .A2(n94), .B(n256), .ZN(\shifted_products[10][10] )
         );
  FA1D0 U342 ( .A(\shifted_products[12][4] ), .B(\shifted_products[13][4] ), 
        .CI(\add_8_root_add_199_I16/carry[4] ), .CO(
        \add_8_root_add_199_I16/carry[5] ), .S(N205) );
  OAI222D0 U343 ( .A1(n239), .A2(n79), .B1(n233), .B2(n77), .C1(n36), .C2(n75), 
        .ZN(\shifted_products[13][4] ) );
  FA1D0 U344 ( .A(\shifted_products[6][5] ), .B(\shifted_products[7][5] ), 
        .CI(\add_11_root_add_199_I16/carry[5] ), .CO(
        \add_11_root_add_199_I16/carry[6] ), .S(N128) );
  OAI222D0 U345 ( .A1(n3), .A2(n114), .B1(n234), .B2(n116), .C1(n318), .C2(
        n118), .ZN(\shifted_products[6][5] ) );
  OAI222D0 U346 ( .A1(n232), .A2(n110), .B1(n243), .B2(n112), .C1(n108), .C2(
        n37), .ZN(\shifted_products[7][5] ) );
  OAI222D0 U347 ( .A1(n289), .A2(n217), .B1(n287), .B2(n133), .C1(n314), .C2(
        n132), .ZN(\shifted_products[3][6] ) );
  FA1D0 U348 ( .A(\shifted_products[4][4] ), .B(\shifted_products[5][4] ), 
        .CI(\add_12_root_add_199_I16/carry[4] ), .CO(
        \add_12_root_add_199_I16/carry[5] ), .S(N103) );
  OAI222D0 U349 ( .A1(n294), .A2(n123), .B1(n297), .B2(n125), .C1(n36), .C2(
        n121), .ZN(\shifted_products[5][4] ) );
  FA1D0 U350 ( .A(\shifted_products[6][4] ), .B(\shifted_products[7][4] ), 
        .CI(\add_11_root_add_199_I16/carry[4] ), .CO(
        \add_11_root_add_199_I16/carry[5] ), .S(N127) );
  OAI222D0 U351 ( .A1(n3), .A2(n115), .B1(n234), .B2(n117), .C1(n318), .C2(
        n119), .ZN(\shifted_products[6][4] ) );
  OAI222D0 U352 ( .A1(n232), .A2(n111), .B1(n243), .B2(n113), .C1(n109), .C2(
        n37), .ZN(\shifted_products[7][4] ) );
  FA1D0 U353 ( .A(\shifted_products[8][6] ), .B(\shifted_products[9][6] ), 
        .CI(\add_10_root_add_199_I16/carry[6] ), .CO(
        \add_10_root_add_199_I16/carry[7] ), .S(N154) );
  OAI221D0 U354 ( .A1(n325), .A2(n97), .B1(n100), .B2(n326), .C(n324), .ZN(
        \shifted_products[9][6] ) );
  OAI221D0 U355 ( .A1(n36), .A2(n62), .B1(n65), .B2(n307), .C(n277), .ZN(
        \shifted_products[15][6] ) );
  OAI221D0 U356 ( .A1(n3), .A2(n68), .B1(n318), .B2(n71), .C(n269), .ZN(
        \shifted_products[14][6] ) );
  FA1D0 U357 ( .A(\shifted_products[10][6] ), .B(\shifted_products[11][6] ), 
        .CI(\add_9_root_add_199_I16/carry[6] ), .CO(
        \add_9_root_add_199_I16/carry[7] ), .S(N180) );
  OAI221D0 U358 ( .A1(n325), .A2(n86), .B1(n326), .B2(n89), .C(n259), .ZN(
        \shifted_products[11][6] ) );
  OAI21D1 U359 ( .A1(n255), .A2(n94), .B(n254), .ZN(\shifted_products[10][6] )
         );
  OAI221D0 U360 ( .A1(n282), .A2(n66), .B1(n245), .B2(n64), .C(n281), .ZN(
        \shifted_products[15][9] ) );
  OAI221D0 U361 ( .A1(n282), .A2(n65), .B1(n245), .B2(n63), .C(n281), .ZN(
        \shifted_products[15][10] ) );
  OAI222D0 U362 ( .A1(n240), .A2(n69), .B1(n270), .B2(n68), .C1(n34), .C2(n73), 
        .ZN(\shifted_products[14][10] ) );
  FA1D0 U363 ( .A(\shifted_products[6][8] ), .B(\shifted_products[7][8] ), 
        .CI(\add_11_root_add_199_I16/carry[8] ), .CO(
        \add_11_root_add_199_I16/carry[9] ), .S(N131) );
  OAI221D0 U364 ( .A1(n317), .A2(n108), .B1(n243), .B2(n109), .C(n316), .ZN(
        \shifted_products[7][8] ) );
  OAI222D0 U365 ( .A1(n229), .A2(n114), .B1(n241), .B2(n117), .C1(n318), .C2(
        n115), .ZN(\shifted_products[6][8] ) );
  OAI221D0 U366 ( .A1(n282), .A2(n63), .B1(n67), .B2(n35), .C(n272), .ZN(
        \shifted_products[15][12] ) );
  OAI21D1 U367 ( .A1(n34), .A2(n71), .B(n266), .ZN(\shifted_products[14][12] )
         );
  FA1D0 U368 ( .A(\shifted_products[4][2] ), .B(\shifted_products[5][2] ), 
        .CI(\add_12_root_add_199_I16/carry[2] ), .CO(
        \add_12_root_add_199_I16/carry[3] ), .S(N101) );
  FA1D0 U369 ( .A(\shifted_products[2][2] ), .B(\shifted_products[3][2] ), 
        .CI(\add_13_root_add_199_I16/carry[2] ), .CO(
        \add_13_root_add_199_I16/carry[3] ), .S(N78) );
  FA1D0 U370 ( .A(\shifted_products[10][2] ), .B(\shifted_products[11][2] ), 
        .CI(\add_9_root_add_199_I16/carry[2] ), .CO(
        \add_9_root_add_199_I16/carry[3] ), .S(N176) );
  FA1D0 U371 ( .A(\shifted_products[2][4] ), .B(\shifted_products[3][4] ), 
        .CI(\add_13_root_add_199_I16/carry[4] ), .CO(
        \add_13_root_add_199_I16/carry[5] ), .S(N80) );
  FA1D0 U372 ( .A(\shifted_products[6][2] ), .B(\shifted_products[7][2] ), 
        .CI(\add_11_root_add_199_I16/carry[2] ), .CO(
        \add_11_root_add_199_I16/carry[3] ), .S(N125) );
  OAI22D1 U373 ( .A1(n111), .A2(n36), .B1(n232), .B2(n113), .ZN(
        \shifted_products[7][2] ) );
  FA1D0 U374 ( .A(\shifted_products[12][2] ), .B(\shifted_products[13][2] ), 
        .CI(\add_8_root_add_199_I16/carry[2] ), .CO(
        \add_8_root_add_199_I16/carry[3] ), .S(N203) );
  FA1D0 U375 ( .A(\shifted_products[8][2] ), .B(\shifted_products[9][2] ), 
        .CI(\add_10_root_add_199_I16/carry[2] ), .CO(
        \add_10_root_add_199_I16/carry[3] ), .S(N150) );
  FA1D0 U376 ( .A(\products[0][3] ), .B(\shifted_products[1][3] ), .CI(
        \add_14_root_add_199_I16/carry[3] ), .CO(
        \add_14_root_add_199_I16/carry[4] ), .S(N57) );
  FA1D0 U377 ( .A(\products[0][4] ), .B(\shifted_products[1][4] ), .CI(
        \add_14_root_add_199_I16/carry[4] ), .CO(
        \add_14_root_add_199_I16/carry[5] ), .S(N58) );
  FA1D0 U378 ( .A(\products[0][1] ), .B(\shifted_products[1][1] ), .CI(
        \add_14_root_add_199_I16/carry[1] ), .CO(
        \add_14_root_add_199_I16/carry[2] ), .S(N55) );
  INVD1 U379 ( .I(\products[12][4] ), .ZN(n81) );
  OAI222D0 U380 ( .A1(n229), .A2(n108), .B1(n241), .B2(n111), .C1(n318), .C2(
        n109), .ZN(\shifted_products[7][10] ) );
  OAI22D1 U381 ( .A1(n241), .A2(n115), .B1(n305), .B2(n114), .ZN(
        \shifted_products[6][10] ) );
  OAI21D1 U382 ( .A1(n65), .A2(n35), .B(n274), .ZN(\shifted_products[15][14] )
         );
  OAI21D1 U383 ( .A1(n35), .A2(n69), .B(n266), .ZN(\shifted_products[14][14] )
         );
  FA1D0 U384 ( .A(\shifted_products[10][12] ), .B(\shifted_products[11][12] ), 
        .CI(\add_9_root_add_199_I16/carry[12] ), .CO(
        \add_9_root_add_199_I16/carry[13] ), .S(N186) );
  OAI21D1 U385 ( .A1(n34), .A2(n89), .B(n257), .ZN(\shifted_products[11][12] )
         );
  OAI21D1 U386 ( .A1(n34), .A2(n92), .B(n256), .ZN(\shifted_products[10][12] )
         );
  OAI21D1 U387 ( .A1(n321), .A2(n81), .B(n261), .ZN(\shifted_products[12][10] ) );
  OAI222D0 U388 ( .A1(n246), .A2(n77), .B1(n230), .B2(n74), .C1(n326), .C2(n75), .ZN(\shifted_products[13][10] ) );
  FA1D0 U389 ( .A(\shifted_products[8][8] ), .B(\shifted_products[9][8] ), 
        .CI(\add_10_root_add_199_I16/carry[8] ), .CO(
        \add_10_root_add_199_I16/carry[9] ), .S(N156) );
  OAI21D1 U390 ( .A1(n321), .A2(n103), .B(n320), .ZN(\shifted_products[8][8] )
         );
  OAI222D0 U391 ( .A1(n246), .A2(n100), .B1(n230), .B2(n97), .C1(n326), .C2(
        n98), .ZN(\shifted_products[9][8] ) );
  OAI22D1 U392 ( .A1(n292), .A2(n126), .B1(n291), .B2(n127), .ZN(
        \shifted_products[4][6] ) );
  OAI222D0 U393 ( .A1(n294), .A2(n121), .B1(n297), .B2(n123), .C1(n36), .C2(
        n120), .ZN(\shifted_products[5][6] ) );
  NR2D1 U394 ( .A1(n37), .A2(n125), .ZN(\shifted_products[5][0] ) );
  INVD1 U395 ( .I(\products[1][4] ), .ZN(n224) );
  INVD1 U396 ( .I(\products[1][3] ), .ZN(n225) );
  CKBD1 U397 ( .I(n299), .Z(n35) );
  INR2D1 U398 ( .A1(n318), .B1(n300), .ZN(n305) );
  INR2D1 U399 ( .A1(n318), .B1(n271), .ZN(n270) );
  INVD1 U400 ( .I(\products[11][3] ), .ZN(n88) );
  INVD1 U401 ( .I(\products[9][3] ), .ZN(n99) );
  INVD1 U402 ( .I(\products[11][4] ), .ZN(n87) );
  ND2D1 U403 ( .A1(n275), .A2(n313), .ZN(n276) );
  INVD1 U404 ( .I(\products[9][4] ), .ZN(n98) );
  INVD1 U405 ( .I(\products[3][3] ), .ZN(n134) );
  INVD1 U406 ( .I(\products[3][4] ), .ZN(n133) );
  INVD1 U407 ( .I(\products[10][4] ), .ZN(n92) );
  INVD1 U408 ( .I(\products[10][3] ), .ZN(n93) );
  INVD1 U409 ( .I(\products[2][4] ), .ZN(n218) );
  INVD1 U410 ( .I(\products[8][4] ), .ZN(n103) );
  INVD1 U411 ( .I(\products[2][3] ), .ZN(n219) );
  INVD1 U412 ( .I(\products[8][3] ), .ZN(n104) );
  CKBD1 U413 ( .I(n299), .Z(n34) );
  INVD1 U414 ( .I(\products[15][1] ), .ZN(n66) );
  INVD1 U415 ( .I(\products[7][1] ), .ZN(n112) );
  INVD1 U416 ( .I(\products[14][1] ), .ZN(n72) );
  INVD1 U417 ( .I(\products[13][1] ), .ZN(n78) );
  INVD1 U418 ( .I(\products[6][1] ), .ZN(n118) );
  INVD1 U419 ( .I(\products[5][1] ), .ZN(n124) );
  INVD1 U420 ( .I(\products[12][1] ), .ZN(n84) );
  INVD1 U421 ( .I(\products[3][1] ), .ZN(n216) );
  INVD1 U422 ( .I(\products[4][1] ), .ZN(n130) );
  INVD1 U423 ( .I(\products[1][1] ), .ZN(n227) );
  INVD1 U424 ( .I(\products[2][1] ), .ZN(n221) );
  INVD1 U425 ( .I(\products[15][0] ), .ZN(n67) );
  INVD1 U426 ( .I(\products[14][0] ), .ZN(n73) );
  INVD1 U427 ( .I(\products[11][0] ), .ZN(n91) );
  INVD1 U428 ( .I(\products[7][0] ), .ZN(n113) );
  INVD1 U429 ( .I(\products[6][0] ), .ZN(n119) );
  INVD1 U430 ( .I(\products[9][0] ), .ZN(n102) );
  INVD1 U431 ( .I(\products[11][1] ), .ZN(n90) );
  INVD1 U432 ( .I(\products[9][1] ), .ZN(n101) );
  INVD1 U433 ( .I(\products[10][1] ), .ZN(n95) );
  INVD1 U434 ( .I(\products[8][1] ), .ZN(n106) );
  INVD1 U435 ( .I(\products[13][2] ), .ZN(n77) );
  FA1D0 U436 ( .A(\shifted_products[6][6] ), .B(\shifted_products[7][6] ), 
        .CI(\add_11_root_add_199_I16/carry[6] ), .CO(
        \add_11_root_add_199_I16/carry[7] ), .S(N129) );
  OAI221D0 U437 ( .A1(n108), .A2(n36), .B1(n318), .B2(n113), .C(n311), .ZN(
        \shifted_products[7][6] ) );
  OAI221D0 U438 ( .A1(n3), .A2(n114), .B1(n318), .B2(n117), .C(n303), .ZN(
        \shifted_products[6][6] ) );
  FA1D0 U439 ( .A(\shifted_products[12][6] ), .B(\shifted_products[13][6] ), 
        .CI(\add_8_root_add_199_I16/carry[6] ), .CO(
        \add_8_root_add_199_I16/carry[7] ), .S(N207) );
  OAI222D0 U440 ( .A1(n292), .A2(n80), .B1(n290), .B2(n81), .C1(n321), .C2(n85), .ZN(\shifted_products[12][6] ) );
  OAI221D0 U441 ( .A1(n36), .A2(n74), .B1(n326), .B2(n79), .C(n263), .ZN(
        \shifted_products[13][6] ) );
  OAI221D0 U442 ( .A1(n280), .A2(n62), .B1(n282), .B2(n67), .C(n279), .ZN(
        \shifted_products[15][8] ) );
  OAI222D0 U443 ( .A1(n231), .A2(n68), .B1(n240), .B2(n71), .C1(n318), .C2(n69), .ZN(\shifted_products[14][8] ) );
  FA1D0 U444 ( .A(\shifted_products[12][8] ), .B(\shifted_products[13][8] ), 
        .CI(\add_8_root_add_199_I16/carry[8] ), .CO(
        \add_8_root_add_199_I16/carry[9] ), .S(N209) );
  OAI221D0 U445 ( .A1(n265), .A2(n74), .B1(n246), .B2(n79), .C(n264), .ZN(
        \shifted_products[13][8] ) );
  FA1D0 U446 ( .A(\products[0][2] ), .B(\shifted_products[1][2] ), .CI(
        \add_14_root_add_199_I16/carry[2] ), .CO(
        \add_14_root_add_199_I16/carry[3] ), .S(N56) );
  INVD1 U447 ( .I(\products[1][2] ), .ZN(n226) );
  INVD1 U448 ( .I(\products[15][2] ), .ZN(n65) );
  INVD1 U449 ( .I(\products[14][2] ), .ZN(n71) );
  INVD1 U450 ( .I(\products[11][2] ), .ZN(n89) );
  INVD1 U451 ( .I(\products[9][2] ), .ZN(n100) );
  INVD1 U452 ( .I(\products[7][2] ), .ZN(n111) );
  INVD1 U453 ( .I(\products[3][2] ), .ZN(n135) );
  INVD1 U454 ( .I(\products[10][2] ), .ZN(n94) );
  INVD1 U455 ( .I(\products[2][2] ), .ZN(n220) );
  INVD1 U456 ( .I(\products[8][2] ), .ZN(n105) );
  INVD1 U457 ( .I(\products[13][0] ), .ZN(n79) );
  INVD1 U458 ( .I(\products[5][0] ), .ZN(n125) );
  INVD1 U459 ( .I(\products[12][0] ), .ZN(n85) );
  INVD1 U460 ( .I(\products[4][0] ), .ZN(n131) );
  INVD1 U461 ( .I(\products[10][0] ), .ZN(n96) );
  INVD1 U462 ( .I(\products[3][0] ), .ZN(n217) );
  INVD1 U463 ( .I(\products[1][0] ), .ZN(n228) );
  INVD1 U464 ( .I(\products[2][0] ), .ZN(n222) );
  INVD1 U465 ( .I(\products[8][0] ), .ZN(n107) );
  INR3D0 U466 ( .A1(weight_bitwidth[0]), .B1(weight_bitwidth[1]), .B2(
        weight_bitwidth[2]), .ZN(n248) );
  INR3D0 U467 ( .A1(input_bitwidth[1]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[2]), .ZN(n251) );
  INR3D0 U468 ( .A1(weight_bitwidth[1]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[2]), .ZN(n253) );
  INR3D0 U469 ( .A1(weight_bitwidth[2]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[1]), .ZN(n250) );
  TIEL U470 ( .ZN(n247) );
  AN2D0 U471 ( .A1(\shifted_products[2][0] ), .A2(\shifted_products[3][0] ), 
        .Z(\add_13_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U472 ( .A1(\shifted_products[3][0] ), .A2(\shifted_products[2][0] ), 
        .Z(N76) );
  AN2D0 U473 ( .A1(\products[0][0] ), .A2(\shifted_products[1][0] ), .Z(
        \add_14_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U474 ( .A1(\shifted_products[1][0] ), .A2(\products[0][0] ), .Z(N54) );
  AN2D0 U475 ( .A1(\shifted_products[12][0] ), .A2(\shifted_products[13][0] ), 
        .Z(\add_8_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U476 ( .A1(\shifted_products[13][0] ), .A2(
        \shifted_products[12][0] ), .Z(N201) );
  AN2D0 U477 ( .A1(\shifted_products[6][0] ), .A2(\shifted_products[7][0] ), 
        .Z(\add_11_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U478 ( .A1(\shifted_products[7][0] ), .A2(\shifted_products[6][0] ), 
        .Z(N123) );
  AN2D0 U479 ( .A1(\shifted_products[4][0] ), .A2(\shifted_products[5][0] ), 
        .Z(\add_12_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U480 ( .A1(\shifted_products[5][0] ), .A2(\shifted_products[4][0] ), 
        .Z(N99) );
  AN2D0 U481 ( .A1(\shifted_products[8][0] ), .A2(\shifted_products[9][0] ), 
        .Z(\add_10_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U482 ( .A1(\shifted_products[9][0] ), .A2(\shifted_products[8][0] ), 
        .Z(N148) );
  AN2D0 U483 ( .A1(\shifted_products[10][0] ), .A2(\shifted_products[11][0] ), 
        .Z(\add_9_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U484 ( .A1(\shifted_products[11][0] ), .A2(
        \shifted_products[10][0] ), .Z(N174) );
  XOR3D0 U485 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[13][11] ), .A3(\products[12][5] ), .Z(N212) );
  XOR3D0 U486 ( .A1(\shifted_products[13][12] ), .A2(n39), .A3(n80), .Z(N213)
         );
  XOR3D0 U487 ( .A1(\products[13][5] ), .A2(\products[12][5] ), .A3(n40), .Z(
        N214) );
  CKND0 U488 ( .I(\shifted_products[13][12] ), .ZN(n42) );
  XNR3D0 U489 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \shifted_products[11][13] ), .A3(n43), .ZN(N187) );
  XNR3D0 U490 ( .A1(n33), .A2(n44), .A3(n43), .ZN(N188) );
  XNR3D0 U491 ( .A1(\products[11][5] ), .A2(n43), .A3(n45), .ZN(N189) );
  OAI222D0 U492 ( .A1(n44), .A2(n43), .B1(n44), .B2(n33), .C1(n43), .C2(n33), 
        .ZN(n45) );
  CKND0 U493 ( .I(\products[10][5] ), .ZN(n43) );
  XOR3D0 U494 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[9][9] ), .A3(\products[8][5] ), .Z(N157) );
  XOR3D0 U495 ( .A1(\shifted_products[9][10] ), .A2(n46), .A3(n47), .Z(N158)
         );
  XOR3D0 U496 ( .A1(\products[9][5] ), .A2(\products[8][5] ), .A3(n48), .Z(
        N159) );
  AOI222D0 U497 ( .A1(n48), .A2(\products[8][5] ), .B1(n48), .B2(
        \products[9][5] ), .C1(\products[8][5] ), .C2(\products[9][5] ), .ZN(
        n49) );
  CKND0 U498 ( .I(\shifted_products[9][10] ), .ZN(n50) );
  CKND0 U499 ( .I(\products[8][5] ), .ZN(n47) );
  XNR3D0 U500 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[7][11] ), .A3(n114), .ZN(N134) );
  XNR3D0 U501 ( .A1(n32), .A2(n51), .A3(n114), .ZN(N135) );
  XNR3D0 U502 ( .A1(\products[7][5] ), .A2(n114), .A3(n52), .ZN(N136) );
  XOR3D0 U503 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(
        \shifted_products[5][7] ), .A3(\products[4][5] ), .Z(N106) );
  XOR3D0 U504 ( .A1(\shifted_products[5][8] ), .A2(n53), .A3(n126), .Z(N107)
         );
  XOR3D0 U505 ( .A1(\products[5][5] ), .A2(\products[4][5] ), .A3(n54), .Z(
        N108) );
  CKND0 U506 ( .I(\shifted_products[5][8] ), .ZN(n56) );
  XNR3D0 U507 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .A3(n57), .ZN(N85) );
  XNR3D0 U508 ( .A1(\products[3][5] ), .A2(n57), .A3(n59), .ZN(N87) );
  XNR3D0 U509 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[1][6] ), .A3(n60), .ZN(N60) );
  XNR3D0 U510 ( .A1(n223), .A2(n61), .A3(n60), .ZN(N61) );
  CKND0 U511 ( .I(\shifted_products[0][9] ), .ZN(n60) );
endmodule


module fusion_unit_10_DW01_add_0_DW01_add_14 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module fusion_unit_10 ( clk, nRST, input_bitwidth, weight_bitwidth, input_sign, 
        weight_sign, input_forward, weight, psum_in, psum, input_to_right );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  input [3:0] input_sign;
  input [3:0] weight_sign;
  input [31:0] input_forward;
  input [31:0] weight;
  input [31:0] psum_in;
  output [31:0] psum;
  output [31:0] input_to_right;
  input clk, nRST;
  wire   \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] , n2;
  wire   [31:0] shift_add_out;
  assign input_to_right[31] = input_forward[31];
  assign input_to_right[30] = input_forward[30];
  assign input_to_right[29] = input_forward[29];
  assign input_to_right[28] = input_forward[28];
  assign input_to_right[27] = input_forward[27];
  assign input_to_right[26] = input_forward[26];
  assign input_to_right[25] = input_forward[25];
  assign input_to_right[24] = input_forward[24];
  assign input_to_right[23] = input_forward[23];
  assign input_to_right[22] = input_forward[22];
  assign input_to_right[21] = input_forward[21];
  assign input_to_right[20] = input_forward[20];
  assign input_to_right[19] = input_forward[19];
  assign input_to_right[18] = input_forward[18];
  assign input_to_right[17] = input_forward[17];
  assign input_to_right[16] = input_forward[16];
  assign input_to_right[15] = input_forward[15];
  assign input_to_right[14] = input_forward[14];
  assign input_to_right[13] = input_forward[13];
  assign input_to_right[12] = input_forward[12];
  assign input_to_right[11] = input_forward[11];
  assign input_to_right[10] = input_forward[10];
  assign input_to_right[9] = input_forward[9];
  assign input_to_right[8] = input_forward[8];
  assign input_to_right[7] = input_forward[7];
  assign input_to_right[6] = input_forward[6];
  assign input_to_right[5] = input_forward[5];
  assign input_to_right[4] = input_forward[4];
  assign input_to_right[3] = input_forward[3];
  assign input_to_right[2] = input_forward[2];
  assign input_to_right[1] = input_forward[1];
  assign input_to_right[0] = input_forward[0];

  bit_brick_175 \genblk1[0].BB  ( .x(input_forward[1:0]), .y(weight[1:0]), 
        .sx(input_sign[0]), .sy(weight_sign[0]), .product({\products[0][5] , 
        \products[0][4] , \products[0][3] , \products[0][2] , \products[0][1] , 
        \products[0][0] }) );
  bit_brick_174 \genblk1[1].BB  ( .x(input_forward[3:2]), .y(weight[3:2]), 
        .sx(input_sign[0]), .sy(weight_sign[1]), .product({\products[1][5] , 
        \products[1][4] , \products[1][3] , \products[1][2] , \products[1][1] , 
        \products[1][0] }) );
  bit_brick_173 \genblk1[2].BB  ( .x(input_forward[5:4]), .y(weight[5:4]), 
        .sx(input_sign[0]), .sy(weight_sign[2]), .product({\products[2][5] , 
        \products[2][4] , \products[2][3] , \products[2][2] , \products[2][1] , 
        \products[2][0] }) );
  bit_brick_172 \genblk1[3].BB  ( .x(input_forward[7:6]), .y(weight[7:6]), 
        .sx(input_sign[0]), .sy(weight_sign[3]), .product({\products[3][5] , 
        \products[3][4] , \products[3][3] , \products[3][2] , \products[3][1] , 
        \products[3][0] }) );
  bit_brick_171 \genblk1[4].BB  ( .x(input_forward[9:8]), .y(weight[9:8]), 
        .sx(input_sign[1]), .sy(weight_sign[0]), .product({\products[4][5] , 
        \products[4][4] , \products[4][3] , \products[4][2] , \products[4][1] , 
        \products[4][0] }) );
  bit_brick_170 \genblk1[5].BB  ( .x(input_forward[11:10]), .y(weight[11:10]), 
        .sx(input_sign[1]), .sy(weight_sign[1]), .product({\products[5][5] , 
        \products[5][4] , \products[5][3] , \products[5][2] , \products[5][1] , 
        \products[5][0] }) );
  bit_brick_169 \genblk1[6].BB  ( .x(input_forward[13:12]), .y(weight[13:12]), 
        .sx(input_sign[1]), .sy(weight_sign[2]), .product({\products[6][5] , 
        \products[6][4] , \products[6][3] , \products[6][2] , \products[6][1] , 
        \products[6][0] }) );
  bit_brick_168 \genblk1[7].BB  ( .x(input_forward[15:14]), .y(weight[15:14]), 
        .sx(input_sign[1]), .sy(weight_sign[3]), .product({\products[7][5] , 
        \products[7][4] , \products[7][3] , \products[7][2] , \products[7][1] , 
        \products[7][0] }) );
  bit_brick_167 \genblk1[8].BB  ( .x(input_forward[17:16]), .y(weight[17:16]), 
        .sx(input_sign[2]), .sy(weight_sign[0]), .product({\products[8][5] , 
        \products[8][4] , \products[8][3] , \products[8][2] , \products[8][1] , 
        \products[8][0] }) );
  bit_brick_166 \genblk1[9].BB  ( .x(input_forward[19:18]), .y(weight[19:18]), 
        .sx(input_sign[2]), .sy(weight_sign[1]), .product({\products[9][5] , 
        \products[9][4] , \products[9][3] , \products[9][2] , \products[9][1] , 
        \products[9][0] }) );
  bit_brick_165 \genblk1[10].BB  ( .x(input_forward[21:20]), .y(weight[21:20]), 
        .sx(input_sign[2]), .sy(weight_sign[2]), .product({\products[10][5] , 
        \products[10][4] , \products[10][3] , \products[10][2] , 
        \products[10][1] , \products[10][0] }) );
  bit_brick_164 \genblk1[11].BB  ( .x(input_forward[23:22]), .y(weight[23:22]), 
        .sx(input_sign[2]), .sy(weight_sign[3]), .product({\products[11][5] , 
        \products[11][4] , \products[11][3] , \products[11][2] , 
        \products[11][1] , \products[11][0] }) );
  bit_brick_163 \genblk1[12].BB  ( .x(input_forward[25:24]), .y(weight[25:24]), 
        .sx(input_sign[3]), .sy(weight_sign[0]), .product({\products[12][5] , 
        \products[12][4] , \products[12][3] , \products[12][2] , 
        \products[12][1] , \products[12][0] }) );
  bit_brick_162 \genblk1[13].BB  ( .x(input_forward[27:26]), .y(weight[27:26]), 
        .sx(input_sign[3]), .sy(weight_sign[1]), .product({\products[13][5] , 
        \products[13][4] , \products[13][3] , \products[13][2] , 
        \products[13][1] , \products[13][0] }) );
  bit_brick_161 \genblk1[14].BB  ( .x(input_forward[29:28]), .y(weight[29:28]), 
        .sx(input_sign[3]), .sy(weight_sign[2]), .product({\products[14][5] , 
        \products[14][4] , \products[14][3] , \products[14][2] , 
        \products[14][1] , \products[14][0] }) );
  bit_brick_160 \genblk1[15].BB  ( .x(input_forward[31:30]), .y(weight[31:30]), 
        .sx(input_sign[3]), .sy(weight_sign[3]), .product({\products[15][5] , 
        \products[15][4] , \products[15][3] , \products[15][2] , 
        \products[15][1] , \products[15][0] }) );
  shift_add_10 shift_add ( .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .products({\products[15][5] , \products[15][4] , 
        \products[15][3] , \products[15][2] , \products[15][1] , 
        \products[15][0] , \products[14][5] , \products[14][4] , 
        \products[14][3] , \products[14][2] , \products[14][1] , 
        \products[14][0] , \products[13][5] , \products[13][4] , 
        \products[13][3] , \products[13][2] , \products[13][1] , 
        \products[13][0] , \products[12][5] , \products[12][4] , 
        \products[12][3] , \products[12][2] , \products[12][1] , 
        \products[12][0] , \products[11][5] , \products[11][4] , 
        \products[11][3] , \products[11][2] , \products[11][1] , 
        \products[11][0] , \products[10][5] , \products[10][4] , 
        \products[10][3] , \products[10][2] , \products[10][1] , 
        \products[10][0] , \products[9][5] , \products[9][4] , 
        \products[9][3] , \products[9][2] , \products[9][1] , \products[9][0] , 
        \products[8][5] , \products[8][4] , \products[8][3] , \products[8][2] , 
        \products[8][1] , \products[8][0] , \products[7][5] , \products[7][4] , 
        \products[7][3] , \products[7][2] , \products[7][1] , \products[7][0] , 
        \products[6][5] , \products[6][4] , \products[6][3] , \products[6][2] , 
        \products[6][1] , \products[6][0] , \products[5][5] , \products[5][4] , 
        \products[5][3] , \products[5][2] , \products[5][1] , \products[5][0] , 
        \products[4][5] , \products[4][4] , \products[4][3] , \products[4][2] , 
        \products[4][1] , \products[4][0] , \products[3][5] , \products[3][4] , 
        \products[3][3] , \products[3][2] , \products[3][1] , \products[3][0] , 
        \products[2][5] , \products[2][4] , \products[2][3] , \products[2][2] , 
        \products[2][1] , \products[2][0] , \products[1][5] , \products[1][4] , 
        \products[1][3] , \products[1][2] , \products[1][1] , \products[1][0] , 
        \products[0][5] , \products[0][4] , \products[0][3] , \products[0][2] , 
        \products[0][1] , \products[0][0] }), .shift_add_out(shift_add_out) );
  fusion_unit_10_DW01_add_0_DW01_add_14 add_53 ( .A(shift_add_out), .B(psum_in), .CI(n2), .SUM(psum) );
  TIEL U1 ( .ZN(n2) );
endmodule


module WBUF_ARRAY_SIZE4_DATA_W32_9 ( clk, nRST, WBUF_wr_en, WBUF_data_in, 
        WBUF_data_out );
  input [31:0] WBUF_data_in;
  output [31:0] WBUF_data_out;
  input clk, nRST, WBUF_wr_en;
  wire   n1, n2, n3, n4, n5, n6;

  EDFCNQD1 \WBUF_data_out_reg[31]  ( .D(WBUF_data_in[31]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[31]) );
  EDFCNQD1 \WBUF_data_out_reg[30]  ( .D(WBUF_data_in[30]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[30]) );
  EDFCNQD1 \WBUF_data_out_reg[29]  ( .D(WBUF_data_in[29]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[29]) );
  EDFCNQD1 \WBUF_data_out_reg[28]  ( .D(WBUF_data_in[28]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[28]) );
  EDFCNQD1 \WBUF_data_out_reg[27]  ( .D(WBUF_data_in[27]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[27]) );
  EDFCNQD1 \WBUF_data_out_reg[26]  ( .D(WBUF_data_in[26]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[26]) );
  EDFCNQD1 \WBUF_data_out_reg[25]  ( .D(WBUF_data_in[25]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[25]) );
  EDFCNQD1 \WBUF_data_out_reg[24]  ( .D(WBUF_data_in[24]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[24]) );
  EDFCNQD1 \WBUF_data_out_reg[23]  ( .D(WBUF_data_in[23]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[23]) );
  EDFCNQD1 \WBUF_data_out_reg[22]  ( .D(WBUF_data_in[22]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[22]) );
  EDFCNQD1 \WBUF_data_out_reg[21]  ( .D(WBUF_data_in[21]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[21]) );
  EDFCNQD1 \WBUF_data_out_reg[20]  ( .D(WBUF_data_in[20]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[20]) );
  EDFCNQD1 \WBUF_data_out_reg[19]  ( .D(WBUF_data_in[19]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[19]) );
  EDFCNQD1 \WBUF_data_out_reg[18]  ( .D(WBUF_data_in[18]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[18]) );
  EDFCNQD1 \WBUF_data_out_reg[17]  ( .D(WBUF_data_in[17]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[17]) );
  EDFCNQD1 \WBUF_data_out_reg[16]  ( .D(WBUF_data_in[16]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[16]) );
  EDFCNQD1 \WBUF_data_out_reg[15]  ( .D(WBUF_data_in[15]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[15]) );
  EDFCNQD1 \WBUF_data_out_reg[14]  ( .D(WBUF_data_in[14]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[14]) );
  EDFCNQD1 \WBUF_data_out_reg[13]  ( .D(WBUF_data_in[13]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[13]) );
  EDFCNQD1 \WBUF_data_out_reg[12]  ( .D(WBUF_data_in[12]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[12]) );
  EDFCNQD1 \WBUF_data_out_reg[11]  ( .D(WBUF_data_in[11]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[11]) );
  EDFCNQD1 \WBUF_data_out_reg[10]  ( .D(WBUF_data_in[10]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[10]) );
  EDFCNQD1 \WBUF_data_out_reg[9]  ( .D(WBUF_data_in[9]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[9]) );
  EDFCNQD1 \WBUF_data_out_reg[8]  ( .D(WBUF_data_in[8]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[8]) );
  EDFCNQD1 \WBUF_data_out_reg[7]  ( .D(WBUF_data_in[7]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[7]) );
  EDFCNQD1 \WBUF_data_out_reg[6]  ( .D(WBUF_data_in[6]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[6]) );
  EDFCNQD1 \WBUF_data_out_reg[5]  ( .D(WBUF_data_in[5]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[5]) );
  EDFCNQD1 \WBUF_data_out_reg[4]  ( .D(WBUF_data_in[4]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[4]) );
  EDFCNQD1 \WBUF_data_out_reg[3]  ( .D(WBUF_data_in[3]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[3]) );
  EDFCNQD1 \WBUF_data_out_reg[2]  ( .D(WBUF_data_in[2]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[2]) );
  EDFCNQD1 \WBUF_data_out_reg[1]  ( .D(WBUF_data_in[1]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[1]) );
  EDFCNQD1 \WBUF_data_out_reg[0]  ( .D(WBUF_data_in[0]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[0]) );
  CKBD1 U2 ( .I(WBUF_wr_en), .Z(n5) );
  CKBD1 U3 ( .I(WBUF_wr_en), .Z(n4) );
  CKBD1 U4 ( .I(nRST), .Z(n1) );
  CKBD1 U5 ( .I(nRST), .Z(n2) );
  CKBD1 U6 ( .I(nRST), .Z(n3) );
  CKBD1 U7 ( .I(WBUF_wr_en), .Z(n6) );
endmodule


module w_mux_9 ( clk, nRST, input_bitwidth, rd_en, data_in, data_out );
  input [2:0] input_bitwidth;
  input [31:0] data_in;
  output [31:0] data_out;
  input clk, nRST, rd_en;
  wire   N40, N41, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129,
         n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140,
         n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151,
         n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162,
         n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173,
         n174, n175, n176, n177, n178;
  wire   [1:0] rd_ptr;
  wire   [31:0] next_data_out;

  EDFCNQD1 \rd_ptr_reg[0]  ( .D(N40), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[0]) );
  EDFCNQD1 \rd_ptr_reg[1]  ( .D(N41), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[1]) );
  DFCNQD1 \data_out_reg[31]  ( .D(next_data_out[31]), .CP(clk), .CDN(n1), .Q(
        data_out[31]) );
  DFCNQD1 \data_out_reg[30]  ( .D(next_data_out[30]), .CP(clk), .CDN(n3), .Q(
        data_out[30]) );
  DFCNQD1 \data_out_reg[29]  ( .D(next_data_out[29]), .CP(clk), .CDN(n3), .Q(
        data_out[29]) );
  DFCNQD1 \data_out_reg[28]  ( .D(next_data_out[28]), .CP(clk), .CDN(n3), .Q(
        data_out[28]) );
  DFCNQD1 \data_out_reg[27]  ( .D(next_data_out[27]), .CP(clk), .CDN(n3), .Q(
        data_out[27]) );
  DFCNQD1 \data_out_reg[26]  ( .D(next_data_out[26]), .CP(clk), .CDN(n3), .Q(
        data_out[26]) );
  DFCNQD1 \data_out_reg[25]  ( .D(next_data_out[25]), .CP(clk), .CDN(n2), .Q(
        data_out[25]) );
  DFCNQD1 \data_out_reg[24]  ( .D(next_data_out[24]), .CP(clk), .CDN(n2), .Q(
        data_out[24]) );
  DFCNQD1 \data_out_reg[23]  ( .D(next_data_out[23]), .CP(clk), .CDN(n3), .Q(
        data_out[23]) );
  DFCNQD1 \data_out_reg[22]  ( .D(next_data_out[22]), .CP(clk), .CDN(n2), .Q(
        data_out[22]) );
  DFCNQD1 \data_out_reg[21]  ( .D(next_data_out[21]), .CP(clk), .CDN(n2), .Q(
        data_out[21]) );
  DFCNQD1 \data_out_reg[20]  ( .D(next_data_out[20]), .CP(clk), .CDN(n2), .Q(
        data_out[20]) );
  DFCNQD1 \data_out_reg[19]  ( .D(next_data_out[19]), .CP(clk), .CDN(n2), .Q(
        data_out[19]) );
  DFCNQD1 \data_out_reg[18]  ( .D(next_data_out[18]), .CP(clk), .CDN(n2), .Q(
        data_out[18]) );
  DFCNQD1 \data_out_reg[17]  ( .D(next_data_out[17]), .CP(clk), .CDN(n2), .Q(
        data_out[17]) );
  DFCNQD1 \data_out_reg[16]  ( .D(next_data_out[16]), .CP(clk), .CDN(n2), .Q(
        data_out[16]) );
  DFCNQD1 \data_out_reg[15]  ( .D(next_data_out[15]), .CP(clk), .CDN(n2), .Q(
        data_out[15]) );
  DFCNQD1 \data_out_reg[14]  ( .D(next_data_out[14]), .CP(clk), .CDN(n2), .Q(
        data_out[14]) );
  DFCNQD1 \data_out_reg[13]  ( .D(next_data_out[13]), .CP(clk), .CDN(n2), .Q(
        data_out[13]) );
  DFCNQD1 \data_out_reg[12]  ( .D(next_data_out[12]), .CP(clk), .CDN(n1), .Q(
        data_out[12]) );
  DFCNQD1 \data_out_reg[11]  ( .D(next_data_out[11]), .CP(clk), .CDN(n1), .Q(
        data_out[11]) );
  DFCNQD1 \data_out_reg[10]  ( .D(next_data_out[10]), .CP(clk), .CDN(n1), .Q(
        data_out[10]) );
  DFCNQD1 \data_out_reg[9]  ( .D(next_data_out[9]), .CP(clk), .CDN(n1), .Q(
        data_out[9]) );
  DFCNQD1 \data_out_reg[8]  ( .D(next_data_out[8]), .CP(clk), .CDN(n1), .Q(
        data_out[8]) );
  DFCNQD1 \data_out_reg[7]  ( .D(next_data_out[7]), .CP(clk), .CDN(n1), .Q(
        data_out[7]) );
  DFCNQD1 \data_out_reg[6]  ( .D(next_data_out[6]), .CP(clk), .CDN(n1), .Q(
        data_out[6]) );
  DFCNQD1 \data_out_reg[5]  ( .D(next_data_out[5]), .CP(clk), .CDN(n1), .Q(
        data_out[5]) );
  DFCNQD1 \data_out_reg[4]  ( .D(next_data_out[4]), .CP(clk), .CDN(n1), .Q(
        data_out[4]) );
  DFCNQD1 \data_out_reg[3]  ( .D(next_data_out[3]), .CP(clk), .CDN(n1), .Q(
        data_out[3]) );
  DFCNQD1 \data_out_reg[2]  ( .D(next_data_out[2]), .CP(clk), .CDN(n1), .Q(
        data_out[2]) );
  DFCNQD1 \data_out_reg[1]  ( .D(next_data_out[1]), .CP(clk), .CDN(n1), .Q(
        data_out[1]) );
  DFCNQD1 \data_out_reg[0]  ( .D(next_data_out[0]), .CP(clk), .CDN(n2), .Q(
        data_out[0]) );
  OA21D1 U20 ( .A1(n161), .A2(n160), .B(n159), .Z(n170) );
  OA21D1 U23 ( .A1(n156), .A2(n160), .B(n155), .Z(n169) );
  OA21D1 U26 ( .A1(n154), .A2(n160), .B(n153), .Z(n167) );
  OA21D1 U29 ( .A1(n152), .A2(n160), .B(n151), .Z(n166) );
  OA21D1 U32 ( .A1(n150), .A2(n160), .B(n149), .Z(n177) );
  OA21D1 U35 ( .A1(n148), .A2(n160), .B(n147), .Z(n165) );
  OA21D1 U38 ( .A1(n146), .A2(n160), .B(n145), .Z(n164) );
  OA21D1 U41 ( .A1(n144), .A2(n160), .B(n149), .Z(n163) );
  OA21D1 U47 ( .A1(n139), .A2(n160), .B(n138), .Z(n162) );
  OA21D1 U50 ( .A1(n137), .A2(n160), .B(n159), .Z(n175) );
  OA21D1 U56 ( .A1(n134), .A2(n160), .B(n155), .Z(n174) );
  OA21D1 U62 ( .A1(n131), .A2(n160), .B(n153), .Z(n173) );
  OA21D1 U68 ( .A1(n128), .A2(n160), .B(n151), .Z(n172) );
  OA21D1 U74 ( .A1(n125), .A2(n160), .B(n147), .Z(n171) );
  OA21D1 U80 ( .A1(n122), .A2(n160), .B(n145), .Z(n168) );
  OA21D1 U86 ( .A1(n119), .A2(n160), .B(n138), .Z(n176) );
  AN2XD1 U90 ( .A1(rd_ptr[1]), .A2(rd_ptr[0]), .Z(n140) );
  AN4XD1 U91 ( .A1(input_bitwidth[2]), .A2(rd_en), .A3(n5), .A4(n7), .Z(n143)
         );
  MAOI22D1 U97 ( .A1(n115), .A2(n12), .B1(n115), .B2(n114), .ZN(n113) );
  NR2D1 U3 ( .A1(n13), .A2(rd_ptr[1]), .ZN(n158) );
  NR2D1 U4 ( .A1(rd_ptr[0]), .A2(rd_ptr[1]), .ZN(n157) );
  AOI21D1 U5 ( .A1(n12), .A2(n116), .B(n113), .ZN(N41) );
  OAI21D1 U6 ( .A1(n111), .A2(n10), .B(n177), .ZN(next_data_out[1]) );
  OAI21D1 U7 ( .A1(n37), .A2(n10), .B(n177), .ZN(next_data_out[9]) );
  OAI21D1 U8 ( .A1(n8), .A2(n112), .B(n176), .ZN(next_data_out[0]) );
  OAI21D1 U9 ( .A1(n9), .A2(n110), .B(n168), .ZN(next_data_out[2]) );
  OAI21D1 U10 ( .A1(n9), .A2(n109), .B(n171), .ZN(next_data_out[3]) );
  OAI21D1 U11 ( .A1(n9), .A2(n108), .B(n172), .ZN(next_data_out[4]) );
  OAI21D1 U12 ( .A1(n8), .A2(n36), .B(n168), .ZN(next_data_out[10]) );
  OAI21D1 U13 ( .A1(n8), .A2(n35), .B(n171), .ZN(next_data_out[11]) );
  OAI21D1 U14 ( .A1(n8), .A2(n34), .B(n172), .ZN(next_data_out[12]) );
  OAI21D1 U15 ( .A1(n9), .A2(n33), .B(n173), .ZN(next_data_out[13]) );
  OAI21D1 U16 ( .A1(n8), .A2(n32), .B(n174), .ZN(next_data_out[14]) );
  OAI21D1 U17 ( .A1(n8), .A2(n31), .B(n175), .ZN(next_data_out[15]) );
  OAI21D1 U18 ( .A1(n10), .A2(n107), .B(n173), .ZN(next_data_out[5]) );
  OAI21D1 U19 ( .A1(n10), .A2(n106), .B(n174), .ZN(next_data_out[6]) );
  OAI21D1 U21 ( .A1(n10), .A2(n105), .B(n175), .ZN(next_data_out[7]) );
  OAI21D1 U22 ( .A1(n10), .A2(n38), .B(n176), .ZN(next_data_out[8]) );
  CKBD1 U24 ( .I(n178), .Z(n8) );
  CKBD1 U25 ( .I(n178), .Z(n9) );
  CKBD1 U27 ( .I(n178), .Z(n10) );
  INVD1 U28 ( .I(n6), .ZN(n7) );
  INVD1 U30 ( .I(n4), .ZN(n5) );
  INVD1 U31 ( .I(n116), .ZN(n11) );
  INVD1 U33 ( .I(n157), .ZN(n14) );
  INVD1 U34 ( .I(n158), .ZN(n12) );
  ND2D1 U36 ( .A1(n114), .A2(rd_en), .ZN(n178) );
  NR3D0 U37 ( .A1(n4), .A2(input_bitwidth[2]), .A3(n7), .ZN(n115) );
  NR3D0 U39 ( .A1(n6), .A2(input_bitwidth[2]), .A3(n5), .ZN(n114) );
  ND2D1 U40 ( .A1(rd_en), .A2(n115), .ZN(n160) );
  ND2D1 U42 ( .A1(n143), .A2(n118), .ZN(n138) );
  OAI221D0 U43 ( .A1(n12), .A2(n38), .B1(n14), .B2(n112), .C(n117), .ZN(n118)
         );
  AOI22D1 U44 ( .A1(data_in[24]), .A2(n140), .B1(data_in[16]), .B2(n11), .ZN(
        n117) );
  ND2D1 U45 ( .A1(n143), .A2(n142), .ZN(n149) );
  OAI221D0 U46 ( .A1(n12), .A2(n37), .B1(n14), .B2(n111), .C(n141), .ZN(n142)
         );
  AOI22D1 U48 ( .A1(data_in[25]), .A2(n140), .B1(n11), .B2(data_in[17]), .ZN(
        n141) );
  ND2D1 U49 ( .A1(n143), .A2(n121), .ZN(n145) );
  OAI221D0 U51 ( .A1(n12), .A2(n36), .B1(n14), .B2(n110), .C(n120), .ZN(n121)
         );
  AOI22D1 U52 ( .A1(data_in[26]), .A2(n140), .B1(data_in[18]), .B2(n11), .ZN(
        n120) );
  ND2D1 U53 ( .A1(n143), .A2(n124), .ZN(n147) );
  OAI221D0 U54 ( .A1(n12), .A2(n35), .B1(n14), .B2(n109), .C(n123), .ZN(n124)
         );
  AOI22D1 U55 ( .A1(data_in[27]), .A2(n140), .B1(data_in[19]), .B2(n11), .ZN(
        n123) );
  ND2D1 U57 ( .A1(n143), .A2(n127), .ZN(n151) );
  OAI221D0 U58 ( .A1(n12), .A2(n34), .B1(n14), .B2(n108), .C(n126), .ZN(n127)
         );
  AOI22D1 U59 ( .A1(data_in[28]), .A2(n140), .B1(data_in[20]), .B2(n11), .ZN(
        n126) );
  ND2D1 U60 ( .A1(n143), .A2(n130), .ZN(n153) );
  OAI221D0 U61 ( .A1(n12), .A2(n33), .B1(n14), .B2(n107), .C(n129), .ZN(n130)
         );
  AOI22D1 U63 ( .A1(data_in[29]), .A2(n140), .B1(data_in[21]), .B2(n11), .ZN(
        n129) );
  ND2D1 U64 ( .A1(n143), .A2(n133), .ZN(n155) );
  OAI221D0 U65 ( .A1(n12), .A2(n32), .B1(n14), .B2(n106), .C(n132), .ZN(n133)
         );
  AOI22D1 U66 ( .A1(data_in[30]), .A2(n140), .B1(data_in[22]), .B2(n11), .ZN(
        n132) );
  ND2D1 U67 ( .A1(n143), .A2(n136), .ZN(n159) );
  OAI221D0 U69 ( .A1(n12), .A2(n31), .B1(n14), .B2(n105), .C(n135), .ZN(n136)
         );
  AOI22D1 U70 ( .A1(data_in[31]), .A2(n140), .B1(data_in[23]), .B2(n11), .ZN(
        n135) );
  AOI22D1 U71 ( .A1(data_in[16]), .A2(n158), .B1(data_in[0]), .B2(n157), .ZN(
        n119) );
  AOI22D1 U72 ( .A1(data_in[17]), .A2(n158), .B1(data_in[1]), .B2(n157), .ZN(
        n150) );
  AOI22D1 U73 ( .A1(data_in[18]), .A2(n158), .B1(data_in[2]), .B2(n157), .ZN(
        n122) );
  AOI22D1 U75 ( .A1(data_in[19]), .A2(n158), .B1(data_in[3]), .B2(n157), .ZN(
        n125) );
  AOI22D1 U76 ( .A1(data_in[20]), .A2(n158), .B1(data_in[4]), .B2(n157), .ZN(
        n128) );
  AOI22D1 U77 ( .A1(data_in[21]), .A2(n158), .B1(data_in[5]), .B2(n157), .ZN(
        n131) );
  AOI22D1 U78 ( .A1(data_in[22]), .A2(n158), .B1(data_in[6]), .B2(n157), .ZN(
        n134) );
  AOI22D1 U79 ( .A1(data_in[23]), .A2(n158), .B1(data_in[7]), .B2(n157), .ZN(
        n137) );
  AOI22D1 U81 ( .A1(data_in[24]), .A2(n158), .B1(data_in[8]), .B2(n157), .ZN(
        n139) );
  AOI22D1 U82 ( .A1(data_in[25]), .A2(n158), .B1(data_in[9]), .B2(n157), .ZN(
        n144) );
  AOI22D1 U83 ( .A1(data_in[26]), .A2(n158), .B1(data_in[10]), .B2(n157), .ZN(
        n146) );
  AOI22D1 U84 ( .A1(data_in[27]), .A2(n158), .B1(data_in[11]), .B2(n157), .ZN(
        n148) );
  AOI22D1 U85 ( .A1(data_in[28]), .A2(n158), .B1(data_in[12]), .B2(n157), .ZN(
        n152) );
  AOI22D1 U87 ( .A1(data_in[29]), .A2(n158), .B1(data_in[13]), .B2(n157), .ZN(
        n154) );
  AOI22D1 U88 ( .A1(data_in[30]), .A2(n158), .B1(data_in[14]), .B2(n157), .ZN(
        n156) );
  AOI22D1 U89 ( .A1(data_in[31]), .A2(n158), .B1(data_in[15]), .B2(n157), .ZN(
        n161) );
  NR2D1 U92 ( .A1(rd_ptr[0]), .A2(n114), .ZN(N40) );
  OAI21D1 U93 ( .A1(n29), .A2(n10), .B(n163), .ZN(next_data_out[17]) );
  INVD1 U94 ( .I(data_in[17]), .ZN(n29) );
  OAI21D1 U95 ( .A1(n8), .A2(n30), .B(n162), .ZN(next_data_out[16]) );
  INVD1 U96 ( .I(data_in[16]), .ZN(n30) );
  OAI21D1 U98 ( .A1(n8), .A2(n28), .B(n164), .ZN(next_data_out[18]) );
  INVD1 U99 ( .I(data_in[18]), .ZN(n28) );
  OAI21D1 U100 ( .A1(n8), .A2(n27), .B(n165), .ZN(next_data_out[19]) );
  INVD1 U101 ( .I(data_in[19]), .ZN(n27) );
  OAI21D1 U102 ( .A1(n8), .A2(n26), .B(n166), .ZN(next_data_out[20]) );
  INVD1 U103 ( .I(data_in[20]), .ZN(n26) );
  OAI21D1 U104 ( .A1(n8), .A2(n25), .B(n167), .ZN(next_data_out[21]) );
  INVD1 U105 ( .I(data_in[21]), .ZN(n25) );
  OAI21D1 U106 ( .A1(n8), .A2(n24), .B(n169), .ZN(next_data_out[22]) );
  INVD1 U107 ( .I(data_in[22]), .ZN(n24) );
  OAI21D1 U108 ( .A1(n9), .A2(n23), .B(n170), .ZN(next_data_out[23]) );
  INVD1 U109 ( .I(data_in[23]), .ZN(n23) );
  OAI21D1 U110 ( .A1(n9), .A2(n22), .B(n162), .ZN(next_data_out[24]) );
  INVD1 U111 ( .I(data_in[24]), .ZN(n22) );
  OAI21D1 U112 ( .A1(n9), .A2(n20), .B(n164), .ZN(next_data_out[26]) );
  INVD1 U113 ( .I(data_in[26]), .ZN(n20) );
  OAI21D1 U114 ( .A1(n9), .A2(n19), .B(n165), .ZN(next_data_out[27]) );
  INVD1 U115 ( .I(data_in[27]), .ZN(n19) );
  OAI21D1 U116 ( .A1(n9), .A2(n18), .B(n166), .ZN(next_data_out[28]) );
  INVD1 U117 ( .I(data_in[28]), .ZN(n18) );
  OAI21D1 U118 ( .A1(n9), .A2(n17), .B(n167), .ZN(next_data_out[29]) );
  INVD1 U119 ( .I(data_in[29]), .ZN(n17) );
  OAI21D1 U120 ( .A1(n9), .A2(n16), .B(n169), .ZN(next_data_out[30]) );
  INVD1 U121 ( .I(data_in[30]), .ZN(n16) );
  OAI21D1 U122 ( .A1(n9), .A2(n15), .B(n170), .ZN(next_data_out[31]) );
  INVD1 U123 ( .I(data_in[31]), .ZN(n15) );
  OAI21D1 U124 ( .A1(n21), .A2(n10), .B(n163), .ZN(next_data_out[25]) );
  INVD1 U125 ( .I(data_in[25]), .ZN(n21) );
  CKBD1 U126 ( .I(input_bitwidth[0]), .Z(n4) );
  CKBD1 U127 ( .I(input_bitwidth[1]), .Z(n6) );
  ND2D1 U128 ( .A1(rd_ptr[1]), .A2(n13), .ZN(n116) );
  INVD1 U129 ( .I(rd_ptr[0]), .ZN(n13) );
  INVD1 U130 ( .I(data_in[1]), .ZN(n111) );
  INVD1 U131 ( .I(data_in[9]), .ZN(n37) );
  INVD1 U132 ( .I(data_in[0]), .ZN(n112) );
  INVD1 U133 ( .I(data_in[2]), .ZN(n110) );
  INVD1 U134 ( .I(data_in[3]), .ZN(n109) );
  INVD1 U135 ( .I(data_in[4]), .ZN(n108) );
  INVD1 U136 ( .I(data_in[5]), .ZN(n107) );
  INVD1 U137 ( .I(data_in[6]), .ZN(n106) );
  INVD1 U138 ( .I(data_in[7]), .ZN(n105) );
  INVD1 U139 ( .I(data_in[8]), .ZN(n38) );
  INVD1 U140 ( .I(data_in[10]), .ZN(n36) );
  INVD1 U141 ( .I(data_in[11]), .ZN(n35) );
  INVD1 U142 ( .I(data_in[12]), .ZN(n34) );
  INVD1 U143 ( .I(data_in[13]), .ZN(n33) );
  INVD1 U144 ( .I(data_in[14]), .ZN(n32) );
  INVD1 U145 ( .I(data_in[15]), .ZN(n31) );
  CKBD1 U146 ( .I(nRST), .Z(n2) );
  CKBD1 U147 ( .I(nRST), .Z(n1) );
  CKBD1 U148 ( .I(nRST), .Z(n3) );
endmodule


module bit_brick_159 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_158 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_157 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_156 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_155 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_154 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_153 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_152 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_151 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_150 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[0]), .ZN(n5) );
  INVD1 U6 ( .I(y[1]), .ZN(n6) );
  INVD1 U7 ( .I(x[0]), .ZN(n4) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_149 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_148 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_147 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_146 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_145 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_144 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module shift_add_9_DW01_add_14_DW01_add_94 ( A, B, CI, SUM, CO );
  input [28:0] A;
  input [28:0] B;
  output [28:0] SUM;
  input CI;
  output CO;
  wire   n1, \SUM[18] , n3, n4, n5, n6, n7;
  wire   [28:1] carry;
  assign SUM[27] = \SUM[18] ;
  assign SUM[28] = \SUM[18] ;
  assign SUM[26] = \SUM[18] ;
  assign SUM[25] = \SUM[18] ;
  assign SUM[24] = \SUM[18] ;
  assign SUM[23] = \SUM[18] ;
  assign SUM[22] = \SUM[18] ;
  assign SUM[21] = \SUM[18] ;
  assign SUM[20] = \SUM[18] ;
  assign SUM[19] = \SUM[18] ;
  assign SUM[18] = \SUM[18] ;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  AOI222D1 U1 ( .A1(carry[15]), .A2(A[27]), .B1(carry[15]), .B2(B[15]), .C1(
        B[15]), .C2(A[27]), .ZN(n5) );
  AN2XD1 U2 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  OAI222D1 U3 ( .A1(n5), .A2(n7), .B1(n5), .B2(n6), .C1(n7), .C2(n6), .ZN(n4)
         );
  CKXOR2D0 U4 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  XNR3D4 U5 ( .A1(B[27]), .A2(n7), .A3(n3), .ZN(\SUM[18] ) );
  AO222D1 U6 ( .A1(n4), .A2(A[27]), .B1(n4), .B2(B[27]), .C1(A[27]), .C2(B[27]), .Z(n3) );
  CKND0 U7 ( .I(A[27]), .ZN(n7) );
  CKND0 U8 ( .I(B[16]), .ZN(n6) );
  XNR3D0 U9 ( .A1(B[27]), .A2(n7), .A3(n4), .ZN(SUM[17]) );
  XNR3D0 U10 ( .A1(n6), .A2(n5), .A3(n7), .ZN(SUM[16]) );
  XNR3D0 U11 ( .A1(carry[15]), .A2(B[15]), .A3(n7), .ZN(SUM[15]) );
endmodule


module shift_add_9_DW01_add_6_DW01_add_86 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_9_DW01_add_5_DW01_add_85 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_9_DW01_add_4_DW01_add_84 ( A, B, CI, SUM, CO );
  input [30:0] A;
  input [30:0] B;
  output [30:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [30:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  XOR3D1 U1_30 ( .A1(A[30]), .A2(B[30]), .A3(carry[30]), .Z(SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_9_DW01_add_3_DW01_add_83 ( A, B, CI, SUM, CO );
  input [29:0] A;
  input [29:0] B;
  output [29:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3;
  wire   [29:1] carry;
  assign SUM[29] = SUM[23];
  assign SUM[28] = SUM[23];
  assign SUM[27] = SUM[23];
  assign SUM[26] = SUM[23];
  assign SUM[25] = SUM[23];
  assign SUM[24] = SUM[23];

  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D1 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D1 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D1 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D1 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D1 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D1 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  XOR3D4 U1 ( .A1(B[22]), .A2(A[21]), .A3(n3), .Z(SUM[23]) );
  AN2XD1 U2 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U3 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  AO222D1 U4 ( .A1(n2), .A2(A[21]), .B1(n2), .B2(B[22]), .C1(A[21]), .C2(B[22]), .Z(n3) );
  AO222D1 U5 ( .A1(carry[21]), .A2(A[21]), .B1(B[21]), .B2(carry[21]), .C1(
        B[21]), .C2(A[21]), .Z(n2) );
  XOR3D0 U6 ( .A1(carry[21]), .A2(B[21]), .A3(A[21]), .Z(SUM[21]) );
  XOR3D0 U7 ( .A1(B[22]), .A2(A[21]), .A3(n2), .Z(SUM[22]) );
endmodule


module shift_add_9_DW01_add_2_DW01_add_82 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_9_DW01_add_1_DW01_add_81 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_9_DW01_add_0_DW01_add_80 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_9 ( input_bitwidth, weight_bitwidth, .products({
        \products[15][5] , \products[15][4] , \products[15][3] , 
        \products[15][2] , \products[15][1] , \products[15][0] , 
        \products[14][5] , \products[14][4] , \products[14][3] , 
        \products[14][2] , \products[14][1] , \products[14][0] , 
        \products[13][5] , \products[13][4] , \products[13][3] , 
        \products[13][2] , \products[13][1] , \products[13][0] , 
        \products[12][5] , \products[12][4] , \products[12][3] , 
        \products[12][2] , \products[12][1] , \products[12][0] , 
        \products[11][5] , \products[11][4] , \products[11][3] , 
        \products[11][2] , \products[11][1] , \products[11][0] , 
        \products[10][5] , \products[10][4] , \products[10][3] , 
        \products[10][2] , \products[10][1] , \products[10][0] , 
        \products[9][5] , \products[9][4] , \products[9][3] , \products[9][2] , 
        \products[9][1] , \products[9][0] , \products[8][5] , \products[8][4] , 
        \products[8][3] , \products[8][2] , \products[8][1] , \products[8][0] , 
        \products[7][5] , \products[7][4] , \products[7][3] , \products[7][2] , 
        \products[7][1] , \products[7][0] , \products[6][5] , \products[6][4] , 
        \products[6][3] , \products[6][2] , \products[6][1] , \products[6][0] , 
        \products[5][5] , \products[5][4] , \products[5][3] , \products[5][2] , 
        \products[5][1] , \products[5][0] , \products[4][5] , \products[4][4] , 
        \products[4][3] , \products[4][2] , \products[4][1] , \products[4][0] , 
        \products[3][5] , \products[3][4] , \products[3][3] , \products[3][2] , 
        \products[3][1] , \products[3][0] , \products[2][5] , \products[2][4] , 
        \products[2][3] , \products[2][2] , \products[2][1] , \products[2][0] , 
        \products[1][5] , \products[1][4] , \products[1][3] , \products[1][2] , 
        \products[1][1] , \products[1][0] , \products[0][5] , \products[0][4] , 
        \products[0][3] , \products[0][2] , \products[0][1] , \products[0][0] 
        }), shift_add_out );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  output [31:0] shift_add_out;
  input \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] ;
  wire   \shifted_products[15][16] , \shifted_products[15][15] ,
         \shifted_products[15][14] , \shifted_products[15][13] ,
         \shifted_products[15][12] , \shifted_products[15][11] ,
         \shifted_products[15][10] , \shifted_products[15][9] ,
         \shifted_products[15][8] , \shifted_products[15][7] ,
         \shifted_products[15][6] , \shifted_products[15][5] ,
         \shifted_products[15][4] , \shifted_products[15][3] ,
         \shifted_products[15][2] , \shifted_products[15][1] ,
         \shifted_products[15][0] , \shifted_products[14][14] ,
         \shifted_products[14][13] , \shifted_products[14][12] ,
         \shifted_products[14][11] , \shifted_products[14][10] ,
         \shifted_products[14][9] , \shifted_products[14][8] ,
         \shifted_products[14][7] , \shifted_products[14][6] ,
         \shifted_products[14][5] , \shifted_products[14][4] ,
         \shifted_products[14][3] , \shifted_products[14][2] ,
         \shifted_products[14][1] , \shifted_products[14][0] ,
         \shifted_products[13][12] , \shifted_products[13][11] ,
         \shifted_products[13][10] , \shifted_products[13][9] ,
         \shifted_products[13][8] , \shifted_products[13][7] ,
         \shifted_products[13][6] , \shifted_products[13][5] ,
         \shifted_products[13][4] , \shifted_products[13][3] ,
         \shifted_products[13][2] , \shifted_products[13][1] ,
         \shifted_products[13][0] , \shifted_products[12][10] ,
         \shifted_products[12][9] , \shifted_products[12][8] ,
         \shifted_products[12][7] , \shifted_products[12][6] ,
         \shifted_products[12][5] , \shifted_products[12][4] ,
         \shifted_products[12][3] , \shifted_products[12][2] ,
         \shifted_products[12][1] , \shifted_products[12][0] ,
         \shifted_products[11][13] , \shifted_products[11][12] ,
         \shifted_products[11][11] , \shifted_products[11][10] ,
         \shifted_products[11][9] , \shifted_products[11][8] ,
         \shifted_products[11][7] , \shifted_products[11][6] ,
         \shifted_products[11][5] , \shifted_products[11][4] ,
         \shifted_products[11][3] , \shifted_products[11][2] ,
         \shifted_products[11][1] , \shifted_products[11][0] ,
         \shifted_products[10][12] , \shifted_products[10][11] ,
         \shifted_products[10][10] , \shifted_products[10][9] ,
         \shifted_products[10][8] , \shifted_products[10][7] ,
         \shifted_products[10][6] , \shifted_products[10][5] ,
         \shifted_products[10][4] , \shifted_products[10][3] ,
         \shifted_products[10][2] , \shifted_products[10][1] ,
         \shifted_products[10][0] , \shifted_products[9][10] ,
         \shifted_products[9][9] , \shifted_products[9][8] ,
         \shifted_products[9][7] , \shifted_products[9][6] ,
         \shifted_products[9][5] , \shifted_products[9][4] ,
         \shifted_products[9][3] , \shifted_products[9][2] ,
         \shifted_products[9][1] , \shifted_products[9][0] ,
         \shifted_products[8][8] , \shifted_products[8][7] ,
         \shifted_products[8][6] , \shifted_products[8][5] ,
         \shifted_products[8][4] , \shifted_products[8][3] ,
         \shifted_products[8][2] , \shifted_products[8][1] ,
         \shifted_products[8][0] , \shifted_products[7][11] ,
         \shifted_products[7][10] , \shifted_products[7][9] ,
         \shifted_products[7][8] , \shifted_products[7][7] ,
         \shifted_products[7][6] , \shifted_products[7][5] ,
         \shifted_products[7][4] , \shifted_products[7][3] ,
         \shifted_products[7][2] , \shifted_products[7][1] ,
         \shifted_products[7][0] , \shifted_products[6][10] ,
         \shifted_products[6][9] , \shifted_products[6][8] ,
         \shifted_products[6][7] , \shifted_products[6][6] ,
         \shifted_products[6][5] , \shifted_products[6][4] ,
         \shifted_products[6][3] , \shifted_products[6][2] ,
         \shifted_products[6][1] , \shifted_products[6][0] ,
         \shifted_products[5][8] , \shifted_products[5][7] ,
         \shifted_products[5][6] , \shifted_products[5][5] ,
         \shifted_products[5][4] , \shifted_products[5][3] ,
         \shifted_products[5][2] , \shifted_products[5][1] ,
         \shifted_products[5][0] , \shifted_products[4][6] ,
         \shifted_products[4][5] , \shifted_products[4][4] ,
         \shifted_products[4][3] , \shifted_products[4][2] ,
         \shifted_products[4][1] , \shifted_products[4][0] ,
         \shifted_products[3][9] , \shifted_products[3][8] ,
         \shifted_products[3][7] , \shifted_products[3][6] ,
         \shifted_products[3][5] , \shifted_products[3][4] ,
         \shifted_products[3][3] , \shifted_products[3][2] ,
         \shifted_products[3][1] , \shifted_products[3][0] ,
         \shifted_products[2][8] , \shifted_products[2][7] ,
         \shifted_products[2][6] , \shifted_products[2][5] ,
         \shifted_products[2][4] , \shifted_products[2][3] ,
         \shifted_products[2][2] , \shifted_products[2][1] ,
         \shifted_products[2][0] , \shifted_products[1][6] ,
         \shifted_products[1][5] , \shifted_products[1][4] ,
         \shifted_products[1][3] , \shifted_products[1][2] ,
         \shifted_products[1][1] , \shifted_products[1][0] ,
         \shifted_products[0][9] , N99, N87, N86, N85, N84, N83, N82, N81, N80,
         N79, N78, N77, N76, N61, N60, N59, N58, N57, N56, N55, N54, N446,
         N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435,
         N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424,
         N423, N422, N421, N420, N419, N418, N417, N416, N415, N414, N413,
         N412, N411, N410, N409, N408, N407, N406, N405, N404, N403, N402,
         N401, N400, N399, N398, N397, N396, N395, N394, N393, N392, N391,
         N390, N389, N388, N387, N386, N385, N384, N383, N382, N381, N380,
         N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369,
         N368, N367, N366, N365, N364, N363, N362, N361, N360, N359, N358,
         N357, N356, N355, N354, N353, N352, N351, N350, N349, N348, N347,
         N346, N345, N344, N343, N342, N341, N340, N339, N338, N337, N336,
         N335, N334, N333, N332, N331, N330, N329, N328, N327, N326, N325,
         N324, N323, N322, N321, N320, N319, N318, N317, N316, N315, N314,
         N313, N312, N311, N310, N309, N308, N307, N306, N305, N304, N303,
         N302, N301, N300, N299, N298, N297, N296, N295, N294, N293, N292,
         N291, N290, N289, N288, N287, N286, N285, N284, N283, N282, N281,
         N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270,
         N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259,
         N258, N257, N256, N255, N254, N253, N252, N251, N250, N249, N248,
         N247, N246, N245, N244, N243, N242, N241, N240, N239, N238, N237,
         N236, N235, N234, N233, N232, N231, N230, N229, N214, N213, N212,
         N211, N210, N209, N208, N207, N206, N205, N204, N203, N202, N201,
         N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, N179,
         N178, N177, N176, N175, N174, N159, N158, N157, N156, N155, N154,
         N153, N152, N151, N150, N149, N148, N136, N135, N134, N133, N132,
         N131, N130, N129, N128, N127, N126, N125, N124, N123, N108, N107,
         N106, N105, N104, N103, N102, N101, N100,
         \add_14_root_add_199_I16/carry[6] ,
         \add_14_root_add_199_I16/carry[5] ,
         \add_14_root_add_199_I16/carry[4] ,
         \add_14_root_add_199_I16/carry[3] ,
         \add_14_root_add_199_I16/carry[2] ,
         \add_14_root_add_199_I16/carry[1] ,
         \add_13_root_add_199_I16/carry[9] ,
         \add_13_root_add_199_I16/carry[8] ,
         \add_13_root_add_199_I16/carry[7] ,
         \add_13_root_add_199_I16/carry[6] ,
         \add_13_root_add_199_I16/carry[5] ,
         \add_13_root_add_199_I16/carry[4] ,
         \add_13_root_add_199_I16/carry[3] ,
         \add_13_root_add_199_I16/carry[2] ,
         \add_13_root_add_199_I16/carry[1] ,
         \add_12_root_add_199_I16/carry[7] ,
         \add_12_root_add_199_I16/carry[6] ,
         \add_12_root_add_199_I16/carry[5] ,
         \add_12_root_add_199_I16/carry[4] ,
         \add_12_root_add_199_I16/carry[3] ,
         \add_12_root_add_199_I16/carry[2] ,
         \add_12_root_add_199_I16/carry[1] ,
         \add_11_root_add_199_I16/carry[11] ,
         \add_11_root_add_199_I16/carry[10] ,
         \add_11_root_add_199_I16/carry[9] ,
         \add_11_root_add_199_I16/carry[8] ,
         \add_11_root_add_199_I16/carry[7] ,
         \add_11_root_add_199_I16/carry[6] ,
         \add_11_root_add_199_I16/carry[5] ,
         \add_11_root_add_199_I16/carry[4] ,
         \add_11_root_add_199_I16/carry[3] ,
         \add_11_root_add_199_I16/carry[2] ,
         \add_11_root_add_199_I16/carry[1] ,
         \add_10_root_add_199_I16/carry[9] ,
         \add_10_root_add_199_I16/carry[8] ,
         \add_10_root_add_199_I16/carry[7] ,
         \add_10_root_add_199_I16/carry[6] ,
         \add_10_root_add_199_I16/carry[5] ,
         \add_10_root_add_199_I16/carry[4] ,
         \add_10_root_add_199_I16/carry[3] ,
         \add_10_root_add_199_I16/carry[2] ,
         \add_10_root_add_199_I16/carry[1] ,
         \add_9_root_add_199_I16/carry[13] ,
         \add_9_root_add_199_I16/carry[12] ,
         \add_9_root_add_199_I16/carry[11] ,
         \add_9_root_add_199_I16/carry[10] , \add_9_root_add_199_I16/carry[9] ,
         \add_9_root_add_199_I16/carry[8] , \add_9_root_add_199_I16/carry[7] ,
         \add_9_root_add_199_I16/carry[6] , \add_9_root_add_199_I16/carry[5] ,
         \add_9_root_add_199_I16/carry[4] , \add_9_root_add_199_I16/carry[3] ,
         \add_9_root_add_199_I16/carry[2] , \add_9_root_add_199_I16/carry[1] ,
         \add_8_root_add_199_I16/carry[11] ,
         \add_8_root_add_199_I16/carry[10] , \add_8_root_add_199_I16/carry[9] ,
         \add_8_root_add_199_I16/carry[8] , \add_8_root_add_199_I16/carry[7] ,
         \add_8_root_add_199_I16/carry[6] , \add_8_root_add_199_I16/carry[5] ,
         \add_8_root_add_199_I16/carry[4] , \add_8_root_add_199_I16/carry[3] ,
         \add_8_root_add_199_I16/carry[2] , \add_8_root_add_199_I16/carry[1] ,
         n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72,
         n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86,
         n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100,
         n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, n111,
         n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122,
         n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133,
         n134, n135, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246,
         n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257,
         n258, n259, n260, n261, n262, n263, n264, n265, n266, n267, n268,
         n269, n270, n271, n272, n273, n274, n275, n276, n277, n278, n279,
         n280, n281, n282, n283, n284, n285, n286, n287, n288, n289, n290,
         n291, n292, n293, n294, n295, n296, n297, n298, n299, n300, n301,
         n302, n303, n304, n305, n306, n307, n308, n309, n310, n311, n312,
         n313, n314, n315, n316, n317, n318, n319, n320, n321, n322, n323,
         n324, n325, n326, n327, n328, n329, n330;

  MAOI22D1 U26 ( .A1(\products[7][0] ), .A2(n318), .B1(n115), .B2(n321), .ZN(
        n319) );
  AN2XD1 U74 ( .A1(n324), .A2(n293), .Z(n294) );
  MAOI22D1 U112 ( .A1(\products[15][2] ), .A2(n281), .B1(n67), .B2(n310), .ZN(
        n282) );
  OA21D1 U130 ( .A1(n248), .A2(n66), .B(n284), .Z(n275) );
  AN2XD1 U134 ( .A1(n311), .A2(n301), .Z(n285) );
  AN2XD1 U191 ( .A1(n321), .A2(n316), .Z(n298) );
  AN2XD1 U239 ( .A1(n301), .A2(n321), .Z(n287) );
  shift_add_9_DW01_add_14_DW01_add_94 add_7_root_add_199_I16 ( .A({
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \shifted_products[14][14] , 
        \shifted_products[14][13] , \shifted_products[14][12] , 
        \shifted_products[14][11] , \shifted_products[14][10] , 
        \shifted_products[14][9] , \shifted_products[14][8] , 
        \shifted_products[14][7] , \shifted_products[14][6] , 
        \shifted_products[14][5] , \shifted_products[14][4] , 
        \shifted_products[14][3] , \shifted_products[14][2] , 
        \shifted_products[14][1] , \shifted_products[14][0] }), .B({
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \shifted_products[15][16] , \shifted_products[15][15] , 
        \shifted_products[15][14] , \shifted_products[15][13] , 
        \shifted_products[15][12] , \shifted_products[15][11] , 
        \shifted_products[15][10] , \shifted_products[15][9] , 
        \shifted_products[15][8] , \shifted_products[15][7] , 
        \shifted_products[15][6] , \shifted_products[15][5] , 
        \shifted_products[15][4] , \shifted_products[15][3] , 
        \shifted_products[15][2] , \shifted_products[15][1] , 
        \shifted_products[15][0] }), .CI(n250), .SUM({N257, N256, N255, N254, 
        N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, N243, N242, 
        N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, N231, N230, 
        N229}) );
  shift_add_9_DW01_add_6_DW01_add_86 add_4_root_add_0_root_add_199_I16 ( .A({
        n28, n28, n28, n28, n28, n28, n28, n28, n28, n28, n28, n28, n28, n28, 
        n28, n28, n28, n28, N214, N213, N212, N211, N210, N209, N208, N207, 
        N206, N205, N204, N203, N202, N201}), .B({N257, N257, N257, N257, N256, 
        N255, N254, N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, 
        N243, N242, N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, 
        N231, N230, N229}), .CI(n250), .SUM({N382, N381, N380, N379, N378, 
        N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, N367, N366, 
        N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, N355, N354, 
        N353, N352, N351}) );
  shift_add_9_DW01_add_5_DW01_add_85 add_3_root_add_0_root_add_199_I16 ( .A({
        n29, n29, n29, n29, n29, n29, n29, n29, n29, n29, n29, n29, n29, n29, 
        n29, n29, N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, 
        N179, N178, N177, N176, N175, N174}), .B({n5, n5, n5, n5, n5, n5, n5, 
        n5, n5, n5, n5, n5, n5, n5, n5, n5, n5, n5, n5, n4, N159, N158, N157, 
        N156, N155, N154, N153, N152, N151, N150, N149, N148}), .CI(n250), 
        .SUM({N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, N340, 
        N339, N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, N328, 
        N327, N326, N325, N324, N323, N322, N321, N320, N319}) );
  shift_add_9_DW01_add_4_DW01_add_84 add_5_root_add_199_I16 ( .A({n27, n27, 
        n27, n27, n27, n27, n27, n27, n27, n27, n27, n27, n27, n27, n27, n27, 
        n27, n27, n27, n27, n27, N108, N107, N106, N105, N104, N103, N102, 
        N101, N100, N99}), .B({n32, n32, n32, n32, n32, n32, n32, n32, n32, 
        n32, n32, n32, n32, n32, n32, n32, n32, N136, N135, N134, N133, N132, 
        N131, N130, N129, N128, N127, N126, N125, N124, N123}), .CI(n250), 
        .SUM({N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}) );
  shift_add_9_DW01_add_3_DW01_add_83 add_6_root_add_199_I16 ( .A({n24, n24, 
        n24, n24, n24, n24, n24, n24, n24, n24, n24, n24, n24, n24, n24, n24, 
        n24, n24, n24, n24, n24, n24, N61, N60, N59, N58, N57, N56, N55, N54}), 
        .B({n30, n30, n30, n30, n30, n30, n30, n30, n30, n30, n30, n30, n30, 
        n30, n30, n30, n30, n30, N87, N86, N85, N84, N83, N82, N81, N80, N79, 
        N78, N77, N76}), .CI(n250), .SUM({N287, N286, N285, N284, N283, N282, 
        N281, N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270, 
        N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259, N258}) );
  shift_add_9_DW01_add_2_DW01_add_82 add_2_root_add_0_root_add_199_I16 ( .A({
        N318, N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}), .B({N382, N381, N380, 
        N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, 
        N367, N366, N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, 
        N355, N354, N353, N352, N351}), .CI(n250), .SUM({N446, N445, N444, 
        N443, N442, N441, N440, N439, N438, N437, N436, N435, N434, N433, N432, 
        N431, N430, N429, N428, N427, N426, N425, N424, N423, N422, N421, N420, 
        N419, N418, N417, N416, N415}) );
  shift_add_9_DW01_add_1_DW01_add_81 add_1_root_add_0_root_add_199_I16 ( .A({
        N446, N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435, 
        N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424, N423, 
        N422, N421, N420, N419, N418, N417, N416, N415}), .B({N287, N287, N287, 
        N286, N285, N284, N283, N282, N281, N280, N279, N278, N277, N276, N275, 
        N274, N273, N272, N271, N270, N269, N268, N267, N266, N265, N264, N263, 
        N262, N261, N260, N259, N258}), .CI(n250), .SUM({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}) );
  shift_add_9_DW01_add_0_DW01_add_80 add_0_root_add_0_root_add_199_I16 ( .A({
        N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, N340, N339, 
        N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, N328, N327, 
        N326, N325, N324, N323, N322, N321, N320, N319}), .B({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}), .CI(n250), .SUM(shift_add_out) );
  CKND2D2 U2 ( .A1(n22), .A2(n23), .ZN(n24) );
  FA1D1 U3 ( .A(\shifted_products[2][8] ), .B(\shifted_products[3][8] ), .CI(
        \add_13_root_add_199_I16/carry[8] ), .CO(
        \add_13_root_add_199_I16/carry[9] ), .S(N84) );
  AOI222D2 U4 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(\products[4][5] ), 
        .B1(\add_12_root_add_199_I16/carry[7] ), .B2(\shifted_products[5][7] ), 
        .C1(\shifted_products[5][7] ), .C2(\products[4][5] ), .ZN(n57) );
  CKBD1 U5 ( .I(n307), .Z(n1) );
  CKBD0 U6 ( .I(n307), .Z(n2) );
  CKBD1 U7 ( .I(n307), .Z(n3) );
  BUFFD4 U8 ( .I(n315), .Z(n42) );
  CKBD1 U9 ( .I(n26), .Z(n4) );
  BUFFD2 U10 ( .I(n26), .Z(n5) );
  XOR3D1 U11 ( .A1(\products[9][5] ), .A2(n53), .A3(n51), .Z(n26) );
  FA1D1 U12 ( .A(\shifted_products[4][6] ), .B(\shifted_products[5][6] ), .CI(
        \add_12_root_add_199_I16/carry[6] ), .CO(
        \add_12_root_add_199_I16/carry[7] ), .S(N105) );
  NR2D1 U13 ( .A1(n325), .A2(n326), .ZN(n286) );
  ND2D1 U14 ( .A1(n256), .A2(n254), .ZN(n310) );
  ND3D1 U15 ( .A1(n7), .A2(n8), .A3(n9), .ZN(n56) );
  ND2D1 U16 ( .A1(n39), .A2(n311), .ZN(n325) );
  AN2XD1 U17 ( .A1(n310), .A2(n316), .Z(n10) );
  FA1D0 U18 ( .A(\products[0][1] ), .B(\shifted_products[1][1] ), .CI(
        \add_14_root_add_199_I16/carry[1] ), .CO(
        \add_14_root_add_199_I16/carry[2] ), .S(N55) );
  ND3D1 U19 ( .A1(n17), .A2(n18), .A3(n19), .ZN(n63) );
  ND2D1 U20 ( .A1(n20), .A2(n21), .ZN(n23) );
  CKXOR2D1 U21 ( .A1(n227), .A2(n64), .Z(n6) );
  OAI222D1 U22 ( .A1(n50), .A2(n51), .B1(n50), .B2(n54), .C1(n51), .C2(n54), 
        .ZN(n52) );
  INR2XD0 U23 ( .A1(n328), .B1(n247), .ZN(n317) );
  AN2D2 U24 ( .A1(n278), .A2(n42), .Z(n328) );
  OR2XD1 U25 ( .A1(n55), .A2(n118), .Z(n7) );
  OR2XD1 U27 ( .A1(n55), .A2(n36), .Z(n8) );
  OR2D1 U28 ( .A1(n118), .A2(n36), .Z(n9) );
  AOI222D2 U29 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \products[6][5] ), .B1(\add_11_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[7][11] ), .C1(\shifted_products[7][11] ), .C2(
        \products[6][5] ), .ZN(n55) );
  NR2D1 U30 ( .A1(n317), .A2(n231), .ZN(\shifted_products[1][1] ) );
  CKND2D1 U31 ( .A1(n256), .A2(n255), .ZN(n316) );
  AN2D1 U32 ( .A1(n44), .A2(\products[12][5] ), .Z(n11) );
  AN2D2 U33 ( .A1(n44), .A2(\products[13][5] ), .Z(n12) );
  AN2D1 U34 ( .A1(\products[12][5] ), .A2(\products[13][5] ), .Z(n13) );
  NR3D2 U35 ( .A1(n11), .A2(n12), .A3(n13), .ZN(n45) );
  OAI222D1 U36 ( .A1(n43), .A2(n84), .B1(n43), .B2(n46), .C1(n84), .C2(n46), 
        .ZN(n44) );
  CKND2D1 U37 ( .A1(n252), .A2(n251), .ZN(n329) );
  OAI222D1 U38 ( .A1(n57), .A2(n130), .B1(n57), .B2(n60), .C1(n130), .C2(n60), 
        .ZN(n58) );
  NR3D1 U39 ( .A1(n14), .A2(n15), .A3(n16), .ZN(n59) );
  AN2XD1 U40 ( .A1(n58), .A2(\products[5][5] ), .Z(n15) );
  NR2D1 U41 ( .A1(n41), .A2(n83), .ZN(\shifted_products[13][0] ) );
  CKAN2D0 U42 ( .A1(n304), .A2(n39), .Z(n324) );
  INR2D0 U43 ( .A1(n311), .B1(n247), .ZN(n304) );
  AN2D1 U44 ( .A1(n58), .A2(\products[4][5] ), .Z(n14) );
  AN2XD1 U45 ( .A1(\products[4][5] ), .A2(\products[5][5] ), .Z(n16) );
  CKAN2D0 U46 ( .A1(n304), .A2(n287), .Z(n258) );
  CKND2D0 U47 ( .A1(n239), .A2(n304), .ZN(n305) );
  CKND2D1 U48 ( .A1(n304), .A2(n235), .ZN(n303) );
  AOI222D1 U49 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[0][9] ), .B1(\add_14_root_add_199_I16/carry[6] ), 
        .B2(\shifted_products[1][6] ), .C1(\shifted_products[1][6] ), .C2(
        \shifted_products[0][9] ), .ZN(n65) );
  CKND2D0 U50 ( .A1(n6), .A2(n25), .ZN(n22) );
  OR2XD1 U51 ( .A1(n62), .A2(n61), .Z(n17) );
  OR2XD1 U52 ( .A1(n62), .A2(n35), .Z(n18) );
  OR2D1 U53 ( .A1(n61), .A2(n35), .Z(n19) );
  AOI222D2 U54 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(\products[2][5] ), .B1(\add_13_root_add_199_I16/carry[9] ), .B2(\shifted_products[3][9] ), .C1(
        \shifted_products[3][9] ), .C2(\products[2][5] ), .ZN(n62) );
  ND2D2 U55 ( .A1(n309), .A2(n286), .ZN(n315) );
  OAI22D0 U56 ( .A1(n317), .A2(n227), .B1(n286), .B2(n229), .ZN(
        \shifted_products[1][5] ) );
  INVD1 U57 ( .I(n6), .ZN(n20) );
  INVD1 U58 ( .I(n25), .ZN(n21) );
  INR2D1 U59 ( .A1(n321), .B1(n274), .ZN(n273) );
  CKND2D0 U60 ( .A1(n254), .A2(n253), .ZN(n301) );
  CKND2D0 U61 ( .A1(n256), .A2(n252), .ZN(n311) );
  CKND2D0 U62 ( .A1(n253), .A2(n252), .ZN(n302) );
  CKND2D0 U63 ( .A1(n254), .A2(n251), .ZN(n278) );
  OA222D0 U64 ( .A1(n65), .A2(n64), .B1(n65), .B2(n227), .C1(n64), .C2(n227), 
        .Z(n25) );
  AOI222D0 U65 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \products[10][5] ), .B1(\add_9_root_add_199_I16/carry[13] ), .B2(
        \shifted_products[11][13] ), .C1(\shifted_products[11][13] ), .C2(
        \products[10][5] ), .ZN(n48) );
  OAI22D0 U66 ( .A1(n3), .A2(n120), .B1(n238), .B2(n122), .ZN(
        \shifted_products[6][3] ) );
  INR2D1 U67 ( .A1(n321), .B1(n303), .ZN(n308) );
  CKND2 U68 ( .I(n274), .ZN(n235) );
  AOI222D1 U69 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(\products[8][5] ), .B1(\add_10_root_add_199_I16/carry[9] ), .B2(\shifted_products[9][9] ), .C1(
        \shifted_products[9][9] ), .C2(\products[8][5] ), .ZN(n50) );
  AOI222D1 U70 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \products[12][5] ), .B1(\add_8_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[13][11] ), .C1(\shifted_products[13][11] ), .C2(
        \products[12][5] ), .ZN(n43) );
  XOR3D2 U71 ( .A1(\products[5][5] ), .A2(n59), .A3(n130), .Z(n27) );
  XOR3D2 U72 ( .A1(\products[13][5] ), .A2(n45), .A3(n84), .Z(n28) );
  XOR3D1 U73 ( .A1(\products[11][5] ), .A2(n47), .A3(n34), .Z(n29) );
  AN2D2 U75 ( .A1(n298), .A2(n42), .Z(n295) );
  OAI22D0 U76 ( .A1(n317), .A2(n227), .B1(n286), .B2(n228), .ZN(
        \shifted_products[1][6] ) );
  NR2D0 U77 ( .A1(n322), .A2(n247), .ZN(n330) );
  CKAN2D0 U78 ( .A1(n287), .A2(n39), .Z(n292) );
  OAI21D0 U79 ( .A1(n68), .A2(n39), .B(n277), .ZN(\shifted_products[15][15] )
         );
  NR2D0 U80 ( .A1(n41), .A2(n71), .ZN(\shifted_products[15][0] ) );
  CKND2D0 U81 ( .A1(n304), .A2(n234), .ZN(n276) );
  CKND2D0 U82 ( .A1(n235), .A2(n287), .ZN(n322) );
  CKND1 U83 ( .I(\products[13][5] ), .ZN(n78) );
  NR2D0 U84 ( .A1(n117), .A2(n41), .ZN(\shifted_products[7][0] ) );
  CKND2D0 U85 ( .A1(\products[12][5] ), .A2(n322), .ZN(n264) );
  CKND2D0 U86 ( .A1(\products[8][5] ), .A2(n322), .ZN(n323) );
  CKND1 U87 ( .I(\products[7][5] ), .ZN(n112) );
  CKND2D0 U88 ( .A1(\products[3][5] ), .A2(n303), .ZN(n291) );
  NR2D0 U89 ( .A1(n274), .A2(n247), .ZN(n263) );
  CKND2D0 U90 ( .A1(\products[2][5] ), .A2(n303), .ZN(n288) );
  CKND2D0 U91 ( .A1(\products[10][5] ), .A2(n274), .ZN(n257) );
  CKND1 U92 ( .I(\products[6][5] ), .ZN(n118) );
  CKND1 U93 ( .I(\products[14][5] ), .ZN(n72) );
  ND2D2 U94 ( .A1(n287), .A2(n10), .ZN(n326) );
  CKND2D0 U95 ( .A1(\products[15][5] ), .A2(n274), .ZN(n284) );
  CKAN2D0 U96 ( .A1(n298), .A2(n309), .Z(n297) );
  CKND1 U97 ( .I(\products[5][5] ), .ZN(n124) );
  CKAN2D0 U98 ( .A1(n298), .A2(n317), .Z(n299) );
  OAI22D0 U99 ( .A1(n295), .A2(n130), .B1(n294), .B2(n132), .ZN(
        \shifted_products[4][5] ) );
  OAI22D0 U100 ( .A1(n295), .A2(n84), .B1(n293), .B2(n86), .ZN(
        \shifted_products[12][5] ) );
  OAI22D0 U101 ( .A1(n41), .A2(n126), .B1(n297), .B2(n128), .ZN(
        \shifted_products[5][3] ) );
  OAI22D0 U102 ( .A1(n295), .A2(n132), .B1(n294), .B2(n134), .ZN(
        \shifted_products[4][3] ) );
  OAI22D0 U103 ( .A1(n41), .A2(n68), .B1(n240), .B2(n70), .ZN(
        \shifted_products[15][3] ) );
  OAI22D0 U104 ( .A1(n2), .A2(n74), .B1(n239), .B2(n76), .ZN(
        \shifted_products[14][3] ) );
  OAI22D0 U105 ( .A1(n328), .A2(n92), .B1(n10), .B2(n94), .ZN(
        \shifted_products[11][3] ) );
  NR2D0 U106 ( .A1(n235), .A2(n97), .ZN(\shifted_products[10][3] ) );
  OAI22D0 U107 ( .A1(n317), .A2(n216), .B1(n290), .B2(n218), .ZN(
        \shifted_products[3][5] ) );
  OAI21D0 U108 ( .A1(n292), .A2(n225), .B(n288), .ZN(\shifted_products[2][5] )
         );
  OAI22D0 U109 ( .A1(n317), .A2(n218), .B1(n290), .B2(n220), .ZN(
        \shifted_products[3][3] ) );
  NR2D0 U110 ( .A1(n233), .A2(n223), .ZN(\shifted_products[2][3] ) );
  NR2D0 U111 ( .A1(n234), .A2(n108), .ZN(\shifted_products[8][3] ) );
  OAI22D0 U113 ( .A1(n40), .A2(n80), .B1(n237), .B2(n82), .ZN(
        \shifted_products[13][3] ) );
  OAI22D0 U114 ( .A1(n295), .A2(n86), .B1(n293), .B2(n88), .ZN(
        \shifted_products[12][3] ) );
  OAI22D0 U115 ( .A1(n114), .A2(n40), .B1(n236), .B2(n116), .ZN(
        \shifted_products[7][3] ) );
  OAI21D0 U116 ( .A1(n70), .A2(n39), .B(n277), .ZN(\shifted_products[15][13] )
         );
  NR2D0 U117 ( .A1(n317), .A2(n220), .ZN(\shifted_products[3][1] ) );
  NR2D0 U118 ( .A1(n41), .A2(n128), .ZN(\shifted_products[5][1] ) );
  NR2D0 U119 ( .A1(n295), .A2(n88), .ZN(\shifted_products[12][1] ) );
  NR2D0 U120 ( .A1(n41), .A2(n82), .ZN(\shifted_products[13][1] ) );
  NR2D0 U121 ( .A1(n116), .A2(n41), .ZN(\shifted_products[7][1] ) );
  NR2D0 U122 ( .A1(n235), .A2(n99), .ZN(\shifted_products[10][1] ) );
  NR2D0 U123 ( .A1(n41), .A2(n70), .ZN(\shifted_products[15][1] ) );
  OA21D0 U124 ( .A1(n292), .A2(n217), .B(n291), .Z(n35) );
  CKND1 U125 ( .I(\products[4][5] ), .ZN(n130) );
  CKAN2D0 U126 ( .A1(\products[0][5] ), .A2(n41), .Z(\shifted_products[0][9] )
         );
  XNR3D4 U127 ( .A1(\products[3][5] ), .A2(n61), .A3(n31), .ZN(n30) );
  AO222D1 U128 ( .A1(n63), .A2(\products[2][5] ), .B1(n63), .B2(
        \products[3][5] ), .C1(\products[2][5] ), .C2(\products[3][5] ), .Z(
        n31) );
  XNR3D4 U129 ( .A1(\products[7][5] ), .A2(n118), .A3(n33), .ZN(n32) );
  AO222D1 U131 ( .A1(n56), .A2(\products[6][5] ), .B1(n56), .B2(
        \products[7][5] ), .C1(\products[6][5] ), .C2(\products[7][5] ), .Z(
        n33) );
  CKAN2D0 U132 ( .A1(n298), .A2(n328), .Z(n268) );
  OAI21D0 U133 ( .A1(n67), .A2(n39), .B(n277), .ZN(\shifted_products[15][16] )
         );
  INR2XD0 U135 ( .A1(n278), .B1(n296), .ZN(n293) );
  CKAN2D0 U136 ( .A1(n316), .A2(n42), .Z(n307) );
  INR2D0 U137 ( .A1(n311), .B1(n289), .ZN(n290) );
  NR2D0 U138 ( .A1(n317), .A2(n221), .ZN(\shifted_products[3][0] ) );
  INR2D2 U139 ( .A1(n278), .B1(n247), .ZN(n309) );
  CKND2D0 U140 ( .A1(n39), .A2(n301), .ZN(n318) );
  CKND2D0 U141 ( .A1(n304), .A2(n301), .ZN(n271) );
  AOI22D0 U142 ( .A1(\products[14][0] ), .A2(n271), .B1(\products[14][4] ), 
        .B2(n270), .ZN(n272) );
  NR2D0 U143 ( .A1(n295), .A2(n135), .ZN(\shifted_products[4][0] ) );
  NR2D0 U144 ( .A1(n295), .A2(n89), .ZN(\shifted_products[12][0] ) );
  AOI22D0 U145 ( .A1(\products[6][4] ), .A2(n305), .B1(\products[6][0] ), .B2(
        n318), .ZN(n306) );
  NR2D0 U146 ( .A1(n235), .A2(n100), .ZN(\shifted_products[10][0] ) );
  NR2D0 U147 ( .A1(n234), .A2(n111), .ZN(\shifted_products[8][0] ) );
  CKND1 U148 ( .I(\products[15][4] ), .ZN(n67) );
  CKND1 U149 ( .I(\products[14][3] ), .ZN(n74) );
  OAI21D0 U150 ( .A1(n292), .A2(n222), .B(n288), .ZN(\shifted_products[2][8] )
         );
  OAI21D0 U151 ( .A1(n292), .A2(n219), .B(n291), .ZN(\shifted_products[3][8] )
         );
  NR2D0 U152 ( .A1(n233), .A2(n226), .ZN(\shifted_products[2][0] ) );
  CKND1 U153 ( .I(\products[13][3] ), .ZN(n80) );
  CKND1 U154 ( .I(\products[7][3] ), .ZN(n114) );
  CKND2D0 U155 ( .A1(n309), .A2(n316), .ZN(n312) );
  CKND2D0 U156 ( .A1(n298), .A2(n278), .ZN(n265) );
  CKND1 U157 ( .I(\products[6][3] ), .ZN(n120) );
  CKND1 U158 ( .I(\products[14][4] ), .ZN(n73) );
  CKND1 U159 ( .I(\products[7][4] ), .ZN(n113) );
  CKND1 U160 ( .I(\products[12][3] ), .ZN(n86) );
  CKND1 U161 ( .I(\products[13][4] ), .ZN(n79) );
  CKND1 U162 ( .I(\products[5][3] ), .ZN(n126) );
  OAI21D0 U163 ( .A1(n324), .A2(n108), .B(n323), .ZN(\shifted_products[8][7] )
         );
  CKND1 U164 ( .I(\products[6][4] ), .ZN(n119) );
  OAI21D0 U165 ( .A1(n324), .A2(n86), .B(n264), .ZN(\shifted_products[12][9] )
         );
  OAI22D0 U166 ( .A1(n234), .A2(n107), .B1(n324), .B2(n111), .ZN(
        \shifted_products[8][4] ) );
  OAI21D0 U167 ( .A1(n324), .A2(n110), .B(n323), .ZN(\shifted_products[8][5] )
         );
  OAI21D0 U168 ( .A1(n324), .A2(n88), .B(n264), .ZN(\shifted_products[12][7] )
         );
  OAI22D0 U169 ( .A1(n235), .A2(n96), .B1(n258), .B2(n100), .ZN(
        \shifted_products[10][4] ) );
  FA1D1 U170 ( .A(\shifted_products[2][6] ), .B(\shifted_products[3][6] ), 
        .CI(\add_13_root_add_199_I16/carry[6] ), .CO(
        \add_13_root_add_199_I16/carry[7] ), .S(N82) );
  OAI21D0 U171 ( .A1(n292), .A2(n224), .B(n288), .ZN(\shifted_products[2][6] )
         );
  OAI22D0 U172 ( .A1(n295), .A2(n131), .B1(n294), .B2(n133), .ZN(
        \shifted_products[4][4] ) );
  OAI22D0 U173 ( .A1(n295), .A2(n85), .B1(n293), .B2(n87), .ZN(
        \shifted_products[12][4] ) );
  OAI21D0 U174 ( .A1(n324), .A2(n109), .B(n323), .ZN(\shifted_products[8][6] )
         );
  AOI22D0 U175 ( .A1(\products[9][4] ), .A2(n326), .B1(\products[9][0] ), .B2(
        n325), .ZN(n327) );
  AOI22D0 U176 ( .A1(\products[15][4] ), .A2(n279), .B1(\products[15][0] ), 
        .B2(n281), .ZN(n280) );
  AOI22D0 U177 ( .A1(\products[11][0] ), .A2(n261), .B1(\products[11][4] ), 
        .B2(n289), .ZN(n262) );
  OAI22D0 U178 ( .A1(n244), .A2(n74), .B1(n273), .B2(n72), .ZN(
        \shifted_products[14][9] ) );
  OAI22D0 U179 ( .A1(n41), .A2(n127), .B1(n297), .B2(n129), .ZN(
        \shifted_products[5][2] ) );
  OAI22D0 U180 ( .A1(n295), .A2(n133), .B1(n294), .B2(n135), .ZN(
        \shifted_products[4][2] ) );
  OAI22D0 U181 ( .A1(n41), .A2(n81), .B1(n237), .B2(n83), .ZN(
        \shifted_products[13][2] ) );
  OAI22D0 U182 ( .A1(n295), .A2(n87), .B1(n293), .B2(n89), .ZN(
        \shifted_products[12][2] ) );
  OAI22D0 U183 ( .A1(n41), .A2(n69), .B1(n240), .B2(n71), .ZN(
        \shifted_products[15][2] ) );
  OAI22D0 U184 ( .A1(n2), .A2(n75), .B1(n239), .B2(n77), .ZN(
        \shifted_products[14][2] ) );
  OAI22D0 U185 ( .A1(n317), .A2(n228), .B1(n286), .B2(n230), .ZN(
        \shifted_products[1][4] ) );
  OAI22D0 U186 ( .A1(n317), .A2(n229), .B1(n286), .B2(n231), .ZN(
        \shifted_products[1][3] ) );
  OAI22D0 U187 ( .A1(n328), .A2(n93), .B1(n10), .B2(n95), .ZN(
        \shifted_products[11][2] ) );
  NR2D0 U188 ( .A1(n235), .A2(n98), .ZN(\shifted_products[10][2] ) );
  OAI22D0 U189 ( .A1(n317), .A2(n217), .B1(n290), .B2(n219), .ZN(
        \shifted_products[3][4] ) );
  OAI22D0 U190 ( .A1(n233), .A2(n222), .B1(n292), .B2(n226), .ZN(
        \shifted_products[2][4] ) );
  OAI22D0 U192 ( .A1(n317), .A2(n219), .B1(n290), .B2(n221), .ZN(
        \shifted_products[3][2] ) );
  NR2D0 U193 ( .A1(n233), .A2(n224), .ZN(\shifted_products[2][2] ) );
  OAI22D0 U194 ( .A1(n328), .A2(n104), .B1(n241), .B2(n106), .ZN(
        \shifted_products[9][2] ) );
  NR2D0 U195 ( .A1(n234), .A2(n109), .ZN(\shifted_products[8][2] ) );
  OAI22D0 U196 ( .A1(n3), .A2(n121), .B1(n238), .B2(n123), .ZN(
        \shifted_products[6][2] ) );
  CKAN2D0 U197 ( .A1(n317), .A2(n316), .Z(n320) );
  CKND1 U198 ( .I(\products[5][4] ), .ZN(n125) );
  CKND1 U199 ( .I(\products[4][4] ), .ZN(n131) );
  CKND1 U200 ( .I(\products[4][3] ), .ZN(n132) );
  CKAN2D0 U201 ( .A1(n328), .A2(n316), .Z(n283) );
  CKND2D0 U202 ( .A1(n287), .A2(n311), .ZN(n261) );
  CKND2D2 U203 ( .A1(n253), .A2(n255), .ZN(n321) );
  CKND1 U204 ( .I(\products[6][2] ), .ZN(n121) );
  CKND1 U205 ( .I(\products[12][2] ), .ZN(n87) );
  AOI22D0 U206 ( .A1(\products[7][2] ), .A2(n313), .B1(\products[7][4] ), .B2(
        n312), .ZN(n314) );
  AOI22D0 U207 ( .A1(\products[13][4] ), .A2(n265), .B1(\products[13][2] ), 
        .B2(n296), .ZN(n266) );
  OAI21D0 U208 ( .A1(n324), .A2(n87), .B(n264), .ZN(\shifted_products[12][8] )
         );
  AOI22D0 U209 ( .A1(\products[13][4] ), .A2(n296), .B1(\products[13][2] ), 
        .B2(n247), .ZN(n267) );
  OAI22D0 U210 ( .A1(n317), .A2(n230), .B1(n286), .B2(n232), .ZN(
        \shifted_products[1][2] ) );
  CKND1 U211 ( .I(\products[5][2] ), .ZN(n127) );
  CKND1 U212 ( .I(\products[4][2] ), .ZN(n133) );
  INVD1 U213 ( .I(n322), .ZN(n234) );
  INVD1 U214 ( .I(n303), .ZN(n233) );
  INVD1 U215 ( .I(n305), .ZN(n238) );
  CKBD1 U216 ( .I(n315), .Z(n41) );
  CKBD1 U217 ( .I(n315), .Z(n40) );
  INVD1 U218 ( .I(n326), .ZN(n241) );
  NR2D1 U219 ( .A1(n296), .A2(n325), .ZN(n300) );
  OAI22D1 U220 ( .A1(n300), .A2(n126), .B1(n299), .B2(n124), .ZN(
        \shifted_products[5][7] ) );
  ND2D1 U221 ( .A1(n328), .A2(n10), .ZN(n274) );
  INVD1 U222 ( .I(\products[15][5] ), .ZN(n66) );
  INVD1 U223 ( .I(n265), .ZN(n237) );
  NR2D1 U224 ( .A1(n2), .A2(n77), .ZN(\shifted_products[14][0] ) );
  INVD1 U225 ( .I(n312), .ZN(n236) );
  AOI222D0 U226 ( .A1(n49), .A2(\products[10][5] ), .B1(n49), .B2(
        \products[11][5] ), .C1(\products[10][5] ), .C2(\products[11][5] ), 
        .ZN(n34) );
  FA1D0 U227 ( .A(\shifted_products[12][5] ), .B(\shifted_products[13][5] ), 
        .CI(\add_8_root_add_199_I16/carry[5] ), .CO(
        \add_8_root_add_199_I16/carry[6] ), .S(N206) );
  OAI222D0 U228 ( .A1(n243), .A2(n82), .B1(n237), .B2(n80), .C1(n40), .C2(n78), 
        .ZN(\shifted_products[13][5] ) );
  FA1D0 U229 ( .A(\shifted_products[4][5] ), .B(\shifted_products[5][5] ), 
        .CI(\add_12_root_add_199_I16/carry[5] ), .CO(
        \add_12_root_add_199_I16/carry[6] ), .S(N104) );
  OAI222D0 U230 ( .A1(n297), .A2(n126), .B1(n300), .B2(n128), .C1(n40), .C2(
        n124), .ZN(\shifted_products[5][5] ) );
  FA1D0 U231 ( .A(\shifted_products[10][3] ), .B(\shifted_products[11][3] ), 
        .CI(\add_9_root_add_199_I16/carry[3] ), .CO(
        \add_9_root_add_199_I16/carry[4] ), .S(N177) );
  FA1D0 U232 ( .A(\shifted_products[4][3] ), .B(\shifted_products[5][3] ), 
        .CI(\add_12_root_add_199_I16/carry[3] ), .CO(
        \add_12_root_add_199_I16/carry[4] ), .S(N102) );
  FA1D0 U233 ( .A(\shifted_products[2][3] ), .B(\shifted_products[3][3] ), 
        .CI(\add_13_root_add_199_I16/carry[3] ), .CO(
        \add_13_root_add_199_I16/carry[4] ), .S(N79) );
  FA1D0 U234 ( .A(\shifted_products[2][5] ), .B(\shifted_products[3][5] ), 
        .CI(\add_13_root_add_199_I16/carry[5] ), .CO(
        \add_13_root_add_199_I16/carry[6] ), .S(N81) );
  FA1D0 U235 ( .A(\shifted_products[10][9] ), .B(\shifted_products[11][9] ), 
        .CI(\add_9_root_add_199_I16/carry[9] ), .CO(
        \add_9_root_add_199_I16/carry[10] ), .S(N183) );
  OAI22D1 U236 ( .A1(n242), .A2(n92), .B1(n263), .B2(n90), .ZN(
        \shifted_products[11][9] ) );
  OAI21D1 U237 ( .A1(n38), .A2(n99), .B(n259), .ZN(\shifted_products[10][9] )
         );
  FA1D0 U238 ( .A(\shifted_products[6][3] ), .B(\shifted_products[7][3] ), 
        .CI(\add_11_root_add_199_I16/carry[3] ), .CO(
        \add_11_root_add_199_I16/carry[4] ), .S(N126) );
  FA1D0 U240 ( .A(\shifted_products[12][3] ), .B(\shifted_products[13][3] ), 
        .CI(\add_8_root_add_199_I16/carry[3] ), .CO(
        \add_8_root_add_199_I16/carry[4] ), .S(N204) );
  FA1D0 U241 ( .A(\shifted_products[8][3] ), .B(\shifted_products[9][3] ), 
        .CI(\add_10_root_add_199_I16/carry[3] ), .CO(
        \add_10_root_add_199_I16/carry[4] ), .S(N151) );
  OAI22D1 U242 ( .A1(n328), .A2(n103), .B1(n241), .B2(n105), .ZN(
        \shifted_products[9][3] ) );
  OAI21D1 U243 ( .A1(n285), .A2(n68), .B(n275), .ZN(\shifted_products[15][11] ) );
  OAI21D1 U244 ( .A1(n38), .A2(n76), .B(n269), .ZN(\shifted_products[14][11] )
         );
  OAI21D1 U245 ( .A1(n38), .A2(n74), .B(n269), .ZN(\shifted_products[14][13] )
         );
  FA1D0 U246 ( .A(\shifted_products[10][11] ), .B(\shifted_products[11][11] ), 
        .CI(\add_9_root_add_199_I16/carry[11] ), .CO(
        \add_9_root_add_199_I16/carry[12] ), .S(N185) );
  OAI21D1 U247 ( .A1(n38), .A2(n94), .B(n260), .ZN(\shifted_products[11][11] )
         );
  OAI21D1 U248 ( .A1(n38), .A2(n97), .B(n259), .ZN(\shifted_products[10][11] )
         );
  FA1D0 U249 ( .A(\shifted_products[2][1] ), .B(\shifted_products[3][1] ), 
        .CI(\add_13_root_add_199_I16/carry[1] ), .CO(
        \add_13_root_add_199_I16/carry[2] ), .S(N77) );
  NR2D1 U250 ( .A1(n233), .A2(n225), .ZN(\shifted_products[2][1] ) );
  FA1D0 U251 ( .A(\shifted_products[6][1] ), .B(\shifted_products[7][1] ), 
        .CI(\add_11_root_add_199_I16/carry[1] ), .CO(
        \add_11_root_add_199_I16/carry[2] ), .S(N124) );
  NR2D1 U252 ( .A1(n3), .A2(n122), .ZN(\shifted_products[6][1] ) );
  FA1D0 U253 ( .A(\shifted_products[8][1] ), .B(\shifted_products[9][1] ), 
        .CI(\add_10_root_add_199_I16/carry[1] ), .CO(
        \add_10_root_add_199_I16/carry[2] ), .S(N149) );
  NR2D1 U254 ( .A1(n328), .A2(n105), .ZN(\shifted_products[9][1] ) );
  NR2D1 U255 ( .A1(n234), .A2(n110), .ZN(\shifted_products[8][1] ) );
  FA1D0 U256 ( .A(\shifted_products[10][1] ), .B(\shifted_products[11][1] ), 
        .CI(\add_9_root_add_199_I16/carry[1] ), .CO(
        \add_9_root_add_199_I16/carry[2] ), .S(N175) );
  NR2D1 U257 ( .A1(n328), .A2(n94), .ZN(\shifted_products[11][1] ) );
  NR2D1 U258 ( .A1(n1), .A2(n76), .ZN(\shifted_products[14][1] ) );
  FA1D0 U259 ( .A(\shifted_products[4][1] ), .B(\shifted_products[5][1] ), 
        .CI(\add_12_root_add_199_I16/carry[1] ), .CO(
        \add_12_root_add_199_I16/carry[2] ), .S(N100) );
  NR2D1 U260 ( .A1(n295), .A2(n134), .ZN(\shifted_products[4][1] ) );
  FA1D0 U261 ( .A(\shifted_products[12][1] ), .B(\shifted_products[13][1] ), 
        .CI(\add_8_root_add_199_I16/carry[1] ), .CO(
        \add_8_root_add_199_I16/carry[2] ), .S(N202) );
  NR2D1 U262 ( .A1(n328), .A2(n106), .ZN(\shifted_products[9][0] ) );
  FA1D0 U263 ( .A(\products[0][5] ), .B(\shifted_products[1][5] ), .CI(
        \add_14_root_add_199_I16/carry[5] ), .CO(
        \add_14_root_add_199_I16/carry[6] ), .S(N59) );
  NR2D1 U264 ( .A1(n3), .A2(n123), .ZN(\shifted_products[6][0] ) );
  INVD1 U265 ( .I(\products[12][5] ), .ZN(n84) );
  FA1D0 U266 ( .A(\shifted_products[2][7] ), .B(\shifted_products[3][7] ), 
        .CI(\add_13_root_add_199_I16/carry[7] ), .CO(
        \add_13_root_add_199_I16/carry[8] ), .S(N83) );
  OAI21D1 U267 ( .A1(n292), .A2(n220), .B(n291), .ZN(\shifted_products[3][7] )
         );
  OAI21D1 U268 ( .A1(n292), .A2(n223), .B(n288), .ZN(\shifted_products[2][7] )
         );
  INVD1 U269 ( .I(\products[1][5] ), .ZN(n227) );
  INVD1 U270 ( .I(n318), .ZN(n245) );
  OAI21D1 U271 ( .A1(n292), .A2(n218), .B(n291), .ZN(\shifted_products[3][9] )
         );
  OAI22D1 U272 ( .A1(n249), .A2(n80), .B1(n330), .B2(n78), .ZN(
        \shifted_products[13][11] ) );
  OAI22D1 U273 ( .A1(n249), .A2(n103), .B1(n330), .B2(n101), .ZN(
        \shifted_products[9][9] ) );
  OAI22D1 U274 ( .A1(n245), .A2(n114), .B1(n308), .B2(n112), .ZN(
        \shifted_products[7][11] ) );
  INVD1 U275 ( .I(\products[9][5] ), .ZN(n101) );
  INVD1 U276 ( .I(\products[11][5] ), .ZN(n90) );
  OAI21D1 U277 ( .A1(n38), .A2(n92), .B(n260), .ZN(\shifted_products[11][13] )
         );
  OAI22D1 U278 ( .A1(n249), .A2(n79), .B1(n330), .B2(n78), .ZN(
        \shifted_products[13][12] ) );
  OAI22D1 U279 ( .A1(n249), .A2(n102), .B1(n330), .B2(n101), .ZN(
        \shifted_products[9][10] ) );
  ND2D1 U280 ( .A1(\products[14][5] ), .A2(n276), .ZN(n269) );
  ND2D1 U281 ( .A1(\products[10][5] ), .A2(n276), .ZN(n259) );
  ND2D1 U282 ( .A1(\products[15][5] ), .A2(n276), .ZN(n277) );
  ND2D1 U283 ( .A1(\products[11][5] ), .A2(n276), .ZN(n260) );
  INVD1 U284 ( .I(n270), .ZN(n239) );
  INVD1 U285 ( .I(n325), .ZN(n249) );
  OAI22D1 U286 ( .A1(n300), .A2(n125), .B1(n299), .B2(n124), .ZN(
        \shifted_products[5][8] ) );
  INVD1 U287 ( .I(n271), .ZN(n244) );
  INVD1 U288 ( .I(n261), .ZN(n242) );
  OA22D0 U289 ( .A1(n245), .A2(n113), .B1(n308), .B2(n112), .Z(n36) );
  INVD1 U290 ( .I(n279), .ZN(n240) );
  INVD1 U291 ( .I(n313), .ZN(n246) );
  INVD1 U292 ( .I(n281), .ZN(n248) );
  INVD1 U293 ( .I(n296), .ZN(n243) );
  NR2D1 U294 ( .A1(n328), .A2(n95), .ZN(\shifted_products[11][0] ) );
  INVD1 U295 ( .I(\products[3][5] ), .ZN(n216) );
  OA21D1 U296 ( .A1(n38), .A2(n91), .B(n260), .Z(n37) );
  INVD1 U297 ( .I(n329), .ZN(n247) );
  ND2D1 U298 ( .A1(n301), .A2(n310), .ZN(n296) );
  INVD1 U299 ( .I(\products[15][3] ), .ZN(n68) );
  ND2D1 U300 ( .A1(n310), .A2(n316), .ZN(n289) );
  NR2D1 U301 ( .A1(n317), .A2(n232), .ZN(\shifted_products[1][0] ) );
  INVD1 U302 ( .I(\products[3][3] ), .ZN(n218) );
  FA1D0 U303 ( .A(\shifted_products[6][7] ), .B(\shifted_products[7][7] ), 
        .CI(\add_11_root_add_199_I16/carry[7] ), .CO(
        \add_11_root_add_199_I16/carry[8] ), .S(N130) );
  OAI222D0 U304 ( .A1(n233), .A2(n118), .B1(n245), .B2(n122), .C1(n321), .C2(
        n120), .ZN(\shifted_products[6][7] ) );
  OAI222D0 U305 ( .A1(n246), .A2(n114), .B1(n320), .B2(n112), .C1(n116), .C2(
        n321), .ZN(\shifted_products[7][7] ) );
  FA1D0 U306 ( .A(\shifted_products[8][7] ), .B(\shifted_products[9][7] ), 
        .CI(\add_10_root_add_199_I16/carry[7] ), .CO(
        \add_10_root_add_199_I16/carry[8] ), .S(N155) );
  OAI222D0 U307 ( .A1(n249), .A2(n105), .B1(n234), .B2(n101), .C1(n103), .C2(
        n329), .ZN(\shifted_products[9][7] ) );
  OAI222D0 U308 ( .A1(n40), .A2(n67), .B1(n240), .B2(n69), .C1(n71), .C2(n310), 
        .ZN(\shifted_products[15][4] ) );
  OAI222D0 U309 ( .A1(n2), .A2(n73), .B1(n239), .B2(n75), .C1(n321), .C2(n77), 
        .ZN(\shifted_products[14][4] ) );
  OAI222D0 U310 ( .A1(n40), .A2(n66), .B1(n240), .B2(n68), .C1(n70), .C2(n310), 
        .ZN(\shifted_products[15][5] ) );
  OAI222D0 U311 ( .A1(n2), .A2(n72), .B1(n239), .B2(n74), .C1(n321), .C2(n76), 
        .ZN(\shifted_products[14][5] ) );
  OAI222D0 U312 ( .A1(n235), .A2(n72), .B1(n244), .B2(n76), .C1(n321), .C2(n74), .ZN(\shifted_products[14][7] ) );
  OAI222D0 U313 ( .A1(n248), .A2(n70), .B1(n283), .B2(n66), .C1(n68), .C2(n310), .ZN(\shifted_products[15][7] ) );
  FA1D0 U314 ( .A(\shifted_products[8][4] ), .B(\shifted_products[9][4] ), 
        .CI(\add_10_root_add_199_I16/carry[4] ), .CO(
        \add_10_root_add_199_I16/carry[5] ), .S(N152) );
  OAI222D0 U315 ( .A1(n328), .A2(n102), .B1(n241), .B2(n104), .C1(n329), .C2(
        n106), .ZN(\shifted_products[9][4] ) );
  FA1D0 U316 ( .A(\shifted_products[10][4] ), .B(\shifted_products[11][4] ), 
        .CI(\add_9_root_add_199_I16/carry[4] ), .CO(
        \add_9_root_add_199_I16/carry[5] ), .S(N178) );
  OAI222D0 U317 ( .A1(n328), .A2(n91), .B1(n10), .B2(n93), .C1(n329), .C2(n95), 
        .ZN(\shifted_products[11][4] ) );
  FA1D0 U318 ( .A(\shifted_products[12][7] ), .B(\shifted_products[13][7] ), 
        .CI(\add_8_root_add_199_I16/carry[7] ), .CO(
        \add_8_root_add_199_I16/carry[8] ), .S(N208) );
  OAI222D0 U319 ( .A1(n243), .A2(n80), .B1(n268), .B2(n78), .C1(n329), .C2(n82), .ZN(\shifted_products[13][7] ) );
  FA1D0 U320 ( .A(\shifted_products[8][5] ), .B(\shifted_products[9][5] ), 
        .CI(\add_10_root_add_199_I16/carry[5] ), .CO(
        \add_10_root_add_199_I16/carry[6] ), .S(N153) );
  OAI222D0 U321 ( .A1(n328), .A2(n101), .B1(n241), .B2(n103), .C1(n329), .C2(
        n105), .ZN(\shifted_products[9][5] ) );
  FA1D0 U322 ( .A(\shifted_products[10][5] ), .B(\shifted_products[11][5] ), 
        .CI(\add_9_root_add_199_I16/carry[5] ), .CO(
        \add_9_root_add_199_I16/carry[6] ), .S(N179) );
  OAI222D0 U323 ( .A1(n328), .A2(n90), .B1(n10), .B2(n92), .C1(n329), .C2(n94), 
        .ZN(\shifted_products[11][5] ) );
  OAI21D1 U324 ( .A1(n258), .A2(n99), .B(n257), .ZN(\shifted_products[10][5] )
         );
  FA1D0 U325 ( .A(\shifted_products[6][9] ), .B(\shifted_products[7][9] ), 
        .CI(\add_11_root_add_199_I16/carry[9] ), .CO(
        \add_11_root_add_199_I16/carry[10] ), .S(N132) );
  OAI222D0 U326 ( .A1(n233), .A2(n112), .B1(n245), .B2(n116), .C1(n321), .C2(
        n114), .ZN(\shifted_products[7][9] ) );
  OAI22D1 U327 ( .A1(n245), .A2(n120), .B1(n308), .B2(n118), .ZN(
        \shifted_products[6][9] ) );
  FA1D0 U328 ( .A(\shifted_products[12][9] ), .B(\shifted_products[13][9] ), 
        .CI(\add_8_root_add_199_I16/carry[9] ), .CO(
        \add_8_root_add_199_I16/carry[10] ), .S(N210) );
  OAI222D0 U329 ( .A1(n249), .A2(n82), .B1(n234), .B2(n78), .C1(n329), .C2(n80), .ZN(\shifted_products[13][9] ) );
  FA1D0 U330 ( .A(\shifted_products[10][7] ), .B(\shifted_products[11][7] ), 
        .CI(\add_9_root_add_199_I16/carry[7] ), .CO(
        \add_9_root_add_199_I16/carry[8] ), .S(N181) );
  OAI222D0 U331 ( .A1(n235), .A2(n90), .B1(n242), .B2(n94), .C1(n329), .C2(n92), .ZN(\shifted_products[11][7] ) );
  OAI21D1 U332 ( .A1(n258), .A2(n97), .B(n257), .ZN(\shifted_products[10][7] )
         );
  FA1D0 U333 ( .A(\shifted_products[10][8] ), .B(\shifted_products[11][8] ), 
        .CI(\add_9_root_add_199_I16/carry[8] ), .CO(
        \add_9_root_add_199_I16/carry[9] ), .S(N182) );
  OAI222D0 U334 ( .A1(n235), .A2(n90), .B1(n242), .B2(n93), .C1(n329), .C2(n91), .ZN(\shifted_products[11][8] ) );
  OAI221D0 U335 ( .A1(n258), .A2(n96), .B1(n39), .B2(n100), .C(n257), .ZN(
        \shifted_products[10][8] ) );
  FA1D0 U336 ( .A(\shifted_products[10][10] ), .B(\shifted_products[11][10] ), 
        .CI(\add_9_root_add_199_I16/carry[10] ), .CO(
        \add_9_root_add_199_I16/carry[11] ), .S(N184) );
  OAI222D0 U337 ( .A1(n242), .A2(n91), .B1(n263), .B2(n90), .C1(n38), .C2(n95), 
        .ZN(\shifted_products[11][10] ) );
  OAI21D1 U338 ( .A1(n38), .A2(n98), .B(n259), .ZN(\shifted_products[10][10] )
         );
  FA1D0 U339 ( .A(\shifted_products[12][4] ), .B(\shifted_products[13][4] ), 
        .CI(\add_8_root_add_199_I16/carry[4] ), .CO(
        \add_8_root_add_199_I16/carry[5] ), .S(N205) );
  OAI222D0 U340 ( .A1(n243), .A2(n83), .B1(n237), .B2(n81), .C1(n40), .C2(n79), 
        .ZN(\shifted_products[13][4] ) );
  FA1D0 U341 ( .A(\shifted_products[6][5] ), .B(\shifted_products[7][5] ), 
        .CI(\add_11_root_add_199_I16/carry[5] ), .CO(
        \add_11_root_add_199_I16/carry[6] ), .S(N128) );
  OAI222D0 U342 ( .A1(n3), .A2(n118), .B1(n238), .B2(n120), .C1(n321), .C2(
        n122), .ZN(\shifted_products[6][5] ) );
  OAI222D0 U343 ( .A1(n236), .A2(n114), .B1(n246), .B2(n116), .C1(n112), .C2(
        n41), .ZN(\shifted_products[7][5] ) );
  OAI222D0 U344 ( .A1(n292), .A2(n221), .B1(n290), .B2(n217), .C1(n317), .C2(
        n216), .ZN(\shifted_products[3][6] ) );
  FA1D0 U345 ( .A(\shifted_products[4][4] ), .B(\shifted_products[5][4] ), 
        .CI(\add_12_root_add_199_I16/carry[4] ), .CO(
        \add_12_root_add_199_I16/carry[5] ), .S(N103) );
  OAI222D0 U346 ( .A1(n297), .A2(n127), .B1(n300), .B2(n129), .C1(n40), .C2(
        n125), .ZN(\shifted_products[5][4] ) );
  FA1D0 U347 ( .A(\shifted_products[6][4] ), .B(\shifted_products[7][4] ), 
        .CI(\add_11_root_add_199_I16/carry[4] ), .CO(
        \add_11_root_add_199_I16/carry[5] ), .S(N127) );
  OAI222D0 U348 ( .A1(n3), .A2(n119), .B1(n238), .B2(n121), .C1(n321), .C2(
        n123), .ZN(\shifted_products[6][4] ) );
  OAI222D0 U349 ( .A1(n236), .A2(n115), .B1(n246), .B2(n117), .C1(n113), .C2(
        n41), .ZN(\shifted_products[7][4] ) );
  FA1D0 U350 ( .A(\shifted_products[8][6] ), .B(\shifted_products[9][6] ), 
        .CI(\add_10_root_add_199_I16/carry[6] ), .CO(
        \add_10_root_add_199_I16/carry[7] ), .S(N154) );
  OAI221D0 U351 ( .A1(n328), .A2(n101), .B1(n104), .B2(n329), .C(n327), .ZN(
        \shifted_products[9][6] ) );
  OAI221D0 U352 ( .A1(n40), .A2(n66), .B1(n69), .B2(n310), .C(n280), .ZN(
        \shifted_products[15][6] ) );
  OAI221D0 U353 ( .A1(n2), .A2(n72), .B1(n321), .B2(n75), .C(n272), .ZN(
        \shifted_products[14][6] ) );
  FA1D0 U354 ( .A(\shifted_products[10][6] ), .B(\shifted_products[11][6] ), 
        .CI(\add_9_root_add_199_I16/carry[6] ), .CO(
        \add_9_root_add_199_I16/carry[7] ), .S(N180) );
  OAI221D0 U355 ( .A1(n328), .A2(n90), .B1(n329), .B2(n93), .C(n262), .ZN(
        \shifted_products[11][6] ) );
  OAI21D1 U356 ( .A1(n258), .A2(n98), .B(n257), .ZN(\shifted_products[10][6] )
         );
  OAI221D0 U357 ( .A1(n285), .A2(n70), .B1(n248), .B2(n68), .C(n284), .ZN(
        \shifted_products[15][9] ) );
  OAI221D0 U358 ( .A1(n285), .A2(n69), .B1(n248), .B2(n67), .C(n284), .ZN(
        \shifted_products[15][10] ) );
  OAI222D0 U359 ( .A1(n244), .A2(n73), .B1(n273), .B2(n72), .C1(n38), .C2(n77), 
        .ZN(\shifted_products[14][10] ) );
  FA1D0 U360 ( .A(\shifted_products[6][8] ), .B(\shifted_products[7][8] ), 
        .CI(\add_11_root_add_199_I16/carry[8] ), .CO(
        \add_11_root_add_199_I16/carry[9] ), .S(N131) );
  OAI221D0 U361 ( .A1(n320), .A2(n112), .B1(n246), .B2(n113), .C(n319), .ZN(
        \shifted_products[7][8] ) );
  OAI222D0 U362 ( .A1(n233), .A2(n118), .B1(n245), .B2(n121), .C1(n321), .C2(
        n119), .ZN(\shifted_products[6][8] ) );
  OAI221D0 U363 ( .A1(n285), .A2(n67), .B1(n71), .B2(n39), .C(n275), .ZN(
        \shifted_products[15][12] ) );
  OAI21D1 U364 ( .A1(n38), .A2(n75), .B(n269), .ZN(\shifted_products[14][12] )
         );
  FA1D0 U365 ( .A(\shifted_products[10][2] ), .B(\shifted_products[11][2] ), 
        .CI(\add_9_root_add_199_I16/carry[2] ), .CO(
        \add_9_root_add_199_I16/carry[3] ), .S(N176) );
  FA1D0 U366 ( .A(\shifted_products[4][2] ), .B(\shifted_products[5][2] ), 
        .CI(\add_12_root_add_199_I16/carry[2] ), .CO(
        \add_12_root_add_199_I16/carry[3] ), .S(N101) );
  FA1D0 U367 ( .A(\shifted_products[2][2] ), .B(\shifted_products[3][2] ), 
        .CI(\add_13_root_add_199_I16/carry[2] ), .CO(
        \add_13_root_add_199_I16/carry[3] ), .S(N78) );
  FA1D0 U368 ( .A(\shifted_products[2][4] ), .B(\shifted_products[3][4] ), 
        .CI(\add_13_root_add_199_I16/carry[4] ), .CO(
        \add_13_root_add_199_I16/carry[5] ), .S(N80) );
  FA1D0 U369 ( .A(\shifted_products[6][2] ), .B(\shifted_products[7][2] ), 
        .CI(\add_11_root_add_199_I16/carry[2] ), .CO(
        \add_11_root_add_199_I16/carry[3] ), .S(N125) );
  OAI22D1 U370 ( .A1(n115), .A2(n40), .B1(n236), .B2(n117), .ZN(
        \shifted_products[7][2] ) );
  FA1D0 U371 ( .A(\shifted_products[12][2] ), .B(\shifted_products[13][2] ), 
        .CI(\add_8_root_add_199_I16/carry[2] ), .CO(
        \add_8_root_add_199_I16/carry[3] ), .S(N203) );
  FA1D0 U372 ( .A(\shifted_products[8][2] ), .B(\shifted_products[9][2] ), 
        .CI(\add_10_root_add_199_I16/carry[2] ), .CO(
        \add_10_root_add_199_I16/carry[3] ), .S(N150) );
  FA1D0 U373 ( .A(\products[0][3] ), .B(\shifted_products[1][3] ), .CI(
        \add_14_root_add_199_I16/carry[3] ), .CO(
        \add_14_root_add_199_I16/carry[4] ), .S(N57) );
  FA1D0 U374 ( .A(\products[0][4] ), .B(\shifted_products[1][4] ), .CI(
        \add_14_root_add_199_I16/carry[4] ), .CO(
        \add_14_root_add_199_I16/carry[5] ), .S(N58) );
  INVD1 U375 ( .I(\products[12][4] ), .ZN(n85) );
  INVD1 U376 ( .I(\products[3][4] ), .ZN(n217) );
  FA1D0 U377 ( .A(\shifted_products[6][10] ), .B(\shifted_products[7][10] ), 
        .CI(\add_11_root_add_199_I16/carry[10] ), .CO(
        \add_11_root_add_199_I16/carry[11] ), .S(N133) );
  OAI222D0 U378 ( .A1(n233), .A2(n112), .B1(n245), .B2(n115), .C1(n321), .C2(
        n113), .ZN(\shifted_products[7][10] ) );
  OAI22D1 U379 ( .A1(n245), .A2(n119), .B1(n308), .B2(n118), .ZN(
        \shifted_products[6][10] ) );
  OAI21D1 U380 ( .A1(n69), .A2(n39), .B(n277), .ZN(\shifted_products[15][14] )
         );
  OAI21D1 U381 ( .A1(n39), .A2(n73), .B(n269), .ZN(\shifted_products[14][14] )
         );
  FA1D0 U382 ( .A(\shifted_products[10][12] ), .B(\shifted_products[11][12] ), 
        .CI(\add_9_root_add_199_I16/carry[12] ), .CO(
        \add_9_root_add_199_I16/carry[13] ), .S(N186) );
  OAI21D1 U383 ( .A1(n38), .A2(n93), .B(n260), .ZN(\shifted_products[11][12] )
         );
  OAI21D1 U384 ( .A1(n38), .A2(n96), .B(n259), .ZN(\shifted_products[10][12] )
         );
  FA1D0 U385 ( .A(\shifted_products[12][10] ), .B(\shifted_products[13][10] ), 
        .CI(\add_8_root_add_199_I16/carry[10] ), .CO(
        \add_8_root_add_199_I16/carry[11] ), .S(N211) );
  OAI21D1 U386 ( .A1(n324), .A2(n85), .B(n264), .ZN(\shifted_products[12][10] ) );
  OAI222D0 U387 ( .A1(n249), .A2(n81), .B1(n234), .B2(n78), .C1(n329), .C2(n79), .ZN(\shifted_products[13][10] ) );
  FA1D0 U388 ( .A(\shifted_products[8][8] ), .B(\shifted_products[9][8] ), 
        .CI(\add_10_root_add_199_I16/carry[8] ), .CO(
        \add_10_root_add_199_I16/carry[9] ), .S(N156) );
  OAI21D1 U389 ( .A1(n324), .A2(n107), .B(n323), .ZN(\shifted_products[8][8] )
         );
  OAI222D0 U390 ( .A1(n249), .A2(n104), .B1(n234), .B2(n101), .C1(n329), .C2(
        n102), .ZN(\shifted_products[9][8] ) );
  OAI22D1 U391 ( .A1(n295), .A2(n130), .B1(n294), .B2(n131), .ZN(
        \shifted_products[4][6] ) );
  OAI222D0 U392 ( .A1(n297), .A2(n125), .B1(n300), .B2(n127), .C1(n40), .C2(
        n124), .ZN(\shifted_products[5][6] ) );
  NR2D1 U393 ( .A1(n41), .A2(n129), .ZN(\shifted_products[5][0] ) );
  INVD1 U394 ( .I(\products[1][4] ), .ZN(n228) );
  INVD1 U395 ( .I(\products[1][3] ), .ZN(n229) );
  INVD1 U396 ( .I(\products[2][4] ), .ZN(n222) );
  CKBD1 U397 ( .I(n302), .Z(n39) );
  ND2D1 U398 ( .A1(n329), .A2(n321), .ZN(n281) );
  INVD1 U399 ( .I(\products[11][3] ), .ZN(n92) );
  INVD1 U400 ( .I(\products[9][3] ), .ZN(n103) );
  INVD1 U401 ( .I(\products[11][4] ), .ZN(n91) );
  ND2D1 U402 ( .A1(n310), .A2(n278), .ZN(n270) );
  ND2D1 U403 ( .A1(n278), .A2(n316), .ZN(n279) );
  ND2D1 U404 ( .A1(n311), .A2(n310), .ZN(n313) );
  INVD1 U405 ( .I(\products[9][4] ), .ZN(n102) );
  INVD1 U406 ( .I(\products[10][4] ), .ZN(n96) );
  INVD1 U407 ( .I(\products[10][3] ), .ZN(n97) );
  INVD1 U408 ( .I(\products[8][4] ), .ZN(n107) );
  INVD1 U409 ( .I(\products[2][3] ), .ZN(n223) );
  INVD1 U410 ( .I(\products[8][3] ), .ZN(n108) );
  CKBD1 U411 ( .I(n302), .Z(n38) );
  INVD1 U412 ( .I(\products[15][1] ), .ZN(n70) );
  INVD1 U413 ( .I(\products[7][1] ), .ZN(n116) );
  INVD1 U414 ( .I(\products[14][1] ), .ZN(n76) );
  INVD1 U415 ( .I(\products[13][1] ), .ZN(n82) );
  INVD1 U416 ( .I(\products[6][1] ), .ZN(n122) );
  INVD1 U417 ( .I(\products[5][1] ), .ZN(n128) );
  INVD1 U418 ( .I(\products[12][1] ), .ZN(n88) );
  INVD1 U419 ( .I(\products[3][1] ), .ZN(n220) );
  INVD1 U420 ( .I(\products[4][1] ), .ZN(n134) );
  INVD1 U421 ( .I(\products[1][1] ), .ZN(n231) );
  INVD1 U422 ( .I(\products[2][1] ), .ZN(n225) );
  INVD1 U423 ( .I(\products[15][0] ), .ZN(n71) );
  INVD1 U424 ( .I(\products[14][0] ), .ZN(n77) );
  INVD1 U425 ( .I(\products[11][0] ), .ZN(n95) );
  INVD1 U426 ( .I(\products[7][0] ), .ZN(n117) );
  INVD1 U427 ( .I(\products[6][0] ), .ZN(n123) );
  INVD1 U428 ( .I(\products[9][0] ), .ZN(n106) );
  INVD1 U429 ( .I(\products[11][1] ), .ZN(n94) );
  INVD1 U430 ( .I(\products[9][1] ), .ZN(n105) );
  INVD1 U431 ( .I(\products[10][1] ), .ZN(n99) );
  INVD1 U432 ( .I(\products[8][1] ), .ZN(n110) );
  INVD1 U433 ( .I(\products[15][2] ), .ZN(n69) );
  INVD1 U434 ( .I(\products[14][2] ), .ZN(n75) );
  INVD1 U435 ( .I(\products[13][2] ), .ZN(n81) );
  INVD1 U436 ( .I(\products[7][2] ), .ZN(n115) );
  FA1D0 U437 ( .A(\shifted_products[6][6] ), .B(\shifted_products[7][6] ), 
        .CI(\add_11_root_add_199_I16/carry[6] ), .CO(
        \add_11_root_add_199_I16/carry[7] ), .S(N129) );
  OAI221D0 U438 ( .A1(n112), .A2(n40), .B1(n321), .B2(n117), .C(n314), .ZN(
        \shifted_products[7][6] ) );
  OAI221D0 U439 ( .A1(n3), .A2(n118), .B1(n321), .B2(n121), .C(n306), .ZN(
        \shifted_products[6][6] ) );
  FA1D0 U440 ( .A(\shifted_products[12][6] ), .B(\shifted_products[13][6] ), 
        .CI(\add_8_root_add_199_I16/carry[6] ), .CO(
        \add_8_root_add_199_I16/carry[7] ), .S(N207) );
  OAI222D0 U441 ( .A1(n295), .A2(n84), .B1(n293), .B2(n85), .C1(n324), .C2(n89), .ZN(\shifted_products[12][6] ) );
  OAI221D0 U442 ( .A1(n40), .A2(n78), .B1(n329), .B2(n83), .C(n266), .ZN(
        \shifted_products[13][6] ) );
  OAI222D0 U443 ( .A1(n235), .A2(n72), .B1(n244), .B2(n75), .C1(n321), .C2(n73), .ZN(\shifted_products[14][8] ) );
  OAI221D0 U444 ( .A1(n283), .A2(n66), .B1(n285), .B2(n71), .C(n282), .ZN(
        \shifted_products[15][8] ) );
  FA1D0 U445 ( .A(\shifted_products[12][8] ), .B(\shifted_products[13][8] ), 
        .CI(\add_8_root_add_199_I16/carry[8] ), .CO(
        \add_8_root_add_199_I16/carry[9] ), .S(N209) );
  OAI221D0 U446 ( .A1(n268), .A2(n78), .B1(n249), .B2(n83), .C(n267), .ZN(
        \shifted_products[13][8] ) );
  FA1D0 U447 ( .A(\products[0][2] ), .B(\shifted_products[1][2] ), .CI(
        \add_14_root_add_199_I16/carry[2] ), .CO(
        \add_14_root_add_199_I16/carry[3] ), .S(N56) );
  INVD1 U448 ( .I(\products[1][2] ), .ZN(n230) );
  INVD1 U449 ( .I(\products[11][2] ), .ZN(n93) );
  INVD1 U450 ( .I(\products[9][2] ), .ZN(n104) );
  INVD1 U451 ( .I(\products[3][2] ), .ZN(n219) );
  INVD1 U452 ( .I(\products[10][2] ), .ZN(n98) );
  INVD1 U453 ( .I(\products[2][2] ), .ZN(n224) );
  INVD1 U454 ( .I(\products[8][2] ), .ZN(n109) );
  INVD1 U455 ( .I(\products[13][0] ), .ZN(n83) );
  INVD1 U456 ( .I(\products[5][0] ), .ZN(n129) );
  INVD1 U457 ( .I(\products[12][0] ), .ZN(n89) );
  INVD1 U458 ( .I(\products[1][0] ), .ZN(n232) );
  INVD1 U459 ( .I(\products[4][0] ), .ZN(n135) );
  INVD1 U460 ( .I(\products[10][0] ), .ZN(n100) );
  INVD1 U461 ( .I(\products[3][0] ), .ZN(n221) );
  INVD1 U462 ( .I(\products[2][0] ), .ZN(n226) );
  INVD1 U463 ( .I(\products[8][0] ), .ZN(n111) );
  INR3D0 U464 ( .A1(input_bitwidth[2]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[1]), .ZN(n252) );
  INR3D0 U465 ( .A1(weight_bitwidth[0]), .B1(weight_bitwidth[1]), .B2(
        weight_bitwidth[2]), .ZN(n251) );
  INR3D0 U466 ( .A1(input_bitwidth[0]), .B1(input_bitwidth[1]), .B2(
        input_bitwidth[2]), .ZN(n255) );
  INR3D0 U467 ( .A1(input_bitwidth[1]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[2]), .ZN(n254) );
  INR3D0 U468 ( .A1(weight_bitwidth[1]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[2]), .ZN(n256) );
  INR3D0 U469 ( .A1(weight_bitwidth[2]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[1]), .ZN(n253) );
  TIEL U470 ( .ZN(n250) );
  AN2D0 U471 ( .A1(\shifted_products[2][0] ), .A2(\shifted_products[3][0] ), 
        .Z(\add_13_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U472 ( .A1(\shifted_products[3][0] ), .A2(\shifted_products[2][0] ), 
        .Z(N76) );
  AN2D0 U473 ( .A1(\products[0][0] ), .A2(\shifted_products[1][0] ), .Z(
        \add_14_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U474 ( .A1(\shifted_products[1][0] ), .A2(\products[0][0] ), .Z(N54) );
  AN2D0 U475 ( .A1(\shifted_products[12][0] ), .A2(\shifted_products[13][0] ), 
        .Z(\add_8_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U476 ( .A1(\shifted_products[13][0] ), .A2(
        \shifted_products[12][0] ), .Z(N201) );
  AN2D0 U477 ( .A1(\shifted_products[6][0] ), .A2(\shifted_products[7][0] ), 
        .Z(\add_11_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U478 ( .A1(\shifted_products[7][0] ), .A2(\shifted_products[6][0] ), 
        .Z(N123) );
  AN2D0 U479 ( .A1(\shifted_products[4][0] ), .A2(\shifted_products[5][0] ), 
        .Z(\add_12_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U480 ( .A1(\shifted_products[5][0] ), .A2(\shifted_products[4][0] ), 
        .Z(N99) );
  AN2D0 U481 ( .A1(\shifted_products[8][0] ), .A2(\shifted_products[9][0] ), 
        .Z(\add_10_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U482 ( .A1(\shifted_products[9][0] ), .A2(\shifted_products[8][0] ), 
        .Z(N148) );
  AN2D0 U483 ( .A1(\shifted_products[10][0] ), .A2(\shifted_products[11][0] ), 
        .Z(\add_9_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U484 ( .A1(\shifted_products[11][0] ), .A2(
        \shifted_products[10][0] ), .Z(N174) );
  XOR3D0 U485 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[13][11] ), .A3(\products[12][5] ), .Z(N212) );
  XOR3D0 U486 ( .A1(\shifted_products[13][12] ), .A2(n43), .A3(n84), .Z(N213)
         );
  XOR3D0 U487 ( .A1(\products[13][5] ), .A2(\products[12][5] ), .A3(n44), .Z(
        N214) );
  CKND0 U488 ( .I(\shifted_products[13][12] ), .ZN(n46) );
  XNR3D0 U489 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \shifted_products[11][13] ), .A3(n47), .ZN(N187) );
  XNR3D0 U490 ( .A1(n37), .A2(n48), .A3(n47), .ZN(N188) );
  XNR3D0 U491 ( .A1(\products[11][5] ), .A2(n47), .A3(n49), .ZN(N189) );
  OAI222D0 U492 ( .A1(n48), .A2(n47), .B1(n48), .B2(n37), .C1(n47), .C2(n37), 
        .ZN(n49) );
  CKND0 U493 ( .I(\products[10][5] ), .ZN(n47) );
  XOR3D0 U494 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[9][9] ), .A3(\products[8][5] ), .Z(N157) );
  XOR3D0 U495 ( .A1(\shifted_products[9][10] ), .A2(n50), .A3(n51), .Z(N158)
         );
  XOR3D0 U496 ( .A1(\products[9][5] ), .A2(\products[8][5] ), .A3(n52), .Z(
        N159) );
  AOI222D0 U497 ( .A1(n52), .A2(\products[8][5] ), .B1(n52), .B2(
        \products[9][5] ), .C1(\products[8][5] ), .C2(\products[9][5] ), .ZN(
        n53) );
  CKND0 U498 ( .I(\shifted_products[9][10] ), .ZN(n54) );
  CKND0 U499 ( .I(\products[8][5] ), .ZN(n51) );
  XNR3D0 U500 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[7][11] ), .A3(n118), .ZN(N134) );
  XNR3D0 U501 ( .A1(n36), .A2(n55), .A3(n118), .ZN(N135) );
  XNR3D0 U502 ( .A1(\products[7][5] ), .A2(n118), .A3(n56), .ZN(N136) );
  XOR3D0 U503 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(
        \shifted_products[5][7] ), .A3(\products[4][5] ), .Z(N106) );
  XOR3D0 U504 ( .A1(\shifted_products[5][8] ), .A2(n57), .A3(n130), .Z(N107)
         );
  XOR3D0 U505 ( .A1(\products[5][5] ), .A2(\products[4][5] ), .A3(n58), .Z(
        N108) );
  CKND0 U506 ( .I(\shifted_products[5][8] ), .ZN(n60) );
  XNR3D0 U507 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .A3(n61), .ZN(N85) );
  XNR3D0 U508 ( .A1(n35), .A2(n62), .A3(n61), .ZN(N86) );
  XNR3D0 U509 ( .A1(\products[3][5] ), .A2(n61), .A3(n63), .ZN(N87) );
  CKND0 U510 ( .I(\products[2][5] ), .ZN(n61) );
  XNR3D0 U511 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[1][6] ), .A3(n64), .ZN(N60) );
  XNR3D0 U512 ( .A1(n227), .A2(n65), .A3(n64), .ZN(N61) );
  CKND0 U513 ( .I(\shifted_products[0][9] ), .ZN(n64) );
endmodule


module fusion_unit_9_DW01_add_0_DW01_add_13 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module fusion_unit_9 ( clk, nRST, input_bitwidth, weight_bitwidth, input_sign, 
        weight_sign, input_forward, weight, psum_in, psum, input_to_right );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  input [3:0] input_sign;
  input [3:0] weight_sign;
  input [31:0] input_forward;
  input [31:0] weight;
  input [31:0] psum_in;
  output [31:0] psum;
  output [31:0] input_to_right;
  input clk, nRST;
  wire   \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] , n2;
  wire   [31:0] shift_add_out;
  assign input_to_right[31] = input_forward[31];
  assign input_to_right[30] = input_forward[30];
  assign input_to_right[29] = input_forward[29];
  assign input_to_right[28] = input_forward[28];
  assign input_to_right[27] = input_forward[27];
  assign input_to_right[26] = input_forward[26];
  assign input_to_right[25] = input_forward[25];
  assign input_to_right[24] = input_forward[24];
  assign input_to_right[23] = input_forward[23];
  assign input_to_right[22] = input_forward[22];
  assign input_to_right[21] = input_forward[21];
  assign input_to_right[20] = input_forward[20];
  assign input_to_right[19] = input_forward[19];
  assign input_to_right[18] = input_forward[18];
  assign input_to_right[17] = input_forward[17];
  assign input_to_right[16] = input_forward[16];
  assign input_to_right[15] = input_forward[15];
  assign input_to_right[14] = input_forward[14];
  assign input_to_right[13] = input_forward[13];
  assign input_to_right[12] = input_forward[12];
  assign input_to_right[11] = input_forward[11];
  assign input_to_right[10] = input_forward[10];
  assign input_to_right[9] = input_forward[9];
  assign input_to_right[8] = input_forward[8];
  assign input_to_right[7] = input_forward[7];
  assign input_to_right[6] = input_forward[6];
  assign input_to_right[5] = input_forward[5];
  assign input_to_right[4] = input_forward[4];
  assign input_to_right[3] = input_forward[3];
  assign input_to_right[2] = input_forward[2];
  assign input_to_right[1] = input_forward[1];
  assign input_to_right[0] = input_forward[0];

  bit_brick_159 \genblk1[0].BB  ( .x(input_forward[1:0]), .y(weight[1:0]), 
        .sx(input_sign[0]), .sy(weight_sign[0]), .product({\products[0][5] , 
        \products[0][4] , \products[0][3] , \products[0][2] , \products[0][1] , 
        \products[0][0] }) );
  bit_brick_158 \genblk1[1].BB  ( .x(input_forward[3:2]), .y(weight[3:2]), 
        .sx(input_sign[0]), .sy(weight_sign[1]), .product({\products[1][5] , 
        \products[1][4] , \products[1][3] , \products[1][2] , \products[1][1] , 
        \products[1][0] }) );
  bit_brick_157 \genblk1[2].BB  ( .x(input_forward[5:4]), .y(weight[5:4]), 
        .sx(input_sign[0]), .sy(weight_sign[2]), .product({\products[2][5] , 
        \products[2][4] , \products[2][3] , \products[2][2] , \products[2][1] , 
        \products[2][0] }) );
  bit_brick_156 \genblk1[3].BB  ( .x(input_forward[7:6]), .y(weight[7:6]), 
        .sx(input_sign[0]), .sy(weight_sign[3]), .product({\products[3][5] , 
        \products[3][4] , \products[3][3] , \products[3][2] , \products[3][1] , 
        \products[3][0] }) );
  bit_brick_155 \genblk1[4].BB  ( .x(input_forward[9:8]), .y(weight[9:8]), 
        .sx(input_sign[1]), .sy(weight_sign[0]), .product({\products[4][5] , 
        \products[4][4] , \products[4][3] , \products[4][2] , \products[4][1] , 
        \products[4][0] }) );
  bit_brick_154 \genblk1[5].BB  ( .x(input_forward[11:10]), .y(weight[11:10]), 
        .sx(input_sign[1]), .sy(weight_sign[1]), .product({\products[5][5] , 
        \products[5][4] , \products[5][3] , \products[5][2] , \products[5][1] , 
        \products[5][0] }) );
  bit_brick_153 \genblk1[6].BB  ( .x(input_forward[13:12]), .y(weight[13:12]), 
        .sx(input_sign[1]), .sy(weight_sign[2]), .product({\products[6][5] , 
        \products[6][4] , \products[6][3] , \products[6][2] , \products[6][1] , 
        \products[6][0] }) );
  bit_brick_152 \genblk1[7].BB  ( .x(input_forward[15:14]), .y(weight[15:14]), 
        .sx(input_sign[1]), .sy(weight_sign[3]), .product({\products[7][5] , 
        \products[7][4] , \products[7][3] , \products[7][2] , \products[7][1] , 
        \products[7][0] }) );
  bit_brick_151 \genblk1[8].BB  ( .x(input_forward[17:16]), .y(weight[17:16]), 
        .sx(input_sign[2]), .sy(weight_sign[0]), .product({\products[8][5] , 
        \products[8][4] , \products[8][3] , \products[8][2] , \products[8][1] , 
        \products[8][0] }) );
  bit_brick_150 \genblk1[9].BB  ( .x(input_forward[19:18]), .y(weight[19:18]), 
        .sx(input_sign[2]), .sy(weight_sign[1]), .product({\products[9][5] , 
        \products[9][4] , \products[9][3] , \products[9][2] , \products[9][1] , 
        \products[9][0] }) );
  bit_brick_149 \genblk1[10].BB  ( .x(input_forward[21:20]), .y(weight[21:20]), 
        .sx(input_sign[2]), .sy(weight_sign[2]), .product({\products[10][5] , 
        \products[10][4] , \products[10][3] , \products[10][2] , 
        \products[10][1] , \products[10][0] }) );
  bit_brick_148 \genblk1[11].BB  ( .x(input_forward[23:22]), .y(weight[23:22]), 
        .sx(input_sign[2]), .sy(weight_sign[3]), .product({\products[11][5] , 
        \products[11][4] , \products[11][3] , \products[11][2] , 
        \products[11][1] , \products[11][0] }) );
  bit_brick_147 \genblk1[12].BB  ( .x(input_forward[25:24]), .y(weight[25:24]), 
        .sx(input_sign[3]), .sy(weight_sign[0]), .product({\products[12][5] , 
        \products[12][4] , \products[12][3] , \products[12][2] , 
        \products[12][1] , \products[12][0] }) );
  bit_brick_146 \genblk1[13].BB  ( .x(input_forward[27:26]), .y(weight[27:26]), 
        .sx(input_sign[3]), .sy(weight_sign[1]), .product({\products[13][5] , 
        \products[13][4] , \products[13][3] , \products[13][2] , 
        \products[13][1] , \products[13][0] }) );
  bit_brick_145 \genblk1[14].BB  ( .x(input_forward[29:28]), .y(weight[29:28]), 
        .sx(input_sign[3]), .sy(weight_sign[2]), .product({\products[14][5] , 
        \products[14][4] , \products[14][3] , \products[14][2] , 
        \products[14][1] , \products[14][0] }) );
  bit_brick_144 \genblk1[15].BB  ( .x(input_forward[31:30]), .y(weight[31:30]), 
        .sx(input_sign[3]), .sy(weight_sign[3]), .product({\products[15][5] , 
        \products[15][4] , \products[15][3] , \products[15][2] , 
        \products[15][1] , \products[15][0] }) );
  shift_add_9 shift_add ( .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .products({\products[15][5] , \products[15][4] , 
        \products[15][3] , \products[15][2] , \products[15][1] , 
        \products[15][0] , \products[14][5] , \products[14][4] , 
        \products[14][3] , \products[14][2] , \products[14][1] , 
        \products[14][0] , \products[13][5] , \products[13][4] , 
        \products[13][3] , \products[13][2] , \products[13][1] , 
        \products[13][0] , \products[12][5] , \products[12][4] , 
        \products[12][3] , \products[12][2] , \products[12][1] , 
        \products[12][0] , \products[11][5] , \products[11][4] , 
        \products[11][3] , \products[11][2] , \products[11][1] , 
        \products[11][0] , \products[10][5] , \products[10][4] , 
        \products[10][3] , \products[10][2] , \products[10][1] , 
        \products[10][0] , \products[9][5] , \products[9][4] , 
        \products[9][3] , \products[9][2] , \products[9][1] , \products[9][0] , 
        \products[8][5] , \products[8][4] , \products[8][3] , \products[8][2] , 
        \products[8][1] , \products[8][0] , \products[7][5] , \products[7][4] , 
        \products[7][3] , \products[7][2] , \products[7][1] , \products[7][0] , 
        \products[6][5] , \products[6][4] , \products[6][3] , \products[6][2] , 
        \products[6][1] , \products[6][0] , \products[5][5] , \products[5][4] , 
        \products[5][3] , \products[5][2] , \products[5][1] , \products[5][0] , 
        \products[4][5] , \products[4][4] , \products[4][3] , \products[4][2] , 
        \products[4][1] , \products[4][0] , \products[3][5] , \products[3][4] , 
        \products[3][3] , \products[3][2] , \products[3][1] , \products[3][0] , 
        \products[2][5] , \products[2][4] , \products[2][3] , \products[2][2] , 
        \products[2][1] , \products[2][0] , \products[1][5] , \products[1][4] , 
        \products[1][3] , \products[1][2] , \products[1][1] , \products[1][0] , 
        \products[0][5] , \products[0][4] , \products[0][3] , \products[0][2] , 
        \products[0][1] , \products[0][0] }), .shift_add_out(shift_add_out) );
  fusion_unit_9_DW01_add_0_DW01_add_13 add_53 ( .A(shift_add_out), .B(psum_in), 
        .CI(n2), .SUM(psum) );
  TIEL U1 ( .ZN(n2) );
endmodule


module WBUF_ARRAY_SIZE4_DATA_W32_8 ( clk, nRST, WBUF_wr_en, WBUF_data_in, 
        WBUF_data_out );
  input [31:0] WBUF_data_in;
  output [31:0] WBUF_data_out;
  input clk, nRST, WBUF_wr_en;
  wire   n1, n2, n3, n4, n5, n6;

  EDFCNQD1 \WBUF_data_out_reg[31]  ( .D(WBUF_data_in[31]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[31]) );
  EDFCNQD1 \WBUF_data_out_reg[30]  ( .D(WBUF_data_in[30]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[30]) );
  EDFCNQD1 \WBUF_data_out_reg[29]  ( .D(WBUF_data_in[29]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[29]) );
  EDFCNQD1 \WBUF_data_out_reg[28]  ( .D(WBUF_data_in[28]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[28]) );
  EDFCNQD1 \WBUF_data_out_reg[27]  ( .D(WBUF_data_in[27]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[27]) );
  EDFCNQD1 \WBUF_data_out_reg[26]  ( .D(WBUF_data_in[26]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[26]) );
  EDFCNQD1 \WBUF_data_out_reg[25]  ( .D(WBUF_data_in[25]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[25]) );
  EDFCNQD1 \WBUF_data_out_reg[24]  ( .D(WBUF_data_in[24]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[24]) );
  EDFCNQD1 \WBUF_data_out_reg[23]  ( .D(WBUF_data_in[23]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[23]) );
  EDFCNQD1 \WBUF_data_out_reg[22]  ( .D(WBUF_data_in[22]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[22]) );
  EDFCNQD1 \WBUF_data_out_reg[21]  ( .D(WBUF_data_in[21]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[21]) );
  EDFCNQD1 \WBUF_data_out_reg[20]  ( .D(WBUF_data_in[20]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[20]) );
  EDFCNQD1 \WBUF_data_out_reg[19]  ( .D(WBUF_data_in[19]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[19]) );
  EDFCNQD1 \WBUF_data_out_reg[18]  ( .D(WBUF_data_in[18]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[18]) );
  EDFCNQD1 \WBUF_data_out_reg[17]  ( .D(WBUF_data_in[17]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[17]) );
  EDFCNQD1 \WBUF_data_out_reg[16]  ( .D(WBUF_data_in[16]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[16]) );
  EDFCNQD1 \WBUF_data_out_reg[15]  ( .D(WBUF_data_in[15]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[15]) );
  EDFCNQD1 \WBUF_data_out_reg[14]  ( .D(WBUF_data_in[14]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[14]) );
  EDFCNQD1 \WBUF_data_out_reg[13]  ( .D(WBUF_data_in[13]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[13]) );
  EDFCNQD1 \WBUF_data_out_reg[12]  ( .D(WBUF_data_in[12]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[12]) );
  EDFCNQD1 \WBUF_data_out_reg[11]  ( .D(WBUF_data_in[11]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[11]) );
  EDFCNQD1 \WBUF_data_out_reg[10]  ( .D(WBUF_data_in[10]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[10]) );
  EDFCNQD1 \WBUF_data_out_reg[9]  ( .D(WBUF_data_in[9]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[9]) );
  EDFCNQD1 \WBUF_data_out_reg[8]  ( .D(WBUF_data_in[8]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[8]) );
  EDFCNQD1 \WBUF_data_out_reg[7]  ( .D(WBUF_data_in[7]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[7]) );
  EDFCNQD1 \WBUF_data_out_reg[6]  ( .D(WBUF_data_in[6]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[6]) );
  EDFCNQD1 \WBUF_data_out_reg[5]  ( .D(WBUF_data_in[5]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[5]) );
  EDFCNQD1 \WBUF_data_out_reg[4]  ( .D(WBUF_data_in[4]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[4]) );
  EDFCNQD1 \WBUF_data_out_reg[3]  ( .D(WBUF_data_in[3]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[3]) );
  EDFCNQD1 \WBUF_data_out_reg[2]  ( .D(WBUF_data_in[2]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[2]) );
  EDFCNQD1 \WBUF_data_out_reg[1]  ( .D(WBUF_data_in[1]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[1]) );
  EDFCNQD1 \WBUF_data_out_reg[0]  ( .D(WBUF_data_in[0]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[0]) );
  CKBD1 U2 ( .I(WBUF_wr_en), .Z(n5) );
  CKBD1 U3 ( .I(WBUF_wr_en), .Z(n4) );
  CKBD1 U4 ( .I(nRST), .Z(n1) );
  CKBD1 U5 ( .I(nRST), .Z(n2) );
  CKBD1 U6 ( .I(nRST), .Z(n3) );
  CKBD1 U7 ( .I(WBUF_wr_en), .Z(n6) );
endmodule


module w_mux_8 ( clk, nRST, input_bitwidth, rd_en, data_in, data_out );
  input [2:0] input_bitwidth;
  input [31:0] data_in;
  output [31:0] data_out;
  input clk, nRST, rd_en;
  wire   N40, N41, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129,
         n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140,
         n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151,
         n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162,
         n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173,
         n174, n175, n176, n177, n178;
  wire   [1:0] rd_ptr;
  wire   [31:0] next_data_out;

  EDFCNQD1 \rd_ptr_reg[0]  ( .D(N40), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[0]) );
  EDFCNQD1 \rd_ptr_reg[1]  ( .D(N41), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[1]) );
  DFCNQD1 \data_out_reg[31]  ( .D(next_data_out[31]), .CP(clk), .CDN(n1), .Q(
        data_out[31]) );
  DFCNQD1 \data_out_reg[30]  ( .D(next_data_out[30]), .CP(clk), .CDN(n3), .Q(
        data_out[30]) );
  DFCNQD1 \data_out_reg[29]  ( .D(next_data_out[29]), .CP(clk), .CDN(n3), .Q(
        data_out[29]) );
  DFCNQD1 \data_out_reg[28]  ( .D(next_data_out[28]), .CP(clk), .CDN(n3), .Q(
        data_out[28]) );
  DFCNQD1 \data_out_reg[27]  ( .D(next_data_out[27]), .CP(clk), .CDN(n3), .Q(
        data_out[27]) );
  DFCNQD1 \data_out_reg[26]  ( .D(next_data_out[26]), .CP(clk), .CDN(n3), .Q(
        data_out[26]) );
  DFCNQD1 \data_out_reg[25]  ( .D(next_data_out[25]), .CP(clk), .CDN(n2), .Q(
        data_out[25]) );
  DFCNQD1 \data_out_reg[24]  ( .D(next_data_out[24]), .CP(clk), .CDN(n2), .Q(
        data_out[24]) );
  DFCNQD1 \data_out_reg[23]  ( .D(next_data_out[23]), .CP(clk), .CDN(n3), .Q(
        data_out[23]) );
  DFCNQD1 \data_out_reg[22]  ( .D(next_data_out[22]), .CP(clk), .CDN(n2), .Q(
        data_out[22]) );
  DFCNQD1 \data_out_reg[21]  ( .D(next_data_out[21]), .CP(clk), .CDN(n2), .Q(
        data_out[21]) );
  DFCNQD1 \data_out_reg[20]  ( .D(next_data_out[20]), .CP(clk), .CDN(n2), .Q(
        data_out[20]) );
  DFCNQD1 \data_out_reg[19]  ( .D(next_data_out[19]), .CP(clk), .CDN(n2), .Q(
        data_out[19]) );
  DFCNQD1 \data_out_reg[18]  ( .D(next_data_out[18]), .CP(clk), .CDN(n2), .Q(
        data_out[18]) );
  DFCNQD1 \data_out_reg[17]  ( .D(next_data_out[17]), .CP(clk), .CDN(n2), .Q(
        data_out[17]) );
  DFCNQD1 \data_out_reg[16]  ( .D(next_data_out[16]), .CP(clk), .CDN(n2), .Q(
        data_out[16]) );
  DFCNQD1 \data_out_reg[15]  ( .D(next_data_out[15]), .CP(clk), .CDN(n2), .Q(
        data_out[15]) );
  DFCNQD1 \data_out_reg[14]  ( .D(next_data_out[14]), .CP(clk), .CDN(n2), .Q(
        data_out[14]) );
  DFCNQD1 \data_out_reg[13]  ( .D(next_data_out[13]), .CP(clk), .CDN(n2), .Q(
        data_out[13]) );
  DFCNQD1 \data_out_reg[12]  ( .D(next_data_out[12]), .CP(clk), .CDN(n1), .Q(
        data_out[12]) );
  DFCNQD1 \data_out_reg[11]  ( .D(next_data_out[11]), .CP(clk), .CDN(n1), .Q(
        data_out[11]) );
  DFCNQD1 \data_out_reg[10]  ( .D(next_data_out[10]), .CP(clk), .CDN(n1), .Q(
        data_out[10]) );
  DFCNQD1 \data_out_reg[9]  ( .D(next_data_out[9]), .CP(clk), .CDN(n1), .Q(
        data_out[9]) );
  DFCNQD1 \data_out_reg[8]  ( .D(next_data_out[8]), .CP(clk), .CDN(n1), .Q(
        data_out[8]) );
  DFCNQD1 \data_out_reg[7]  ( .D(next_data_out[7]), .CP(clk), .CDN(n1), .Q(
        data_out[7]) );
  DFCNQD1 \data_out_reg[6]  ( .D(next_data_out[6]), .CP(clk), .CDN(n1), .Q(
        data_out[6]) );
  DFCNQD1 \data_out_reg[5]  ( .D(next_data_out[5]), .CP(clk), .CDN(n1), .Q(
        data_out[5]) );
  DFCNQD1 \data_out_reg[4]  ( .D(next_data_out[4]), .CP(clk), .CDN(n1), .Q(
        data_out[4]) );
  DFCNQD1 \data_out_reg[3]  ( .D(next_data_out[3]), .CP(clk), .CDN(n1), .Q(
        data_out[3]) );
  DFCNQD1 \data_out_reg[2]  ( .D(next_data_out[2]), .CP(clk), .CDN(n1), .Q(
        data_out[2]) );
  DFCNQD1 \data_out_reg[1]  ( .D(next_data_out[1]), .CP(clk), .CDN(n1), .Q(
        data_out[1]) );
  DFCNQD1 \data_out_reg[0]  ( .D(next_data_out[0]), .CP(clk), .CDN(n2), .Q(
        data_out[0]) );
  OA21D1 U20 ( .A1(n161), .A2(n160), .B(n159), .Z(n170) );
  OA21D1 U23 ( .A1(n156), .A2(n160), .B(n155), .Z(n169) );
  OA21D1 U26 ( .A1(n154), .A2(n160), .B(n153), .Z(n167) );
  OA21D1 U29 ( .A1(n152), .A2(n160), .B(n151), .Z(n166) );
  OA21D1 U32 ( .A1(n150), .A2(n160), .B(n149), .Z(n177) );
  OA21D1 U35 ( .A1(n148), .A2(n160), .B(n147), .Z(n165) );
  OA21D1 U38 ( .A1(n146), .A2(n160), .B(n145), .Z(n164) );
  OA21D1 U41 ( .A1(n144), .A2(n160), .B(n149), .Z(n163) );
  OA21D1 U47 ( .A1(n139), .A2(n160), .B(n138), .Z(n162) );
  OA21D1 U50 ( .A1(n137), .A2(n160), .B(n159), .Z(n175) );
  OA21D1 U56 ( .A1(n134), .A2(n160), .B(n155), .Z(n174) );
  OA21D1 U62 ( .A1(n131), .A2(n160), .B(n153), .Z(n173) );
  OA21D1 U68 ( .A1(n128), .A2(n160), .B(n151), .Z(n172) );
  OA21D1 U74 ( .A1(n125), .A2(n160), .B(n147), .Z(n171) );
  OA21D1 U80 ( .A1(n122), .A2(n160), .B(n145), .Z(n168) );
  OA21D1 U86 ( .A1(n119), .A2(n160), .B(n138), .Z(n176) );
  AN2XD1 U90 ( .A1(rd_ptr[1]), .A2(rd_ptr[0]), .Z(n140) );
  AN4XD1 U91 ( .A1(input_bitwidth[2]), .A2(rd_en), .A3(n5), .A4(n7), .Z(n143)
         );
  MAOI22D1 U97 ( .A1(n115), .A2(n12), .B1(n115), .B2(n114), .ZN(n113) );
  NR2D1 U3 ( .A1(n13), .A2(rd_ptr[1]), .ZN(n158) );
  NR2D1 U4 ( .A1(rd_ptr[0]), .A2(rd_ptr[1]), .ZN(n157) );
  AOI21D1 U5 ( .A1(n12), .A2(n116), .B(n113), .ZN(N41) );
  OAI21D1 U6 ( .A1(n111), .A2(n10), .B(n177), .ZN(next_data_out[1]) );
  OAI21D1 U7 ( .A1(n37), .A2(n10), .B(n177), .ZN(next_data_out[9]) );
  OAI21D1 U8 ( .A1(n8), .A2(n112), .B(n176), .ZN(next_data_out[0]) );
  OAI21D1 U9 ( .A1(n9), .A2(n110), .B(n168), .ZN(next_data_out[2]) );
  OAI21D1 U10 ( .A1(n9), .A2(n109), .B(n171), .ZN(next_data_out[3]) );
  OAI21D1 U11 ( .A1(n9), .A2(n108), .B(n172), .ZN(next_data_out[4]) );
  OAI21D1 U12 ( .A1(n8), .A2(n36), .B(n168), .ZN(next_data_out[10]) );
  OAI21D1 U13 ( .A1(n8), .A2(n35), .B(n171), .ZN(next_data_out[11]) );
  OAI21D1 U14 ( .A1(n8), .A2(n34), .B(n172), .ZN(next_data_out[12]) );
  OAI21D1 U15 ( .A1(n9), .A2(n33), .B(n173), .ZN(next_data_out[13]) );
  OAI21D1 U16 ( .A1(n8), .A2(n32), .B(n174), .ZN(next_data_out[14]) );
  OAI21D1 U17 ( .A1(n8), .A2(n31), .B(n175), .ZN(next_data_out[15]) );
  OAI21D1 U18 ( .A1(n10), .A2(n107), .B(n173), .ZN(next_data_out[5]) );
  OAI21D1 U19 ( .A1(n10), .A2(n106), .B(n174), .ZN(next_data_out[6]) );
  OAI21D1 U21 ( .A1(n10), .A2(n105), .B(n175), .ZN(next_data_out[7]) );
  OAI21D1 U22 ( .A1(n10), .A2(n38), .B(n176), .ZN(next_data_out[8]) );
  CKBD1 U24 ( .I(n178), .Z(n8) );
  CKBD1 U25 ( .I(n178), .Z(n9) );
  CKBD1 U27 ( .I(n178), .Z(n10) );
  INVD1 U28 ( .I(n6), .ZN(n7) );
  INVD1 U30 ( .I(n4), .ZN(n5) );
  INVD1 U31 ( .I(n116), .ZN(n11) );
  INVD1 U33 ( .I(n157), .ZN(n14) );
  INVD1 U34 ( .I(n158), .ZN(n12) );
  ND2D1 U36 ( .A1(n114), .A2(rd_en), .ZN(n178) );
  NR3D0 U37 ( .A1(n4), .A2(input_bitwidth[2]), .A3(n7), .ZN(n115) );
  NR3D0 U39 ( .A1(n6), .A2(input_bitwidth[2]), .A3(n5), .ZN(n114) );
  ND2D1 U40 ( .A1(rd_en), .A2(n115), .ZN(n160) );
  ND2D1 U42 ( .A1(n143), .A2(n118), .ZN(n138) );
  OAI221D0 U43 ( .A1(n12), .A2(n38), .B1(n14), .B2(n112), .C(n117), .ZN(n118)
         );
  AOI22D1 U44 ( .A1(data_in[24]), .A2(n140), .B1(data_in[16]), .B2(n11), .ZN(
        n117) );
  ND2D1 U45 ( .A1(n143), .A2(n142), .ZN(n149) );
  OAI221D0 U46 ( .A1(n12), .A2(n37), .B1(n14), .B2(n111), .C(n141), .ZN(n142)
         );
  AOI22D1 U48 ( .A1(data_in[25]), .A2(n140), .B1(n11), .B2(data_in[17]), .ZN(
        n141) );
  ND2D1 U49 ( .A1(n143), .A2(n121), .ZN(n145) );
  OAI221D0 U51 ( .A1(n12), .A2(n36), .B1(n14), .B2(n110), .C(n120), .ZN(n121)
         );
  AOI22D1 U52 ( .A1(data_in[26]), .A2(n140), .B1(data_in[18]), .B2(n11), .ZN(
        n120) );
  ND2D1 U53 ( .A1(n143), .A2(n124), .ZN(n147) );
  OAI221D0 U54 ( .A1(n12), .A2(n35), .B1(n14), .B2(n109), .C(n123), .ZN(n124)
         );
  AOI22D1 U55 ( .A1(data_in[27]), .A2(n140), .B1(data_in[19]), .B2(n11), .ZN(
        n123) );
  ND2D1 U57 ( .A1(n143), .A2(n127), .ZN(n151) );
  OAI221D0 U58 ( .A1(n12), .A2(n34), .B1(n14), .B2(n108), .C(n126), .ZN(n127)
         );
  AOI22D1 U59 ( .A1(data_in[28]), .A2(n140), .B1(data_in[20]), .B2(n11), .ZN(
        n126) );
  ND2D1 U60 ( .A1(n143), .A2(n130), .ZN(n153) );
  OAI221D0 U61 ( .A1(n12), .A2(n33), .B1(n14), .B2(n107), .C(n129), .ZN(n130)
         );
  AOI22D1 U63 ( .A1(data_in[29]), .A2(n140), .B1(data_in[21]), .B2(n11), .ZN(
        n129) );
  ND2D1 U64 ( .A1(n143), .A2(n133), .ZN(n155) );
  OAI221D0 U65 ( .A1(n12), .A2(n32), .B1(n14), .B2(n106), .C(n132), .ZN(n133)
         );
  AOI22D1 U66 ( .A1(data_in[30]), .A2(n140), .B1(data_in[22]), .B2(n11), .ZN(
        n132) );
  ND2D1 U67 ( .A1(n143), .A2(n136), .ZN(n159) );
  OAI221D0 U69 ( .A1(n12), .A2(n31), .B1(n14), .B2(n105), .C(n135), .ZN(n136)
         );
  AOI22D1 U70 ( .A1(data_in[31]), .A2(n140), .B1(data_in[23]), .B2(n11), .ZN(
        n135) );
  AOI22D1 U71 ( .A1(data_in[16]), .A2(n158), .B1(data_in[0]), .B2(n157), .ZN(
        n119) );
  AOI22D1 U72 ( .A1(data_in[17]), .A2(n158), .B1(data_in[1]), .B2(n157), .ZN(
        n150) );
  AOI22D1 U73 ( .A1(data_in[18]), .A2(n158), .B1(data_in[2]), .B2(n157), .ZN(
        n122) );
  AOI22D1 U75 ( .A1(data_in[19]), .A2(n158), .B1(data_in[3]), .B2(n157), .ZN(
        n125) );
  AOI22D1 U76 ( .A1(data_in[20]), .A2(n158), .B1(data_in[4]), .B2(n157), .ZN(
        n128) );
  AOI22D1 U77 ( .A1(data_in[21]), .A2(n158), .B1(data_in[5]), .B2(n157), .ZN(
        n131) );
  AOI22D1 U78 ( .A1(data_in[22]), .A2(n158), .B1(data_in[6]), .B2(n157), .ZN(
        n134) );
  AOI22D1 U79 ( .A1(data_in[23]), .A2(n158), .B1(data_in[7]), .B2(n157), .ZN(
        n137) );
  AOI22D1 U81 ( .A1(data_in[24]), .A2(n158), .B1(data_in[8]), .B2(n157), .ZN(
        n139) );
  AOI22D1 U82 ( .A1(data_in[25]), .A2(n158), .B1(data_in[9]), .B2(n157), .ZN(
        n144) );
  AOI22D1 U83 ( .A1(data_in[26]), .A2(n158), .B1(data_in[10]), .B2(n157), .ZN(
        n146) );
  AOI22D1 U84 ( .A1(data_in[27]), .A2(n158), .B1(data_in[11]), .B2(n157), .ZN(
        n148) );
  AOI22D1 U85 ( .A1(data_in[28]), .A2(n158), .B1(data_in[12]), .B2(n157), .ZN(
        n152) );
  AOI22D1 U87 ( .A1(data_in[29]), .A2(n158), .B1(data_in[13]), .B2(n157), .ZN(
        n154) );
  AOI22D1 U88 ( .A1(data_in[30]), .A2(n158), .B1(data_in[14]), .B2(n157), .ZN(
        n156) );
  AOI22D1 U89 ( .A1(data_in[31]), .A2(n158), .B1(data_in[15]), .B2(n157), .ZN(
        n161) );
  NR2D1 U92 ( .A1(rd_ptr[0]), .A2(n114), .ZN(N40) );
  OAI21D1 U93 ( .A1(n29), .A2(n10), .B(n163), .ZN(next_data_out[17]) );
  INVD1 U94 ( .I(data_in[17]), .ZN(n29) );
  OAI21D1 U95 ( .A1(n8), .A2(n30), .B(n162), .ZN(next_data_out[16]) );
  INVD1 U96 ( .I(data_in[16]), .ZN(n30) );
  OAI21D1 U98 ( .A1(n8), .A2(n28), .B(n164), .ZN(next_data_out[18]) );
  INVD1 U99 ( .I(data_in[18]), .ZN(n28) );
  OAI21D1 U100 ( .A1(n8), .A2(n27), .B(n165), .ZN(next_data_out[19]) );
  INVD1 U101 ( .I(data_in[19]), .ZN(n27) );
  OAI21D1 U102 ( .A1(n8), .A2(n26), .B(n166), .ZN(next_data_out[20]) );
  INVD1 U103 ( .I(data_in[20]), .ZN(n26) );
  OAI21D1 U104 ( .A1(n8), .A2(n25), .B(n167), .ZN(next_data_out[21]) );
  INVD1 U105 ( .I(data_in[21]), .ZN(n25) );
  OAI21D1 U106 ( .A1(n8), .A2(n24), .B(n169), .ZN(next_data_out[22]) );
  INVD1 U107 ( .I(data_in[22]), .ZN(n24) );
  OAI21D1 U108 ( .A1(n9), .A2(n23), .B(n170), .ZN(next_data_out[23]) );
  INVD1 U109 ( .I(data_in[23]), .ZN(n23) );
  OAI21D1 U110 ( .A1(n9), .A2(n22), .B(n162), .ZN(next_data_out[24]) );
  INVD1 U111 ( .I(data_in[24]), .ZN(n22) );
  OAI21D1 U112 ( .A1(n9), .A2(n20), .B(n164), .ZN(next_data_out[26]) );
  INVD1 U113 ( .I(data_in[26]), .ZN(n20) );
  OAI21D1 U114 ( .A1(n9), .A2(n19), .B(n165), .ZN(next_data_out[27]) );
  INVD1 U115 ( .I(data_in[27]), .ZN(n19) );
  OAI21D1 U116 ( .A1(n9), .A2(n18), .B(n166), .ZN(next_data_out[28]) );
  INVD1 U117 ( .I(data_in[28]), .ZN(n18) );
  OAI21D1 U118 ( .A1(n9), .A2(n17), .B(n167), .ZN(next_data_out[29]) );
  INVD1 U119 ( .I(data_in[29]), .ZN(n17) );
  OAI21D1 U120 ( .A1(n9), .A2(n16), .B(n169), .ZN(next_data_out[30]) );
  INVD1 U121 ( .I(data_in[30]), .ZN(n16) );
  OAI21D1 U122 ( .A1(n9), .A2(n15), .B(n170), .ZN(next_data_out[31]) );
  INVD1 U123 ( .I(data_in[31]), .ZN(n15) );
  OAI21D1 U124 ( .A1(n21), .A2(n10), .B(n163), .ZN(next_data_out[25]) );
  INVD1 U125 ( .I(data_in[25]), .ZN(n21) );
  CKBD1 U126 ( .I(input_bitwidth[0]), .Z(n4) );
  CKBD1 U127 ( .I(input_bitwidth[1]), .Z(n6) );
  ND2D1 U128 ( .A1(rd_ptr[1]), .A2(n13), .ZN(n116) );
  INVD1 U129 ( .I(rd_ptr[0]), .ZN(n13) );
  INVD1 U130 ( .I(data_in[1]), .ZN(n111) );
  INVD1 U131 ( .I(data_in[9]), .ZN(n37) );
  INVD1 U132 ( .I(data_in[0]), .ZN(n112) );
  INVD1 U133 ( .I(data_in[2]), .ZN(n110) );
  INVD1 U134 ( .I(data_in[3]), .ZN(n109) );
  INVD1 U135 ( .I(data_in[4]), .ZN(n108) );
  INVD1 U136 ( .I(data_in[5]), .ZN(n107) );
  INVD1 U137 ( .I(data_in[6]), .ZN(n106) );
  INVD1 U138 ( .I(data_in[7]), .ZN(n105) );
  INVD1 U139 ( .I(data_in[8]), .ZN(n38) );
  INVD1 U140 ( .I(data_in[10]), .ZN(n36) );
  INVD1 U141 ( .I(data_in[11]), .ZN(n35) );
  INVD1 U142 ( .I(data_in[12]), .ZN(n34) );
  INVD1 U143 ( .I(data_in[13]), .ZN(n33) );
  INVD1 U144 ( .I(data_in[14]), .ZN(n32) );
  INVD1 U145 ( .I(data_in[15]), .ZN(n31) );
  CKBD1 U146 ( .I(nRST), .Z(n2) );
  CKBD1 U147 ( .I(nRST), .Z(n1) );
  CKBD1 U148 ( .I(nRST), .Z(n3) );
endmodule


module bit_brick_143 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_142 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_141 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_140 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_139 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_138 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_137 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_136 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_135 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_134 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_133 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_132 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_131 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_130 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_129 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_128 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module shift_add_8_DW01_add_14_DW01_add_109 ( A, B, CI, SUM, CO );
  input [28:0] A;
  input [28:0] B;
  output [28:0] SUM;
  input CI;
  output CO;
  wire   n1, \SUM[18] , n3, n4, n5, n6, n7;
  wire   [28:1] carry;
  assign SUM[27] = \SUM[18] ;
  assign SUM[28] = \SUM[18] ;
  assign SUM[26] = \SUM[18] ;
  assign SUM[25] = \SUM[18] ;
  assign SUM[24] = \SUM[18] ;
  assign SUM[23] = \SUM[18] ;
  assign SUM[22] = \SUM[18] ;
  assign SUM[21] = \SUM[18] ;
  assign SUM[20] = \SUM[18] ;
  assign SUM[19] = \SUM[18] ;
  assign SUM[18] = \SUM[18] ;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D0 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  AOI222D1 U3 ( .A1(carry[15]), .A2(A[27]), .B1(carry[15]), .B2(B[15]), .C1(
        B[15]), .C2(A[27]), .ZN(n5) );
  XNR3D4 U4 ( .A1(B[27]), .A2(n7), .A3(n3), .ZN(\SUM[18] ) );
  AO222D1 U5 ( .A1(n4), .A2(A[27]), .B1(n4), .B2(B[27]), .C1(A[27]), .C2(B[27]), .Z(n3) );
  CKND0 U6 ( .I(A[27]), .ZN(n7) );
  CKND0 U7 ( .I(B[16]), .ZN(n6) );
  OAI222D0 U8 ( .A1(n5), .A2(n7), .B1(n5), .B2(n6), .C1(n7), .C2(n6), .ZN(n4)
         );
  XNR3D0 U9 ( .A1(B[27]), .A2(n7), .A3(n4), .ZN(SUM[17]) );
  XNR3D0 U10 ( .A1(n6), .A2(n5), .A3(n7), .ZN(SUM[16]) );
  XNR3D0 U11 ( .A1(carry[15]), .A2(B[15]), .A3(n7), .ZN(SUM[15]) );
endmodule


module shift_add_8_DW01_add_6_DW01_add_101 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_8_DW01_add_5_DW01_add_100 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_8_DW01_add_4_DW01_add_99 ( A, B, CI, SUM, CO );
  input [30:0] A;
  input [30:0] B;
  output [30:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [30:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  XOR3D1 U1_30 ( .A1(A[30]), .A2(B[30]), .A3(carry[30]), .Z(SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_8_DW01_add_3_DW01_add_98 ( A, B, CI, SUM, CO );
  input [29:0] A;
  input [29:0] B;
  output [29:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3;
  wire   [29:1] carry;
  assign SUM[29] = SUM[23];
  assign SUM[28] = SUM[23];
  assign SUM[27] = SUM[23];
  assign SUM[26] = SUM[23];
  assign SUM[25] = SUM[23];
  assign SUM[24] = SUM[23];

  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  XNR3D2 U1 ( .A1(B[22]), .A2(A[21]), .A3(n2), .ZN(SUM[23]) );
  AN2XD1 U2 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  AOI222D1 U3 ( .A1(n3), .A2(A[21]), .B1(n3), .B2(B[22]), .C1(A[21]), .C2(
        B[22]), .ZN(n2) );
  CKXOR2D1 U4 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  XOR3D0 U5 ( .A1(carry[21]), .A2(B[21]), .A3(A[21]), .Z(SUM[21]) );
  AO222D0 U6 ( .A1(carry[21]), .A2(A[21]), .B1(B[21]), .B2(carry[21]), .C1(
        B[21]), .C2(A[21]), .Z(n3) );
  XOR3D0 U7 ( .A1(B[22]), .A2(A[21]), .A3(n3), .Z(SUM[22]) );
endmodule


module shift_add_8_DW01_add_2_DW01_add_97 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_8_DW01_add_1_DW01_add_96 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D1 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D1 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_8_DW01_add_0_DW01_add_95 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_8 ( input_bitwidth, weight_bitwidth, .products({
        \products[15][5] , \products[15][4] , \products[15][3] , 
        \products[15][2] , \products[15][1] , \products[15][0] , 
        \products[14][5] , \products[14][4] , \products[14][3] , 
        \products[14][2] , \products[14][1] , \products[14][0] , 
        \products[13][5] , \products[13][4] , \products[13][3] , 
        \products[13][2] , \products[13][1] , \products[13][0] , 
        \products[12][5] , \products[12][4] , \products[12][3] , 
        \products[12][2] , \products[12][1] , \products[12][0] , 
        \products[11][5] , \products[11][4] , \products[11][3] , 
        \products[11][2] , \products[11][1] , \products[11][0] , 
        \products[10][5] , \products[10][4] , \products[10][3] , 
        \products[10][2] , \products[10][1] , \products[10][0] , 
        \products[9][5] , \products[9][4] , \products[9][3] , \products[9][2] , 
        \products[9][1] , \products[9][0] , \products[8][5] , \products[8][4] , 
        \products[8][3] , \products[8][2] , \products[8][1] , \products[8][0] , 
        \products[7][5] , \products[7][4] , \products[7][3] , \products[7][2] , 
        \products[7][1] , \products[7][0] , \products[6][5] , \products[6][4] , 
        \products[6][3] , \products[6][2] , \products[6][1] , \products[6][0] , 
        \products[5][5] , \products[5][4] , \products[5][3] , \products[5][2] , 
        \products[5][1] , \products[5][0] , \products[4][5] , \products[4][4] , 
        \products[4][3] , \products[4][2] , \products[4][1] , \products[4][0] , 
        \products[3][5] , \products[3][4] , \products[3][3] , \products[3][2] , 
        \products[3][1] , \products[3][0] , \products[2][5] , \products[2][4] , 
        \products[2][3] , \products[2][2] , \products[2][1] , \products[2][0] , 
        \products[1][5] , \products[1][4] , \products[1][3] , \products[1][2] , 
        \products[1][1] , \products[1][0] , \products[0][5] , \products[0][4] , 
        \products[0][3] , \products[0][2] , \products[0][1] , \products[0][0] 
        }), shift_add_out );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  output [31:0] shift_add_out;
  input \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] ;
  wire   \shifted_products[15][16] , \shifted_products[15][15] ,
         \shifted_products[15][14] , \shifted_products[15][13] ,
         \shifted_products[15][12] , \shifted_products[15][11] ,
         \shifted_products[15][10] , \shifted_products[15][9] ,
         \shifted_products[15][8] , \shifted_products[15][7] ,
         \shifted_products[15][6] , \shifted_products[15][5] ,
         \shifted_products[15][4] , \shifted_products[15][3] ,
         \shifted_products[15][2] , \shifted_products[15][1] ,
         \shifted_products[15][0] , \shifted_products[14][14] ,
         \shifted_products[14][13] , \shifted_products[14][12] ,
         \shifted_products[14][11] , \shifted_products[14][10] ,
         \shifted_products[14][9] , \shifted_products[14][8] ,
         \shifted_products[14][7] , \shifted_products[14][6] ,
         \shifted_products[14][5] , \shifted_products[14][4] ,
         \shifted_products[14][3] , \shifted_products[14][2] ,
         \shifted_products[14][1] , \shifted_products[14][0] ,
         \shifted_products[13][12] , \shifted_products[13][11] ,
         \shifted_products[13][10] , \shifted_products[13][9] ,
         \shifted_products[13][8] , \shifted_products[13][7] ,
         \shifted_products[13][6] , \shifted_products[13][5] ,
         \shifted_products[13][4] , \shifted_products[13][3] ,
         \shifted_products[13][2] , \shifted_products[13][1] ,
         \shifted_products[13][0] , \shifted_products[12][10] ,
         \shifted_products[12][9] , \shifted_products[12][8] ,
         \shifted_products[12][7] , \shifted_products[12][6] ,
         \shifted_products[12][5] , \shifted_products[12][4] ,
         \shifted_products[12][3] , \shifted_products[12][2] ,
         \shifted_products[12][1] , \shifted_products[12][0] ,
         \shifted_products[11][13] , \shifted_products[11][12] ,
         \shifted_products[11][11] , \shifted_products[11][10] ,
         \shifted_products[11][9] , \shifted_products[11][8] ,
         \shifted_products[11][7] , \shifted_products[11][6] ,
         \shifted_products[11][5] , \shifted_products[11][4] ,
         \shifted_products[11][3] , \shifted_products[11][2] ,
         \shifted_products[11][1] , \shifted_products[11][0] ,
         \shifted_products[10][12] , \shifted_products[10][11] ,
         \shifted_products[10][10] , \shifted_products[10][9] ,
         \shifted_products[10][8] , \shifted_products[10][7] ,
         \shifted_products[10][6] , \shifted_products[10][5] ,
         \shifted_products[10][4] , \shifted_products[10][3] ,
         \shifted_products[10][2] , \shifted_products[10][1] ,
         \shifted_products[10][0] , \shifted_products[9][10] ,
         \shifted_products[9][9] , \shifted_products[9][8] ,
         \shifted_products[9][7] , \shifted_products[9][6] ,
         \shifted_products[9][5] , \shifted_products[9][4] ,
         \shifted_products[9][3] , \shifted_products[9][2] ,
         \shifted_products[9][1] , \shifted_products[9][0] ,
         \shifted_products[8][8] , \shifted_products[8][7] ,
         \shifted_products[8][6] , \shifted_products[8][5] ,
         \shifted_products[8][4] , \shifted_products[8][3] ,
         \shifted_products[8][2] , \shifted_products[8][1] ,
         \shifted_products[8][0] , \shifted_products[7][11] ,
         \shifted_products[7][10] , \shifted_products[7][9] ,
         \shifted_products[7][8] , \shifted_products[7][7] ,
         \shifted_products[7][6] , \shifted_products[7][5] ,
         \shifted_products[7][4] , \shifted_products[7][3] ,
         \shifted_products[7][2] , \shifted_products[7][1] ,
         \shifted_products[7][0] , \shifted_products[6][10] ,
         \shifted_products[6][9] , \shifted_products[6][8] ,
         \shifted_products[6][7] , \shifted_products[6][6] ,
         \shifted_products[6][5] , \shifted_products[6][4] ,
         \shifted_products[6][3] , \shifted_products[6][2] ,
         \shifted_products[6][1] , \shifted_products[6][0] ,
         \shifted_products[5][8] , \shifted_products[5][7] ,
         \shifted_products[5][6] , \shifted_products[5][5] ,
         \shifted_products[5][4] , \shifted_products[5][3] ,
         \shifted_products[5][2] , \shifted_products[5][1] ,
         \shifted_products[5][0] , \shifted_products[4][6] ,
         \shifted_products[4][5] , \shifted_products[4][4] ,
         \shifted_products[4][3] , \shifted_products[4][2] ,
         \shifted_products[4][1] , \shifted_products[4][0] ,
         \shifted_products[3][9] , \shifted_products[3][8] ,
         \shifted_products[3][7] , \shifted_products[3][6] ,
         \shifted_products[3][5] , \shifted_products[3][4] ,
         \shifted_products[3][3] , \shifted_products[3][2] ,
         \shifted_products[3][1] , \shifted_products[3][0] ,
         \shifted_products[2][8] , \shifted_products[2][7] ,
         \shifted_products[2][6] , \shifted_products[2][5] ,
         \shifted_products[2][4] , \shifted_products[2][3] ,
         \shifted_products[2][2] , \shifted_products[2][1] ,
         \shifted_products[2][0] , \shifted_products[1][6] ,
         \shifted_products[1][5] , \shifted_products[1][4] ,
         \shifted_products[1][3] , \shifted_products[1][2] ,
         \shifted_products[1][1] , \shifted_products[1][0] ,
         \shifted_products[0][9] , N99, N98, N87, N86, N85, N84, N83, N82, N81,
         N80, N79, N78, N77, N76, N61, N60, N59, N58, N57, N56, N55, N54, N446,
         N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435,
         N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424,
         N423, N422, N421, N420, N419, N418, N417, N416, N415, N414, N413,
         N412, N411, N410, N409, N408, N407, N406, N405, N404, N403, N402,
         N401, N400, N399, N398, N397, N396, N395, N394, N393, N392, N391,
         N390, N389, N388, N387, N386, N385, N384, N383, N382, N381, N380,
         N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369,
         N368, N367, N366, N365, N364, N363, N362, N361, N360, N359, N358,
         N357, N356, N355, N354, N353, N352, N351, N350, N349, N348, N347,
         N346, N345, N344, N343, N342, N341, N340, N339, N338, N337, N336,
         N335, N334, N333, N332, N331, N330, N329, N328, N327, N326, N325,
         N324, N323, N322, N321, N320, N319, N318, N317, N316, N315, N314,
         N313, N312, N311, N310, N309, N308, N307, N306, N305, N304, N303,
         N302, N301, N300, N299, N298, N297, N296, N295, N294, N293, N292,
         N291, N290, N289, N288, N287, N286, N285, N284, N283, N282, N281,
         N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270,
         N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259,
         N258, N257, N256, N255, N254, N253, N252, N251, N250, N249, N248,
         N247, N246, N245, N244, N243, N242, N241, N240, N239, N238, N237,
         N236, N235, N234, N233, N232, N231, N230, N229, N214, N213, N212,
         N211, N210, N209, N208, N207, N206, N205, N204, N203, N202, N201,
         N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, N179,
         N178, N177, N176, N175, N174, N159, N158, N157, N156, N155, N154,
         N153, N152, N151, N150, N149, N148, N136, N135, N134, N133, N132,
         N131, N130, N129, N128, N127, N126, N125, N124, N123, N108, N107,
         N106, N105, N104, N103, N102, N101, N100,
         \add_14_root_add_199_I16/carry[6] ,
         \add_14_root_add_199_I16/carry[5] ,
         \add_14_root_add_199_I16/carry[4] ,
         \add_14_root_add_199_I16/carry[3] ,
         \add_14_root_add_199_I16/carry[2] ,
         \add_14_root_add_199_I16/carry[1] ,
         \add_13_root_add_199_I16/carry[9] ,
         \add_13_root_add_199_I16/carry[8] ,
         \add_13_root_add_199_I16/carry[7] ,
         \add_13_root_add_199_I16/carry[6] ,
         \add_13_root_add_199_I16/carry[5] ,
         \add_13_root_add_199_I16/carry[4] ,
         \add_13_root_add_199_I16/carry[3] ,
         \add_13_root_add_199_I16/carry[2] ,
         \add_13_root_add_199_I16/carry[1] ,
         \add_12_root_add_199_I16/carry[7] ,
         \add_12_root_add_199_I16/carry[6] ,
         \add_12_root_add_199_I16/carry[5] ,
         \add_12_root_add_199_I16/carry[4] ,
         \add_12_root_add_199_I16/carry[3] ,
         \add_12_root_add_199_I16/carry[2] ,
         \add_12_root_add_199_I16/carry[1] ,
         \add_11_root_add_199_I16/carry[11] ,
         \add_11_root_add_199_I16/carry[10] ,
         \add_11_root_add_199_I16/carry[9] ,
         \add_11_root_add_199_I16/carry[8] ,
         \add_11_root_add_199_I16/carry[7] ,
         \add_11_root_add_199_I16/carry[6] ,
         \add_11_root_add_199_I16/carry[5] ,
         \add_11_root_add_199_I16/carry[4] ,
         \add_11_root_add_199_I16/carry[3] ,
         \add_11_root_add_199_I16/carry[2] ,
         \add_11_root_add_199_I16/carry[1] ,
         \add_10_root_add_199_I16/carry[9] ,
         \add_10_root_add_199_I16/carry[8] ,
         \add_10_root_add_199_I16/carry[7] ,
         \add_10_root_add_199_I16/carry[6] ,
         \add_10_root_add_199_I16/carry[5] ,
         \add_10_root_add_199_I16/carry[4] ,
         \add_10_root_add_199_I16/carry[3] ,
         \add_10_root_add_199_I16/carry[2] ,
         \add_10_root_add_199_I16/carry[1] ,
         \add_9_root_add_199_I16/carry[13] ,
         \add_9_root_add_199_I16/carry[12] ,
         \add_9_root_add_199_I16/carry[11] ,
         \add_9_root_add_199_I16/carry[10] , \add_9_root_add_199_I16/carry[9] ,
         \add_9_root_add_199_I16/carry[8] , \add_9_root_add_199_I16/carry[7] ,
         \add_9_root_add_199_I16/carry[6] , \add_9_root_add_199_I16/carry[5] ,
         \add_9_root_add_199_I16/carry[4] , \add_9_root_add_199_I16/carry[3] ,
         \add_9_root_add_199_I16/carry[2] , \add_9_root_add_199_I16/carry[1] ,
         \add_8_root_add_199_I16/carry[11] ,
         \add_8_root_add_199_I16/carry[10] , \add_8_root_add_199_I16/carry[9] ,
         \add_8_root_add_199_I16/carry[8] , \add_8_root_add_199_I16/carry[7] ,
         \add_8_root_add_199_I16/carry[6] , \add_8_root_add_199_I16/carry[5] ,
         \add_8_root_add_199_I16/carry[4] , \add_8_root_add_199_I16/carry[3] ,
         \add_8_root_add_199_I16/carry[2] , \add_8_root_add_199_I16/carry[1] ,
         n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72,
         n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86,
         n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100,
         n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, n111,
         n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122,
         n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133,
         n134, n135, n177, n216, n217, n218, n219, n220, n221, n222, n223,
         n224, n225, n226, n227, n228, n229, n230, n231, n232, n233, n234,
         n235, n236, n237, n238, n239, n240, n241, n242, n243, n244, n245,
         n246, n247, n248, n249, n250, n251, n252, n253, n254, n255, n256,
         n257, n258, n259, n260, n261, n262, n263, n264, n265, n266, n267,
         n268, n269, n270, n271, n272, n273, n274, n275, n276, n277, n278,
         n279, n280, n281, n282, n283, n284, n285, n286, n287, n288, n289,
         n290, n291, n292, n293, n294, n295, n296, n297, n298, n299, n300,
         n301, n302, n303, n304, n305, n306, n307, n308, n309, n310, n311,
         n312, n313, n314, n315, n316, n317, n318, n319, n320, n321, n322,
         n323;

  MAOI22D1 U26 ( .A1(\products[7][0] ), .A2(n311), .B1(n110), .B2(n314), .ZN(
        n312) );
  AN2XD1 U66 ( .A1(n291), .A2(n302), .Z(n290) );
  AN2XD1 U74 ( .A1(n317), .A2(n286), .Z(n287) );
  MAOI22D1 U112 ( .A1(\products[15][2] ), .A2(n275), .B1(n62), .B2(n303), .ZN(
        n276) );
  OA21D1 U130 ( .A1(n242), .A2(n61), .B(n278), .Z(n269) );
  AN2XD1 U134 ( .A1(n304), .A2(n294), .Z(n279) );
  AN2XD1 U161 ( .A1(n291), .A2(n321), .Z(n262) );
  AN2XD1 U239 ( .A1(n294), .A2(n314), .Z(n281) );
  shift_add_8_DW01_add_14_DW01_add_109 add_7_root_add_199_I16 ( .A({
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \shifted_products[14][14] , 
        \shifted_products[14][13] , \shifted_products[14][12] , 
        \shifted_products[14][11] , \shifted_products[14][10] , 
        \shifted_products[14][9] , \shifted_products[14][8] , 
        \shifted_products[14][7] , \shifted_products[14][6] , 
        \shifted_products[14][5] , \shifted_products[14][4] , 
        \shifted_products[14][3] , \shifted_products[14][2] , 
        \shifted_products[14][1] , \shifted_products[14][0] }), .B({
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \shifted_products[15][16] , \shifted_products[15][15] , 
        \shifted_products[15][14] , \shifted_products[15][13] , 
        \shifted_products[15][12] , \shifted_products[15][11] , 
        \shifted_products[15][10] , \shifted_products[15][9] , 
        \shifted_products[15][8] , \shifted_products[15][7] , 
        \shifted_products[15][6] , \shifted_products[15][5] , 
        \shifted_products[15][4] , \shifted_products[15][3] , 
        \shifted_products[15][2] , \shifted_products[15][1] , 
        \shifted_products[15][0] }), .CI(n244), .SUM({N257, N256, N255, N254, 
        N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, N243, N242, 
        N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, N231, N230, 
        N229}) );
  shift_add_8_DW01_add_6_DW01_add_101 add_4_root_add_0_root_add_199_I16 ( .A({
        n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, 
        n20, n20, n20, n20, N214, N213, N212, N211, N210, N209, N208, N207, 
        N206, N205, N204, N203, N202, N201}), .B({N257, N257, N257, N257, N256, 
        N255, N254, N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, 
        N243, N242, N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, 
        N231, N230, N229}), .CI(n244), .SUM({N382, N381, N380, N379, N378, 
        N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, N367, N366, 
        N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, N355, N354, 
        N353, N352, N351}) );
  shift_add_8_DW01_add_5_DW01_add_100 add_3_root_add_0_root_add_199_I16 ( .A({
        n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, 
        n21, n21, N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, 
        N179, N178, N177, N176, N175, N174}), .B({n18, n18, n18, n18, n18, n18, 
        n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, 
        N159, N158, N157, N156, N155, N154, N153, N152, N151, N150, N149, N148}), .CI(n244), .SUM({N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, 
        N340, N339, N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, 
        N328, N327, N326, N325, N324, N323, N322, N321, N320, N319}) );
  shift_add_8_DW01_add_4_DW01_add_99 add_5_root_add_199_I16 ( .A({n19, n19, 
        n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, 
        n19, n19, n19, n19, n19, N108, N107, N106, N105, N104, N103, N102, 
        N101, N100, N99}), .B({n22, n22, n22, n22, n22, n22, n22, n22, n22, 
        n22, n22, n22, n22, n22, n22, n22, n22, N136, N135, N134, N133, N132, 
        N131, N130, N129, N128, N127, N126, N125, N124, N123}), .CI(n244), 
        .SUM({N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}) );
  shift_add_8_DW01_add_3_DW01_add_98 add_6_root_add_199_I16 ( .A({n16, n16, 
        n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, 
        n16, n16, n16, n16, n16, n16, N61, N60, N59, N58, N57, N56, N55, N54}), 
        .B({N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, 
        N98, N98, N98, N98, N98, N87, N86, N85, N84, N83, N82, N81, N80, N79, 
        N78, N77, N76}), .CI(n244), .SUM({N287, N286, N285, N284, N283, N282, 
        N281, N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270, 
        N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259, N258}) );
  shift_add_8_DW01_add_2_DW01_add_97 add_2_root_add_0_root_add_199_I16 ( .A({
        N318, N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}), .B({N382, N381, N380, 
        N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, 
        N367, N366, N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, 
        N355, N354, N353, N352, N351}), .CI(n244), .SUM({N446, N445, N444, 
        N443, N442, N441, N440, N439, N438, N437, N436, N435, N434, N433, N432, 
        N431, N430, N429, N428, N427, N426, N425, N424, N423, N422, N421, N420, 
        N419, N418, N417, N416, N415}) );
  shift_add_8_DW01_add_1_DW01_add_96 add_1_root_add_0_root_add_199_I16 ( .A({
        N446, N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435, 
        N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424, N423, 
        N422, N421, N420, N419, N418, N417, N416, N415}), .B({N287, N287, N287, 
        N286, N285, N284, N283, N282, N281, N280, N279, N278, N277, N276, N275, 
        N274, N273, N272, N271, N270, N269, N268, N267, N266, N265, N264, N263, 
        N262, N261, N260, N259, N258}), .CI(n244), .SUM({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}) );
  shift_add_8_DW01_add_0_DW01_add_95 add_0_root_add_0_root_add_199_I16 ( .A({
        N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, N340, N339, 
        N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, N328, N327, 
        N326, N325, N324, N323, N322, N321, N320, N319}), .B({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}), .CI(n244), .SUM(shift_add_out) );
  NR2D2 U2 ( .A1(n318), .A2(n319), .ZN(n280) );
  CKND2D1 U3 ( .A1(n246), .A2(n245), .ZN(n322) );
  FA1D1 U4 ( .A(\shifted_products[4][6] ), .B(\shifted_products[5][6] ), .CI(
        \add_12_root_add_199_I16/carry[6] ), .CO(
        \add_12_root_add_199_I16/carry[7] ), .S(N105) );
  FA1D1 U5 ( .A(\shifted_products[12][10] ), .B(\shifted_products[13][10] ), 
        .CI(\add_8_root_add_199_I16/carry[10] ), .CO(
        \add_8_root_add_199_I16/carry[11] ), .S(N211) );
  AOI222D1 U6 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(\products[6][5] ), .B1(\add_11_root_add_199_I16/carry[11] ), .B2(\shifted_products[7][11] ), 
        .C1(\shifted_products[7][11] ), .C2(\products[6][5] ), .ZN(n50) );
  ND2D2 U7 ( .A1(n297), .A2(n229), .ZN(n296) );
  NR3D2 U8 ( .A1(n24), .A2(n25), .A3(n26), .ZN(n57) );
  OA21D1 U9 ( .A1(n285), .A2(n132), .B(n284), .Z(n30) );
  INVD1 U10 ( .I(\products[2][5] ), .ZN(n56) );
  INR2D1 U11 ( .A1(n272), .B1(n241), .ZN(n302) );
  AN2XD1 U12 ( .A1(n291), .A2(n37), .Z(n288) );
  FA1D0 U13 ( .A(\shifted_products[2][8] ), .B(\shifted_products[3][8] ), .CI(
        \add_13_root_add_199_I16/carry[8] ), .CO(
        \add_13_root_add_199_I16/carry[9] ), .S(N84) );
  FA1D0 U14 ( .A(\shifted_products[2][6] ), .B(\shifted_products[3][6] ), .CI(
        \add_13_root_add_199_I16/carry[6] ), .CO(
        \add_13_root_add_199_I16/carry[7] ), .S(N82) );
  ND3D1 U15 ( .A1(n6), .A2(n7), .A3(n8), .ZN(n58) );
  NR3D1 U16 ( .A1(n10), .A2(n11), .A3(n12), .ZN(n54) );
  AN2XD1 U17 ( .A1(n53), .A2(\products[5][5] ), .Z(n11) );
  XNR3D2 U18 ( .A1(\products[7][5] ), .A2(n113), .A3(n23), .ZN(n22) );
  AN2XD1 U19 ( .A1(n303), .A2(n309), .Z(n1) );
  INVD1 U20 ( .I(n322), .ZN(n241) );
  CKAN2D0 U21 ( .A1(n309), .A2(n37), .Z(n2) );
  BUFFD4 U22 ( .I(n308), .Z(n37) );
  OR2XD1 U23 ( .A1(n50), .A2(n113), .Z(n3) );
  OR2XD1 U24 ( .A1(n50), .A2(n31), .Z(n4) );
  OR2D1 U25 ( .A1(n113), .A2(n31), .Z(n5) );
  ND3D2 U27 ( .A1(n3), .A2(n4), .A3(n5), .ZN(n51) );
  OR2XD1 U28 ( .A1(n57), .A2(n56), .Z(n6) );
  OR2XD1 U29 ( .A1(n57), .A2(n30), .Z(n7) );
  OR2XD1 U30 ( .A1(n56), .A2(n30), .Z(n8) );
  CKND2D0 U31 ( .A1(n303), .A2(n309), .ZN(n9) );
  CKND2D1 U32 ( .A1(n250), .A2(n249), .ZN(n309) );
  AN2D1 U33 ( .A1(n53), .A2(\products[4][5] ), .Z(n10) );
  AN2XD1 U34 ( .A1(\products[4][5] ), .A2(\products[5][5] ), .Z(n12) );
  OAI222D1 U35 ( .A1(n52), .A2(n125), .B1(n52), .B2(n55), .C1(n125), .C2(n55), 
        .ZN(n53) );
  AN2D1 U36 ( .A1(n39), .A2(\products[12][5] ), .Z(n13) );
  AN2D2 U37 ( .A1(n39), .A2(\products[13][5] ), .Z(n14) );
  AN2D1 U38 ( .A1(\products[12][5] ), .A2(\products[13][5] ), .Z(n15) );
  NR3D2 U39 ( .A1(n13), .A2(n14), .A3(n15), .ZN(n40) );
  OAI222D1 U40 ( .A1(n38), .A2(n79), .B1(n38), .B2(n41), .C1(n79), .C2(n41), 
        .ZN(n39) );
  INR2D2 U41 ( .A1(n321), .B1(n241), .ZN(n310) );
  NR2D0 U42 ( .A1(n36), .A2(n78), .ZN(\shifted_products[13][0] ) );
  CKND2D2 U43 ( .A1(n247), .A2(n249), .ZN(n314) );
  AN2D1 U44 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(\products[2][5] ), 
        .Z(n24) );
  AOI222D1 U45 ( .A1(n58), .A2(\products[2][5] ), .B1(n58), .B2(
        \products[3][5] ), .C1(\products[2][5] ), .C2(\products[3][5] ), .ZN(
        n29) );
  INVD3 U46 ( .I(n28), .ZN(N98) );
  NR2D0 U47 ( .A1(n310), .A2(n177), .ZN(\shifted_products[3][0] ) );
  AOI222D0 U48 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \products[10][5] ), .B1(\add_9_root_add_199_I16/carry[13] ), .B2(
        \shifted_products[11][13] ), .C1(\shifted_products[11][13] ), .C2(
        \products[10][5] ), .ZN(n43) );
  CKAN2D0 U49 ( .A1(n297), .A2(n34), .Z(n317) );
  OAI22D0 U50 ( .A1(n2), .A2(n115), .B1(n232), .B2(n117), .ZN(
        \shifted_products[6][3] ) );
  OAI22D0 U51 ( .A1(n321), .A2(n98), .B1(n235), .B2(n100), .ZN(
        \shifted_products[9][3] ) );
  NR2D0 U52 ( .A1(n321), .A2(n89), .ZN(\shifted_products[11][1] ) );
  INR2D1 U53 ( .A1(n304), .B1(n241), .ZN(n297) );
  CKND2D1 U54 ( .A1(n250), .A2(n248), .ZN(n303) );
  AOI222D2 U55 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[0][9] ), .B1(\add_14_root_add_199_I16/carry[6] ), 
        .B2(\shifted_products[1][6] ), .C1(\shifted_products[1][6] ), .C2(
        \shifted_products[0][9] ), .ZN(n60) );
  XNR3D4 U56 ( .A1(n221), .A2(n17), .A3(n59), .ZN(n16) );
  OA222D1 U57 ( .A1(n60), .A2(n59), .B1(n60), .B2(n221), .C1(n59), .C2(n221), 
        .Z(n17) );
  CKND2 U58 ( .I(n268), .ZN(n229) );
  XNR3D1 U59 ( .A1(n30), .A2(n57), .A3(n56), .ZN(N86) );
  ND2D2 U60 ( .A1(n302), .A2(n280), .ZN(n308) );
  ND2D2 U61 ( .A1(n281), .A2(n1), .ZN(n319) );
  OAI22D0 U62 ( .A1(n310), .A2(n131), .B1(n283), .B2(n133), .ZN(
        \shifted_products[3][5] ) );
  OAI22D0 U63 ( .A1(n310), .A2(n133), .B1(n283), .B2(n135), .ZN(
        \shifted_products[3][3] ) );
  NR2D0 U64 ( .A1(n227), .A2(n217), .ZN(\shifted_products[2][3] ) );
  FA1D1 U65 ( .A(\shifted_products[2][7] ), .B(\shifted_products[3][7] ), .CI(
        \add_13_root_add_199_I16/carry[7] ), .CO(
        \add_13_root_add_199_I16/carry[8] ), .S(N83) );
  NR2D0 U67 ( .A1(n310), .A2(n135), .ZN(\shifted_products[3][1] ) );
  XOR3D4 U68 ( .A1(\products[9][5] ), .A2(n48), .A3(n46), .Z(n18) );
  AOI222D1 U69 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(\products[4][5] ), .B1(\add_12_root_add_199_I16/carry[7] ), .B2(\shifted_products[5][7] ), .C1(
        \shifted_products[5][7] ), .C2(\products[4][5] ), .ZN(n52) );
  AOI222D1 U70 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(\products[8][5] ), .B1(\add_10_root_add_199_I16/carry[9] ), .B2(\shifted_products[9][9] ), .C1(
        \shifted_products[9][9] ), .C2(\products[8][5] ), .ZN(n45) );
  AOI222D1 U71 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \products[12][5] ), .B1(\add_8_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[13][11] ), .C1(\shifted_products[13][11] ), .C2(
        \products[12][5] ), .ZN(n38) );
  XOR3D2 U72 ( .A1(\products[5][5] ), .A2(n54), .A3(n125), .Z(n19) );
  XOR3D2 U73 ( .A1(\products[13][5] ), .A2(n40), .A3(n79), .Z(n20) );
  XOR3D1 U75 ( .A1(\products[11][5] ), .A2(n42), .A3(n27), .Z(n21) );
  OAI22D0 U76 ( .A1(n310), .A2(n221), .B1(n280), .B2(n222), .ZN(
        \shifted_products[1][6] ) );
  OAI22D0 U77 ( .A1(n239), .A2(n109), .B1(n301), .B2(n107), .ZN(
        \shifted_products[7][11] ) );
  NR2D0 U78 ( .A1(n315), .A2(n241), .ZN(n323) );
  CKAN2D0 U79 ( .A1(n281), .A2(n34), .Z(n285) );
  OAI21D0 U80 ( .A1(n63), .A2(n34), .B(n271), .ZN(\shifted_products[15][15] )
         );
  NR2D0 U81 ( .A1(n36), .A2(n66), .ZN(\shifted_products[15][0] ) );
  CKND2D0 U82 ( .A1(n297), .A2(n228), .ZN(n270) );
  CKND2D0 U83 ( .A1(n229), .A2(n281), .ZN(n315) );
  CKND1 U84 ( .I(\products[13][5] ), .ZN(n73) );
  NR2D0 U85 ( .A1(n112), .A2(n36), .ZN(\shifted_products[7][0] ) );
  CKND2D0 U86 ( .A1(\products[12][5] ), .A2(n315), .ZN(n258) );
  CKND2D0 U87 ( .A1(\products[8][5] ), .A2(n315), .ZN(n316) );
  CKND1 U88 ( .I(\products[7][5] ), .ZN(n107) );
  CKND2D0 U89 ( .A1(\products[3][5] ), .A2(n296), .ZN(n284) );
  NR2D0 U90 ( .A1(n268), .A2(n241), .ZN(n257) );
  CKND2D0 U91 ( .A1(\products[2][5] ), .A2(n296), .ZN(n282) );
  CKND2D0 U92 ( .A1(\products[10][5] ), .A2(n268), .ZN(n251) );
  CKND1 U93 ( .I(\products[6][5] ), .ZN(n113) );
  CKND1 U94 ( .I(\products[14][5] ), .ZN(n67) );
  CKAN2D0 U95 ( .A1(n297), .A2(n281), .Z(n252) );
  CKND2D0 U96 ( .A1(\products[15][5] ), .A2(n268), .ZN(n278) );
  CKND2D1 U97 ( .A1(n233), .A2(n297), .ZN(n298) );
  CKND1 U98 ( .I(\products[5][5] ), .ZN(n119) );
  CKAN2D0 U99 ( .A1(n291), .A2(n310), .Z(n292) );
  OAI22D0 U100 ( .A1(n288), .A2(n125), .B1(n287), .B2(n127), .ZN(
        \shifted_products[4][5] ) );
  OAI22D0 U101 ( .A1(n288), .A2(n79), .B1(n286), .B2(n81), .ZN(
        \shifted_products[12][5] ) );
  OAI22D0 U102 ( .A1(n36), .A2(n121), .B1(n290), .B2(n123), .ZN(
        \shifted_products[5][3] ) );
  OAI22D0 U103 ( .A1(n288), .A2(n127), .B1(n287), .B2(n129), .ZN(
        \shifted_products[4][3] ) );
  OAI22D0 U104 ( .A1(n36), .A2(n63), .B1(n234), .B2(n65), .ZN(
        \shifted_products[15][3] ) );
  OAI22D0 U105 ( .A1(n2), .A2(n69), .B1(n233), .B2(n71), .ZN(
        \shifted_products[14][3] ) );
  OAI22D0 U106 ( .A1(n321), .A2(n87), .B1(n1), .B2(n89), .ZN(
        \shifted_products[11][3] ) );
  NR2D0 U107 ( .A1(n229), .A2(n92), .ZN(\shifted_products[10][3] ) );
  NR2D0 U108 ( .A1(n228), .A2(n103), .ZN(\shifted_products[8][3] ) );
  OAI22D0 U109 ( .A1(n35), .A2(n75), .B1(n231), .B2(n77), .ZN(
        \shifted_products[13][3] ) );
  OAI22D0 U110 ( .A1(n288), .A2(n81), .B1(n286), .B2(n83), .ZN(
        \shifted_products[12][3] ) );
  OAI22D0 U111 ( .A1(n109), .A2(n35), .B1(n230), .B2(n111), .ZN(
        \shifted_products[7][3] ) );
  OAI21D0 U113 ( .A1(n65), .A2(n34), .B(n271), .ZN(\shifted_products[15][13] )
         );
  NR2D0 U114 ( .A1(n36), .A2(n123), .ZN(\shifted_products[5][1] ) );
  NR2D0 U115 ( .A1(n288), .A2(n83), .ZN(\shifted_products[12][1] ) );
  NR2D0 U116 ( .A1(n36), .A2(n77), .ZN(\shifted_products[13][1] ) );
  NR2D0 U117 ( .A1(n111), .A2(n36), .ZN(\shifted_products[7][1] ) );
  NR2D0 U118 ( .A1(n229), .A2(n94), .ZN(\shifted_products[10][1] ) );
  NR2D0 U119 ( .A1(n36), .A2(n65), .ZN(\shifted_products[15][1] ) );
  CKND1 U120 ( .I(\products[4][5] ), .ZN(n125) );
  CKAN2D0 U121 ( .A1(\products[0][5] ), .A2(n36), .Z(\shifted_products[0][9] )
         );
  AO222D1 U122 ( .A1(n51), .A2(\products[6][5] ), .B1(n51), .B2(
        \products[7][5] ), .C1(\products[6][5] ), .C2(\products[7][5] ), .Z(
        n23) );
  OAI21D0 U123 ( .A1(n62), .A2(n34), .B(n271), .ZN(\shifted_products[15][16] )
         );
  AN2XD1 U124 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .Z(n25) );
  OAI21D0 U125 ( .A1(n285), .A2(n133), .B(n284), .ZN(\shifted_products[3][9] )
         );
  AN2D4 U126 ( .A1(n272), .A2(n37), .Z(n321) );
  NR2D0 U127 ( .A1(n227), .A2(n220), .ZN(\shifted_products[2][0] ) );
  OAI21D0 U128 ( .A1(n285), .A2(n218), .B(n282), .ZN(\shifted_products[2][6] )
         );
  OAI22D0 U129 ( .A1(n310), .A2(n222), .B1(n280), .B2(n224), .ZN(
        \shifted_products[1][4] ) );
  OAI22D0 U131 ( .A1(n310), .A2(n223), .B1(n280), .B2(n225), .ZN(
        \shifted_products[1][3] ) );
  OAI22D0 U132 ( .A1(n310), .A2(n132), .B1(n283), .B2(n134), .ZN(
        \shifted_products[3][4] ) );
  OAI22D0 U133 ( .A1(n227), .A2(n216), .B1(n285), .B2(n220), .ZN(
        \shifted_products[2][4] ) );
  OAI22D0 U135 ( .A1(n310), .A2(n134), .B1(n283), .B2(n177), .ZN(
        \shifted_products[3][2] ) );
  NR2D0 U136 ( .A1(n227), .A2(n218), .ZN(\shifted_products[2][2] ) );
  NR2D0 U137 ( .A1(n310), .A2(n225), .ZN(\shifted_products[1][1] ) );
  INR2XD0 U138 ( .A1(n272), .B1(n289), .ZN(n286) );
  CKAN2D0 U139 ( .A1(n309), .A2(n37), .Z(n300) );
  INR2D0 U140 ( .A1(n304), .B1(n9), .ZN(n283) );
  CKND2D0 U141 ( .A1(n322), .A2(n314), .ZN(n275) );
  ND2D2 U142 ( .A1(n34), .A2(n304), .ZN(n318) );
  CKND2D0 U143 ( .A1(n34), .A2(n294), .ZN(n311) );
  CKAN2D0 U144 ( .A1(n314), .A2(n309), .Z(n291) );
  CKND2D0 U145 ( .A1(n297), .A2(n294), .ZN(n265) );
  AOI22D0 U146 ( .A1(\products[14][0] ), .A2(n265), .B1(\products[14][4] ), 
        .B2(n264), .ZN(n266) );
  NR2D0 U147 ( .A1(n288), .A2(n130), .ZN(\shifted_products[4][0] ) );
  NR2D0 U148 ( .A1(n288), .A2(n84), .ZN(\shifted_products[12][0] ) );
  AOI22D0 U149 ( .A1(\products[6][4] ), .A2(n298), .B1(\products[6][0] ), .B2(
        n311), .ZN(n299) );
  NR2D0 U150 ( .A1(n229), .A2(n95), .ZN(\shifted_products[10][0] ) );
  NR2D0 U151 ( .A1(n228), .A2(n106), .ZN(\shifted_products[8][0] ) );
  CKND1 U152 ( .I(\products[15][4] ), .ZN(n62) );
  CKND1 U153 ( .I(\products[14][3] ), .ZN(n69) );
  OAI21D0 U154 ( .A1(n285), .A2(n134), .B(n284), .ZN(\shifted_products[3][8] )
         );
  OAI21D0 U155 ( .A1(n285), .A2(n216), .B(n282), .ZN(\shifted_products[2][8] )
         );
  CKND1 U156 ( .I(\products[13][3] ), .ZN(n75) );
  CKND1 U157 ( .I(\products[7][3] ), .ZN(n109) );
  CKND2D0 U158 ( .A1(n302), .A2(n309), .ZN(n305) );
  CKND2D0 U159 ( .A1(n291), .A2(n272), .ZN(n259) );
  CKND1 U160 ( .I(\products[6][3] ), .ZN(n115) );
  CKND1 U162 ( .I(\products[14][4] ), .ZN(n68) );
  CKND1 U163 ( .I(\products[7][4] ), .ZN(n108) );
  CKND1 U164 ( .I(\products[12][3] ), .ZN(n81) );
  CKND1 U165 ( .I(\products[13][4] ), .ZN(n74) );
  CKND1 U166 ( .I(\products[5][3] ), .ZN(n121) );
  OAI21D0 U167 ( .A1(n317), .A2(n103), .B(n316), .ZN(\shifted_products[8][7] )
         );
  CKND1 U168 ( .I(\products[6][4] ), .ZN(n114) );
  OAI21D0 U169 ( .A1(n317), .A2(n81), .B(n258), .ZN(\shifted_products[12][9] )
         );
  OAI22D0 U170 ( .A1(n228), .A2(n102), .B1(n317), .B2(n106), .ZN(
        \shifted_products[8][4] ) );
  OAI21D0 U171 ( .A1(n317), .A2(n105), .B(n316), .ZN(\shifted_products[8][5] )
         );
  OAI21D0 U172 ( .A1(n317), .A2(n83), .B(n258), .ZN(\shifted_products[12][7] )
         );
  OAI22D0 U173 ( .A1(n229), .A2(n91), .B1(n252), .B2(n95), .ZN(
        \shifted_products[10][4] ) );
  OAI22D0 U174 ( .A1(n288), .A2(n126), .B1(n287), .B2(n128), .ZN(
        \shifted_products[4][4] ) );
  OAI22D0 U175 ( .A1(n288), .A2(n80), .B1(n286), .B2(n82), .ZN(
        \shifted_products[12][4] ) );
  OAI21D0 U176 ( .A1(n317), .A2(n104), .B(n316), .ZN(\shifted_products[8][6] )
         );
  AOI22D0 U177 ( .A1(\products[9][4] ), .A2(n319), .B1(\products[9][0] ), .B2(
        n318), .ZN(n320) );
  AOI22D0 U178 ( .A1(\products[15][4] ), .A2(n273), .B1(\products[15][0] ), 
        .B2(n275), .ZN(n274) );
  AOI22D0 U179 ( .A1(\products[11][0] ), .A2(n255), .B1(\products[11][4] ), 
        .B2(n9), .ZN(n256) );
  OAI22D0 U180 ( .A1(n238), .A2(n69), .B1(n267), .B2(n67), .ZN(
        \shifted_products[14][9] ) );
  OAI22D0 U181 ( .A1(n36), .A2(n122), .B1(n290), .B2(n124), .ZN(
        \shifted_products[5][2] ) );
  OAI22D0 U182 ( .A1(n288), .A2(n128), .B1(n287), .B2(n130), .ZN(
        \shifted_products[4][2] ) );
  OAI22D0 U183 ( .A1(n36), .A2(n76), .B1(n231), .B2(n78), .ZN(
        \shifted_products[13][2] ) );
  OAI22D0 U184 ( .A1(n288), .A2(n82), .B1(n286), .B2(n84), .ZN(
        \shifted_products[12][2] ) );
  OAI22D0 U185 ( .A1(n36), .A2(n64), .B1(n234), .B2(n66), .ZN(
        \shifted_products[15][2] ) );
  OAI22D0 U186 ( .A1(n2), .A2(n70), .B1(n233), .B2(n72), .ZN(
        \shifted_products[14][2] ) );
  OAI22D0 U187 ( .A1(n321), .A2(n88), .B1(n1), .B2(n90), .ZN(
        \shifted_products[11][2] ) );
  NR2D0 U188 ( .A1(n229), .A2(n93), .ZN(\shifted_products[10][2] ) );
  OAI22D0 U189 ( .A1(n321), .A2(n99), .B1(n235), .B2(n101), .ZN(
        \shifted_products[9][2] ) );
  NR2D0 U190 ( .A1(n228), .A2(n104), .ZN(\shifted_products[8][2] ) );
  OAI22D0 U191 ( .A1(n2), .A2(n116), .B1(n232), .B2(n118), .ZN(
        \shifted_products[6][2] ) );
  CKAN2D0 U192 ( .A1(n310), .A2(n309), .Z(n313) );
  CKND1 U193 ( .I(\products[5][4] ), .ZN(n120) );
  CKND1 U194 ( .I(\products[4][4] ), .ZN(n126) );
  CKND1 U195 ( .I(\products[4][3] ), .ZN(n127) );
  CKAN2D0 U196 ( .A1(n321), .A2(n309), .Z(n277) );
  CKND2D0 U197 ( .A1(n281), .A2(n304), .ZN(n255) );
  OAI22D0 U198 ( .A1(n310), .A2(n224), .B1(n280), .B2(n226), .ZN(
        \shifted_products[1][2] ) );
  CKND2D0 U199 ( .A1(n248), .A2(n245), .ZN(n272) );
  CKND2D0 U200 ( .A1(n250), .A2(n246), .ZN(n304) );
  CKND2D0 U201 ( .A1(n248), .A2(n247), .ZN(n294) );
  CKND2D0 U202 ( .A1(n247), .A2(n246), .ZN(n295) );
  CKND1 U203 ( .I(\products[6][2] ), .ZN(n116) );
  CKND1 U204 ( .I(\products[12][2] ), .ZN(n82) );
  AOI22D0 U205 ( .A1(\products[7][2] ), .A2(n306), .B1(\products[7][4] ), .B2(
        n305), .ZN(n307) );
  AOI22D0 U206 ( .A1(\products[13][4] ), .A2(n259), .B1(\products[13][2] ), 
        .B2(n289), .ZN(n260) );
  OAI21D0 U207 ( .A1(n317), .A2(n82), .B(n258), .ZN(\shifted_products[12][8] )
         );
  AOI22D0 U208 ( .A1(\products[13][4] ), .A2(n289), .B1(\products[13][2] ), 
        .B2(n241), .ZN(n261) );
  CKND1 U209 ( .I(\products[5][2] ), .ZN(n122) );
  CKND1 U210 ( .I(\products[4][2] ), .ZN(n128) );
  AN2D1 U211 ( .A1(\shifted_products[3][9] ), .A2(\products[2][5] ), .Z(n26)
         );
  INVD1 U212 ( .I(n315), .ZN(n228) );
  INVD1 U213 ( .I(n298), .ZN(n232) );
  INVD1 U214 ( .I(n296), .ZN(n227) );
  CKBD1 U215 ( .I(n308), .Z(n36) );
  CKBD1 U216 ( .I(n308), .Z(n35) );
  INVD1 U217 ( .I(n319), .ZN(n235) );
  ND2D1 U218 ( .A1(n321), .A2(n1), .ZN(n268) );
  OAI22D1 U219 ( .A1(n293), .A2(n121), .B1(n292), .B2(n119), .ZN(
        \shifted_products[5][7] ) );
  INVD1 U220 ( .I(\products[15][5] ), .ZN(n61) );
  INVD1 U221 ( .I(n259), .ZN(n231) );
  NR2D1 U222 ( .A1(n2), .A2(n72), .ZN(\shifted_products[14][0] ) );
  INVD1 U223 ( .I(n305), .ZN(n230) );
  AOI222D0 U224 ( .A1(n44), .A2(\products[10][5] ), .B1(n44), .B2(
        \products[11][5] ), .C1(\products[10][5] ), .C2(\products[11][5] ), 
        .ZN(n27) );
  FA1D0 U225 ( .A(\shifted_products[10][1] ), .B(\shifted_products[11][1] ), 
        .CI(\add_9_root_add_199_I16/carry[1] ), .CO(
        \add_9_root_add_199_I16/carry[2] ), .S(N175) );
  FA1D0 U226 ( .A(\shifted_products[12][5] ), .B(\shifted_products[13][5] ), 
        .CI(\add_8_root_add_199_I16/carry[5] ), .CO(
        \add_8_root_add_199_I16/carry[6] ), .S(N206) );
  OAI222D0 U227 ( .A1(n237), .A2(n77), .B1(n231), .B2(n75), .C1(n35), .C2(n73), 
        .ZN(\shifted_products[13][5] ) );
  FA1D0 U228 ( .A(\shifted_products[4][5] ), .B(\shifted_products[5][5] ), 
        .CI(\add_12_root_add_199_I16/carry[5] ), .CO(
        \add_12_root_add_199_I16/carry[6] ), .S(N104) );
  OAI222D0 U229 ( .A1(n290), .A2(n121), .B1(n293), .B2(n123), .C1(n35), .C2(
        n119), .ZN(\shifted_products[5][5] ) );
  FA1D0 U230 ( .A(\shifted_products[4][3] ), .B(\shifted_products[5][3] ), 
        .CI(\add_12_root_add_199_I16/carry[3] ), .CO(
        \add_12_root_add_199_I16/carry[4] ), .S(N102) );
  FA1D0 U231 ( .A(\shifted_products[2][3] ), .B(\shifted_products[3][3] ), 
        .CI(\add_13_root_add_199_I16/carry[3] ), .CO(
        \add_13_root_add_199_I16/carry[4] ), .S(N79) );
  FA1D0 U232 ( .A(\shifted_products[10][3] ), .B(\shifted_products[11][3] ), 
        .CI(\add_9_root_add_199_I16/carry[3] ), .CO(
        \add_9_root_add_199_I16/carry[4] ), .S(N177) );
  FA1D0 U233 ( .A(\shifted_products[2][5] ), .B(\shifted_products[3][5] ), 
        .CI(\add_13_root_add_199_I16/carry[5] ), .CO(
        \add_13_root_add_199_I16/carry[6] ), .S(N81) );
  OAI21D1 U234 ( .A1(n285), .A2(n219), .B(n282), .ZN(\shifted_products[2][5] )
         );
  FA1D0 U235 ( .A(\shifted_products[10][9] ), .B(\shifted_products[11][9] ), 
        .CI(\add_9_root_add_199_I16/carry[9] ), .CO(
        \add_9_root_add_199_I16/carry[10] ), .S(N183) );
  OAI22D1 U236 ( .A1(n236), .A2(n87), .B1(n257), .B2(n85), .ZN(
        \shifted_products[11][9] ) );
  OAI21D1 U237 ( .A1(n33), .A2(n94), .B(n253), .ZN(\shifted_products[10][9] )
         );
  FA1D0 U238 ( .A(\shifted_products[6][3] ), .B(\shifted_products[7][3] ), 
        .CI(\add_11_root_add_199_I16/carry[3] ), .CO(
        \add_11_root_add_199_I16/carry[4] ), .S(N126) );
  FA1D0 U240 ( .A(\shifted_products[12][3] ), .B(\shifted_products[13][3] ), 
        .CI(\add_8_root_add_199_I16/carry[3] ), .CO(
        \add_8_root_add_199_I16/carry[4] ), .S(N204) );
  FA1D0 U241 ( .A(\shifted_products[8][3] ), .B(\shifted_products[9][3] ), 
        .CI(\add_10_root_add_199_I16/carry[3] ), .CO(
        \add_10_root_add_199_I16/carry[4] ), .S(N151) );
  OAI21D1 U242 ( .A1(n279), .A2(n63), .B(n269), .ZN(\shifted_products[15][11] ) );
  OAI21D1 U243 ( .A1(n33), .A2(n71), .B(n263), .ZN(\shifted_products[14][11] )
         );
  OAI21D1 U244 ( .A1(n33), .A2(n69), .B(n263), .ZN(\shifted_products[14][13] )
         );
  OAI21D1 U245 ( .A1(n285), .A2(n135), .B(n284), .ZN(\shifted_products[3][7] )
         );
  OAI21D1 U246 ( .A1(n285), .A2(n217), .B(n282), .ZN(\shifted_products[2][7] )
         );
  FA1D0 U247 ( .A(\shifted_products[10][11] ), .B(\shifted_products[11][11] ), 
        .CI(\add_9_root_add_199_I16/carry[11] ), .CO(
        \add_9_root_add_199_I16/carry[12] ), .S(N185) );
  OAI21D1 U248 ( .A1(n33), .A2(n89), .B(n254), .ZN(\shifted_products[11][11] )
         );
  OAI21D1 U249 ( .A1(n33), .A2(n92), .B(n253), .ZN(\shifted_products[10][11] )
         );
  FA1D0 U250 ( .A(\shifted_products[2][1] ), .B(\shifted_products[3][1] ), 
        .CI(\add_13_root_add_199_I16/carry[1] ), .CO(
        \add_13_root_add_199_I16/carry[2] ), .S(N77) );
  NR2D1 U251 ( .A1(n227), .A2(n219), .ZN(\shifted_products[2][1] ) );
  FA1D0 U252 ( .A(\shifted_products[6][1] ), .B(\shifted_products[7][1] ), 
        .CI(\add_11_root_add_199_I16/carry[1] ), .CO(
        \add_11_root_add_199_I16/carry[2] ), .S(N124) );
  NR2D1 U253 ( .A1(n300), .A2(n117), .ZN(\shifted_products[6][1] ) );
  FA1D0 U254 ( .A(\shifted_products[8][1] ), .B(\shifted_products[9][1] ), 
        .CI(\add_10_root_add_199_I16/carry[1] ), .CO(
        \add_10_root_add_199_I16/carry[2] ), .S(N149) );
  NR2D1 U255 ( .A1(n321), .A2(n100), .ZN(\shifted_products[9][1] ) );
  NR2D1 U256 ( .A1(n228), .A2(n105), .ZN(\shifted_products[8][1] ) );
  NR2D1 U257 ( .A1(n300), .A2(n71), .ZN(\shifted_products[14][1] ) );
  FA1D0 U258 ( .A(\shifted_products[4][1] ), .B(\shifted_products[5][1] ), 
        .CI(\add_12_root_add_199_I16/carry[1] ), .CO(
        \add_12_root_add_199_I16/carry[2] ), .S(N100) );
  NR2D1 U259 ( .A1(n288), .A2(n129), .ZN(\shifted_products[4][1] ) );
  FA1D0 U260 ( .A(\shifted_products[12][1] ), .B(\shifted_products[13][1] ), 
        .CI(\add_8_root_add_199_I16/carry[1] ), .CO(
        \add_8_root_add_199_I16/carry[2] ), .S(N202) );
  FA1D0 U261 ( .A(\products[0][5] ), .B(\shifted_products[1][5] ), .CI(
        \add_14_root_add_199_I16/carry[5] ), .CO(
        \add_14_root_add_199_I16/carry[6] ), .S(N59) );
  OAI22D1 U262 ( .A1(n310), .A2(n221), .B1(n280), .B2(n223), .ZN(
        \shifted_products[1][5] ) );
  NR2D1 U263 ( .A1(n300), .A2(n118), .ZN(\shifted_products[6][0] ) );
  INVD1 U264 ( .I(\products[12][5] ), .ZN(n79) );
  XNR3D1 U265 ( .A1(\products[3][5] ), .A2(n56), .A3(n29), .ZN(n28) );
  INVD1 U266 ( .I(\products[1][5] ), .ZN(n221) );
  NR2D1 U267 ( .A1(n289), .A2(n318), .ZN(n293) );
  INVD1 U268 ( .I(n311), .ZN(n239) );
  OAI22D1 U269 ( .A1(n243), .A2(n75), .B1(n323), .B2(n73), .ZN(
        \shifted_products[13][11] ) );
  OAI22D1 U270 ( .A1(n243), .A2(n98), .B1(n323), .B2(n96), .ZN(
        \shifted_products[9][9] ) );
  INVD1 U271 ( .I(\products[9][5] ), .ZN(n96) );
  INVD1 U272 ( .I(\products[11][5] ), .ZN(n85) );
  OAI21D1 U273 ( .A1(n33), .A2(n87), .B(n254), .ZN(\shifted_products[11][13] )
         );
  OAI22D1 U274 ( .A1(n243), .A2(n74), .B1(n323), .B2(n73), .ZN(
        \shifted_products[13][12] ) );
  OAI22D1 U275 ( .A1(n243), .A2(n97), .B1(n323), .B2(n96), .ZN(
        \shifted_products[9][10] ) );
  ND2D1 U276 ( .A1(\products[14][5] ), .A2(n270), .ZN(n263) );
  ND2D1 U277 ( .A1(\products[10][5] ), .A2(n270), .ZN(n253) );
  ND2D1 U278 ( .A1(\products[15][5] ), .A2(n270), .ZN(n271) );
  ND2D1 U279 ( .A1(\products[11][5] ), .A2(n270), .ZN(n254) );
  INVD1 U280 ( .I(n264), .ZN(n233) );
  INVD1 U281 ( .I(n318), .ZN(n243) );
  OAI22D1 U282 ( .A1(n293), .A2(n120), .B1(n292), .B2(n119), .ZN(
        \shifted_products[5][8] ) );
  INVD1 U283 ( .I(n265), .ZN(n238) );
  INVD1 U284 ( .I(n255), .ZN(n236) );
  OA22D0 U285 ( .A1(n239), .A2(n108), .B1(n301), .B2(n107), .Z(n31) );
  INVD1 U286 ( .I(n273), .ZN(n234) );
  INVD1 U287 ( .I(n306), .ZN(n240) );
  INVD1 U288 ( .I(n275), .ZN(n242) );
  INVD1 U289 ( .I(n289), .ZN(n237) );
  NR2D1 U290 ( .A1(n321), .A2(n101), .ZN(\shifted_products[9][0] ) );
  NR2D1 U291 ( .A1(n321), .A2(n90), .ZN(\shifted_products[11][0] ) );
  INVD1 U292 ( .I(\products[3][5] ), .ZN(n131) );
  OA21D1 U293 ( .A1(n33), .A2(n86), .B(n254), .Z(n32) );
  ND2D1 U294 ( .A1(n294), .A2(n303), .ZN(n289) );
  INVD1 U295 ( .I(\products[15][3] ), .ZN(n63) );
  NR2D1 U296 ( .A1(n310), .A2(n226), .ZN(\shifted_products[1][0] ) );
  FA1D0 U297 ( .A(\shifted_products[6][7] ), .B(\shifted_products[7][7] ), 
        .CI(\add_11_root_add_199_I16/carry[7] ), .CO(
        \add_11_root_add_199_I16/carry[8] ), .S(N130) );
  OAI222D0 U298 ( .A1(n240), .A2(n109), .B1(n313), .B2(n107), .C1(n111), .C2(
        n314), .ZN(\shifted_products[7][7] ) );
  OAI222D0 U299 ( .A1(n227), .A2(n113), .B1(n239), .B2(n117), .C1(n314), .C2(
        n115), .ZN(\shifted_products[6][7] ) );
  FA1D0 U300 ( .A(\shifted_products[8][7] ), .B(\shifted_products[9][7] ), 
        .CI(\add_10_root_add_199_I16/carry[7] ), .CO(
        \add_10_root_add_199_I16/carry[8] ), .S(N155) );
  OAI222D0 U301 ( .A1(n243), .A2(n100), .B1(n228), .B2(n96), .C1(n98), .C2(
        n322), .ZN(\shifted_products[9][7] ) );
  OAI222D0 U302 ( .A1(n35), .A2(n62), .B1(n234), .B2(n64), .C1(n66), .C2(n303), 
        .ZN(\shifted_products[15][4] ) );
  OAI222D0 U303 ( .A1(n2), .A2(n68), .B1(n233), .B2(n70), .C1(n314), .C2(n72), 
        .ZN(\shifted_products[14][4] ) );
  OAI222D0 U304 ( .A1(n35), .A2(n61), .B1(n234), .B2(n63), .C1(n65), .C2(n303), 
        .ZN(\shifted_products[15][5] ) );
  OAI222D0 U305 ( .A1(n2), .A2(n67), .B1(n233), .B2(n69), .C1(n314), .C2(n71), 
        .ZN(\shifted_products[14][5] ) );
  OAI222D0 U306 ( .A1(n242), .A2(n65), .B1(n277), .B2(n61), .C1(n63), .C2(n303), .ZN(\shifted_products[15][7] ) );
  OAI222D0 U307 ( .A1(n229), .A2(n67), .B1(n238), .B2(n71), .C1(n314), .C2(n69), .ZN(\shifted_products[14][7] ) );
  FA1D0 U308 ( .A(\shifted_products[8][4] ), .B(\shifted_products[9][4] ), 
        .CI(\add_10_root_add_199_I16/carry[4] ), .CO(
        \add_10_root_add_199_I16/carry[5] ), .S(N152) );
  OAI222D0 U309 ( .A1(n321), .A2(n97), .B1(n235), .B2(n99), .C1(n322), .C2(
        n101), .ZN(\shifted_products[9][4] ) );
  FA1D0 U310 ( .A(\shifted_products[10][4] ), .B(\shifted_products[11][4] ), 
        .CI(\add_9_root_add_199_I16/carry[4] ), .CO(
        \add_9_root_add_199_I16/carry[5] ), .S(N178) );
  OAI222D0 U311 ( .A1(n321), .A2(n86), .B1(n1), .B2(n88), .C1(n322), .C2(n90), 
        .ZN(\shifted_products[11][4] ) );
  FA1D0 U312 ( .A(\shifted_products[12][7] ), .B(\shifted_products[13][7] ), 
        .CI(\add_8_root_add_199_I16/carry[7] ), .CO(
        \add_8_root_add_199_I16/carry[8] ), .S(N208) );
  OAI222D0 U313 ( .A1(n237), .A2(n75), .B1(n262), .B2(n73), .C1(n322), .C2(n77), .ZN(\shifted_products[13][7] ) );
  FA1D0 U314 ( .A(\shifted_products[8][5] ), .B(\shifted_products[9][5] ), 
        .CI(\add_10_root_add_199_I16/carry[5] ), .CO(
        \add_10_root_add_199_I16/carry[6] ), .S(N153) );
  OAI222D0 U315 ( .A1(n321), .A2(n96), .B1(n235), .B2(n98), .C1(n322), .C2(
        n100), .ZN(\shifted_products[9][5] ) );
  FA1D0 U316 ( .A(\shifted_products[10][5] ), .B(\shifted_products[11][5] ), 
        .CI(\add_9_root_add_199_I16/carry[5] ), .CO(
        \add_9_root_add_199_I16/carry[6] ), .S(N179) );
  OAI222D0 U317 ( .A1(n321), .A2(n85), .B1(n1), .B2(n87), .C1(n322), .C2(n89), 
        .ZN(\shifted_products[11][5] ) );
  OAI21D1 U318 ( .A1(n252), .A2(n94), .B(n251), .ZN(\shifted_products[10][5] )
         );
  FA1D0 U319 ( .A(\shifted_products[6][9] ), .B(\shifted_products[7][9] ), 
        .CI(\add_11_root_add_199_I16/carry[9] ), .CO(
        \add_11_root_add_199_I16/carry[10] ), .S(N132) );
  OAI222D0 U320 ( .A1(n227), .A2(n107), .B1(n239), .B2(n111), .C1(n314), .C2(
        n109), .ZN(\shifted_products[7][9] ) );
  OAI22D1 U321 ( .A1(n239), .A2(n115), .B1(n301), .B2(n113), .ZN(
        \shifted_products[6][9] ) );
  FA1D0 U322 ( .A(\shifted_products[12][9] ), .B(\shifted_products[13][9] ), 
        .CI(\add_8_root_add_199_I16/carry[9] ), .CO(
        \add_8_root_add_199_I16/carry[10] ), .S(N210) );
  OAI222D0 U323 ( .A1(n243), .A2(n77), .B1(n228), .B2(n73), .C1(n322), .C2(n75), .ZN(\shifted_products[13][9] ) );
  FA1D0 U324 ( .A(\shifted_products[10][7] ), .B(\shifted_products[11][7] ), 
        .CI(\add_9_root_add_199_I16/carry[7] ), .CO(
        \add_9_root_add_199_I16/carry[8] ), .S(N181) );
  OAI21D1 U325 ( .A1(n252), .A2(n92), .B(n251), .ZN(\shifted_products[10][7] )
         );
  OAI222D0 U326 ( .A1(n229), .A2(n85), .B1(n236), .B2(n89), .C1(n322), .C2(n87), .ZN(\shifted_products[11][7] ) );
  FA1D0 U327 ( .A(\shifted_products[10][8] ), .B(\shifted_products[11][8] ), 
        .CI(\add_9_root_add_199_I16/carry[8] ), .CO(
        \add_9_root_add_199_I16/carry[9] ), .S(N182) );
  OAI222D0 U328 ( .A1(n229), .A2(n85), .B1(n236), .B2(n88), .C1(n322), .C2(n86), .ZN(\shifted_products[11][8] ) );
  OAI221D0 U329 ( .A1(n252), .A2(n91), .B1(n34), .B2(n95), .C(n251), .ZN(
        \shifted_products[10][8] ) );
  FA1D0 U330 ( .A(\shifted_products[10][10] ), .B(\shifted_products[11][10] ), 
        .CI(\add_9_root_add_199_I16/carry[10] ), .CO(
        \add_9_root_add_199_I16/carry[11] ), .S(N184) );
  OAI222D0 U331 ( .A1(n236), .A2(n86), .B1(n257), .B2(n85), .C1(n33), .C2(n90), 
        .ZN(\shifted_products[11][10] ) );
  OAI21D1 U332 ( .A1(n33), .A2(n93), .B(n253), .ZN(\shifted_products[10][10] )
         );
  FA1D0 U333 ( .A(\shifted_products[12][4] ), .B(\shifted_products[13][4] ), 
        .CI(\add_8_root_add_199_I16/carry[4] ), .CO(
        \add_8_root_add_199_I16/carry[5] ), .S(N205) );
  OAI222D0 U334 ( .A1(n237), .A2(n78), .B1(n231), .B2(n76), .C1(n35), .C2(n74), 
        .ZN(\shifted_products[13][4] ) );
  FA1D0 U335 ( .A(\shifted_products[6][5] ), .B(\shifted_products[7][5] ), 
        .CI(\add_11_root_add_199_I16/carry[5] ), .CO(
        \add_11_root_add_199_I16/carry[6] ), .S(N128) );
  OAI222D0 U336 ( .A1(n2), .A2(n113), .B1(n232), .B2(n115), .C1(n314), .C2(
        n117), .ZN(\shifted_products[6][5] ) );
  OAI222D0 U337 ( .A1(n230), .A2(n109), .B1(n240), .B2(n111), .C1(n107), .C2(
        n36), .ZN(\shifted_products[7][5] ) );
  OAI222D0 U338 ( .A1(n285), .A2(n177), .B1(n283), .B2(n132), .C1(n310), .C2(
        n131), .ZN(\shifted_products[3][6] ) );
  FA1D0 U339 ( .A(\shifted_products[4][4] ), .B(\shifted_products[5][4] ), 
        .CI(\add_12_root_add_199_I16/carry[4] ), .CO(
        \add_12_root_add_199_I16/carry[5] ), .S(N103) );
  OAI222D0 U340 ( .A1(n290), .A2(n122), .B1(n293), .B2(n124), .C1(n35), .C2(
        n120), .ZN(\shifted_products[5][4] ) );
  FA1D0 U341 ( .A(\shifted_products[6][4] ), .B(\shifted_products[7][4] ), 
        .CI(\add_11_root_add_199_I16/carry[4] ), .CO(
        \add_11_root_add_199_I16/carry[5] ), .S(N127) );
  OAI222D0 U342 ( .A1(n2), .A2(n114), .B1(n232), .B2(n116), .C1(n314), .C2(
        n118), .ZN(\shifted_products[6][4] ) );
  OAI222D0 U343 ( .A1(n230), .A2(n110), .B1(n240), .B2(n112), .C1(n108), .C2(
        n36), .ZN(\shifted_products[7][4] ) );
  FA1D0 U344 ( .A(\shifted_products[8][6] ), .B(\shifted_products[9][6] ), 
        .CI(\add_10_root_add_199_I16/carry[6] ), .CO(
        \add_10_root_add_199_I16/carry[7] ), .S(N154) );
  OAI221D0 U345 ( .A1(n321), .A2(n96), .B1(n99), .B2(n322), .C(n320), .ZN(
        \shifted_products[9][6] ) );
  OAI221D0 U346 ( .A1(n35), .A2(n61), .B1(n64), .B2(n303), .C(n274), .ZN(
        \shifted_products[15][6] ) );
  OAI221D0 U347 ( .A1(n2), .A2(n67), .B1(n314), .B2(n70), .C(n266), .ZN(
        \shifted_products[14][6] ) );
  FA1D0 U348 ( .A(\shifted_products[10][6] ), .B(\shifted_products[11][6] ), 
        .CI(\add_9_root_add_199_I16/carry[6] ), .CO(
        \add_9_root_add_199_I16/carry[7] ), .S(N180) );
  OAI221D0 U349 ( .A1(n321), .A2(n85), .B1(n322), .B2(n88), .C(n256), .ZN(
        \shifted_products[11][6] ) );
  OAI21D1 U350 ( .A1(n252), .A2(n93), .B(n251), .ZN(\shifted_products[10][6] )
         );
  OAI221D0 U351 ( .A1(n279), .A2(n65), .B1(n242), .B2(n63), .C(n278), .ZN(
        \shifted_products[15][9] ) );
  OAI221D0 U352 ( .A1(n279), .A2(n64), .B1(n242), .B2(n62), .C(n278), .ZN(
        \shifted_products[15][10] ) );
  OAI222D0 U353 ( .A1(n238), .A2(n68), .B1(n267), .B2(n67), .C1(n33), .C2(n72), 
        .ZN(\shifted_products[14][10] ) );
  FA1D0 U354 ( .A(\shifted_products[6][8] ), .B(\shifted_products[7][8] ), 
        .CI(\add_11_root_add_199_I16/carry[8] ), .CO(
        \add_11_root_add_199_I16/carry[9] ), .S(N131) );
  OAI221D0 U355 ( .A1(n313), .A2(n107), .B1(n240), .B2(n108), .C(n312), .ZN(
        \shifted_products[7][8] ) );
  OAI222D0 U356 ( .A1(n227), .A2(n113), .B1(n239), .B2(n116), .C1(n314), .C2(
        n114), .ZN(\shifted_products[6][8] ) );
  OAI221D0 U357 ( .A1(n279), .A2(n62), .B1(n66), .B2(n34), .C(n269), .ZN(
        \shifted_products[15][12] ) );
  OAI21D1 U358 ( .A1(n33), .A2(n70), .B(n263), .ZN(\shifted_products[14][12] )
         );
  FA1D0 U359 ( .A(\shifted_products[4][2] ), .B(\shifted_products[5][2] ), 
        .CI(\add_12_root_add_199_I16/carry[2] ), .CO(
        \add_12_root_add_199_I16/carry[3] ), .S(N101) );
  FA1D0 U360 ( .A(\shifted_products[2][2] ), .B(\shifted_products[3][2] ), 
        .CI(\add_13_root_add_199_I16/carry[2] ), .CO(
        \add_13_root_add_199_I16/carry[3] ), .S(N78) );
  FA1D0 U361 ( .A(\shifted_products[10][2] ), .B(\shifted_products[11][2] ), 
        .CI(\add_9_root_add_199_I16/carry[2] ), .CO(
        \add_9_root_add_199_I16/carry[3] ), .S(N176) );
  FA1D0 U362 ( .A(\shifted_products[2][4] ), .B(\shifted_products[3][4] ), 
        .CI(\add_13_root_add_199_I16/carry[4] ), .CO(
        \add_13_root_add_199_I16/carry[5] ), .S(N80) );
  FA1D0 U363 ( .A(\shifted_products[6][2] ), .B(\shifted_products[7][2] ), 
        .CI(\add_11_root_add_199_I16/carry[2] ), .CO(
        \add_11_root_add_199_I16/carry[3] ), .S(N125) );
  OAI22D1 U364 ( .A1(n110), .A2(n35), .B1(n230), .B2(n112), .ZN(
        \shifted_products[7][2] ) );
  FA1D0 U365 ( .A(\shifted_products[12][2] ), .B(\shifted_products[13][2] ), 
        .CI(\add_8_root_add_199_I16/carry[2] ), .CO(
        \add_8_root_add_199_I16/carry[3] ), .S(N203) );
  FA1D0 U366 ( .A(\shifted_products[8][2] ), .B(\shifted_products[9][2] ), 
        .CI(\add_10_root_add_199_I16/carry[2] ), .CO(
        \add_10_root_add_199_I16/carry[3] ), .S(N150) );
  FA1D0 U367 ( .A(\products[0][3] ), .B(\shifted_products[1][3] ), .CI(
        \add_14_root_add_199_I16/carry[3] ), .CO(
        \add_14_root_add_199_I16/carry[4] ), .S(N57) );
  FA1D0 U368 ( .A(\products[0][4] ), .B(\shifted_products[1][4] ), .CI(
        \add_14_root_add_199_I16/carry[4] ), .CO(
        \add_14_root_add_199_I16/carry[5] ), .S(N58) );
  FA1D0 U369 ( .A(\products[0][1] ), .B(\shifted_products[1][1] ), .CI(
        \add_14_root_add_199_I16/carry[1] ), .CO(
        \add_14_root_add_199_I16/carry[2] ), .S(N55) );
  INVD1 U370 ( .I(\products[12][4] ), .ZN(n80) );
  FA1D0 U371 ( .A(\shifted_products[6][10] ), .B(\shifted_products[7][10] ), 
        .CI(\add_11_root_add_199_I16/carry[10] ), .CO(
        \add_11_root_add_199_I16/carry[11] ), .S(N133) );
  OAI222D0 U372 ( .A1(n227), .A2(n107), .B1(n239), .B2(n110), .C1(n314), .C2(
        n108), .ZN(\shifted_products[7][10] ) );
  OAI22D1 U373 ( .A1(n239), .A2(n114), .B1(n301), .B2(n113), .ZN(
        \shifted_products[6][10] ) );
  OAI21D1 U374 ( .A1(n64), .A2(n34), .B(n271), .ZN(\shifted_products[15][14] )
         );
  OAI21D1 U375 ( .A1(n34), .A2(n68), .B(n263), .ZN(\shifted_products[14][14] )
         );
  FA1D0 U376 ( .A(\shifted_products[10][12] ), .B(\shifted_products[11][12] ), 
        .CI(\add_9_root_add_199_I16/carry[12] ), .CO(
        \add_9_root_add_199_I16/carry[13] ), .S(N186) );
  OAI21D1 U377 ( .A1(n33), .A2(n88), .B(n254), .ZN(\shifted_products[11][12] )
         );
  OAI21D1 U378 ( .A1(n33), .A2(n91), .B(n253), .ZN(\shifted_products[10][12] )
         );
  OAI21D1 U379 ( .A1(n317), .A2(n80), .B(n258), .ZN(\shifted_products[12][10] ) );
  OAI222D0 U380 ( .A1(n243), .A2(n76), .B1(n228), .B2(n73), .C1(n322), .C2(n74), .ZN(\shifted_products[13][10] ) );
  FA1D0 U381 ( .A(\shifted_products[8][8] ), .B(\shifted_products[9][8] ), 
        .CI(\add_10_root_add_199_I16/carry[8] ), .CO(
        \add_10_root_add_199_I16/carry[9] ), .S(N156) );
  OAI21D1 U382 ( .A1(n317), .A2(n102), .B(n316), .ZN(\shifted_products[8][8] )
         );
  OAI222D0 U383 ( .A1(n243), .A2(n99), .B1(n228), .B2(n96), .C1(n322), .C2(n97), .ZN(\shifted_products[9][8] ) );
  OAI22D1 U384 ( .A1(n288), .A2(n125), .B1(n287), .B2(n126), .ZN(
        \shifted_products[4][6] ) );
  OAI222D0 U385 ( .A1(n290), .A2(n120), .B1(n293), .B2(n122), .C1(n35), .C2(
        n119), .ZN(\shifted_products[5][6] ) );
  NR2D1 U386 ( .A1(n36), .A2(n124), .ZN(\shifted_products[5][0] ) );
  INVD1 U387 ( .I(\products[1][4] ), .ZN(n222) );
  INVD1 U388 ( .I(\products[1][3] ), .ZN(n223) );
  CKBD1 U389 ( .I(n295), .Z(n34) );
  INR2D1 U390 ( .A1(n314), .B1(n296), .ZN(n301) );
  INR2D1 U391 ( .A1(n314), .B1(n268), .ZN(n267) );
  INVD1 U392 ( .I(\products[11][3] ), .ZN(n87) );
  INVD1 U393 ( .I(\products[9][3] ), .ZN(n98) );
  INVD1 U394 ( .I(\products[11][4] ), .ZN(n86) );
  ND2D1 U395 ( .A1(n303), .A2(n272), .ZN(n264) );
  ND2D1 U396 ( .A1(n272), .A2(n309), .ZN(n273) );
  ND2D1 U397 ( .A1(n304), .A2(n303), .ZN(n306) );
  INVD1 U398 ( .I(\products[9][4] ), .ZN(n97) );
  INVD1 U399 ( .I(\products[3][3] ), .ZN(n133) );
  INVD1 U400 ( .I(\products[3][4] ), .ZN(n132) );
  INVD1 U401 ( .I(\products[10][4] ), .ZN(n91) );
  INVD1 U402 ( .I(\products[10][3] ), .ZN(n92) );
  INVD1 U403 ( .I(\products[2][4] ), .ZN(n216) );
  INVD1 U404 ( .I(\products[8][4] ), .ZN(n102) );
  INVD1 U405 ( .I(\products[2][3] ), .ZN(n217) );
  INVD1 U406 ( .I(\products[8][3] ), .ZN(n103) );
  CKBD1 U407 ( .I(n295), .Z(n33) );
  INVD1 U408 ( .I(\products[15][1] ), .ZN(n65) );
  INVD1 U409 ( .I(\products[7][1] ), .ZN(n111) );
  INVD1 U410 ( .I(\products[14][1] ), .ZN(n71) );
  INVD1 U411 ( .I(\products[13][1] ), .ZN(n77) );
  INVD1 U412 ( .I(\products[6][1] ), .ZN(n117) );
  INVD1 U413 ( .I(\products[5][1] ), .ZN(n123) );
  INVD1 U414 ( .I(\products[12][1] ), .ZN(n83) );
  INVD1 U415 ( .I(\products[3][1] ), .ZN(n135) );
  INVD1 U416 ( .I(\products[4][1] ), .ZN(n129) );
  INVD1 U417 ( .I(\products[1][1] ), .ZN(n225) );
  INVD1 U418 ( .I(\products[2][1] ), .ZN(n219) );
  INVD1 U419 ( .I(\products[15][0] ), .ZN(n66) );
  INVD1 U420 ( .I(\products[14][0] ), .ZN(n72) );
  INVD1 U421 ( .I(\products[11][0] ), .ZN(n90) );
  INVD1 U422 ( .I(\products[7][0] ), .ZN(n112) );
  INVD1 U423 ( .I(\products[6][0] ), .ZN(n118) );
  INVD1 U424 ( .I(\products[9][0] ), .ZN(n101) );
  INVD1 U425 ( .I(\products[11][1] ), .ZN(n89) );
  INVD1 U426 ( .I(\products[9][1] ), .ZN(n100) );
  INVD1 U427 ( .I(\products[10][1] ), .ZN(n94) );
  INVD1 U428 ( .I(\products[8][1] ), .ZN(n105) );
  INVD1 U429 ( .I(\products[13][2] ), .ZN(n76) );
  FA1D0 U430 ( .A(\shifted_products[6][6] ), .B(\shifted_products[7][6] ), 
        .CI(\add_11_root_add_199_I16/carry[6] ), .CO(
        \add_11_root_add_199_I16/carry[7] ), .S(N129) );
  OAI221D0 U431 ( .A1(n107), .A2(n35), .B1(n314), .B2(n112), .C(n307), .ZN(
        \shifted_products[7][6] ) );
  OAI221D0 U432 ( .A1(n2), .A2(n113), .B1(n314), .B2(n116), .C(n299), .ZN(
        \shifted_products[6][6] ) );
  FA1D0 U433 ( .A(\shifted_products[12][6] ), .B(\shifted_products[13][6] ), 
        .CI(\add_8_root_add_199_I16/carry[6] ), .CO(
        \add_8_root_add_199_I16/carry[7] ), .S(N207) );
  OAI222D0 U434 ( .A1(n288), .A2(n79), .B1(n286), .B2(n80), .C1(n317), .C2(n84), .ZN(\shifted_products[12][6] ) );
  OAI221D0 U435 ( .A1(n35), .A2(n73), .B1(n322), .B2(n78), .C(n260), .ZN(
        \shifted_products[13][6] ) );
  OAI221D0 U436 ( .A1(n277), .A2(n61), .B1(n279), .B2(n66), .C(n276), .ZN(
        \shifted_products[15][8] ) );
  OAI222D0 U437 ( .A1(n229), .A2(n67), .B1(n238), .B2(n70), .C1(n314), .C2(n68), .ZN(\shifted_products[14][8] ) );
  FA1D0 U438 ( .A(\shifted_products[12][8] ), .B(\shifted_products[13][8] ), 
        .CI(\add_8_root_add_199_I16/carry[8] ), .CO(
        \add_8_root_add_199_I16/carry[9] ), .S(N209) );
  OAI221D0 U439 ( .A1(n262), .A2(n73), .B1(n243), .B2(n78), .C(n261), .ZN(
        \shifted_products[13][8] ) );
  FA1D0 U440 ( .A(\products[0][2] ), .B(\shifted_products[1][2] ), .CI(
        \add_14_root_add_199_I16/carry[2] ), .CO(
        \add_14_root_add_199_I16/carry[3] ), .S(N56) );
  INVD1 U441 ( .I(\products[1][2] ), .ZN(n224) );
  INVD1 U442 ( .I(\products[15][2] ), .ZN(n64) );
  INVD1 U443 ( .I(\products[14][2] ), .ZN(n70) );
  INVD1 U444 ( .I(\products[11][2] ), .ZN(n88) );
  INVD1 U445 ( .I(\products[9][2] ), .ZN(n99) );
  INVD1 U446 ( .I(\products[7][2] ), .ZN(n110) );
  INVD1 U447 ( .I(\products[3][2] ), .ZN(n134) );
  INVD1 U448 ( .I(\products[10][2] ), .ZN(n93) );
  INVD1 U449 ( .I(\products[2][2] ), .ZN(n218) );
  INVD1 U450 ( .I(\products[8][2] ), .ZN(n104) );
  INVD1 U451 ( .I(\products[4][0] ), .ZN(n130) );
  INVD1 U452 ( .I(\products[5][0] ), .ZN(n124) );
  INVD1 U453 ( .I(\products[12][0] ), .ZN(n84) );
  INVD1 U454 ( .I(\products[13][0] ), .ZN(n78) );
  INVD1 U455 ( .I(\products[10][0] ), .ZN(n95) );
  INVD1 U456 ( .I(\products[3][0] ), .ZN(n177) );
  INVD1 U457 ( .I(\products[1][0] ), .ZN(n226) );
  INVD1 U458 ( .I(\products[2][0] ), .ZN(n220) );
  INVD1 U459 ( .I(\products[8][0] ), .ZN(n106) );
  INR3D0 U460 ( .A1(input_bitwidth[2]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[1]), .ZN(n246) );
  INR3D0 U461 ( .A1(weight_bitwidth[0]), .B1(weight_bitwidth[1]), .B2(
        weight_bitwidth[2]), .ZN(n245) );
  INR3D0 U462 ( .A1(input_bitwidth[0]), .B1(input_bitwidth[1]), .B2(
        input_bitwidth[2]), .ZN(n249) );
  INR3D0 U463 ( .A1(input_bitwidth[1]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[2]), .ZN(n248) );
  INR3D0 U464 ( .A1(weight_bitwidth[1]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[2]), .ZN(n250) );
  INR3D0 U465 ( .A1(weight_bitwidth[2]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[1]), .ZN(n247) );
  TIEL U466 ( .ZN(n244) );
  AN2D0 U467 ( .A1(\shifted_products[2][0] ), .A2(\shifted_products[3][0] ), 
        .Z(\add_13_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U468 ( .A1(\shifted_products[3][0] ), .A2(\shifted_products[2][0] ), 
        .Z(N76) );
  AN2D0 U469 ( .A1(\products[0][0] ), .A2(\shifted_products[1][0] ), .Z(
        \add_14_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U470 ( .A1(\shifted_products[1][0] ), .A2(\products[0][0] ), .Z(N54) );
  AN2D0 U471 ( .A1(\shifted_products[12][0] ), .A2(\shifted_products[13][0] ), 
        .Z(\add_8_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U472 ( .A1(\shifted_products[13][0] ), .A2(
        \shifted_products[12][0] ), .Z(N201) );
  AN2D0 U473 ( .A1(\shifted_products[6][0] ), .A2(\shifted_products[7][0] ), 
        .Z(\add_11_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U474 ( .A1(\shifted_products[7][0] ), .A2(\shifted_products[6][0] ), 
        .Z(N123) );
  AN2D0 U475 ( .A1(\shifted_products[4][0] ), .A2(\shifted_products[5][0] ), 
        .Z(\add_12_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U476 ( .A1(\shifted_products[5][0] ), .A2(\shifted_products[4][0] ), 
        .Z(N99) );
  AN2D0 U477 ( .A1(\shifted_products[8][0] ), .A2(\shifted_products[9][0] ), 
        .Z(\add_10_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U478 ( .A1(\shifted_products[9][0] ), .A2(\shifted_products[8][0] ), 
        .Z(N148) );
  AN2D0 U479 ( .A1(\shifted_products[10][0] ), .A2(\shifted_products[11][0] ), 
        .Z(\add_9_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U480 ( .A1(\shifted_products[11][0] ), .A2(
        \shifted_products[10][0] ), .Z(N174) );
  XOR3D0 U481 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[13][11] ), .A3(\products[12][5] ), .Z(N212) );
  XOR3D0 U482 ( .A1(\shifted_products[13][12] ), .A2(n38), .A3(n79), .Z(N213)
         );
  XOR3D0 U483 ( .A1(\products[13][5] ), .A2(\products[12][5] ), .A3(n39), .Z(
        N214) );
  CKND0 U484 ( .I(\shifted_products[13][12] ), .ZN(n41) );
  XNR3D0 U485 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \shifted_products[11][13] ), .A3(n42), .ZN(N187) );
  XNR3D0 U486 ( .A1(n32), .A2(n43), .A3(n42), .ZN(N188) );
  XNR3D0 U487 ( .A1(\products[11][5] ), .A2(n42), .A3(n44), .ZN(N189) );
  OAI222D0 U488 ( .A1(n43), .A2(n42), .B1(n43), .B2(n32), .C1(n42), .C2(n32), 
        .ZN(n44) );
  CKND0 U489 ( .I(\products[10][5] ), .ZN(n42) );
  XOR3D0 U490 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[9][9] ), .A3(\products[8][5] ), .Z(N157) );
  XOR3D0 U491 ( .A1(\shifted_products[9][10] ), .A2(n45), .A3(n46), .Z(N158)
         );
  XOR3D0 U492 ( .A1(\products[9][5] ), .A2(\products[8][5] ), .A3(n47), .Z(
        N159) );
  AOI222D0 U493 ( .A1(n47), .A2(\products[8][5] ), .B1(n47), .B2(
        \products[9][5] ), .C1(\products[8][5] ), .C2(\products[9][5] ), .ZN(
        n48) );
  OAI222D0 U494 ( .A1(n45), .A2(n46), .B1(n45), .B2(n49), .C1(n46), .C2(n49), 
        .ZN(n47) );
  CKND0 U495 ( .I(\shifted_products[9][10] ), .ZN(n49) );
  CKND0 U496 ( .I(\products[8][5] ), .ZN(n46) );
  XNR3D0 U497 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[7][11] ), .A3(n113), .ZN(N134) );
  XNR3D0 U498 ( .A1(n31), .A2(n50), .A3(n113), .ZN(N135) );
  XNR3D0 U499 ( .A1(\products[7][5] ), .A2(n113), .A3(n51), .ZN(N136) );
  XOR3D0 U500 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(
        \shifted_products[5][7] ), .A3(\products[4][5] ), .Z(N106) );
  XOR3D0 U501 ( .A1(\shifted_products[5][8] ), .A2(n52), .A3(n125), .Z(N107)
         );
  XOR3D0 U502 ( .A1(\products[5][5] ), .A2(\products[4][5] ), .A3(n53), .Z(
        N108) );
  CKND0 U503 ( .I(\shifted_products[5][8] ), .ZN(n55) );
  XNR3D0 U504 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .A3(n56), .ZN(N85) );
  XNR3D0 U505 ( .A1(\products[3][5] ), .A2(n56), .A3(n58), .ZN(N87) );
  XNR3D0 U506 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[1][6] ), .A3(n59), .ZN(N60) );
  XNR3D0 U507 ( .A1(n221), .A2(n60), .A3(n59), .ZN(N61) );
  CKND0 U508 ( .I(\shifted_products[0][9] ), .ZN(n59) );
endmodule


module fusion_unit_8_DW01_add_0_DW01_add_12 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module fusion_unit_8 ( clk, nRST, input_bitwidth, weight_bitwidth, input_sign, 
        weight_sign, input_forward, weight, psum_in, psum, input_to_right );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  input [3:0] input_sign;
  input [3:0] weight_sign;
  input [31:0] input_forward;
  input [31:0] weight;
  input [31:0] psum_in;
  output [31:0] psum;
  output [31:0] input_to_right;
  input clk, nRST;
  wire   \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] , n2;
  wire   [31:0] shift_add_out;
  assign input_to_right[31] = input_forward[31];
  assign input_to_right[30] = input_forward[30];
  assign input_to_right[29] = input_forward[29];
  assign input_to_right[28] = input_forward[28];
  assign input_to_right[27] = input_forward[27];
  assign input_to_right[26] = input_forward[26];
  assign input_to_right[25] = input_forward[25];
  assign input_to_right[24] = input_forward[24];
  assign input_to_right[23] = input_forward[23];
  assign input_to_right[22] = input_forward[22];
  assign input_to_right[21] = input_forward[21];
  assign input_to_right[20] = input_forward[20];
  assign input_to_right[19] = input_forward[19];
  assign input_to_right[18] = input_forward[18];
  assign input_to_right[17] = input_forward[17];
  assign input_to_right[16] = input_forward[16];
  assign input_to_right[15] = input_forward[15];
  assign input_to_right[14] = input_forward[14];
  assign input_to_right[13] = input_forward[13];
  assign input_to_right[12] = input_forward[12];
  assign input_to_right[11] = input_forward[11];
  assign input_to_right[10] = input_forward[10];
  assign input_to_right[9] = input_forward[9];
  assign input_to_right[8] = input_forward[8];
  assign input_to_right[7] = input_forward[7];
  assign input_to_right[6] = input_forward[6];
  assign input_to_right[5] = input_forward[5];
  assign input_to_right[4] = input_forward[4];
  assign input_to_right[3] = input_forward[3];
  assign input_to_right[2] = input_forward[2];
  assign input_to_right[1] = input_forward[1];
  assign input_to_right[0] = input_forward[0];

  bit_brick_143 \genblk1[0].BB  ( .x(input_forward[1:0]), .y(weight[1:0]), 
        .sx(input_sign[0]), .sy(weight_sign[0]), .product({\products[0][5] , 
        \products[0][4] , \products[0][3] , \products[0][2] , \products[0][1] , 
        \products[0][0] }) );
  bit_brick_142 \genblk1[1].BB  ( .x(input_forward[3:2]), .y(weight[3:2]), 
        .sx(input_sign[0]), .sy(weight_sign[1]), .product({\products[1][5] , 
        \products[1][4] , \products[1][3] , \products[1][2] , \products[1][1] , 
        \products[1][0] }) );
  bit_brick_141 \genblk1[2].BB  ( .x(input_forward[5:4]), .y(weight[5:4]), 
        .sx(input_sign[0]), .sy(weight_sign[2]), .product({\products[2][5] , 
        \products[2][4] , \products[2][3] , \products[2][2] , \products[2][1] , 
        \products[2][0] }) );
  bit_brick_140 \genblk1[3].BB  ( .x(input_forward[7:6]), .y(weight[7:6]), 
        .sx(input_sign[0]), .sy(weight_sign[3]), .product({\products[3][5] , 
        \products[3][4] , \products[3][3] , \products[3][2] , \products[3][1] , 
        \products[3][0] }) );
  bit_brick_139 \genblk1[4].BB  ( .x(input_forward[9:8]), .y(weight[9:8]), 
        .sx(input_sign[1]), .sy(weight_sign[0]), .product({\products[4][5] , 
        \products[4][4] , \products[4][3] , \products[4][2] , \products[4][1] , 
        \products[4][0] }) );
  bit_brick_138 \genblk1[5].BB  ( .x(input_forward[11:10]), .y(weight[11:10]), 
        .sx(input_sign[1]), .sy(weight_sign[1]), .product({\products[5][5] , 
        \products[5][4] , \products[5][3] , \products[5][2] , \products[5][1] , 
        \products[5][0] }) );
  bit_brick_137 \genblk1[6].BB  ( .x(input_forward[13:12]), .y(weight[13:12]), 
        .sx(input_sign[1]), .sy(weight_sign[2]), .product({\products[6][5] , 
        \products[6][4] , \products[6][3] , \products[6][2] , \products[6][1] , 
        \products[6][0] }) );
  bit_brick_136 \genblk1[7].BB  ( .x(input_forward[15:14]), .y(weight[15:14]), 
        .sx(input_sign[1]), .sy(weight_sign[3]), .product({\products[7][5] , 
        \products[7][4] , \products[7][3] , \products[7][2] , \products[7][1] , 
        \products[7][0] }) );
  bit_brick_135 \genblk1[8].BB  ( .x(input_forward[17:16]), .y(weight[17:16]), 
        .sx(input_sign[2]), .sy(weight_sign[0]), .product({\products[8][5] , 
        \products[8][4] , \products[8][3] , \products[8][2] , \products[8][1] , 
        \products[8][0] }) );
  bit_brick_134 \genblk1[9].BB  ( .x(input_forward[19:18]), .y(weight[19:18]), 
        .sx(input_sign[2]), .sy(weight_sign[1]), .product({\products[9][5] , 
        \products[9][4] , \products[9][3] , \products[9][2] , \products[9][1] , 
        \products[9][0] }) );
  bit_brick_133 \genblk1[10].BB  ( .x(input_forward[21:20]), .y(weight[21:20]), 
        .sx(input_sign[2]), .sy(weight_sign[2]), .product({\products[10][5] , 
        \products[10][4] , \products[10][3] , \products[10][2] , 
        \products[10][1] , \products[10][0] }) );
  bit_brick_132 \genblk1[11].BB  ( .x(input_forward[23:22]), .y(weight[23:22]), 
        .sx(input_sign[2]), .sy(weight_sign[3]), .product({\products[11][5] , 
        \products[11][4] , \products[11][3] , \products[11][2] , 
        \products[11][1] , \products[11][0] }) );
  bit_brick_131 \genblk1[12].BB  ( .x(input_forward[25:24]), .y(weight[25:24]), 
        .sx(input_sign[3]), .sy(weight_sign[0]), .product({\products[12][5] , 
        \products[12][4] , \products[12][3] , \products[12][2] , 
        \products[12][1] , \products[12][0] }) );
  bit_brick_130 \genblk1[13].BB  ( .x(input_forward[27:26]), .y(weight[27:26]), 
        .sx(input_sign[3]), .sy(weight_sign[1]), .product({\products[13][5] , 
        \products[13][4] , \products[13][3] , \products[13][2] , 
        \products[13][1] , \products[13][0] }) );
  bit_brick_129 \genblk1[14].BB  ( .x(input_forward[29:28]), .y(weight[29:28]), 
        .sx(input_sign[3]), .sy(weight_sign[2]), .product({\products[14][5] , 
        \products[14][4] , \products[14][3] , \products[14][2] , 
        \products[14][1] , \products[14][0] }) );
  bit_brick_128 \genblk1[15].BB  ( .x(input_forward[31:30]), .y(weight[31:30]), 
        .sx(input_sign[3]), .sy(weight_sign[3]), .product({\products[15][5] , 
        \products[15][4] , \products[15][3] , \products[15][2] , 
        \products[15][1] , \products[15][0] }) );
  shift_add_8 shift_add ( .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .products({\products[15][5] , \products[15][4] , 
        \products[15][3] , \products[15][2] , \products[15][1] , 
        \products[15][0] , \products[14][5] , \products[14][4] , 
        \products[14][3] , \products[14][2] , \products[14][1] , 
        \products[14][0] , \products[13][5] , \products[13][4] , 
        \products[13][3] , \products[13][2] , \products[13][1] , 
        \products[13][0] , \products[12][5] , \products[12][4] , 
        \products[12][3] , \products[12][2] , \products[12][1] , 
        \products[12][0] , \products[11][5] , \products[11][4] , 
        \products[11][3] , \products[11][2] , \products[11][1] , 
        \products[11][0] , \products[10][5] , \products[10][4] , 
        \products[10][3] , \products[10][2] , \products[10][1] , 
        \products[10][0] , \products[9][5] , \products[9][4] , 
        \products[9][3] , \products[9][2] , \products[9][1] , \products[9][0] , 
        \products[8][5] , \products[8][4] , \products[8][3] , \products[8][2] , 
        \products[8][1] , \products[8][0] , \products[7][5] , \products[7][4] , 
        \products[7][3] , \products[7][2] , \products[7][1] , \products[7][0] , 
        \products[6][5] , \products[6][4] , \products[6][3] , \products[6][2] , 
        \products[6][1] , \products[6][0] , \products[5][5] , \products[5][4] , 
        \products[5][3] , \products[5][2] , \products[5][1] , \products[5][0] , 
        \products[4][5] , \products[4][4] , \products[4][3] , \products[4][2] , 
        \products[4][1] , \products[4][0] , \products[3][5] , \products[3][4] , 
        \products[3][3] , \products[3][2] , \products[3][1] , \products[3][0] , 
        \products[2][5] , \products[2][4] , \products[2][3] , \products[2][2] , 
        \products[2][1] , \products[2][0] , \products[1][5] , \products[1][4] , 
        \products[1][3] , \products[1][2] , \products[1][1] , \products[1][0] , 
        \products[0][5] , \products[0][4] , \products[0][3] , \products[0][2] , 
        \products[0][1] , \products[0][0] }), .shift_add_out(shift_add_out) );
  fusion_unit_8_DW01_add_0_DW01_add_12 add_53 ( .A(shift_add_out), .B(psum_in), 
        .CI(n2), .SUM(psum) );
  TIEL U1 ( .ZN(n2) );
endmodule


module WBUF_ARRAY_SIZE4_DATA_W32_7 ( clk, nRST, WBUF_wr_en, WBUF_data_in, 
        WBUF_data_out );
  input [31:0] WBUF_data_in;
  output [31:0] WBUF_data_out;
  input clk, nRST, WBUF_wr_en;
  wire   n1, n2, n3, n4, n5, n6;

  EDFCNQD1 \WBUF_data_out_reg[31]  ( .D(WBUF_data_in[31]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[31]) );
  EDFCNQD1 \WBUF_data_out_reg[30]  ( .D(WBUF_data_in[30]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[30]) );
  EDFCNQD1 \WBUF_data_out_reg[29]  ( .D(WBUF_data_in[29]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[29]) );
  EDFCNQD1 \WBUF_data_out_reg[28]  ( .D(WBUF_data_in[28]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[28]) );
  EDFCNQD1 \WBUF_data_out_reg[27]  ( .D(WBUF_data_in[27]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[27]) );
  EDFCNQD1 \WBUF_data_out_reg[26]  ( .D(WBUF_data_in[26]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[26]) );
  EDFCNQD1 \WBUF_data_out_reg[25]  ( .D(WBUF_data_in[25]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[25]) );
  EDFCNQD1 \WBUF_data_out_reg[24]  ( .D(WBUF_data_in[24]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[24]) );
  EDFCNQD1 \WBUF_data_out_reg[23]  ( .D(WBUF_data_in[23]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[23]) );
  EDFCNQD1 \WBUF_data_out_reg[22]  ( .D(WBUF_data_in[22]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[22]) );
  EDFCNQD1 \WBUF_data_out_reg[21]  ( .D(WBUF_data_in[21]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[21]) );
  EDFCNQD1 \WBUF_data_out_reg[20]  ( .D(WBUF_data_in[20]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[20]) );
  EDFCNQD1 \WBUF_data_out_reg[19]  ( .D(WBUF_data_in[19]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[19]) );
  EDFCNQD1 \WBUF_data_out_reg[18]  ( .D(WBUF_data_in[18]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[18]) );
  EDFCNQD1 \WBUF_data_out_reg[17]  ( .D(WBUF_data_in[17]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[17]) );
  EDFCNQD1 \WBUF_data_out_reg[16]  ( .D(WBUF_data_in[16]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[16]) );
  EDFCNQD1 \WBUF_data_out_reg[15]  ( .D(WBUF_data_in[15]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[15]) );
  EDFCNQD1 \WBUF_data_out_reg[14]  ( .D(WBUF_data_in[14]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[14]) );
  EDFCNQD1 \WBUF_data_out_reg[13]  ( .D(WBUF_data_in[13]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[13]) );
  EDFCNQD1 \WBUF_data_out_reg[12]  ( .D(WBUF_data_in[12]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[12]) );
  EDFCNQD1 \WBUF_data_out_reg[11]  ( .D(WBUF_data_in[11]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[11]) );
  EDFCNQD1 \WBUF_data_out_reg[10]  ( .D(WBUF_data_in[10]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[10]) );
  EDFCNQD1 \WBUF_data_out_reg[9]  ( .D(WBUF_data_in[9]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[9]) );
  EDFCNQD1 \WBUF_data_out_reg[8]  ( .D(WBUF_data_in[8]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[8]) );
  EDFCNQD1 \WBUF_data_out_reg[7]  ( .D(WBUF_data_in[7]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[7]) );
  EDFCNQD1 \WBUF_data_out_reg[6]  ( .D(WBUF_data_in[6]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[6]) );
  EDFCNQD1 \WBUF_data_out_reg[5]  ( .D(WBUF_data_in[5]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[5]) );
  EDFCNQD1 \WBUF_data_out_reg[4]  ( .D(WBUF_data_in[4]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[4]) );
  EDFCNQD1 \WBUF_data_out_reg[3]  ( .D(WBUF_data_in[3]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[3]) );
  EDFCNQD1 \WBUF_data_out_reg[2]  ( .D(WBUF_data_in[2]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[2]) );
  EDFCNQD1 \WBUF_data_out_reg[1]  ( .D(WBUF_data_in[1]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[1]) );
  EDFCNQD1 \WBUF_data_out_reg[0]  ( .D(WBUF_data_in[0]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[0]) );
  CKBD1 U2 ( .I(WBUF_wr_en), .Z(n5) );
  CKBD1 U3 ( .I(WBUF_wr_en), .Z(n4) );
  CKBD1 U4 ( .I(nRST), .Z(n1) );
  CKBD1 U5 ( .I(nRST), .Z(n2) );
  CKBD1 U6 ( .I(nRST), .Z(n3) );
  CKBD1 U7 ( .I(WBUF_wr_en), .Z(n6) );
endmodule


module w_mux_7 ( clk, nRST, input_bitwidth, rd_en, data_in, data_out );
  input [2:0] input_bitwidth;
  input [31:0] data_in;
  output [31:0] data_out;
  input clk, nRST, rd_en;
  wire   N40, N41, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129,
         n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140,
         n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151,
         n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162,
         n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173,
         n174, n175, n176, n177, n178;
  wire   [1:0] rd_ptr;
  wire   [31:0] next_data_out;

  EDFCNQD1 \rd_ptr_reg[0]  ( .D(N40), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[0]) );
  EDFCNQD1 \rd_ptr_reg[1]  ( .D(N41), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[1]) );
  DFCNQD1 \data_out_reg[31]  ( .D(next_data_out[31]), .CP(clk), .CDN(n1), .Q(
        data_out[31]) );
  DFCNQD1 \data_out_reg[30]  ( .D(next_data_out[30]), .CP(clk), .CDN(n3), .Q(
        data_out[30]) );
  DFCNQD1 \data_out_reg[29]  ( .D(next_data_out[29]), .CP(clk), .CDN(n3), .Q(
        data_out[29]) );
  DFCNQD1 \data_out_reg[28]  ( .D(next_data_out[28]), .CP(clk), .CDN(n3), .Q(
        data_out[28]) );
  DFCNQD1 \data_out_reg[27]  ( .D(next_data_out[27]), .CP(clk), .CDN(n3), .Q(
        data_out[27]) );
  DFCNQD1 \data_out_reg[26]  ( .D(next_data_out[26]), .CP(clk), .CDN(n3), .Q(
        data_out[26]) );
  DFCNQD1 \data_out_reg[25]  ( .D(next_data_out[25]), .CP(clk), .CDN(n2), .Q(
        data_out[25]) );
  DFCNQD1 \data_out_reg[24]  ( .D(next_data_out[24]), .CP(clk), .CDN(n2), .Q(
        data_out[24]) );
  DFCNQD1 \data_out_reg[23]  ( .D(next_data_out[23]), .CP(clk), .CDN(n3), .Q(
        data_out[23]) );
  DFCNQD1 \data_out_reg[22]  ( .D(next_data_out[22]), .CP(clk), .CDN(n2), .Q(
        data_out[22]) );
  DFCNQD1 \data_out_reg[21]  ( .D(next_data_out[21]), .CP(clk), .CDN(n2), .Q(
        data_out[21]) );
  DFCNQD1 \data_out_reg[20]  ( .D(next_data_out[20]), .CP(clk), .CDN(n2), .Q(
        data_out[20]) );
  DFCNQD1 \data_out_reg[19]  ( .D(next_data_out[19]), .CP(clk), .CDN(n2), .Q(
        data_out[19]) );
  DFCNQD1 \data_out_reg[18]  ( .D(next_data_out[18]), .CP(clk), .CDN(n2), .Q(
        data_out[18]) );
  DFCNQD1 \data_out_reg[17]  ( .D(next_data_out[17]), .CP(clk), .CDN(n2), .Q(
        data_out[17]) );
  DFCNQD1 \data_out_reg[16]  ( .D(next_data_out[16]), .CP(clk), .CDN(n2), .Q(
        data_out[16]) );
  DFCNQD1 \data_out_reg[15]  ( .D(next_data_out[15]), .CP(clk), .CDN(n2), .Q(
        data_out[15]) );
  DFCNQD1 \data_out_reg[14]  ( .D(next_data_out[14]), .CP(clk), .CDN(n2), .Q(
        data_out[14]) );
  DFCNQD1 \data_out_reg[13]  ( .D(next_data_out[13]), .CP(clk), .CDN(n2), .Q(
        data_out[13]) );
  DFCNQD1 \data_out_reg[12]  ( .D(next_data_out[12]), .CP(clk), .CDN(n1), .Q(
        data_out[12]) );
  DFCNQD1 \data_out_reg[11]  ( .D(next_data_out[11]), .CP(clk), .CDN(n1), .Q(
        data_out[11]) );
  DFCNQD1 \data_out_reg[10]  ( .D(next_data_out[10]), .CP(clk), .CDN(n1), .Q(
        data_out[10]) );
  DFCNQD1 \data_out_reg[9]  ( .D(next_data_out[9]), .CP(clk), .CDN(n1), .Q(
        data_out[9]) );
  DFCNQD1 \data_out_reg[8]  ( .D(next_data_out[8]), .CP(clk), .CDN(n1), .Q(
        data_out[8]) );
  DFCNQD1 \data_out_reg[7]  ( .D(next_data_out[7]), .CP(clk), .CDN(n1), .Q(
        data_out[7]) );
  DFCNQD1 \data_out_reg[6]  ( .D(next_data_out[6]), .CP(clk), .CDN(n1), .Q(
        data_out[6]) );
  DFCNQD1 \data_out_reg[5]  ( .D(next_data_out[5]), .CP(clk), .CDN(n1), .Q(
        data_out[5]) );
  DFCNQD1 \data_out_reg[4]  ( .D(next_data_out[4]), .CP(clk), .CDN(n1), .Q(
        data_out[4]) );
  DFCNQD1 \data_out_reg[3]  ( .D(next_data_out[3]), .CP(clk), .CDN(n1), .Q(
        data_out[3]) );
  DFCNQD1 \data_out_reg[2]  ( .D(next_data_out[2]), .CP(clk), .CDN(n1), .Q(
        data_out[2]) );
  DFCNQD1 \data_out_reg[1]  ( .D(next_data_out[1]), .CP(clk), .CDN(n1), .Q(
        data_out[1]) );
  DFCNQD1 \data_out_reg[0]  ( .D(next_data_out[0]), .CP(clk), .CDN(n2), .Q(
        data_out[0]) );
  OA21D1 U20 ( .A1(n161), .A2(n160), .B(n159), .Z(n170) );
  OA21D1 U23 ( .A1(n156), .A2(n160), .B(n155), .Z(n169) );
  OA21D1 U26 ( .A1(n154), .A2(n160), .B(n153), .Z(n167) );
  OA21D1 U29 ( .A1(n152), .A2(n160), .B(n151), .Z(n166) );
  OA21D1 U32 ( .A1(n150), .A2(n160), .B(n149), .Z(n177) );
  OA21D1 U35 ( .A1(n148), .A2(n160), .B(n147), .Z(n165) );
  OA21D1 U38 ( .A1(n146), .A2(n160), .B(n145), .Z(n164) );
  OA21D1 U41 ( .A1(n144), .A2(n160), .B(n149), .Z(n163) );
  OA21D1 U47 ( .A1(n139), .A2(n160), .B(n138), .Z(n162) );
  OA21D1 U50 ( .A1(n137), .A2(n160), .B(n159), .Z(n175) );
  OA21D1 U56 ( .A1(n134), .A2(n160), .B(n155), .Z(n174) );
  OA21D1 U62 ( .A1(n131), .A2(n160), .B(n153), .Z(n173) );
  OA21D1 U68 ( .A1(n128), .A2(n160), .B(n151), .Z(n172) );
  OA21D1 U74 ( .A1(n125), .A2(n160), .B(n147), .Z(n171) );
  OA21D1 U80 ( .A1(n122), .A2(n160), .B(n145), .Z(n168) );
  OA21D1 U86 ( .A1(n119), .A2(n160), .B(n138), .Z(n176) );
  AN2XD1 U90 ( .A1(rd_ptr[1]), .A2(rd_ptr[0]), .Z(n140) );
  AN4XD1 U91 ( .A1(input_bitwidth[2]), .A2(rd_en), .A3(n5), .A4(n7), .Z(n143)
         );
  MAOI22D1 U97 ( .A1(n115), .A2(n12), .B1(n115), .B2(n114), .ZN(n113) );
  NR2D1 U3 ( .A1(n13), .A2(rd_ptr[1]), .ZN(n158) );
  NR2D1 U4 ( .A1(rd_ptr[0]), .A2(rd_ptr[1]), .ZN(n157) );
  AOI21D1 U5 ( .A1(n12), .A2(n116), .B(n113), .ZN(N41) );
  OAI21D1 U6 ( .A1(n111), .A2(n10), .B(n177), .ZN(next_data_out[1]) );
  OAI21D1 U7 ( .A1(n37), .A2(n10), .B(n177), .ZN(next_data_out[9]) );
  OAI21D1 U8 ( .A1(n8), .A2(n112), .B(n176), .ZN(next_data_out[0]) );
  OAI21D1 U9 ( .A1(n9), .A2(n110), .B(n168), .ZN(next_data_out[2]) );
  OAI21D1 U10 ( .A1(n9), .A2(n109), .B(n171), .ZN(next_data_out[3]) );
  OAI21D1 U11 ( .A1(n9), .A2(n108), .B(n172), .ZN(next_data_out[4]) );
  OAI21D1 U12 ( .A1(n8), .A2(n36), .B(n168), .ZN(next_data_out[10]) );
  OAI21D1 U13 ( .A1(n8), .A2(n35), .B(n171), .ZN(next_data_out[11]) );
  OAI21D1 U14 ( .A1(n8), .A2(n34), .B(n172), .ZN(next_data_out[12]) );
  OAI21D1 U15 ( .A1(n9), .A2(n33), .B(n173), .ZN(next_data_out[13]) );
  OAI21D1 U16 ( .A1(n8), .A2(n32), .B(n174), .ZN(next_data_out[14]) );
  OAI21D1 U17 ( .A1(n8), .A2(n31), .B(n175), .ZN(next_data_out[15]) );
  OAI21D1 U18 ( .A1(n10), .A2(n107), .B(n173), .ZN(next_data_out[5]) );
  OAI21D1 U19 ( .A1(n10), .A2(n106), .B(n174), .ZN(next_data_out[6]) );
  OAI21D1 U21 ( .A1(n10), .A2(n105), .B(n175), .ZN(next_data_out[7]) );
  OAI21D1 U22 ( .A1(n10), .A2(n38), .B(n176), .ZN(next_data_out[8]) );
  CKBD1 U24 ( .I(n178), .Z(n8) );
  CKBD1 U25 ( .I(n178), .Z(n9) );
  CKBD1 U27 ( .I(n178), .Z(n10) );
  INVD1 U28 ( .I(n6), .ZN(n7) );
  INVD1 U30 ( .I(n4), .ZN(n5) );
  INVD1 U31 ( .I(n116), .ZN(n11) );
  INVD1 U33 ( .I(n157), .ZN(n14) );
  INVD1 U34 ( .I(n158), .ZN(n12) );
  ND2D1 U36 ( .A1(n114), .A2(rd_en), .ZN(n178) );
  NR3D0 U37 ( .A1(n4), .A2(input_bitwidth[2]), .A3(n7), .ZN(n115) );
  NR3D0 U39 ( .A1(n6), .A2(input_bitwidth[2]), .A3(n5), .ZN(n114) );
  ND2D1 U40 ( .A1(rd_en), .A2(n115), .ZN(n160) );
  ND2D1 U42 ( .A1(n143), .A2(n118), .ZN(n138) );
  OAI221D0 U43 ( .A1(n12), .A2(n38), .B1(n14), .B2(n112), .C(n117), .ZN(n118)
         );
  AOI22D1 U44 ( .A1(data_in[24]), .A2(n140), .B1(data_in[16]), .B2(n11), .ZN(
        n117) );
  ND2D1 U45 ( .A1(n143), .A2(n142), .ZN(n149) );
  OAI221D0 U46 ( .A1(n12), .A2(n37), .B1(n14), .B2(n111), .C(n141), .ZN(n142)
         );
  AOI22D1 U48 ( .A1(data_in[25]), .A2(n140), .B1(n11), .B2(data_in[17]), .ZN(
        n141) );
  ND2D1 U49 ( .A1(n143), .A2(n121), .ZN(n145) );
  OAI221D0 U51 ( .A1(n12), .A2(n36), .B1(n14), .B2(n110), .C(n120), .ZN(n121)
         );
  AOI22D1 U52 ( .A1(data_in[26]), .A2(n140), .B1(data_in[18]), .B2(n11), .ZN(
        n120) );
  ND2D1 U53 ( .A1(n143), .A2(n124), .ZN(n147) );
  OAI221D0 U54 ( .A1(n12), .A2(n35), .B1(n14), .B2(n109), .C(n123), .ZN(n124)
         );
  AOI22D1 U55 ( .A1(data_in[27]), .A2(n140), .B1(data_in[19]), .B2(n11), .ZN(
        n123) );
  ND2D1 U57 ( .A1(n143), .A2(n127), .ZN(n151) );
  OAI221D0 U58 ( .A1(n12), .A2(n34), .B1(n14), .B2(n108), .C(n126), .ZN(n127)
         );
  AOI22D1 U59 ( .A1(data_in[28]), .A2(n140), .B1(data_in[20]), .B2(n11), .ZN(
        n126) );
  ND2D1 U60 ( .A1(n143), .A2(n130), .ZN(n153) );
  OAI221D0 U61 ( .A1(n12), .A2(n33), .B1(n14), .B2(n107), .C(n129), .ZN(n130)
         );
  AOI22D1 U63 ( .A1(data_in[29]), .A2(n140), .B1(data_in[21]), .B2(n11), .ZN(
        n129) );
  ND2D1 U64 ( .A1(n143), .A2(n133), .ZN(n155) );
  OAI221D0 U65 ( .A1(n12), .A2(n32), .B1(n14), .B2(n106), .C(n132), .ZN(n133)
         );
  AOI22D1 U66 ( .A1(data_in[30]), .A2(n140), .B1(data_in[22]), .B2(n11), .ZN(
        n132) );
  ND2D1 U67 ( .A1(n143), .A2(n136), .ZN(n159) );
  OAI221D0 U69 ( .A1(n12), .A2(n31), .B1(n14), .B2(n105), .C(n135), .ZN(n136)
         );
  AOI22D1 U70 ( .A1(data_in[31]), .A2(n140), .B1(data_in[23]), .B2(n11), .ZN(
        n135) );
  AOI22D1 U71 ( .A1(data_in[16]), .A2(n158), .B1(data_in[0]), .B2(n157), .ZN(
        n119) );
  AOI22D1 U72 ( .A1(data_in[17]), .A2(n158), .B1(data_in[1]), .B2(n157), .ZN(
        n150) );
  AOI22D1 U73 ( .A1(data_in[18]), .A2(n158), .B1(data_in[2]), .B2(n157), .ZN(
        n122) );
  AOI22D1 U75 ( .A1(data_in[19]), .A2(n158), .B1(data_in[3]), .B2(n157), .ZN(
        n125) );
  AOI22D1 U76 ( .A1(data_in[20]), .A2(n158), .B1(data_in[4]), .B2(n157), .ZN(
        n128) );
  AOI22D1 U77 ( .A1(data_in[21]), .A2(n158), .B1(data_in[5]), .B2(n157), .ZN(
        n131) );
  AOI22D1 U78 ( .A1(data_in[22]), .A2(n158), .B1(data_in[6]), .B2(n157), .ZN(
        n134) );
  AOI22D1 U79 ( .A1(data_in[23]), .A2(n158), .B1(data_in[7]), .B2(n157), .ZN(
        n137) );
  AOI22D1 U81 ( .A1(data_in[24]), .A2(n158), .B1(data_in[8]), .B2(n157), .ZN(
        n139) );
  AOI22D1 U82 ( .A1(data_in[25]), .A2(n158), .B1(data_in[9]), .B2(n157), .ZN(
        n144) );
  AOI22D1 U83 ( .A1(data_in[26]), .A2(n158), .B1(data_in[10]), .B2(n157), .ZN(
        n146) );
  AOI22D1 U84 ( .A1(data_in[27]), .A2(n158), .B1(data_in[11]), .B2(n157), .ZN(
        n148) );
  AOI22D1 U85 ( .A1(data_in[28]), .A2(n158), .B1(data_in[12]), .B2(n157), .ZN(
        n152) );
  AOI22D1 U87 ( .A1(data_in[29]), .A2(n158), .B1(data_in[13]), .B2(n157), .ZN(
        n154) );
  AOI22D1 U88 ( .A1(data_in[30]), .A2(n158), .B1(data_in[14]), .B2(n157), .ZN(
        n156) );
  AOI22D1 U89 ( .A1(data_in[31]), .A2(n158), .B1(data_in[15]), .B2(n157), .ZN(
        n161) );
  NR2D1 U92 ( .A1(rd_ptr[0]), .A2(n114), .ZN(N40) );
  OAI21D1 U93 ( .A1(n29), .A2(n10), .B(n163), .ZN(next_data_out[17]) );
  INVD1 U94 ( .I(data_in[17]), .ZN(n29) );
  OAI21D1 U95 ( .A1(n8), .A2(n30), .B(n162), .ZN(next_data_out[16]) );
  INVD1 U96 ( .I(data_in[16]), .ZN(n30) );
  OAI21D1 U98 ( .A1(n8), .A2(n28), .B(n164), .ZN(next_data_out[18]) );
  INVD1 U99 ( .I(data_in[18]), .ZN(n28) );
  OAI21D1 U100 ( .A1(n8), .A2(n27), .B(n165), .ZN(next_data_out[19]) );
  INVD1 U101 ( .I(data_in[19]), .ZN(n27) );
  OAI21D1 U102 ( .A1(n8), .A2(n26), .B(n166), .ZN(next_data_out[20]) );
  INVD1 U103 ( .I(data_in[20]), .ZN(n26) );
  OAI21D1 U104 ( .A1(n8), .A2(n25), .B(n167), .ZN(next_data_out[21]) );
  INVD1 U105 ( .I(data_in[21]), .ZN(n25) );
  OAI21D1 U106 ( .A1(n8), .A2(n24), .B(n169), .ZN(next_data_out[22]) );
  INVD1 U107 ( .I(data_in[22]), .ZN(n24) );
  OAI21D1 U108 ( .A1(n9), .A2(n23), .B(n170), .ZN(next_data_out[23]) );
  INVD1 U109 ( .I(data_in[23]), .ZN(n23) );
  OAI21D1 U110 ( .A1(n9), .A2(n22), .B(n162), .ZN(next_data_out[24]) );
  INVD1 U111 ( .I(data_in[24]), .ZN(n22) );
  OAI21D1 U112 ( .A1(n9), .A2(n20), .B(n164), .ZN(next_data_out[26]) );
  INVD1 U113 ( .I(data_in[26]), .ZN(n20) );
  OAI21D1 U114 ( .A1(n9), .A2(n19), .B(n165), .ZN(next_data_out[27]) );
  INVD1 U115 ( .I(data_in[27]), .ZN(n19) );
  OAI21D1 U116 ( .A1(n9), .A2(n18), .B(n166), .ZN(next_data_out[28]) );
  INVD1 U117 ( .I(data_in[28]), .ZN(n18) );
  OAI21D1 U118 ( .A1(n9), .A2(n17), .B(n167), .ZN(next_data_out[29]) );
  INVD1 U119 ( .I(data_in[29]), .ZN(n17) );
  OAI21D1 U120 ( .A1(n9), .A2(n16), .B(n169), .ZN(next_data_out[30]) );
  INVD1 U121 ( .I(data_in[30]), .ZN(n16) );
  OAI21D1 U122 ( .A1(n9), .A2(n15), .B(n170), .ZN(next_data_out[31]) );
  INVD1 U123 ( .I(data_in[31]), .ZN(n15) );
  OAI21D1 U124 ( .A1(n21), .A2(n10), .B(n163), .ZN(next_data_out[25]) );
  INVD1 U125 ( .I(data_in[25]), .ZN(n21) );
  CKBD1 U126 ( .I(input_bitwidth[0]), .Z(n4) );
  CKBD1 U127 ( .I(input_bitwidth[1]), .Z(n6) );
  ND2D1 U128 ( .A1(rd_ptr[1]), .A2(n13), .ZN(n116) );
  INVD1 U129 ( .I(rd_ptr[0]), .ZN(n13) );
  INVD1 U130 ( .I(data_in[1]), .ZN(n111) );
  INVD1 U131 ( .I(data_in[9]), .ZN(n37) );
  INVD1 U132 ( .I(data_in[0]), .ZN(n112) );
  INVD1 U133 ( .I(data_in[2]), .ZN(n110) );
  INVD1 U134 ( .I(data_in[3]), .ZN(n109) );
  INVD1 U135 ( .I(data_in[4]), .ZN(n108) );
  INVD1 U136 ( .I(data_in[5]), .ZN(n107) );
  INVD1 U137 ( .I(data_in[6]), .ZN(n106) );
  INVD1 U138 ( .I(data_in[7]), .ZN(n105) );
  INVD1 U139 ( .I(data_in[8]), .ZN(n38) );
  INVD1 U140 ( .I(data_in[10]), .ZN(n36) );
  INVD1 U141 ( .I(data_in[11]), .ZN(n35) );
  INVD1 U142 ( .I(data_in[12]), .ZN(n34) );
  INVD1 U143 ( .I(data_in[13]), .ZN(n33) );
  INVD1 U144 ( .I(data_in[14]), .ZN(n32) );
  INVD1 U145 ( .I(data_in[15]), .ZN(n31) );
  CKBD1 U146 ( .I(nRST), .Z(n2) );
  CKBD1 U147 ( .I(nRST), .Z(n1) );
  CKBD1 U148 ( .I(nRST), .Z(n3) );
endmodule


module IBUF_ARRAY_SIZE4_DATA_W32_1 ( clk, nRST, IBUF_wr_en, IBUF_data_in, 
        IBUF_data_out );
  input [31:0] IBUF_data_in;
  output [31:0] IBUF_data_out;
  input clk, nRST, IBUF_wr_en;
  wire   n1, n2, n3, n4, n5, n6;

  EDFCNQD1 \IBUF_data_out_reg[31]  ( .D(IBUF_data_in[31]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[31]) );
  EDFCNQD1 \IBUF_data_out_reg[30]  ( .D(IBUF_data_in[30]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[30]) );
  EDFCNQD1 \IBUF_data_out_reg[29]  ( .D(IBUF_data_in[29]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[29]) );
  EDFCNQD1 \IBUF_data_out_reg[28]  ( .D(IBUF_data_in[28]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[28]) );
  EDFCNQD1 \IBUF_data_out_reg[27]  ( .D(IBUF_data_in[27]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[27]) );
  EDFCNQD1 \IBUF_data_out_reg[26]  ( .D(IBUF_data_in[26]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[26]) );
  EDFCNQD1 \IBUF_data_out_reg[25]  ( .D(IBUF_data_in[25]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[25]) );
  EDFCNQD1 \IBUF_data_out_reg[24]  ( .D(IBUF_data_in[24]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[24]) );
  EDFCNQD1 \IBUF_data_out_reg[23]  ( .D(IBUF_data_in[23]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[23]) );
  EDFCNQD1 \IBUF_data_out_reg[22]  ( .D(IBUF_data_in[22]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[22]) );
  EDFCNQD1 \IBUF_data_out_reg[21]  ( .D(IBUF_data_in[21]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[21]) );
  EDFCNQD1 \IBUF_data_out_reg[20]  ( .D(IBUF_data_in[20]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[20]) );
  EDFCNQD1 \IBUF_data_out_reg[19]  ( .D(IBUF_data_in[19]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[19]) );
  EDFCNQD1 \IBUF_data_out_reg[18]  ( .D(IBUF_data_in[18]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[18]) );
  EDFCNQD1 \IBUF_data_out_reg[17]  ( .D(IBUF_data_in[17]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[17]) );
  EDFCNQD1 \IBUF_data_out_reg[16]  ( .D(IBUF_data_in[16]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[16]) );
  EDFCNQD1 \IBUF_data_out_reg[15]  ( .D(IBUF_data_in[15]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[15]) );
  EDFCNQD1 \IBUF_data_out_reg[14]  ( .D(IBUF_data_in[14]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[14]) );
  EDFCNQD1 \IBUF_data_out_reg[13]  ( .D(IBUF_data_in[13]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[13]) );
  EDFCNQD1 \IBUF_data_out_reg[12]  ( .D(IBUF_data_in[12]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[12]) );
  EDFCNQD1 \IBUF_data_out_reg[11]  ( .D(IBUF_data_in[11]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[11]) );
  EDFCNQD1 \IBUF_data_out_reg[10]  ( .D(IBUF_data_in[10]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[10]) );
  EDFCNQD1 \IBUF_data_out_reg[9]  ( .D(IBUF_data_in[9]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[9]) );
  EDFCNQD1 \IBUF_data_out_reg[8]  ( .D(IBUF_data_in[8]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[8]) );
  EDFCNQD1 \IBUF_data_out_reg[7]  ( .D(IBUF_data_in[7]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[7]) );
  EDFCNQD1 \IBUF_data_out_reg[6]  ( .D(IBUF_data_in[6]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[6]) );
  EDFCNQD1 \IBUF_data_out_reg[5]  ( .D(IBUF_data_in[5]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[5]) );
  EDFCNQD1 \IBUF_data_out_reg[4]  ( .D(IBUF_data_in[4]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[4]) );
  EDFCNQD1 \IBUF_data_out_reg[3]  ( .D(IBUF_data_in[3]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[3]) );
  EDFCNQD1 \IBUF_data_out_reg[2]  ( .D(IBUF_data_in[2]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[2]) );
  EDFCNQD1 \IBUF_data_out_reg[1]  ( .D(IBUF_data_in[1]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[1]) );
  EDFCNQD1 \IBUF_data_out_reg[0]  ( .D(IBUF_data_in[0]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[0]) );
  CKBD1 U2 ( .I(IBUF_wr_en), .Z(n5) );
  CKBD1 U3 ( .I(IBUF_wr_en), .Z(n4) );
  CKBD1 U4 ( .I(nRST), .Z(n1) );
  CKBD1 U5 ( .I(nRST), .Z(n2) );
  CKBD1 U6 ( .I(nRST), .Z(n3) );
  CKBD1 U7 ( .I(IBUF_wr_en), .Z(n6) );
endmodule


module in_mux_1 ( clk, nRST, weight_bitwidth, rd_en, data_in, data_out );
  input [2:0] weight_bitwidth;
  input [31:0] data_in;
  output [31:0] data_out;
  input clk, nRST, rd_en;
  wire   N40, N41, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129,
         n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140,
         n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151,
         n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162,
         n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173,
         n174, n175, n176, n177, n178;
  wire   [1:0] rd_ptr;
  wire   [31:0] next_data_out;

  EDFCNQD1 \rd_ptr_reg[0]  ( .D(N40), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[0]) );
  EDFCNQD1 \rd_ptr_reg[1]  ( .D(N41), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[1]) );
  DFCNQD1 \data_out_reg[31]  ( .D(next_data_out[31]), .CP(clk), .CDN(n1), .Q(
        data_out[31]) );
  DFCNQD1 \data_out_reg[30]  ( .D(next_data_out[30]), .CP(clk), .CDN(n3), .Q(
        data_out[30]) );
  DFCNQD1 \data_out_reg[29]  ( .D(next_data_out[29]), .CP(clk), .CDN(n3), .Q(
        data_out[29]) );
  DFCNQD1 \data_out_reg[28]  ( .D(next_data_out[28]), .CP(clk), .CDN(n3), .Q(
        data_out[28]) );
  DFCNQD1 \data_out_reg[27]  ( .D(next_data_out[27]), .CP(clk), .CDN(n3), .Q(
        data_out[27]) );
  DFCNQD1 \data_out_reg[26]  ( .D(next_data_out[26]), .CP(clk), .CDN(n3), .Q(
        data_out[26]) );
  DFCNQD1 \data_out_reg[25]  ( .D(next_data_out[25]), .CP(clk), .CDN(n3), .Q(
        data_out[25]) );
  DFCNQD1 \data_out_reg[24]  ( .D(next_data_out[24]), .CP(clk), .CDN(n2), .Q(
        data_out[24]) );
  DFCNQD1 \data_out_reg[23]  ( .D(next_data_out[23]), .CP(clk), .CDN(n2), .Q(
        data_out[23]) );
  DFCNQD1 \data_out_reg[22]  ( .D(next_data_out[22]), .CP(clk), .CDN(n2), .Q(
        data_out[22]) );
  DFCNQD1 \data_out_reg[21]  ( .D(next_data_out[21]), .CP(clk), .CDN(n2), .Q(
        data_out[21]) );
  DFCNQD1 \data_out_reg[20]  ( .D(next_data_out[20]), .CP(clk), .CDN(n2), .Q(
        data_out[20]) );
  DFCNQD1 \data_out_reg[19]  ( .D(next_data_out[19]), .CP(clk), .CDN(n2), .Q(
        data_out[19]) );
  DFCNQD1 \data_out_reg[18]  ( .D(next_data_out[18]), .CP(clk), .CDN(n2), .Q(
        data_out[18]) );
  DFCNQD1 \data_out_reg[17]  ( .D(next_data_out[17]), .CP(clk), .CDN(n2), .Q(
        data_out[17]) );
  DFCNQD1 \data_out_reg[16]  ( .D(next_data_out[16]), .CP(clk), .CDN(n2), .Q(
        data_out[16]) );
  DFCNQD1 \data_out_reg[15]  ( .D(next_data_out[15]), .CP(clk), .CDN(n2), .Q(
        data_out[15]) );
  DFCNQD1 \data_out_reg[14]  ( .D(next_data_out[14]), .CP(clk), .CDN(n2), .Q(
        data_out[14]) );
  DFCNQD1 \data_out_reg[13]  ( .D(next_data_out[13]), .CP(clk), .CDN(n2), .Q(
        data_out[13]) );
  DFCNQD1 \data_out_reg[12]  ( .D(next_data_out[12]), .CP(clk), .CDN(n1), .Q(
        data_out[12]) );
  DFCNQD1 \data_out_reg[11]  ( .D(next_data_out[11]), .CP(clk), .CDN(n1), .Q(
        data_out[11]) );
  DFCNQD1 \data_out_reg[10]  ( .D(next_data_out[10]), .CP(clk), .CDN(n1), .Q(
        data_out[10]) );
  DFCNQD1 \data_out_reg[9]  ( .D(next_data_out[9]), .CP(clk), .CDN(n1), .Q(
        data_out[9]) );
  DFCNQD1 \data_out_reg[8]  ( .D(next_data_out[8]), .CP(clk), .CDN(n1), .Q(
        data_out[8]) );
  DFCNQD1 \data_out_reg[7]  ( .D(next_data_out[7]), .CP(clk), .CDN(n1), .Q(
        data_out[7]) );
  DFCNQD1 \data_out_reg[6]  ( .D(next_data_out[6]), .CP(clk), .CDN(n1), .Q(
        data_out[6]) );
  DFCNQD1 \data_out_reg[5]  ( .D(next_data_out[5]), .CP(clk), .CDN(n1), .Q(
        data_out[5]) );
  DFCNQD1 \data_out_reg[4]  ( .D(next_data_out[4]), .CP(clk), .CDN(n1), .Q(
        data_out[4]) );
  DFCNQD1 \data_out_reg[3]  ( .D(next_data_out[3]), .CP(clk), .CDN(n1), .Q(
        data_out[3]) );
  DFCNQD1 \data_out_reg[2]  ( .D(next_data_out[2]), .CP(clk), .CDN(n1), .Q(
        data_out[2]) );
  DFCNQD1 \data_out_reg[1]  ( .D(next_data_out[1]), .CP(clk), .CDN(n1), .Q(
        data_out[1]) );
  DFCNQD1 \data_out_reg[0]  ( .D(next_data_out[0]), .CP(clk), .CDN(n2), .Q(
        data_out[0]) );
  OA21D1 U8 ( .A1(n173), .A2(n172), .B(n171), .Z(n175) );
  OA21D1 U11 ( .A1(n168), .A2(n172), .B(n167), .Z(n174) );
  OA21D1 U18 ( .A1(n162), .A2(n172), .B(n161), .Z(n165) );
  OA21D1 U21 ( .A1(n160), .A2(n172), .B(n159), .Z(n164) );
  OA21D1 U26 ( .A1(n156), .A2(n172), .B(n161), .Z(n158) );
  OA21D1 U32 ( .A1(n151), .A2(n172), .B(n159), .Z(n157) );
  OA21D1 U40 ( .A1(n146), .A2(n172), .B(n145), .Z(n148) );
  OA21D1 U43 ( .A1(n144), .A2(n172), .B(n143), .Z(n147) );
  OA21D1 U46 ( .A1(n142), .A2(n172), .B(n171), .Z(n166) );
  OA21D1 U54 ( .A1(n137), .A2(n172), .B(n145), .Z(n139) );
  OA21D1 U60 ( .A1(n134), .A2(n172), .B(n143), .Z(n138) );
  OA21D1 U68 ( .A1(n129), .A2(n172), .B(n128), .Z(n131) );
  OA21D1 U71 ( .A1(n127), .A2(n172), .B(n126), .Z(n130) );
  OA21D1 U74 ( .A1(n125), .A2(n172), .B(n128), .Z(n177) );
  OA21D1 U80 ( .A1(n122), .A2(n172), .B(n126), .Z(n176) );
  OA21D1 U86 ( .A1(n119), .A2(n172), .B(n167), .Z(n163) );
  AN2XD1 U90 ( .A1(rd_ptr[1]), .A2(rd_ptr[0]), .Z(n152) );
  AN4XD1 U91 ( .A1(weight_bitwidth[2]), .A2(rd_en), .A3(n5), .A4(n7), .Z(n155)
         );
  MAOI22D1 U97 ( .A1(n115), .A2(n12), .B1(n115), .B2(n114), .ZN(n113) );
  NR2D1 U3 ( .A1(n13), .A2(rd_ptr[1]), .ZN(n170) );
  NR2D1 U4 ( .A1(rd_ptr[0]), .A2(rd_ptr[1]), .ZN(n169) );
  AOI21D1 U5 ( .A1(n12), .A2(n116), .B(n113), .ZN(N41) );
  OAI21D1 U6 ( .A1(n109), .A2(n10), .B(n166), .ZN(next_data_out[3]) );
  OAI21D1 U7 ( .A1(n35), .A2(n10), .B(n177), .ZN(next_data_out[11]) );
  OAI21D1 U9 ( .A1(n9), .A2(n112), .B(n163), .ZN(next_data_out[0]) );
  OAI21D1 U10 ( .A1(n8), .A2(n111), .B(n166), .ZN(next_data_out[1]) );
  OAI21D1 U12 ( .A1(n9), .A2(n110), .B(n163), .ZN(next_data_out[2]) );
  OAI21D1 U13 ( .A1(n9), .A2(n106), .B(n174), .ZN(next_data_out[6]) );
  OAI21D1 U14 ( .A1(n8), .A2(n37), .B(n177), .ZN(next_data_out[9]) );
  OAI21D1 U15 ( .A1(n8), .A2(n36), .B(n176), .ZN(next_data_out[10]) );
  OAI21D1 U16 ( .A1(n8), .A2(n34), .B(n130), .ZN(next_data_out[12]) );
  OAI21D1 U17 ( .A1(n8), .A2(n33), .B(n131), .ZN(next_data_out[13]) );
  OAI21D1 U19 ( .A1(n8), .A2(n32), .B(n130), .ZN(next_data_out[14]) );
  OAI21D1 U20 ( .A1(n8), .A2(n31), .B(n131), .ZN(next_data_out[15]) );
  OAI21D1 U22 ( .A1(n10), .A2(n108), .B(n174), .ZN(next_data_out[4]) );
  OAI21D1 U23 ( .A1(n10), .A2(n107), .B(n175), .ZN(next_data_out[5]) );
  OAI21D1 U24 ( .A1(n10), .A2(n105), .B(n175), .ZN(next_data_out[7]) );
  OAI21D1 U25 ( .A1(n10), .A2(n38), .B(n176), .ZN(next_data_out[8]) );
  CKBD1 U27 ( .I(n178), .Z(n8) );
  CKBD1 U28 ( .I(n178), .Z(n9) );
  CKBD1 U29 ( .I(n178), .Z(n10) );
  INVD1 U30 ( .I(n6), .ZN(n7) );
  INVD1 U31 ( .I(n4), .ZN(n5) );
  INVD1 U33 ( .I(n116), .ZN(n11) );
  INVD1 U34 ( .I(n169), .ZN(n14) );
  INVD1 U35 ( .I(n170), .ZN(n12) );
  ND2D1 U36 ( .A1(n114), .A2(rd_en), .ZN(n178) );
  NR3D0 U37 ( .A1(n4), .A2(weight_bitwidth[2]), .A3(n7), .ZN(n115) );
  NR3D0 U38 ( .A1(n6), .A2(weight_bitwidth[2]), .A3(n5), .ZN(n114) );
  ND2D1 U39 ( .A1(rd_en), .A2(n115), .ZN(n172) );
  ND2D1 U41 ( .A1(n155), .A2(n118), .ZN(n167) );
  OAI221D0 U42 ( .A1(n12), .A2(n38), .B1(n14), .B2(n112), .C(n117), .ZN(n118)
         );
  AOI22D1 U44 ( .A1(data_in[24]), .A2(n152), .B1(data_in[16]), .B2(n11), .ZN(
        n117) );
  ND2D1 U45 ( .A1(n155), .A2(n141), .ZN(n171) );
  OAI221D0 U47 ( .A1(n12), .A2(n37), .B1(n14), .B2(n111), .C(n140), .ZN(n141)
         );
  AOI22D1 U48 ( .A1(data_in[25]), .A2(n152), .B1(data_in[17]), .B2(n11), .ZN(
        n140) );
  ND2D1 U49 ( .A1(n155), .A2(n121), .ZN(n126) );
  OAI221D0 U50 ( .A1(n12), .A2(n36), .B1(n14), .B2(n110), .C(n120), .ZN(n121)
         );
  AOI22D1 U51 ( .A1(data_in[26]), .A2(n152), .B1(data_in[18]), .B2(n11), .ZN(
        n120) );
  ND2D1 U52 ( .A1(n155), .A2(n124), .ZN(n128) );
  OAI221D0 U53 ( .A1(n12), .A2(n35), .B1(n14), .B2(n109), .C(n123), .ZN(n124)
         );
  AOI22D1 U55 ( .A1(data_in[27]), .A2(n152), .B1(n11), .B2(data_in[19]), .ZN(
        n123) );
  ND2D1 U56 ( .A1(n155), .A2(n133), .ZN(n143) );
  OAI221D0 U57 ( .A1(n12), .A2(n34), .B1(n14), .B2(n108), .C(n132), .ZN(n133)
         );
  AOI22D1 U58 ( .A1(data_in[28]), .A2(n152), .B1(data_in[20]), .B2(n11), .ZN(
        n132) );
  ND2D1 U59 ( .A1(n155), .A2(n136), .ZN(n145) );
  OAI221D0 U61 ( .A1(n12), .A2(n33), .B1(n14), .B2(n107), .C(n135), .ZN(n136)
         );
  AOI22D1 U62 ( .A1(data_in[29]), .A2(n152), .B1(data_in[21]), .B2(n11), .ZN(
        n135) );
  ND2D1 U63 ( .A1(n155), .A2(n150), .ZN(n159) );
  OAI221D0 U64 ( .A1(n12), .A2(n32), .B1(n14), .B2(n106), .C(n149), .ZN(n150)
         );
  AOI22D1 U65 ( .A1(data_in[30]), .A2(n152), .B1(data_in[22]), .B2(n11), .ZN(
        n149) );
  ND2D1 U66 ( .A1(n155), .A2(n154), .ZN(n161) );
  OAI221D0 U67 ( .A1(n12), .A2(n31), .B1(n14), .B2(n105), .C(n153), .ZN(n154)
         );
  AOI22D1 U69 ( .A1(data_in[31]), .A2(n152), .B1(data_in[23]), .B2(n11), .ZN(
        n153) );
  AOI22D1 U70 ( .A1(data_in[16]), .A2(n170), .B1(data_in[0]), .B2(n169), .ZN(
        n119) );
  AOI22D1 U72 ( .A1(data_in[17]), .A2(n170), .B1(data_in[1]), .B2(n169), .ZN(
        n142) );
  AOI22D1 U73 ( .A1(data_in[24]), .A2(n170), .B1(data_in[8]), .B2(n169), .ZN(
        n168) );
  AOI22D1 U75 ( .A1(data_in[25]), .A2(n170), .B1(data_in[9]), .B2(n169), .ZN(
        n173) );
  AOI22D1 U76 ( .A1(data_in[18]), .A2(n170), .B1(data_in[2]), .B2(n169), .ZN(
        n122) );
  AOI22D1 U77 ( .A1(data_in[19]), .A2(n170), .B1(data_in[3]), .B2(n169), .ZN(
        n125) );
  AOI22D1 U78 ( .A1(data_in[26]), .A2(n170), .B1(data_in[10]), .B2(n169), .ZN(
        n127) );
  AOI22D1 U79 ( .A1(data_in[27]), .A2(n170), .B1(data_in[11]), .B2(n169), .ZN(
        n129) );
  AOI22D1 U81 ( .A1(data_in[20]), .A2(n170), .B1(data_in[4]), .B2(n169), .ZN(
        n134) );
  AOI22D1 U82 ( .A1(data_in[21]), .A2(n170), .B1(data_in[5]), .B2(n169), .ZN(
        n137) );
  AOI22D1 U83 ( .A1(data_in[28]), .A2(n170), .B1(data_in[12]), .B2(n169), .ZN(
        n144) );
  AOI22D1 U84 ( .A1(data_in[29]), .A2(n170), .B1(data_in[13]), .B2(n169), .ZN(
        n146) );
  AOI22D1 U85 ( .A1(data_in[22]), .A2(n170), .B1(data_in[6]), .B2(n169), .ZN(
        n151) );
  AOI22D1 U87 ( .A1(data_in[23]), .A2(n170), .B1(data_in[7]), .B2(n169), .ZN(
        n156) );
  AOI22D1 U88 ( .A1(data_in[30]), .A2(n170), .B1(data_in[14]), .B2(n169), .ZN(
        n160) );
  AOI22D1 U89 ( .A1(data_in[31]), .A2(n170), .B1(data_in[15]), .B2(n169), .ZN(
        n162) );
  NR2D1 U92 ( .A1(rd_ptr[0]), .A2(n114), .ZN(N40) );
  OAI21D1 U93 ( .A1(n27), .A2(n10), .B(n139), .ZN(next_data_out[19]) );
  INVD1 U94 ( .I(data_in[19]), .ZN(n27) );
  OAI21D1 U95 ( .A1(n8), .A2(n30), .B(n138), .ZN(next_data_out[16]) );
  INVD1 U96 ( .I(data_in[16]), .ZN(n30) );
  OAI21D1 U98 ( .A1(n8), .A2(n29), .B(n139), .ZN(next_data_out[17]) );
  INVD1 U99 ( .I(data_in[17]), .ZN(n29) );
  OAI21D1 U100 ( .A1(n8), .A2(n28), .B(n138), .ZN(next_data_out[18]) );
  INVD1 U101 ( .I(data_in[18]), .ZN(n28) );
  OAI21D1 U102 ( .A1(n8), .A2(n26), .B(n147), .ZN(next_data_out[20]) );
  INVD1 U103 ( .I(data_in[20]), .ZN(n26) );
  OAI21D1 U104 ( .A1(n8), .A2(n25), .B(n148), .ZN(next_data_out[21]) );
  INVD1 U105 ( .I(data_in[21]), .ZN(n25) );
  OAI21D1 U106 ( .A1(n9), .A2(n24), .B(n147), .ZN(next_data_out[22]) );
  INVD1 U107 ( .I(data_in[22]), .ZN(n24) );
  OAI21D1 U108 ( .A1(n9), .A2(n23), .B(n148), .ZN(next_data_out[23]) );
  INVD1 U109 ( .I(data_in[23]), .ZN(n23) );
  OAI21D1 U110 ( .A1(n9), .A2(n22), .B(n157), .ZN(next_data_out[24]) );
  INVD1 U111 ( .I(data_in[24]), .ZN(n22) );
  OAI21D1 U112 ( .A1(n9), .A2(n21), .B(n158), .ZN(next_data_out[25]) );
  INVD1 U113 ( .I(data_in[25]), .ZN(n21) );
  OAI21D1 U114 ( .A1(n9), .A2(n20), .B(n157), .ZN(next_data_out[26]) );
  INVD1 U115 ( .I(data_in[26]), .ZN(n20) );
  OAI21D1 U116 ( .A1(n9), .A2(n18), .B(n164), .ZN(next_data_out[28]) );
  INVD1 U117 ( .I(data_in[28]), .ZN(n18) );
  OAI21D1 U118 ( .A1(n9), .A2(n17), .B(n165), .ZN(next_data_out[29]) );
  INVD1 U119 ( .I(data_in[29]), .ZN(n17) );
  OAI21D1 U120 ( .A1(n9), .A2(n16), .B(n164), .ZN(next_data_out[30]) );
  INVD1 U121 ( .I(data_in[30]), .ZN(n16) );
  OAI21D1 U122 ( .A1(n9), .A2(n15), .B(n165), .ZN(next_data_out[31]) );
  INVD1 U123 ( .I(data_in[31]), .ZN(n15) );
  OAI21D1 U124 ( .A1(n19), .A2(n10), .B(n158), .ZN(next_data_out[27]) );
  INVD1 U125 ( .I(data_in[27]), .ZN(n19) );
  CKBD1 U126 ( .I(weight_bitwidth[0]), .Z(n4) );
  CKBD1 U127 ( .I(weight_bitwidth[1]), .Z(n6) );
  ND2D1 U128 ( .A1(rd_ptr[1]), .A2(n13), .ZN(n116) );
  INVD1 U129 ( .I(rd_ptr[0]), .ZN(n13) );
  INVD1 U130 ( .I(data_in[3]), .ZN(n109) );
  INVD1 U131 ( .I(data_in[11]), .ZN(n35) );
  INVD1 U132 ( .I(data_in[0]), .ZN(n112) );
  INVD1 U133 ( .I(data_in[1]), .ZN(n111) );
  INVD1 U134 ( .I(data_in[2]), .ZN(n110) );
  INVD1 U135 ( .I(data_in[4]), .ZN(n108) );
  INVD1 U136 ( .I(data_in[5]), .ZN(n107) );
  INVD1 U137 ( .I(data_in[6]), .ZN(n106) );
  INVD1 U138 ( .I(data_in[7]), .ZN(n105) );
  INVD1 U139 ( .I(data_in[8]), .ZN(n38) );
  INVD1 U140 ( .I(data_in[9]), .ZN(n37) );
  INVD1 U141 ( .I(data_in[10]), .ZN(n36) );
  INVD1 U142 ( .I(data_in[12]), .ZN(n34) );
  INVD1 U143 ( .I(data_in[13]), .ZN(n33) );
  INVD1 U144 ( .I(data_in[14]), .ZN(n32) );
  INVD1 U145 ( .I(data_in[15]), .ZN(n31) );
  CKBD1 U146 ( .I(nRST), .Z(n2) );
  CKBD1 U147 ( .I(nRST), .Z(n1) );
  CKBD1 U148 ( .I(nRST), .Z(n3) );
endmodule


module bit_brick_127 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_126 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_125 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_124 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_123 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_122 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_121 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_120 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_119 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_118 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[0]), .ZN(n3) );
  INVD1 U6 ( .I(y[1]), .ZN(n4) );
  INVD1 U7 ( .I(x[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_117 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_116 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_115 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_114 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_113 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_112 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module shift_add_7_DW01_add_14_DW01_add_124 ( A, B, CI, SUM, CO );
  input [28:0] A;
  input [28:0] B;
  output [28:0] SUM;
  input CI;
  output CO;
  wire   n1, \SUM[18] , n3, n4, n5, n6, n7;
  wire   [28:1] carry;
  assign SUM[27] = \SUM[18] ;
  assign SUM[28] = \SUM[18] ;
  assign SUM[26] = \SUM[18] ;
  assign SUM[25] = \SUM[18] ;
  assign SUM[24] = \SUM[18] ;
  assign SUM[23] = \SUM[18] ;
  assign SUM[22] = \SUM[18] ;
  assign SUM[21] = \SUM[18] ;
  assign SUM[20] = \SUM[18] ;
  assign SUM[19] = \SUM[18] ;
  assign SUM[18] = \SUM[18] ;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D0 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  AOI222D1 U3 ( .A1(carry[15]), .A2(A[27]), .B1(carry[15]), .B2(B[15]), .C1(
        B[15]), .C2(A[27]), .ZN(n5) );
  XNR3D4 U4 ( .A1(B[27]), .A2(n7), .A3(n3), .ZN(\SUM[18] ) );
  AO222D1 U5 ( .A1(n4), .A2(A[27]), .B1(n4), .B2(B[27]), .C1(A[27]), .C2(B[27]), .Z(n3) );
  CKND0 U6 ( .I(A[27]), .ZN(n7) );
  CKND0 U7 ( .I(B[16]), .ZN(n6) );
  OAI222D0 U8 ( .A1(n5), .A2(n7), .B1(n5), .B2(n6), .C1(n7), .C2(n6), .ZN(n4)
         );
  XNR3D0 U9 ( .A1(B[27]), .A2(n7), .A3(n4), .ZN(SUM[17]) );
  XNR3D0 U10 ( .A1(n6), .A2(n5), .A3(n7), .ZN(SUM[16]) );
  XNR3D0 U11 ( .A1(carry[15]), .A2(B[15]), .A3(n7), .ZN(SUM[15]) );
endmodule


module shift_add_7_DW01_add_6_DW01_add_116 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_7_DW01_add_5_DW01_add_115 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_7_DW01_add_4_DW01_add_114 ( A, B, CI, SUM, CO );
  input [30:0] A;
  input [30:0] B;
  output [30:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [30:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  XOR3D1 U1_30 ( .A1(A[30]), .A2(B[30]), .A3(carry[30]), .Z(SUM[30]) );
  FA1D2 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_7_DW01_add_3_DW01_add_113 ( A, B, CI, SUM, CO );
  input [29:0] A;
  input [29:0] B;
  output [29:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3;
  wire   [29:1] carry;
  assign SUM[29] = SUM[23];
  assign SUM[28] = SUM[23];
  assign SUM[27] = SUM[23];
  assign SUM[26] = SUM[23];
  assign SUM[25] = SUM[23];
  assign SUM[24] = SUM[23];

  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D1 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  XOR3D4 U1 ( .A1(B[22]), .A2(A[21]), .A3(n3), .Z(SUM[23]) );
  AN2XD1 U2 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U3 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  AO222D1 U4 ( .A1(n2), .A2(A[21]), .B1(n2), .B2(B[22]), .C1(A[21]), .C2(B[22]), .Z(n3) );
  AO222D1 U5 ( .A1(carry[21]), .A2(A[21]), .B1(B[21]), .B2(carry[21]), .C1(
        B[21]), .C2(A[21]), .Z(n2) );
  XOR3D0 U6 ( .A1(carry[21]), .A2(B[21]), .A3(A[21]), .Z(SUM[21]) );
  XOR3D0 U7 ( .A1(B[22]), .A2(A[21]), .A3(n2), .Z(SUM[22]) );
endmodule


module shift_add_7_DW01_add_2_DW01_add_112 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_7_DW01_add_1_DW01_add_111 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_7_DW01_add_0_DW01_add_110 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_7 ( input_bitwidth, weight_bitwidth, .products({
        \products[15][5] , \products[15][4] , \products[15][3] , 
        \products[15][2] , \products[15][1] , \products[15][0] , 
        \products[14][5] , \products[14][4] , \products[14][3] , 
        \products[14][2] , \products[14][1] , \products[14][0] , 
        \products[13][5] , \products[13][4] , \products[13][3] , 
        \products[13][2] , \products[13][1] , \products[13][0] , 
        \products[12][5] , \products[12][4] , \products[12][3] , 
        \products[12][2] , \products[12][1] , \products[12][0] , 
        \products[11][5] , \products[11][4] , \products[11][3] , 
        \products[11][2] , \products[11][1] , \products[11][0] , 
        \products[10][5] , \products[10][4] , \products[10][3] , 
        \products[10][2] , \products[10][1] , \products[10][0] , 
        \products[9][5] , \products[9][4] , \products[9][3] , \products[9][2] , 
        \products[9][1] , \products[9][0] , \products[8][5] , \products[8][4] , 
        \products[8][3] , \products[8][2] , \products[8][1] , \products[8][0] , 
        \products[7][5] , \products[7][4] , \products[7][3] , \products[7][2] , 
        \products[7][1] , \products[7][0] , \products[6][5] , \products[6][4] , 
        \products[6][3] , \products[6][2] , \products[6][1] , \products[6][0] , 
        \products[5][5] , \products[5][4] , \products[5][3] , \products[5][2] , 
        \products[5][1] , \products[5][0] , \products[4][5] , \products[4][4] , 
        \products[4][3] , \products[4][2] , \products[4][1] , \products[4][0] , 
        \products[3][5] , \products[3][4] , \products[3][3] , \products[3][2] , 
        \products[3][1] , \products[3][0] , \products[2][5] , \products[2][4] , 
        \products[2][3] , \products[2][2] , \products[2][1] , \products[2][0] , 
        \products[1][5] , \products[1][4] , \products[1][3] , \products[1][2] , 
        \products[1][1] , \products[1][0] , \products[0][5] , \products[0][4] , 
        \products[0][3] , \products[0][2] , \products[0][1] , \products[0][0] 
        }), shift_add_out );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  output [31:0] shift_add_out;
  input \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] ;
  wire   \shifted_products[15][16] , \shifted_products[15][15] ,
         \shifted_products[15][14] , \shifted_products[15][13] ,
         \shifted_products[15][12] , \shifted_products[15][11] ,
         \shifted_products[15][10] , \shifted_products[15][9] ,
         \shifted_products[15][8] , \shifted_products[15][7] ,
         \shifted_products[15][6] , \shifted_products[15][5] ,
         \shifted_products[15][4] , \shifted_products[15][3] ,
         \shifted_products[15][2] , \shifted_products[15][1] ,
         \shifted_products[15][0] , \shifted_products[14][14] ,
         \shifted_products[14][13] , \shifted_products[14][12] ,
         \shifted_products[14][11] , \shifted_products[14][10] ,
         \shifted_products[14][9] , \shifted_products[14][8] ,
         \shifted_products[14][7] , \shifted_products[14][6] ,
         \shifted_products[14][5] , \shifted_products[14][4] ,
         \shifted_products[14][3] , \shifted_products[14][2] ,
         \shifted_products[14][1] , \shifted_products[14][0] ,
         \shifted_products[13][12] , \shifted_products[13][11] ,
         \shifted_products[13][10] , \shifted_products[13][9] ,
         \shifted_products[13][8] , \shifted_products[13][7] ,
         \shifted_products[13][6] , \shifted_products[13][5] ,
         \shifted_products[13][4] , \shifted_products[13][3] ,
         \shifted_products[13][2] , \shifted_products[13][1] ,
         \shifted_products[13][0] , \shifted_products[12][10] ,
         \shifted_products[12][9] , \shifted_products[12][8] ,
         \shifted_products[12][7] , \shifted_products[12][6] ,
         \shifted_products[12][5] , \shifted_products[12][4] ,
         \shifted_products[12][3] , \shifted_products[12][2] ,
         \shifted_products[12][1] , \shifted_products[12][0] ,
         \shifted_products[11][13] , \shifted_products[11][12] ,
         \shifted_products[11][11] , \shifted_products[11][10] ,
         \shifted_products[11][9] , \shifted_products[11][8] ,
         \shifted_products[11][7] , \shifted_products[11][6] ,
         \shifted_products[11][5] , \shifted_products[11][4] ,
         \shifted_products[11][3] , \shifted_products[11][2] ,
         \shifted_products[11][1] , \shifted_products[11][0] ,
         \shifted_products[10][12] , \shifted_products[10][11] ,
         \shifted_products[10][10] , \shifted_products[10][9] ,
         \shifted_products[10][8] , \shifted_products[10][7] ,
         \shifted_products[10][6] , \shifted_products[10][5] ,
         \shifted_products[10][4] , \shifted_products[10][3] ,
         \shifted_products[10][2] , \shifted_products[10][1] ,
         \shifted_products[10][0] , \shifted_products[9][10] ,
         \shifted_products[9][9] , \shifted_products[9][8] ,
         \shifted_products[9][7] , \shifted_products[9][6] ,
         \shifted_products[9][5] , \shifted_products[9][4] ,
         \shifted_products[9][3] , \shifted_products[9][2] ,
         \shifted_products[9][1] , \shifted_products[9][0] ,
         \shifted_products[8][8] , \shifted_products[8][7] ,
         \shifted_products[8][6] , \shifted_products[8][5] ,
         \shifted_products[8][4] , \shifted_products[8][3] ,
         \shifted_products[8][2] , \shifted_products[8][1] ,
         \shifted_products[8][0] , \shifted_products[7][11] ,
         \shifted_products[7][10] , \shifted_products[7][9] ,
         \shifted_products[7][8] , \shifted_products[7][7] ,
         \shifted_products[7][6] , \shifted_products[7][5] ,
         \shifted_products[7][4] , \shifted_products[7][3] ,
         \shifted_products[7][2] , \shifted_products[7][1] ,
         \shifted_products[7][0] , \shifted_products[6][10] ,
         \shifted_products[6][9] , \shifted_products[6][8] ,
         \shifted_products[6][7] , \shifted_products[6][6] ,
         \shifted_products[6][5] , \shifted_products[6][4] ,
         \shifted_products[6][3] , \shifted_products[6][2] ,
         \shifted_products[6][1] , \shifted_products[6][0] ,
         \shifted_products[5][8] , \shifted_products[5][7] ,
         \shifted_products[5][6] , \shifted_products[5][5] ,
         \shifted_products[5][4] , \shifted_products[5][3] ,
         \shifted_products[5][2] , \shifted_products[5][1] ,
         \shifted_products[5][0] , \shifted_products[4][6] ,
         \shifted_products[4][5] , \shifted_products[4][4] ,
         \shifted_products[4][3] , \shifted_products[4][2] ,
         \shifted_products[4][1] , \shifted_products[4][0] ,
         \shifted_products[3][9] , \shifted_products[3][8] ,
         \shifted_products[3][7] , \shifted_products[3][6] ,
         \shifted_products[3][5] , \shifted_products[3][4] ,
         \shifted_products[3][3] , \shifted_products[3][2] ,
         \shifted_products[3][1] , \shifted_products[3][0] ,
         \shifted_products[2][8] , \shifted_products[2][7] ,
         \shifted_products[2][6] , \shifted_products[2][5] ,
         \shifted_products[2][4] , \shifted_products[2][3] ,
         \shifted_products[2][2] , \shifted_products[2][1] ,
         \shifted_products[2][0] , \shifted_products[1][6] ,
         \shifted_products[1][5] , \shifted_products[1][4] ,
         \shifted_products[1][3] , \shifted_products[1][2] ,
         \shifted_products[1][1] , \shifted_products[1][0] ,
         \shifted_products[0][9] , N99, N87, N86, N85, N84, N83, N82, N81, N80,
         N79, N78, N77, N76, N61, N60, N59, N58, N57, N56, N55, N54, N446,
         N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435,
         N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424,
         N423, N422, N421, N420, N419, N418, N417, N416, N415, N414, N413,
         N412, N411, N410, N409, N408, N407, N406, N405, N404, N403, N402,
         N401, N400, N399, N398, N397, N396, N395, N394, N393, N392, N391,
         N390, N389, N388, N387, N386, N385, N384, N383, N382, N381, N380,
         N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369,
         N368, N367, N366, N365, N364, N363, N362, N361, N360, N359, N358,
         N357, N356, N355, N354, N353, N352, N351, N350, N349, N348, N347,
         N346, N345, N344, N343, N342, N341, N340, N339, N338, N337, N336,
         N335, N334, N333, N332, N331, N330, N329, N328, N327, N326, N325,
         N324, N323, N322, N321, N320, N319, N318, N317, N316, N315, N314,
         N313, N312, N311, N310, N309, N308, N307, N306, N305, N304, N303,
         N302, N301, N300, N299, N298, N297, N296, N295, N294, N293, N292,
         N291, N290, N289, N288, N287, N286, N285, N284, N283, N282, N281,
         N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270,
         N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259,
         N258, N257, N256, N255, N254, N253, N252, N251, N250, N249, N248,
         N247, N246, N245, N244, N243, N242, N241, N240, N239, N238, N237,
         N236, N235, N234, N233, N232, N231, N230, N229, N214, N213, N212,
         N211, N210, N209, N208, N207, N206, N205, N204, N203, N202, N201,
         N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, N179,
         N178, N177, N176, N175, N174, N159, N158, N157, N156, N155, N154,
         N153, N152, N151, N150, N149, N148, N136, N135, N134, N133, N132,
         N131, N130, N129, N128, N127, N126, N125, N124, N123, N108, N107,
         N106, N105, N104, N103, N102, N101, N100,
         \add_14_root_add_199_I16/carry[6] ,
         \add_14_root_add_199_I16/carry[5] ,
         \add_14_root_add_199_I16/carry[4] ,
         \add_14_root_add_199_I16/carry[3] ,
         \add_14_root_add_199_I16/carry[2] ,
         \add_14_root_add_199_I16/carry[1] ,
         \add_13_root_add_199_I16/carry[9] ,
         \add_13_root_add_199_I16/carry[8] ,
         \add_13_root_add_199_I16/carry[7] ,
         \add_13_root_add_199_I16/carry[6] ,
         \add_13_root_add_199_I16/carry[5] ,
         \add_13_root_add_199_I16/carry[4] ,
         \add_13_root_add_199_I16/carry[3] ,
         \add_13_root_add_199_I16/carry[2] ,
         \add_13_root_add_199_I16/carry[1] ,
         \add_12_root_add_199_I16/carry[7] ,
         \add_12_root_add_199_I16/carry[6] ,
         \add_12_root_add_199_I16/carry[5] ,
         \add_12_root_add_199_I16/carry[4] ,
         \add_12_root_add_199_I16/carry[3] ,
         \add_12_root_add_199_I16/carry[2] ,
         \add_12_root_add_199_I16/carry[1] ,
         \add_11_root_add_199_I16/carry[11] ,
         \add_11_root_add_199_I16/carry[10] ,
         \add_11_root_add_199_I16/carry[9] ,
         \add_11_root_add_199_I16/carry[8] ,
         \add_11_root_add_199_I16/carry[7] ,
         \add_11_root_add_199_I16/carry[6] ,
         \add_11_root_add_199_I16/carry[5] ,
         \add_11_root_add_199_I16/carry[4] ,
         \add_11_root_add_199_I16/carry[3] ,
         \add_11_root_add_199_I16/carry[2] ,
         \add_11_root_add_199_I16/carry[1] ,
         \add_10_root_add_199_I16/carry[9] ,
         \add_10_root_add_199_I16/carry[8] ,
         \add_10_root_add_199_I16/carry[7] ,
         \add_10_root_add_199_I16/carry[6] ,
         \add_10_root_add_199_I16/carry[5] ,
         \add_10_root_add_199_I16/carry[4] ,
         \add_10_root_add_199_I16/carry[3] ,
         \add_10_root_add_199_I16/carry[2] ,
         \add_10_root_add_199_I16/carry[1] ,
         \add_9_root_add_199_I16/carry[13] ,
         \add_9_root_add_199_I16/carry[12] ,
         \add_9_root_add_199_I16/carry[11] ,
         \add_9_root_add_199_I16/carry[10] , \add_9_root_add_199_I16/carry[9] ,
         \add_9_root_add_199_I16/carry[8] , \add_9_root_add_199_I16/carry[7] ,
         \add_9_root_add_199_I16/carry[6] , \add_9_root_add_199_I16/carry[5] ,
         \add_9_root_add_199_I16/carry[4] , \add_9_root_add_199_I16/carry[3] ,
         \add_9_root_add_199_I16/carry[2] , \add_9_root_add_199_I16/carry[1] ,
         \add_8_root_add_199_I16/carry[11] ,
         \add_8_root_add_199_I16/carry[10] , \add_8_root_add_199_I16/carry[9] ,
         \add_8_root_add_199_I16/carry[8] , \add_8_root_add_199_I16/carry[7] ,
         \add_8_root_add_199_I16/carry[6] , \add_8_root_add_199_I16/carry[5] ,
         \add_8_root_add_199_I16/carry[4] , \add_8_root_add_199_I16/carry[3] ,
         \add_8_root_add_199_I16/carry[2] , \add_8_root_add_199_I16/carry[1] ,
         n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72,
         n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86,
         n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100,
         n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, n111,
         n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122,
         n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133,
         n134, n135, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246,
         n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257,
         n258, n259, n260, n261, n262, n263, n264, n265, n266, n267, n268,
         n269, n270, n271, n272, n273, n274, n275, n276, n277, n278, n279,
         n280, n281, n282, n283, n284, n285, n286, n287, n288, n289, n290,
         n291, n292, n293, n294, n295, n296, n297, n298, n299, n300, n301,
         n302, n303, n304, n305, n306, n307, n308, n309, n310, n311, n312,
         n313, n314, n315, n316, n317, n318, n319, n320, n321, n322, n323,
         n324, n325, n326;

  MAOI22D1 U26 ( .A1(\products[7][0] ), .A2(n314), .B1(n111), .B2(n317), .ZN(
        n315) );
  AN2XD1 U74 ( .A1(n320), .A2(n289), .Z(n290) );
  MAOI22D1 U112 ( .A1(\products[15][2] ), .A2(n277), .B1(n63), .B2(n306), .ZN(
        n278) );
  OA21D1 U130 ( .A1(n244), .A2(n62), .B(n280), .Z(n271) );
  AN2XD1 U134 ( .A1(n307), .A2(n297), .Z(n281) );
  AN2XD1 U191 ( .A1(n317), .A2(n312), .Z(n294) );
  AN2XD1 U239 ( .A1(n297), .A2(n317), .Z(n283) );
  shift_add_7_DW01_add_14_DW01_add_124 add_7_root_add_199_I16 ( .A({
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \shifted_products[14][14] , 
        \shifted_products[14][13] , \shifted_products[14][12] , 
        \shifted_products[14][11] , \shifted_products[14][10] , 
        \shifted_products[14][9] , \shifted_products[14][8] , 
        \shifted_products[14][7] , \shifted_products[14][6] , 
        \shifted_products[14][5] , \shifted_products[14][4] , 
        \shifted_products[14][3] , \shifted_products[14][2] , 
        \shifted_products[14][1] , \shifted_products[14][0] }), .B({
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \shifted_products[15][16] , \shifted_products[15][15] , 
        \shifted_products[15][14] , \shifted_products[15][13] , 
        \shifted_products[15][12] , \shifted_products[15][11] , 
        \shifted_products[15][10] , \shifted_products[15][9] , 
        \shifted_products[15][8] , \shifted_products[15][7] , 
        \shifted_products[15][6] , \shifted_products[15][5] , 
        \shifted_products[15][4] , \shifted_products[15][3] , 
        \shifted_products[15][2] , \shifted_products[15][1] , 
        \shifted_products[15][0] }), .CI(n246), .SUM({N257, N256, N255, N254, 
        N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, N243, N242, 
        N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, N231, N230, 
        N229}) );
  shift_add_7_DW01_add_6_DW01_add_116 add_4_root_add_0_root_add_199_I16 ( .A({
        n24, n24, n24, n24, n24, n24, n24, n24, n24, n24, n24, n24, n24, n24, 
        n24, n24, n24, n24, N214, N213, N212, N211, N210, N209, N208, N207, 
        N206, N205, N204, N203, N202, N201}), .B({N257, N257, N257, N257, N256, 
        N255, N254, N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, 
        N243, N242, N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, 
        N231, N230, N229}), .CI(n246), .SUM({N382, N381, N380, N379, N378, 
        N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, N367, N366, 
        N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, N355, N354, 
        N353, N352, N351}) );
  shift_add_7_DW01_add_5_DW01_add_115 add_3_root_add_0_root_add_199_I16 ( .A({
        n25, n25, n25, n25, n25, n25, n25, n25, n25, n25, n25, n25, n25, n25, 
        n25, n25, N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, 
        N179, N178, N177, N176, N175, N174}), .B({n22, n22, n22, n22, n22, n22, 
        n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, 
        N159, N158, N157, N156, N155, N154, N153, N152, N151, N150, N149, N148}), .CI(n246), .SUM({N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, 
        N340, N339, N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, 
        N328, N327, N326, N325, N324, N323, N322, N321, N320, N319}) );
  shift_add_7_DW01_add_4_DW01_add_114 add_5_root_add_199_I16 ( .A({n23, n23, 
        n23, n23, n23, n23, n23, n23, n23, n23, n23, n23, n23, n23, n23, n23, 
        n23, n23, n23, n23, n23, N108, N107, N106, N105, N104, N103, N102, 
        N101, N100, N99}), .B({n28, n28, n28, n28, n28, n28, n28, n28, n28, 
        n28, n28, n28, n28, n28, n28, n28, n28, N136, N135, N134, N133, N132, 
        N131, N130, N129, N128, N127, N126, N125, N124, N123}), .CI(n246), 
        .SUM({N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}) );
  shift_add_7_DW01_add_3_DW01_add_113 add_6_root_add_199_I16 ( .A({n20, n20, 
        n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, 
        n20, n20, n20, n20, n20, n20, N61, N60, N59, N58, N57, N56, N55, N54}), 
        .B({n26, n26, n26, n26, n26, n26, n26, n26, n26, n26, n26, n26, n26, 
        n26, n26, n26, n26, n26, N87, N86, N85, N84, N83, N82, N81, N80, N79, 
        N78, N77, N76}), .CI(n246), .SUM({N287, N286, N285, N284, N283, N282, 
        N281, N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270, 
        N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259, N258}) );
  shift_add_7_DW01_add_2_DW01_add_112 add_2_root_add_0_root_add_199_I16 ( .A({
        N318, N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}), .B({N382, N381, N380, 
        N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, 
        N367, N366, N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, 
        N355, N354, N353, N352, N351}), .CI(n246), .SUM({N446, N445, N444, 
        N443, N442, N441, N440, N439, N438, N437, N436, N435, N434, N433, N432, 
        N431, N430, N429, N428, N427, N426, N425, N424, N423, N422, N421, N420, 
        N419, N418, N417, N416, N415}) );
  shift_add_7_DW01_add_1_DW01_add_111 add_1_root_add_0_root_add_199_I16 ( .A({
        N446, N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435, 
        N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424, N423, 
        N422, N421, N420, N419, N418, N417, N416, N415}), .B({N287, N287, N287, 
        N286, N285, N284, N283, N282, N281, N280, N279, N278, N277, N276, N275, 
        N274, N273, N272, N271, N270, N269, N268, N267, N266, N265, N264, N263, 
        N262, N261, N260, N259, N258}), .CI(n246), .SUM({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}) );
  shift_add_7_DW01_add_0_DW01_add_110 add_0_root_add_0_root_add_199_I16 ( .A({
        N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, N340, N339, 
        N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, N328, N327, 
        N326, N325, N324, N323, N322, N321, N320, N319}), .B({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}), .CI(n246), .SUM(shift_add_out) );
  NR2D2 U2 ( .A1(n321), .A2(n322), .ZN(n282) );
  FA1D1 U3 ( .A(\products[0][1] ), .B(\shifted_products[1][1] ), .CI(
        \add_14_root_add_199_I16/carry[1] ), .CO(
        \add_14_root_add_199_I16/carry[2] ), .S(N55) );
  NR2D1 U4 ( .A1(n313), .A2(n227), .ZN(\shifted_products[1][1] ) );
  AOI222D1 U5 ( .A1(n48), .A2(\products[8][5] ), .B1(n48), .B2(
        \products[9][5] ), .C1(\products[8][5] ), .C2(\products[9][5] ), .ZN(
        n49) );
  AOI222D2 U6 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(\products[4][5] ), 
        .B1(\add_12_root_add_199_I16/carry[7] ), .B2(\shifted_products[5][7] ), 
        .C1(\shifted_products[5][7] ), .C2(\products[4][5] ), .ZN(n53) );
  AOI222D2 U7 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(\products[12][5] ), .B1(\add_8_root_add_199_I16/carry[11] ), .B2(\shifted_products[13][11] ), 
        .C1(\shifted_products[13][11] ), .C2(\products[12][5] ), .ZN(n39) );
  FA1D1 U8 ( .A(\shifted_products[12][10] ), .B(\shifted_products[13][10] ), 
        .CI(\add_8_root_add_199_I16/carry[10] ), .CO(
        \add_8_root_add_199_I16/carry[11] ), .S(N211) );
  XNR3D4 U9 ( .A1(\products[7][5] ), .A2(n114), .A3(n29), .ZN(n28) );
  INR2D1 U10 ( .A1(n274), .B1(n243), .ZN(n305) );
  AN2XD1 U11 ( .A1(n312), .A2(n38), .Z(n3) );
  AN2XD1 U12 ( .A1(n294), .A2(n38), .Z(n291) );
  AOI222D0 U13 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \products[6][5] ), .B1(\add_11_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[7][11] ), .C1(\shifted_products[7][11] ), .C2(
        \products[6][5] ), .ZN(n51) );
  AN2XD1 U14 ( .A1(n306), .A2(n312), .Z(n2) );
  CKXOR2D1 U15 ( .A1(n223), .A2(n60), .Z(n1) );
  FA1D1 U16 ( .A(\shifted_products[4][6] ), .B(\shifted_products[5][6] ), .CI(
        \add_12_root_add_199_I16/carry[6] ), .CO(
        \add_12_root_add_199_I16/carry[7] ), .S(N105) );
  CKAN2D0 U17 ( .A1(n300), .A2(n283), .Z(n254) );
  CKND2D1 U18 ( .A1(n300), .A2(n231), .ZN(n299) );
  INR2XD0 U19 ( .A1(n307), .B1(n243), .ZN(n300) );
  CKND2D1 U20 ( .A1(n252), .A2(n251), .ZN(n312) );
  CKAN2D1 U21 ( .A1(n312), .A2(n38), .Z(n303) );
  OR2XD1 U22 ( .A1(n51), .A2(n114), .Z(n4) );
  OR2XD1 U23 ( .A1(n51), .A2(n32), .Z(n5) );
  OR2D1 U24 ( .A1(n114), .A2(n32), .Z(n6) );
  ND3D2 U25 ( .A1(n4), .A2(n5), .A3(n6), .ZN(n52) );
  AN2D1 U27 ( .A1(n40), .A2(\products[12][5] ), .Z(n7) );
  AN2D2 U28 ( .A1(n40), .A2(\products[13][5] ), .Z(n8) );
  AN2D1 U29 ( .A1(\products[12][5] ), .A2(\products[13][5] ), .Z(n9) );
  NR3D2 U30 ( .A1(n7), .A2(n8), .A3(n9), .ZN(n41) );
  OAI222D1 U31 ( .A1(n39), .A2(n80), .B1(n39), .B2(n42), .C1(n80), .C2(n42), 
        .ZN(n40) );
  INR2XD0 U32 ( .A1(n324), .B1(n243), .ZN(n313) );
  AN2XD1 U33 ( .A1(n54), .A2(\products[5][5] ), .Z(n11) );
  OAI222D1 U34 ( .A1(n53), .A2(n126), .B1(n53), .B2(n56), .C1(n126), .C2(n56), 
        .ZN(n54) );
  NR3D1 U35 ( .A1(n10), .A2(n11), .A3(n12), .ZN(n55) );
  AOI222D1 U36 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[0][9] ), .B1(\add_14_root_add_199_I16/carry[6] ), 
        .B2(\shifted_products[1][6] ), .C1(\shifted_products[1][6] ), .C2(
        \shifted_products[0][9] ), .ZN(n61) );
  CKND2D4 U37 ( .A1(n18), .A2(n19), .ZN(n20) );
  ND3D2 U38 ( .A1(n13), .A2(n14), .A3(n15), .ZN(n59) );
  ND2D2 U39 ( .A1(n305), .A2(n282), .ZN(n311) );
  NR2D1 U40 ( .A1(n37), .A2(n79), .ZN(\shifted_products[13][0] ) );
  CKND2D1 U41 ( .A1(n252), .A2(n250), .ZN(n306) );
  ND2D1 U42 ( .A1(n248), .A2(n247), .ZN(n325) );
  AN2D1 U43 ( .A1(n54), .A2(\products[4][5] ), .Z(n10) );
  AN2XD1 U44 ( .A1(\products[4][5] ), .A2(\products[5][5] ), .Z(n12) );
  CKND2D0 U45 ( .A1(n1), .A2(n21), .ZN(n18) );
  OR2XD1 U46 ( .A1(n58), .A2(n57), .Z(n13) );
  OR2XD1 U47 ( .A1(n58), .A2(n31), .Z(n14) );
  OR2D1 U48 ( .A1(n57), .A2(n31), .Z(n15) );
  AOI222D2 U49 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(\products[2][5] ), .B1(\add_13_root_add_199_I16/carry[9] ), .B2(\shifted_products[3][9] ), .C1(
        \shifted_products[3][9] ), .C2(\products[2][5] ), .ZN(n58) );
  OAI22D0 U50 ( .A1(n313), .A2(n223), .B1(n282), .B2(n225), .ZN(
        \shifted_products[1][5] ) );
  ND2D3 U51 ( .A1(n16), .A2(n17), .ZN(n19) );
  INVD1 U52 ( .I(n1), .ZN(n16) );
  INVD1 U53 ( .I(n21), .ZN(n17) );
  AN2D4 U54 ( .A1(n274), .A2(n38), .Z(n324) );
  INR2D1 U55 ( .A1(n317), .B1(n270), .ZN(n269) );
  CKND2D0 U56 ( .A1(n250), .A2(n249), .ZN(n297) );
  CKND2D0 U57 ( .A1(n252), .A2(n248), .ZN(n307) );
  CKND2D0 U58 ( .A1(n249), .A2(n248), .ZN(n298) );
  CKND2D0 U59 ( .A1(n250), .A2(n247), .ZN(n274) );
  OA222D0 U60 ( .A1(n61), .A2(n60), .B1(n61), .B2(n223), .C1(n60), .C2(n223), 
        .Z(n21) );
  AOI222D0 U61 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \products[10][5] ), .B1(\add_9_root_add_199_I16/carry[13] ), .B2(
        \shifted_products[11][13] ), .C1(\shifted_products[11][13] ), .C2(
        \products[10][5] ), .ZN(n44) );
  CKAN2D0 U62 ( .A1(n300), .A2(n35), .Z(n320) );
  OAI22D0 U63 ( .A1(n3), .A2(n116), .B1(n234), .B2(n118), .ZN(
        \shifted_products[6][3] ) );
  INR2D1 U64 ( .A1(n317), .B1(n299), .ZN(n304) );
  CKND2 U65 ( .I(n270), .ZN(n231) );
  XOR3D4 U66 ( .A1(\products[9][5] ), .A2(n49), .A3(n47), .Z(n22) );
  AOI222D1 U67 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(\products[8][5] ), .B1(\add_10_root_add_199_I16/carry[9] ), .B2(\shifted_products[9][9] ), .C1(
        \shifted_products[9][9] ), .C2(\products[8][5] ), .ZN(n46) );
  XOR3D2 U68 ( .A1(\products[5][5] ), .A2(n55), .A3(n126), .Z(n23) );
  XOR3D2 U69 ( .A1(\products[13][5] ), .A2(n41), .A3(n80), .Z(n24) );
  XOR3D1 U70 ( .A1(\products[11][5] ), .A2(n43), .A3(n30), .Z(n25) );
  OAI22D0 U71 ( .A1(n313), .A2(n223), .B1(n282), .B2(n224), .ZN(
        \shifted_products[1][6] ) );
  NR2D0 U72 ( .A1(n318), .A2(n243), .ZN(n326) );
  CKAN2D0 U73 ( .A1(n283), .A2(n35), .Z(n288) );
  OAI21D0 U75 ( .A1(n64), .A2(n35), .B(n273), .ZN(\shifted_products[15][15] )
         );
  NR2D0 U76 ( .A1(n37), .A2(n67), .ZN(\shifted_products[15][0] ) );
  CKND2D0 U77 ( .A1(n300), .A2(n230), .ZN(n272) );
  CKND2D0 U78 ( .A1(n231), .A2(n283), .ZN(n318) );
  CKND1 U79 ( .I(\products[13][5] ), .ZN(n74) );
  NR2D0 U80 ( .A1(n113), .A2(n37), .ZN(\shifted_products[7][0] ) );
  CKND2D0 U81 ( .A1(\products[12][5] ), .A2(n318), .ZN(n260) );
  CKND2D0 U82 ( .A1(\products[8][5] ), .A2(n318), .ZN(n319) );
  CKND1 U83 ( .I(\products[7][5] ), .ZN(n108) );
  CKND2D0 U84 ( .A1(\products[3][5] ), .A2(n299), .ZN(n287) );
  NR2D0 U85 ( .A1(n270), .A2(n243), .ZN(n259) );
  CKND2D0 U86 ( .A1(\products[2][5] ), .A2(n299), .ZN(n284) );
  CKND2D0 U87 ( .A1(\products[10][5] ), .A2(n270), .ZN(n253) );
  CKND1 U88 ( .I(\products[6][5] ), .ZN(n114) );
  CKND1 U89 ( .I(\products[14][5] ), .ZN(n68) );
  ND2D2 U90 ( .A1(n283), .A2(n2), .ZN(n322) );
  CKND2D0 U91 ( .A1(\products[15][5] ), .A2(n270), .ZN(n280) );
  CKND2D1 U92 ( .A1(n235), .A2(n300), .ZN(n301) );
  CKAN2D0 U93 ( .A1(n294), .A2(n305), .Z(n293) );
  CKND1 U94 ( .I(\products[5][5] ), .ZN(n120) );
  CKAN2D0 U95 ( .A1(n294), .A2(n313), .Z(n295) );
  OAI22D0 U96 ( .A1(n291), .A2(n126), .B1(n290), .B2(n128), .ZN(
        \shifted_products[4][5] ) );
  OAI22D0 U97 ( .A1(n291), .A2(n80), .B1(n289), .B2(n82), .ZN(
        \shifted_products[12][5] ) );
  OAI22D0 U98 ( .A1(n37), .A2(n122), .B1(n293), .B2(n124), .ZN(
        \shifted_products[5][3] ) );
  OAI22D0 U99 ( .A1(n291), .A2(n128), .B1(n290), .B2(n130), .ZN(
        \shifted_products[4][3] ) );
  OAI22D0 U100 ( .A1(n37), .A2(n64), .B1(n236), .B2(n66), .ZN(
        \shifted_products[15][3] ) );
  OAI22D0 U101 ( .A1(n3), .A2(n70), .B1(n235), .B2(n72), .ZN(
        \shifted_products[14][3] ) );
  OAI22D0 U102 ( .A1(n324), .A2(n88), .B1(n2), .B2(n90), .ZN(
        \shifted_products[11][3] ) );
  NR2D0 U103 ( .A1(n231), .A2(n93), .ZN(\shifted_products[10][3] ) );
  OAI22D0 U104 ( .A1(n313), .A2(n132), .B1(n286), .B2(n134), .ZN(
        \shifted_products[3][5] ) );
  OAI21D0 U105 ( .A1(n288), .A2(n221), .B(n284), .ZN(\shifted_products[2][5] )
         );
  OAI22D0 U106 ( .A1(n313), .A2(n134), .B1(n286), .B2(n216), .ZN(
        \shifted_products[3][3] ) );
  NR2D0 U107 ( .A1(n229), .A2(n219), .ZN(\shifted_products[2][3] ) );
  NR2D0 U108 ( .A1(n230), .A2(n104), .ZN(\shifted_products[8][3] ) );
  OAI22D0 U109 ( .A1(n36), .A2(n76), .B1(n233), .B2(n78), .ZN(
        \shifted_products[13][3] ) );
  OAI22D0 U110 ( .A1(n291), .A2(n82), .B1(n289), .B2(n84), .ZN(
        \shifted_products[12][3] ) );
  OAI22D0 U111 ( .A1(n110), .A2(n36), .B1(n232), .B2(n112), .ZN(
        \shifted_products[7][3] ) );
  OAI21D0 U113 ( .A1(n66), .A2(n35), .B(n273), .ZN(\shifted_products[15][13] )
         );
  NR2D0 U114 ( .A1(n313), .A2(n216), .ZN(\shifted_products[3][1] ) );
  NR2D0 U115 ( .A1(n37), .A2(n124), .ZN(\shifted_products[5][1] ) );
  NR2D0 U116 ( .A1(n291), .A2(n84), .ZN(\shifted_products[12][1] ) );
  NR2D0 U117 ( .A1(n37), .A2(n78), .ZN(\shifted_products[13][1] ) );
  NR2D0 U118 ( .A1(n112), .A2(n37), .ZN(\shifted_products[7][1] ) );
  NR2D0 U119 ( .A1(n231), .A2(n95), .ZN(\shifted_products[10][1] ) );
  NR2D0 U120 ( .A1(n37), .A2(n66), .ZN(\shifted_products[15][1] ) );
  OA21D0 U121 ( .A1(n288), .A2(n133), .B(n287), .Z(n31) );
  CKND1 U122 ( .I(\products[4][5] ), .ZN(n126) );
  CKAN2D0 U123 ( .A1(\products[0][5] ), .A2(n37), .Z(\shifted_products[0][9] )
         );
  XNR3D4 U124 ( .A1(\products[3][5] ), .A2(n57), .A3(n27), .ZN(n26) );
  AO222D1 U125 ( .A1(n59), .A2(\products[2][5] ), .B1(n59), .B2(
        \products[3][5] ), .C1(\products[2][5] ), .C2(\products[3][5] ), .Z(
        n27) );
  AO222D1 U126 ( .A1(n52), .A2(\products[6][5] ), .B1(n52), .B2(
        \products[7][5] ), .C1(\products[6][5] ), .C2(\products[7][5] ), .Z(
        n29) );
  CKAN2D0 U127 ( .A1(n294), .A2(n324), .Z(n264) );
  OAI21D0 U128 ( .A1(n63), .A2(n35), .B(n273), .ZN(\shifted_products[15][16] )
         );
  INR2XD0 U129 ( .A1(n274), .B1(n292), .ZN(n289) );
  INR2D0 U131 ( .A1(n307), .B1(n285), .ZN(n286) );
  NR2D0 U132 ( .A1(n313), .A2(n217), .ZN(\shifted_products[3][0] ) );
  ND2D2 U133 ( .A1(n35), .A2(n307), .ZN(n321) );
  CKND2D0 U135 ( .A1(n35), .A2(n297), .ZN(n314) );
  CKND2D0 U136 ( .A1(n300), .A2(n297), .ZN(n267) );
  AOI22D0 U137 ( .A1(\products[14][0] ), .A2(n267), .B1(\products[14][4] ), 
        .B2(n266), .ZN(n268) );
  NR2D0 U138 ( .A1(n291), .A2(n131), .ZN(\shifted_products[4][0] ) );
  NR2D0 U139 ( .A1(n291), .A2(n85), .ZN(\shifted_products[12][0] ) );
  AOI22D0 U140 ( .A1(\products[6][4] ), .A2(n301), .B1(\products[6][0] ), .B2(
        n314), .ZN(n302) );
  NR2D0 U141 ( .A1(n231), .A2(n96), .ZN(\shifted_products[10][0] ) );
  NR2D0 U142 ( .A1(n230), .A2(n107), .ZN(\shifted_products[8][0] ) );
  CKND1 U143 ( .I(\products[15][4] ), .ZN(n63) );
  CKND1 U144 ( .I(\products[14][3] ), .ZN(n70) );
  OAI21D0 U145 ( .A1(n288), .A2(n218), .B(n284), .ZN(\shifted_products[2][8] )
         );
  OAI21D0 U146 ( .A1(n288), .A2(n135), .B(n287), .ZN(\shifted_products[3][8] )
         );
  NR2D0 U147 ( .A1(n229), .A2(n222), .ZN(\shifted_products[2][0] ) );
  CKND1 U148 ( .I(\products[13][3] ), .ZN(n76) );
  CKND1 U149 ( .I(\products[7][3] ), .ZN(n110) );
  CKND2D0 U150 ( .A1(n305), .A2(n312), .ZN(n308) );
  CKND2D0 U151 ( .A1(n294), .A2(n274), .ZN(n261) );
  CKND1 U152 ( .I(\products[6][3] ), .ZN(n116) );
  CKND1 U153 ( .I(\products[14][4] ), .ZN(n69) );
  CKND1 U154 ( .I(\products[7][4] ), .ZN(n109) );
  CKND1 U155 ( .I(\products[12][3] ), .ZN(n82) );
  CKND1 U156 ( .I(\products[13][4] ), .ZN(n75) );
  CKND1 U157 ( .I(\products[5][3] ), .ZN(n122) );
  OAI21D0 U158 ( .A1(n320), .A2(n104), .B(n319), .ZN(\shifted_products[8][7] )
         );
  CKND1 U159 ( .I(\products[6][4] ), .ZN(n115) );
  OAI21D0 U160 ( .A1(n320), .A2(n82), .B(n260), .ZN(\shifted_products[12][9] )
         );
  OAI22D0 U161 ( .A1(n230), .A2(n103), .B1(n320), .B2(n107), .ZN(
        \shifted_products[8][4] ) );
  OAI21D0 U162 ( .A1(n320), .A2(n106), .B(n319), .ZN(\shifted_products[8][5] )
         );
  OAI21D0 U163 ( .A1(n320), .A2(n84), .B(n260), .ZN(\shifted_products[12][7] )
         );
  OAI22D0 U164 ( .A1(n231), .A2(n92), .B1(n254), .B2(n96), .ZN(
        \shifted_products[10][4] ) );
  FA1D1 U165 ( .A(\shifted_products[2][6] ), .B(\shifted_products[3][6] ), 
        .CI(\add_13_root_add_199_I16/carry[6] ), .CO(
        \add_13_root_add_199_I16/carry[7] ), .S(N82) );
  OAI21D0 U166 ( .A1(n288), .A2(n220), .B(n284), .ZN(\shifted_products[2][6] )
         );
  OAI22D0 U167 ( .A1(n291), .A2(n127), .B1(n290), .B2(n129), .ZN(
        \shifted_products[4][4] ) );
  OAI22D0 U168 ( .A1(n291), .A2(n81), .B1(n289), .B2(n83), .ZN(
        \shifted_products[12][4] ) );
  OAI21D0 U169 ( .A1(n320), .A2(n105), .B(n319), .ZN(\shifted_products[8][6] )
         );
  AOI22D0 U170 ( .A1(\products[9][4] ), .A2(n322), .B1(\products[9][0] ), .B2(
        n321), .ZN(n323) );
  AOI22D0 U171 ( .A1(\products[15][4] ), .A2(n275), .B1(\products[15][0] ), 
        .B2(n277), .ZN(n276) );
  AOI22D0 U172 ( .A1(\products[11][0] ), .A2(n257), .B1(\products[11][4] ), 
        .B2(n285), .ZN(n258) );
  OAI22D0 U173 ( .A1(n240), .A2(n70), .B1(n269), .B2(n68), .ZN(
        \shifted_products[14][9] ) );
  OAI22D0 U174 ( .A1(n37), .A2(n123), .B1(n293), .B2(n125), .ZN(
        \shifted_products[5][2] ) );
  OAI22D0 U175 ( .A1(n291), .A2(n129), .B1(n290), .B2(n131), .ZN(
        \shifted_products[4][2] ) );
  OAI22D0 U176 ( .A1(n37), .A2(n77), .B1(n233), .B2(n79), .ZN(
        \shifted_products[13][2] ) );
  OAI22D0 U177 ( .A1(n291), .A2(n83), .B1(n289), .B2(n85), .ZN(
        \shifted_products[12][2] ) );
  OAI22D0 U178 ( .A1(n37), .A2(n65), .B1(n236), .B2(n67), .ZN(
        \shifted_products[15][2] ) );
  OAI22D0 U179 ( .A1(n3), .A2(n71), .B1(n235), .B2(n73), .ZN(
        \shifted_products[14][2] ) );
  OAI22D0 U180 ( .A1(n313), .A2(n224), .B1(n282), .B2(n226), .ZN(
        \shifted_products[1][4] ) );
  OAI22D0 U181 ( .A1(n313), .A2(n225), .B1(n282), .B2(n227), .ZN(
        \shifted_products[1][3] ) );
  OAI22D0 U182 ( .A1(n324), .A2(n89), .B1(n2), .B2(n91), .ZN(
        \shifted_products[11][2] ) );
  NR2D0 U183 ( .A1(n231), .A2(n94), .ZN(\shifted_products[10][2] ) );
  OAI22D0 U184 ( .A1(n313), .A2(n133), .B1(n286), .B2(n135), .ZN(
        \shifted_products[3][4] ) );
  OAI22D0 U185 ( .A1(n229), .A2(n218), .B1(n288), .B2(n222), .ZN(
        \shifted_products[2][4] ) );
  OAI22D0 U186 ( .A1(n313), .A2(n135), .B1(n286), .B2(n217), .ZN(
        \shifted_products[3][2] ) );
  NR2D0 U187 ( .A1(n229), .A2(n220), .ZN(\shifted_products[2][2] ) );
  OAI22D0 U188 ( .A1(n324), .A2(n100), .B1(n237), .B2(n102), .ZN(
        \shifted_products[9][2] ) );
  NR2D0 U189 ( .A1(n230), .A2(n105), .ZN(\shifted_products[8][2] ) );
  OAI22D0 U190 ( .A1(n3), .A2(n117), .B1(n234), .B2(n119), .ZN(
        \shifted_products[6][2] ) );
  CKAN2D0 U192 ( .A1(n313), .A2(n312), .Z(n316) );
  CKND1 U193 ( .I(\products[5][4] ), .ZN(n121) );
  CKND1 U194 ( .I(\products[4][4] ), .ZN(n127) );
  CKND1 U195 ( .I(\products[4][3] ), .ZN(n128) );
  CKAN2D0 U196 ( .A1(n324), .A2(n312), .Z(n279) );
  CKND2D0 U197 ( .A1(n283), .A2(n307), .ZN(n257) );
  CKND2D2 U198 ( .A1(n249), .A2(n251), .ZN(n317) );
  CKND1 U199 ( .I(\products[6][2] ), .ZN(n117) );
  CKND1 U200 ( .I(\products[12][2] ), .ZN(n83) );
  AOI22D0 U201 ( .A1(\products[7][2] ), .A2(n309), .B1(\products[7][4] ), .B2(
        n308), .ZN(n310) );
  AOI22D0 U202 ( .A1(\products[13][4] ), .A2(n261), .B1(\products[13][2] ), 
        .B2(n292), .ZN(n262) );
  OAI21D0 U203 ( .A1(n320), .A2(n83), .B(n260), .ZN(\shifted_products[12][8] )
         );
  AOI22D0 U204 ( .A1(\products[13][4] ), .A2(n292), .B1(\products[13][2] ), 
        .B2(n243), .ZN(n263) );
  OAI22D0 U205 ( .A1(n313), .A2(n226), .B1(n282), .B2(n228), .ZN(
        \shifted_products[1][2] ) );
  CKND1 U206 ( .I(\products[5][2] ), .ZN(n123) );
  CKND1 U207 ( .I(\products[4][2] ), .ZN(n129) );
  INVD1 U208 ( .I(n318), .ZN(n230) );
  INVD1 U209 ( .I(n299), .ZN(n229) );
  INVD1 U210 ( .I(n301), .ZN(n234) );
  CKBD1 U211 ( .I(n311), .Z(n37) );
  CKBD1 U212 ( .I(n311), .Z(n36) );
  CKBD1 U213 ( .I(n311), .Z(n38) );
  INVD1 U214 ( .I(n322), .ZN(n237) );
  NR2D1 U215 ( .A1(n292), .A2(n321), .ZN(n296) );
  OAI22D1 U216 ( .A1(n296), .A2(n122), .B1(n295), .B2(n120), .ZN(
        \shifted_products[5][7] ) );
  ND2D1 U217 ( .A1(n324), .A2(n2), .ZN(n270) );
  INVD1 U218 ( .I(\products[15][5] ), .ZN(n62) );
  INVD1 U219 ( .I(n261), .ZN(n233) );
  NR2D1 U220 ( .A1(n3), .A2(n73), .ZN(\shifted_products[14][0] ) );
  INVD1 U221 ( .I(n308), .ZN(n232) );
  AOI222D0 U222 ( .A1(n45), .A2(\products[10][5] ), .B1(n45), .B2(
        \products[11][5] ), .C1(\products[10][5] ), .C2(\products[11][5] ), 
        .ZN(n30) );
  FA1D0 U223 ( .A(\shifted_products[12][5] ), .B(\shifted_products[13][5] ), 
        .CI(\add_8_root_add_199_I16/carry[5] ), .CO(
        \add_8_root_add_199_I16/carry[6] ), .S(N206) );
  OAI222D0 U224 ( .A1(n239), .A2(n78), .B1(n233), .B2(n76), .C1(n36), .C2(n74), 
        .ZN(\shifted_products[13][5] ) );
  FA1D0 U225 ( .A(\shifted_products[4][5] ), .B(\shifted_products[5][5] ), 
        .CI(\add_12_root_add_199_I16/carry[5] ), .CO(
        \add_12_root_add_199_I16/carry[6] ), .S(N104) );
  OAI222D0 U226 ( .A1(n293), .A2(n122), .B1(n296), .B2(n124), .C1(n36), .C2(
        n120), .ZN(\shifted_products[5][5] ) );
  FA1D0 U227 ( .A(\shifted_products[10][3] ), .B(\shifted_products[11][3] ), 
        .CI(\add_9_root_add_199_I16/carry[3] ), .CO(
        \add_9_root_add_199_I16/carry[4] ), .S(N177) );
  FA1D0 U228 ( .A(\shifted_products[4][3] ), .B(\shifted_products[5][3] ), 
        .CI(\add_12_root_add_199_I16/carry[3] ), .CO(
        \add_12_root_add_199_I16/carry[4] ), .S(N102) );
  FA1D0 U229 ( .A(\shifted_products[2][3] ), .B(\shifted_products[3][3] ), 
        .CI(\add_13_root_add_199_I16/carry[3] ), .CO(
        \add_13_root_add_199_I16/carry[4] ), .S(N79) );
  FA1D0 U230 ( .A(\shifted_products[2][5] ), .B(\shifted_products[3][5] ), 
        .CI(\add_13_root_add_199_I16/carry[5] ), .CO(
        \add_13_root_add_199_I16/carry[6] ), .S(N81) );
  FA1D0 U231 ( .A(\shifted_products[10][9] ), .B(\shifted_products[11][9] ), 
        .CI(\add_9_root_add_199_I16/carry[9] ), .CO(
        \add_9_root_add_199_I16/carry[10] ), .S(N183) );
  OAI22D1 U232 ( .A1(n238), .A2(n88), .B1(n259), .B2(n86), .ZN(
        \shifted_products[11][9] ) );
  OAI21D1 U233 ( .A1(n34), .A2(n95), .B(n255), .ZN(\shifted_products[10][9] )
         );
  FA1D0 U234 ( .A(\shifted_products[6][3] ), .B(\shifted_products[7][3] ), 
        .CI(\add_11_root_add_199_I16/carry[3] ), .CO(
        \add_11_root_add_199_I16/carry[4] ), .S(N126) );
  FA1D0 U235 ( .A(\shifted_products[12][3] ), .B(\shifted_products[13][3] ), 
        .CI(\add_8_root_add_199_I16/carry[3] ), .CO(
        \add_8_root_add_199_I16/carry[4] ), .S(N204) );
  FA1D0 U236 ( .A(\shifted_products[8][3] ), .B(\shifted_products[9][3] ), 
        .CI(\add_10_root_add_199_I16/carry[3] ), .CO(
        \add_10_root_add_199_I16/carry[4] ), .S(N151) );
  OAI22D1 U237 ( .A1(n324), .A2(n99), .B1(n237), .B2(n101), .ZN(
        \shifted_products[9][3] ) );
  OAI21D1 U238 ( .A1(n281), .A2(n64), .B(n271), .ZN(\shifted_products[15][11] ) );
  OAI21D1 U240 ( .A1(n34), .A2(n72), .B(n265), .ZN(\shifted_products[14][11] )
         );
  OAI21D1 U241 ( .A1(n34), .A2(n70), .B(n265), .ZN(\shifted_products[14][13] )
         );
  FA1D0 U242 ( .A(\shifted_products[10][11] ), .B(\shifted_products[11][11] ), 
        .CI(\add_9_root_add_199_I16/carry[11] ), .CO(
        \add_9_root_add_199_I16/carry[12] ), .S(N185) );
  OAI21D1 U243 ( .A1(n34), .A2(n90), .B(n256), .ZN(\shifted_products[11][11] )
         );
  OAI21D1 U244 ( .A1(n34), .A2(n93), .B(n255), .ZN(\shifted_products[10][11] )
         );
  FA1D0 U245 ( .A(\shifted_products[2][1] ), .B(\shifted_products[3][1] ), 
        .CI(\add_13_root_add_199_I16/carry[1] ), .CO(
        \add_13_root_add_199_I16/carry[2] ), .S(N77) );
  NR2D1 U246 ( .A1(n229), .A2(n221), .ZN(\shifted_products[2][1] ) );
  FA1D0 U247 ( .A(\shifted_products[6][1] ), .B(\shifted_products[7][1] ), 
        .CI(\add_11_root_add_199_I16/carry[1] ), .CO(
        \add_11_root_add_199_I16/carry[2] ), .S(N124) );
  NR2D1 U248 ( .A1(n303), .A2(n118), .ZN(\shifted_products[6][1] ) );
  FA1D0 U249 ( .A(\shifted_products[8][1] ), .B(\shifted_products[9][1] ), 
        .CI(\add_10_root_add_199_I16/carry[1] ), .CO(
        \add_10_root_add_199_I16/carry[2] ), .S(N149) );
  NR2D1 U250 ( .A1(n324), .A2(n101), .ZN(\shifted_products[9][1] ) );
  NR2D1 U251 ( .A1(n230), .A2(n106), .ZN(\shifted_products[8][1] ) );
  FA1D0 U252 ( .A(\shifted_products[10][1] ), .B(\shifted_products[11][1] ), 
        .CI(\add_9_root_add_199_I16/carry[1] ), .CO(
        \add_9_root_add_199_I16/carry[2] ), .S(N175) );
  NR2D1 U253 ( .A1(n324), .A2(n90), .ZN(\shifted_products[11][1] ) );
  NR2D1 U254 ( .A1(n303), .A2(n72), .ZN(\shifted_products[14][1] ) );
  FA1D0 U255 ( .A(\shifted_products[4][1] ), .B(\shifted_products[5][1] ), 
        .CI(\add_12_root_add_199_I16/carry[1] ), .CO(
        \add_12_root_add_199_I16/carry[2] ), .S(N100) );
  NR2D1 U256 ( .A1(n291), .A2(n130), .ZN(\shifted_products[4][1] ) );
  FA1D0 U257 ( .A(\shifted_products[12][1] ), .B(\shifted_products[13][1] ), 
        .CI(\add_8_root_add_199_I16/carry[1] ), .CO(
        \add_8_root_add_199_I16/carry[2] ), .S(N202) );
  NR2D1 U258 ( .A1(n324), .A2(n102), .ZN(\shifted_products[9][0] ) );
  FA1D0 U259 ( .A(\products[0][5] ), .B(\shifted_products[1][5] ), .CI(
        \add_14_root_add_199_I16/carry[5] ), .CO(
        \add_14_root_add_199_I16/carry[6] ), .S(N59) );
  NR2D1 U260 ( .A1(n303), .A2(n119), .ZN(\shifted_products[6][0] ) );
  INVD1 U261 ( .I(\products[12][5] ), .ZN(n80) );
  FA1D0 U262 ( .A(\shifted_products[2][7] ), .B(\shifted_products[3][7] ), 
        .CI(\add_13_root_add_199_I16/carry[7] ), .CO(
        \add_13_root_add_199_I16/carry[8] ), .S(N83) );
  OAI21D1 U263 ( .A1(n288), .A2(n216), .B(n287), .ZN(\shifted_products[3][7] )
         );
  OAI21D1 U264 ( .A1(n288), .A2(n219), .B(n284), .ZN(\shifted_products[2][7] )
         );
  INVD1 U265 ( .I(\products[1][5] ), .ZN(n223) );
  INVD1 U266 ( .I(n314), .ZN(n241) );
  OAI21D1 U267 ( .A1(n288), .A2(n134), .B(n287), .ZN(\shifted_products[3][9] )
         );
  OAI22D1 U268 ( .A1(n245), .A2(n76), .B1(n326), .B2(n74), .ZN(
        \shifted_products[13][11] ) );
  OAI22D1 U269 ( .A1(n245), .A2(n99), .B1(n326), .B2(n97), .ZN(
        \shifted_products[9][9] ) );
  OAI22D1 U270 ( .A1(n241), .A2(n110), .B1(n304), .B2(n108), .ZN(
        \shifted_products[7][11] ) );
  INVD1 U271 ( .I(\products[9][5] ), .ZN(n97) );
  INVD1 U272 ( .I(\products[11][5] ), .ZN(n86) );
  OAI21D1 U273 ( .A1(n34), .A2(n88), .B(n256), .ZN(\shifted_products[11][13] )
         );
  OAI22D1 U274 ( .A1(n245), .A2(n75), .B1(n326), .B2(n74), .ZN(
        \shifted_products[13][12] ) );
  OAI22D1 U275 ( .A1(n245), .A2(n98), .B1(n326), .B2(n97), .ZN(
        \shifted_products[9][10] ) );
  ND2D1 U276 ( .A1(\products[14][5] ), .A2(n272), .ZN(n265) );
  ND2D1 U277 ( .A1(\products[10][5] ), .A2(n272), .ZN(n255) );
  ND2D1 U278 ( .A1(\products[15][5] ), .A2(n272), .ZN(n273) );
  ND2D1 U279 ( .A1(\products[11][5] ), .A2(n272), .ZN(n256) );
  INVD1 U280 ( .I(n266), .ZN(n235) );
  INVD1 U281 ( .I(n321), .ZN(n245) );
  OAI22D1 U282 ( .A1(n296), .A2(n121), .B1(n295), .B2(n120), .ZN(
        \shifted_products[5][8] ) );
  INVD1 U283 ( .I(n267), .ZN(n240) );
  INVD1 U284 ( .I(n257), .ZN(n238) );
  OA22D0 U285 ( .A1(n241), .A2(n109), .B1(n304), .B2(n108), .Z(n32) );
  INVD1 U286 ( .I(n275), .ZN(n236) );
  INVD1 U287 ( .I(n309), .ZN(n242) );
  INVD1 U288 ( .I(n277), .ZN(n244) );
  INVD1 U289 ( .I(n292), .ZN(n239) );
  NR2D1 U290 ( .A1(n324), .A2(n91), .ZN(\shifted_products[11][0] ) );
  INVD1 U291 ( .I(\products[3][5] ), .ZN(n132) );
  OA21D1 U292 ( .A1(n34), .A2(n87), .B(n256), .Z(n33) );
  INVD1 U293 ( .I(n325), .ZN(n243) );
  ND2D1 U294 ( .A1(n297), .A2(n306), .ZN(n292) );
  INVD1 U295 ( .I(\products[15][3] ), .ZN(n64) );
  ND2D1 U296 ( .A1(n306), .A2(n312), .ZN(n285) );
  NR2D1 U297 ( .A1(n313), .A2(n228), .ZN(\shifted_products[1][0] ) );
  INVD1 U298 ( .I(\products[3][3] ), .ZN(n134) );
  FA1D0 U299 ( .A(\shifted_products[6][7] ), .B(\shifted_products[7][7] ), 
        .CI(\add_11_root_add_199_I16/carry[7] ), .CO(
        \add_11_root_add_199_I16/carry[8] ), .S(N130) );
  OAI222D0 U300 ( .A1(n229), .A2(n114), .B1(n241), .B2(n118), .C1(n317), .C2(
        n116), .ZN(\shifted_products[6][7] ) );
  OAI222D0 U301 ( .A1(n242), .A2(n110), .B1(n316), .B2(n108), .C1(n112), .C2(
        n317), .ZN(\shifted_products[7][7] ) );
  FA1D0 U302 ( .A(\shifted_products[8][7] ), .B(\shifted_products[9][7] ), 
        .CI(\add_10_root_add_199_I16/carry[7] ), .CO(
        \add_10_root_add_199_I16/carry[8] ), .S(N155) );
  OAI222D0 U303 ( .A1(n245), .A2(n101), .B1(n230), .B2(n97), .C1(n99), .C2(
        n325), .ZN(\shifted_products[9][7] ) );
  OAI222D0 U304 ( .A1(n36), .A2(n63), .B1(n236), .B2(n65), .C1(n67), .C2(n306), 
        .ZN(\shifted_products[15][4] ) );
  OAI222D0 U305 ( .A1(n3), .A2(n69), .B1(n235), .B2(n71), .C1(n317), .C2(n73), 
        .ZN(\shifted_products[14][4] ) );
  OAI222D0 U306 ( .A1(n36), .A2(n62), .B1(n236), .B2(n64), .C1(n66), .C2(n306), 
        .ZN(\shifted_products[15][5] ) );
  OAI222D0 U307 ( .A1(n3), .A2(n68), .B1(n235), .B2(n70), .C1(n317), .C2(n72), 
        .ZN(\shifted_products[14][5] ) );
  OAI222D0 U308 ( .A1(n231), .A2(n68), .B1(n240), .B2(n72), .C1(n317), .C2(n70), .ZN(\shifted_products[14][7] ) );
  OAI222D0 U309 ( .A1(n244), .A2(n66), .B1(n279), .B2(n62), .C1(n64), .C2(n306), .ZN(\shifted_products[15][7] ) );
  FA1D0 U310 ( .A(\shifted_products[8][4] ), .B(\shifted_products[9][4] ), 
        .CI(\add_10_root_add_199_I16/carry[4] ), .CO(
        \add_10_root_add_199_I16/carry[5] ), .S(N152) );
  OAI222D0 U311 ( .A1(n324), .A2(n98), .B1(n237), .B2(n100), .C1(n325), .C2(
        n102), .ZN(\shifted_products[9][4] ) );
  FA1D0 U312 ( .A(\shifted_products[10][4] ), .B(\shifted_products[11][4] ), 
        .CI(\add_9_root_add_199_I16/carry[4] ), .CO(
        \add_9_root_add_199_I16/carry[5] ), .S(N178) );
  OAI222D0 U313 ( .A1(n324), .A2(n87), .B1(n2), .B2(n89), .C1(n325), .C2(n91), 
        .ZN(\shifted_products[11][4] ) );
  FA1D0 U314 ( .A(\shifted_products[12][7] ), .B(\shifted_products[13][7] ), 
        .CI(\add_8_root_add_199_I16/carry[7] ), .CO(
        \add_8_root_add_199_I16/carry[8] ), .S(N208) );
  OAI222D0 U315 ( .A1(n239), .A2(n76), .B1(n264), .B2(n74), .C1(n325), .C2(n78), .ZN(\shifted_products[13][7] ) );
  FA1D0 U316 ( .A(\shifted_products[8][5] ), .B(\shifted_products[9][5] ), 
        .CI(\add_10_root_add_199_I16/carry[5] ), .CO(
        \add_10_root_add_199_I16/carry[6] ), .S(N153) );
  OAI222D0 U317 ( .A1(n324), .A2(n97), .B1(n237), .B2(n99), .C1(n325), .C2(
        n101), .ZN(\shifted_products[9][5] ) );
  FA1D0 U318 ( .A(\shifted_products[10][5] ), .B(\shifted_products[11][5] ), 
        .CI(\add_9_root_add_199_I16/carry[5] ), .CO(
        \add_9_root_add_199_I16/carry[6] ), .S(N179) );
  OAI222D0 U319 ( .A1(n324), .A2(n86), .B1(n2), .B2(n88), .C1(n325), .C2(n90), 
        .ZN(\shifted_products[11][5] ) );
  OAI21D1 U320 ( .A1(n254), .A2(n95), .B(n253), .ZN(\shifted_products[10][5] )
         );
  FA1D0 U321 ( .A(\shifted_products[6][9] ), .B(\shifted_products[7][9] ), 
        .CI(\add_11_root_add_199_I16/carry[9] ), .CO(
        \add_11_root_add_199_I16/carry[10] ), .S(N132) );
  OAI222D0 U322 ( .A1(n229), .A2(n108), .B1(n241), .B2(n112), .C1(n317), .C2(
        n110), .ZN(\shifted_products[7][9] ) );
  OAI22D1 U323 ( .A1(n241), .A2(n116), .B1(n304), .B2(n114), .ZN(
        \shifted_products[6][9] ) );
  FA1D0 U324 ( .A(\shifted_products[12][9] ), .B(\shifted_products[13][9] ), 
        .CI(\add_8_root_add_199_I16/carry[9] ), .CO(
        \add_8_root_add_199_I16/carry[10] ), .S(N210) );
  OAI222D0 U325 ( .A1(n245), .A2(n78), .B1(n230), .B2(n74), .C1(n325), .C2(n76), .ZN(\shifted_products[13][9] ) );
  FA1D0 U326 ( .A(\shifted_products[10][7] ), .B(\shifted_products[11][7] ), 
        .CI(\add_9_root_add_199_I16/carry[7] ), .CO(
        \add_9_root_add_199_I16/carry[8] ), .S(N181) );
  OAI222D0 U327 ( .A1(n231), .A2(n86), .B1(n238), .B2(n90), .C1(n325), .C2(n88), .ZN(\shifted_products[11][7] ) );
  OAI21D1 U328 ( .A1(n254), .A2(n93), .B(n253), .ZN(\shifted_products[10][7] )
         );
  FA1D0 U329 ( .A(\shifted_products[10][8] ), .B(\shifted_products[11][8] ), 
        .CI(\add_9_root_add_199_I16/carry[8] ), .CO(
        \add_9_root_add_199_I16/carry[9] ), .S(N182) );
  OAI222D0 U330 ( .A1(n231), .A2(n86), .B1(n238), .B2(n89), .C1(n325), .C2(n87), .ZN(\shifted_products[11][8] ) );
  OAI221D0 U331 ( .A1(n254), .A2(n92), .B1(n35), .B2(n96), .C(n253), .ZN(
        \shifted_products[10][8] ) );
  FA1D0 U332 ( .A(\shifted_products[10][10] ), .B(\shifted_products[11][10] ), 
        .CI(\add_9_root_add_199_I16/carry[10] ), .CO(
        \add_9_root_add_199_I16/carry[11] ), .S(N184) );
  OAI222D0 U333 ( .A1(n238), .A2(n87), .B1(n259), .B2(n86), .C1(n34), .C2(n91), 
        .ZN(\shifted_products[11][10] ) );
  OAI21D1 U334 ( .A1(n34), .A2(n94), .B(n255), .ZN(\shifted_products[10][10] )
         );
  FA1D0 U335 ( .A(\shifted_products[12][4] ), .B(\shifted_products[13][4] ), 
        .CI(\add_8_root_add_199_I16/carry[4] ), .CO(
        \add_8_root_add_199_I16/carry[5] ), .S(N205) );
  OAI222D0 U336 ( .A1(n239), .A2(n79), .B1(n233), .B2(n77), .C1(n36), .C2(n75), 
        .ZN(\shifted_products[13][4] ) );
  FA1D0 U337 ( .A(\shifted_products[6][5] ), .B(\shifted_products[7][5] ), 
        .CI(\add_11_root_add_199_I16/carry[5] ), .CO(
        \add_11_root_add_199_I16/carry[6] ), .S(N128) );
  OAI222D0 U338 ( .A1(n3), .A2(n114), .B1(n234), .B2(n116), .C1(n317), .C2(
        n118), .ZN(\shifted_products[6][5] ) );
  OAI222D0 U339 ( .A1(n232), .A2(n110), .B1(n242), .B2(n112), .C1(n108), .C2(
        n37), .ZN(\shifted_products[7][5] ) );
  OAI222D0 U340 ( .A1(n288), .A2(n217), .B1(n286), .B2(n133), .C1(n313), .C2(
        n132), .ZN(\shifted_products[3][6] ) );
  FA1D0 U341 ( .A(\shifted_products[4][4] ), .B(\shifted_products[5][4] ), 
        .CI(\add_12_root_add_199_I16/carry[4] ), .CO(
        \add_12_root_add_199_I16/carry[5] ), .S(N103) );
  OAI222D0 U342 ( .A1(n293), .A2(n123), .B1(n296), .B2(n125), .C1(n36), .C2(
        n121), .ZN(\shifted_products[5][4] ) );
  FA1D0 U343 ( .A(\shifted_products[6][4] ), .B(\shifted_products[7][4] ), 
        .CI(\add_11_root_add_199_I16/carry[4] ), .CO(
        \add_11_root_add_199_I16/carry[5] ), .S(N127) );
  OAI222D0 U344 ( .A1(n3), .A2(n115), .B1(n234), .B2(n117), .C1(n317), .C2(
        n119), .ZN(\shifted_products[6][4] ) );
  OAI222D0 U345 ( .A1(n232), .A2(n111), .B1(n242), .B2(n113), .C1(n109), .C2(
        n37), .ZN(\shifted_products[7][4] ) );
  FA1D0 U346 ( .A(\shifted_products[8][6] ), .B(\shifted_products[9][6] ), 
        .CI(\add_10_root_add_199_I16/carry[6] ), .CO(
        \add_10_root_add_199_I16/carry[7] ), .S(N154) );
  OAI221D0 U347 ( .A1(n324), .A2(n97), .B1(n100), .B2(n325), .C(n323), .ZN(
        \shifted_products[9][6] ) );
  OAI221D0 U348 ( .A1(n36), .A2(n62), .B1(n65), .B2(n306), .C(n276), .ZN(
        \shifted_products[15][6] ) );
  OAI221D0 U349 ( .A1(n3), .A2(n68), .B1(n317), .B2(n71), .C(n268), .ZN(
        \shifted_products[14][6] ) );
  FA1D0 U350 ( .A(\shifted_products[10][6] ), .B(\shifted_products[11][6] ), 
        .CI(\add_9_root_add_199_I16/carry[6] ), .CO(
        \add_9_root_add_199_I16/carry[7] ), .S(N180) );
  OAI221D0 U351 ( .A1(n324), .A2(n86), .B1(n325), .B2(n89), .C(n258), .ZN(
        \shifted_products[11][6] ) );
  OAI21D1 U352 ( .A1(n254), .A2(n94), .B(n253), .ZN(\shifted_products[10][6] )
         );
  OAI221D0 U353 ( .A1(n281), .A2(n66), .B1(n244), .B2(n64), .C(n280), .ZN(
        \shifted_products[15][9] ) );
  OAI221D0 U354 ( .A1(n281), .A2(n65), .B1(n244), .B2(n63), .C(n280), .ZN(
        \shifted_products[15][10] ) );
  OAI222D0 U355 ( .A1(n240), .A2(n69), .B1(n269), .B2(n68), .C1(n34), .C2(n73), 
        .ZN(\shifted_products[14][10] ) );
  FA1D0 U356 ( .A(\shifted_products[6][8] ), .B(\shifted_products[7][8] ), 
        .CI(\add_11_root_add_199_I16/carry[8] ), .CO(
        \add_11_root_add_199_I16/carry[9] ), .S(N131) );
  OAI221D0 U357 ( .A1(n316), .A2(n108), .B1(n242), .B2(n109), .C(n315), .ZN(
        \shifted_products[7][8] ) );
  OAI222D0 U358 ( .A1(n229), .A2(n114), .B1(n241), .B2(n117), .C1(n317), .C2(
        n115), .ZN(\shifted_products[6][8] ) );
  OAI221D0 U359 ( .A1(n281), .A2(n63), .B1(n67), .B2(n35), .C(n271), .ZN(
        \shifted_products[15][12] ) );
  OAI21D1 U360 ( .A1(n34), .A2(n71), .B(n265), .ZN(\shifted_products[14][12] )
         );
  FA1D0 U361 ( .A(\shifted_products[10][2] ), .B(\shifted_products[11][2] ), 
        .CI(\add_9_root_add_199_I16/carry[2] ), .CO(
        \add_9_root_add_199_I16/carry[3] ), .S(N176) );
  FA1D0 U362 ( .A(\shifted_products[4][2] ), .B(\shifted_products[5][2] ), 
        .CI(\add_12_root_add_199_I16/carry[2] ), .CO(
        \add_12_root_add_199_I16/carry[3] ), .S(N101) );
  FA1D0 U363 ( .A(\shifted_products[2][2] ), .B(\shifted_products[3][2] ), 
        .CI(\add_13_root_add_199_I16/carry[2] ), .CO(
        \add_13_root_add_199_I16/carry[3] ), .S(N78) );
  FA1D0 U364 ( .A(\shifted_products[2][4] ), .B(\shifted_products[3][4] ), 
        .CI(\add_13_root_add_199_I16/carry[4] ), .CO(
        \add_13_root_add_199_I16/carry[5] ), .S(N80) );
  FA1D0 U365 ( .A(\shifted_products[6][2] ), .B(\shifted_products[7][2] ), 
        .CI(\add_11_root_add_199_I16/carry[2] ), .CO(
        \add_11_root_add_199_I16/carry[3] ), .S(N125) );
  OAI22D1 U366 ( .A1(n111), .A2(n36), .B1(n232), .B2(n113), .ZN(
        \shifted_products[7][2] ) );
  FA1D0 U367 ( .A(\shifted_products[12][2] ), .B(\shifted_products[13][2] ), 
        .CI(\add_8_root_add_199_I16/carry[2] ), .CO(
        \add_8_root_add_199_I16/carry[3] ), .S(N203) );
  FA1D0 U368 ( .A(\shifted_products[8][2] ), .B(\shifted_products[9][2] ), 
        .CI(\add_10_root_add_199_I16/carry[2] ), .CO(
        \add_10_root_add_199_I16/carry[3] ), .S(N150) );
  FA1D0 U369 ( .A(\products[0][3] ), .B(\shifted_products[1][3] ), .CI(
        \add_14_root_add_199_I16/carry[3] ), .CO(
        \add_14_root_add_199_I16/carry[4] ), .S(N57) );
  FA1D0 U370 ( .A(\products[0][4] ), .B(\shifted_products[1][4] ), .CI(
        \add_14_root_add_199_I16/carry[4] ), .CO(
        \add_14_root_add_199_I16/carry[5] ), .S(N58) );
  INVD1 U371 ( .I(\products[12][4] ), .ZN(n81) );
  INVD1 U372 ( .I(\products[3][4] ), .ZN(n133) );
  FA1D0 U373 ( .A(\shifted_products[6][10] ), .B(\shifted_products[7][10] ), 
        .CI(\add_11_root_add_199_I16/carry[10] ), .CO(
        \add_11_root_add_199_I16/carry[11] ), .S(N133) );
  OAI222D0 U374 ( .A1(n229), .A2(n108), .B1(n241), .B2(n111), .C1(n317), .C2(
        n109), .ZN(\shifted_products[7][10] ) );
  OAI22D1 U375 ( .A1(n241), .A2(n115), .B1(n304), .B2(n114), .ZN(
        \shifted_products[6][10] ) );
  OAI21D1 U376 ( .A1(n65), .A2(n35), .B(n273), .ZN(\shifted_products[15][14] )
         );
  OAI21D1 U377 ( .A1(n35), .A2(n69), .B(n265), .ZN(\shifted_products[14][14] )
         );
  FA1D0 U378 ( .A(\shifted_products[10][12] ), .B(\shifted_products[11][12] ), 
        .CI(\add_9_root_add_199_I16/carry[12] ), .CO(
        \add_9_root_add_199_I16/carry[13] ), .S(N186) );
  OAI21D1 U379 ( .A1(n34), .A2(n89), .B(n256), .ZN(\shifted_products[11][12] )
         );
  OAI21D1 U380 ( .A1(n34), .A2(n92), .B(n255), .ZN(\shifted_products[10][12] )
         );
  OAI21D1 U381 ( .A1(n320), .A2(n81), .B(n260), .ZN(\shifted_products[12][10] ) );
  OAI222D0 U382 ( .A1(n245), .A2(n77), .B1(n230), .B2(n74), .C1(n325), .C2(n75), .ZN(\shifted_products[13][10] ) );
  FA1D0 U383 ( .A(\shifted_products[8][8] ), .B(\shifted_products[9][8] ), 
        .CI(\add_10_root_add_199_I16/carry[8] ), .CO(
        \add_10_root_add_199_I16/carry[9] ), .S(N156) );
  OAI21D1 U384 ( .A1(n320), .A2(n103), .B(n319), .ZN(\shifted_products[8][8] )
         );
  OAI222D0 U385 ( .A1(n245), .A2(n100), .B1(n230), .B2(n97), .C1(n325), .C2(
        n98), .ZN(\shifted_products[9][8] ) );
  OAI22D1 U386 ( .A1(n291), .A2(n126), .B1(n290), .B2(n127), .ZN(
        \shifted_products[4][6] ) );
  OAI222D0 U387 ( .A1(n293), .A2(n121), .B1(n296), .B2(n123), .C1(n36), .C2(
        n120), .ZN(\shifted_products[5][6] ) );
  NR2D1 U388 ( .A1(n37), .A2(n125), .ZN(\shifted_products[5][0] ) );
  INVD1 U389 ( .I(\products[1][4] ), .ZN(n224) );
  INVD1 U390 ( .I(\products[1][3] ), .ZN(n225) );
  INVD1 U391 ( .I(\products[2][4] ), .ZN(n218) );
  CKBD1 U392 ( .I(n298), .Z(n35) );
  ND2D1 U393 ( .A1(n325), .A2(n317), .ZN(n277) );
  INVD1 U394 ( .I(\products[11][3] ), .ZN(n88) );
  INVD1 U395 ( .I(\products[9][3] ), .ZN(n99) );
  INVD1 U396 ( .I(\products[11][4] ), .ZN(n87) );
  ND2D1 U397 ( .A1(n306), .A2(n274), .ZN(n266) );
  ND2D1 U398 ( .A1(n274), .A2(n312), .ZN(n275) );
  ND2D1 U399 ( .A1(n307), .A2(n306), .ZN(n309) );
  INVD1 U400 ( .I(\products[9][4] ), .ZN(n98) );
  INVD1 U401 ( .I(\products[10][4] ), .ZN(n92) );
  INVD1 U402 ( .I(\products[10][3] ), .ZN(n93) );
  INVD1 U403 ( .I(\products[8][4] ), .ZN(n103) );
  INVD1 U404 ( .I(\products[2][3] ), .ZN(n219) );
  INVD1 U405 ( .I(\products[8][3] ), .ZN(n104) );
  CKBD1 U406 ( .I(n298), .Z(n34) );
  INVD1 U407 ( .I(\products[15][1] ), .ZN(n66) );
  INVD1 U408 ( .I(\products[7][1] ), .ZN(n112) );
  INVD1 U409 ( .I(\products[14][1] ), .ZN(n72) );
  INVD1 U410 ( .I(\products[13][1] ), .ZN(n78) );
  INVD1 U411 ( .I(\products[6][1] ), .ZN(n118) );
  INVD1 U412 ( .I(\products[5][1] ), .ZN(n124) );
  INVD1 U413 ( .I(\products[12][1] ), .ZN(n84) );
  INVD1 U414 ( .I(\products[3][1] ), .ZN(n216) );
  INVD1 U415 ( .I(\products[4][1] ), .ZN(n130) );
  INVD1 U416 ( .I(\products[1][1] ), .ZN(n227) );
  INVD1 U417 ( .I(\products[2][1] ), .ZN(n221) );
  INVD1 U418 ( .I(\products[15][0] ), .ZN(n67) );
  INVD1 U419 ( .I(\products[14][0] ), .ZN(n73) );
  INVD1 U420 ( .I(\products[11][0] ), .ZN(n91) );
  INVD1 U421 ( .I(\products[7][0] ), .ZN(n113) );
  INVD1 U422 ( .I(\products[6][0] ), .ZN(n119) );
  INVD1 U423 ( .I(\products[9][0] ), .ZN(n102) );
  INVD1 U424 ( .I(\products[11][1] ), .ZN(n90) );
  INVD1 U425 ( .I(\products[9][1] ), .ZN(n101) );
  INVD1 U426 ( .I(\products[10][1] ), .ZN(n95) );
  INVD1 U427 ( .I(\products[8][1] ), .ZN(n106) );
  INVD1 U428 ( .I(\products[15][2] ), .ZN(n65) );
  INVD1 U429 ( .I(\products[14][2] ), .ZN(n71) );
  INVD1 U430 ( .I(\products[13][2] ), .ZN(n77) );
  INVD1 U431 ( .I(\products[7][2] ), .ZN(n111) );
  FA1D0 U432 ( .A(\shifted_products[6][6] ), .B(\shifted_products[7][6] ), 
        .CI(\add_11_root_add_199_I16/carry[6] ), .CO(
        \add_11_root_add_199_I16/carry[7] ), .S(N129) );
  OAI221D0 U433 ( .A1(n108), .A2(n36), .B1(n317), .B2(n113), .C(n310), .ZN(
        \shifted_products[7][6] ) );
  OAI221D0 U434 ( .A1(n3), .A2(n114), .B1(n317), .B2(n117), .C(n302), .ZN(
        \shifted_products[6][6] ) );
  FA1D0 U435 ( .A(\shifted_products[12][6] ), .B(\shifted_products[13][6] ), 
        .CI(\add_8_root_add_199_I16/carry[6] ), .CO(
        \add_8_root_add_199_I16/carry[7] ), .S(N207) );
  OAI222D0 U436 ( .A1(n291), .A2(n80), .B1(n289), .B2(n81), .C1(n320), .C2(n85), .ZN(\shifted_products[12][6] ) );
  OAI221D0 U437 ( .A1(n36), .A2(n74), .B1(n325), .B2(n79), .C(n262), .ZN(
        \shifted_products[13][6] ) );
  OAI222D0 U438 ( .A1(n231), .A2(n68), .B1(n240), .B2(n71), .C1(n317), .C2(n69), .ZN(\shifted_products[14][8] ) );
  OAI221D0 U439 ( .A1(n279), .A2(n62), .B1(n281), .B2(n67), .C(n278), .ZN(
        \shifted_products[15][8] ) );
  FA1D0 U440 ( .A(\shifted_products[12][8] ), .B(\shifted_products[13][8] ), 
        .CI(\add_8_root_add_199_I16/carry[8] ), .CO(
        \add_8_root_add_199_I16/carry[9] ), .S(N209) );
  OAI221D0 U441 ( .A1(n264), .A2(n74), .B1(n245), .B2(n79), .C(n263), .ZN(
        \shifted_products[13][8] ) );
  FA1D0 U442 ( .A(\products[0][2] ), .B(\shifted_products[1][2] ), .CI(
        \add_14_root_add_199_I16/carry[2] ), .CO(
        \add_14_root_add_199_I16/carry[3] ), .S(N56) );
  INVD1 U443 ( .I(\products[1][2] ), .ZN(n226) );
  INVD1 U444 ( .I(\products[11][2] ), .ZN(n89) );
  INVD1 U445 ( .I(\products[9][2] ), .ZN(n100) );
  INVD1 U446 ( .I(\products[3][2] ), .ZN(n135) );
  INVD1 U447 ( .I(\products[10][2] ), .ZN(n94) );
  INVD1 U448 ( .I(\products[2][2] ), .ZN(n220) );
  INVD1 U449 ( .I(\products[8][2] ), .ZN(n105) );
  INVD1 U450 ( .I(\products[13][0] ), .ZN(n79) );
  INVD1 U451 ( .I(\products[5][0] ), .ZN(n125) );
  INVD1 U452 ( .I(\products[12][0] ), .ZN(n85) );
  INVD1 U453 ( .I(\products[1][0] ), .ZN(n228) );
  INVD1 U454 ( .I(\products[4][0] ), .ZN(n131) );
  INVD1 U455 ( .I(\products[10][0] ), .ZN(n96) );
  INVD1 U456 ( .I(\products[3][0] ), .ZN(n217) );
  INVD1 U457 ( .I(\products[2][0] ), .ZN(n222) );
  INVD1 U458 ( .I(\products[8][0] ), .ZN(n107) );
  INR3D0 U459 ( .A1(input_bitwidth[2]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[1]), .ZN(n248) );
  INR3D0 U460 ( .A1(weight_bitwidth[0]), .B1(weight_bitwidth[1]), .B2(
        weight_bitwidth[2]), .ZN(n247) );
  INR3D0 U461 ( .A1(input_bitwidth[0]), .B1(input_bitwidth[1]), .B2(
        input_bitwidth[2]), .ZN(n251) );
  INR3D0 U462 ( .A1(input_bitwidth[1]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[2]), .ZN(n250) );
  INR3D0 U463 ( .A1(weight_bitwidth[1]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[2]), .ZN(n252) );
  INR3D0 U464 ( .A1(weight_bitwidth[2]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[1]), .ZN(n249) );
  TIEL U465 ( .ZN(n246) );
  FA1D0 U466 ( .A(\shifted_products[2][8] ), .B(\shifted_products[3][8] ), 
        .CI(\add_13_root_add_199_I16/carry[8] ), .CO(
        \add_13_root_add_199_I16/carry[9] ), .S(N84) );
  AN2D0 U467 ( .A1(\shifted_products[2][0] ), .A2(\shifted_products[3][0] ), 
        .Z(\add_13_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U468 ( .A1(\shifted_products[3][0] ), .A2(\shifted_products[2][0] ), 
        .Z(N76) );
  AN2D0 U469 ( .A1(\products[0][0] ), .A2(\shifted_products[1][0] ), .Z(
        \add_14_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U470 ( .A1(\shifted_products[1][0] ), .A2(\products[0][0] ), .Z(N54) );
  AN2D0 U471 ( .A1(\shifted_products[12][0] ), .A2(\shifted_products[13][0] ), 
        .Z(\add_8_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U472 ( .A1(\shifted_products[13][0] ), .A2(
        \shifted_products[12][0] ), .Z(N201) );
  AN2D0 U473 ( .A1(\shifted_products[6][0] ), .A2(\shifted_products[7][0] ), 
        .Z(\add_11_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U474 ( .A1(\shifted_products[7][0] ), .A2(\shifted_products[6][0] ), 
        .Z(N123) );
  AN2D0 U475 ( .A1(\shifted_products[4][0] ), .A2(\shifted_products[5][0] ), 
        .Z(\add_12_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U476 ( .A1(\shifted_products[5][0] ), .A2(\shifted_products[4][0] ), 
        .Z(N99) );
  AN2D0 U477 ( .A1(\shifted_products[8][0] ), .A2(\shifted_products[9][0] ), 
        .Z(\add_10_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U478 ( .A1(\shifted_products[9][0] ), .A2(\shifted_products[8][0] ), 
        .Z(N148) );
  AN2D0 U479 ( .A1(\shifted_products[10][0] ), .A2(\shifted_products[11][0] ), 
        .Z(\add_9_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U480 ( .A1(\shifted_products[11][0] ), .A2(
        \shifted_products[10][0] ), .Z(N174) );
  XOR3D0 U481 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[13][11] ), .A3(\products[12][5] ), .Z(N212) );
  XOR3D0 U482 ( .A1(\shifted_products[13][12] ), .A2(n39), .A3(n80), .Z(N213)
         );
  XOR3D0 U483 ( .A1(\products[13][5] ), .A2(\products[12][5] ), .A3(n40), .Z(
        N214) );
  CKND0 U484 ( .I(\shifted_products[13][12] ), .ZN(n42) );
  XNR3D0 U485 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \shifted_products[11][13] ), .A3(n43), .ZN(N187) );
  XNR3D0 U486 ( .A1(n33), .A2(n44), .A3(n43), .ZN(N188) );
  XNR3D0 U487 ( .A1(\products[11][5] ), .A2(n43), .A3(n45), .ZN(N189) );
  OAI222D0 U488 ( .A1(n44), .A2(n43), .B1(n44), .B2(n33), .C1(n43), .C2(n33), 
        .ZN(n45) );
  CKND0 U489 ( .I(\products[10][5] ), .ZN(n43) );
  XOR3D0 U490 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[9][9] ), .A3(\products[8][5] ), .Z(N157) );
  XOR3D0 U491 ( .A1(\shifted_products[9][10] ), .A2(n46), .A3(n47), .Z(N158)
         );
  XOR3D0 U492 ( .A1(\products[9][5] ), .A2(\products[8][5] ), .A3(n48), .Z(
        N159) );
  OAI222D0 U493 ( .A1(n46), .A2(n47), .B1(n46), .B2(n50), .C1(n47), .C2(n50), 
        .ZN(n48) );
  CKND0 U494 ( .I(\shifted_products[9][10] ), .ZN(n50) );
  CKND0 U495 ( .I(\products[8][5] ), .ZN(n47) );
  XNR3D0 U496 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[7][11] ), .A3(n114), .ZN(N134) );
  XNR3D0 U497 ( .A1(n32), .A2(n51), .A3(n114), .ZN(N135) );
  XNR3D0 U498 ( .A1(\products[7][5] ), .A2(n114), .A3(n52), .ZN(N136) );
  XOR3D0 U499 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(
        \shifted_products[5][7] ), .A3(\products[4][5] ), .Z(N106) );
  XOR3D0 U500 ( .A1(\shifted_products[5][8] ), .A2(n53), .A3(n126), .Z(N107)
         );
  XOR3D0 U501 ( .A1(\products[5][5] ), .A2(\products[4][5] ), .A3(n54), .Z(
        N108) );
  CKND0 U502 ( .I(\shifted_products[5][8] ), .ZN(n56) );
  XNR3D0 U503 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .A3(n57), .ZN(N85) );
  XNR3D0 U504 ( .A1(n31), .A2(n58), .A3(n57), .ZN(N86) );
  XNR3D0 U505 ( .A1(\products[3][5] ), .A2(n57), .A3(n59), .ZN(N87) );
  CKND0 U506 ( .I(\products[2][5] ), .ZN(n57) );
  XNR3D0 U507 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[1][6] ), .A3(n60), .ZN(N60) );
  XNR3D0 U508 ( .A1(n223), .A2(n61), .A3(n60), .ZN(N61) );
  CKND0 U509 ( .I(\shifted_products[0][9] ), .ZN(n60) );
endmodule


module fusion_unit_7_DW01_add_0_DW01_add_11 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module fusion_unit_7 ( clk, nRST, input_bitwidth, weight_bitwidth, input_sign, 
        weight_sign, input_forward, weight, psum_in, psum, input_to_right );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  input [3:0] input_sign;
  input [3:0] weight_sign;
  input [31:0] input_forward;
  input [31:0] weight;
  input [31:0] psum_in;
  output [31:0] psum;
  output [31:0] input_to_right;
  input clk, nRST;
  wire   \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] , n2;
  wire   [31:0] shift_add_out;
  assign input_to_right[31] = input_forward[31];
  assign input_to_right[30] = input_forward[30];
  assign input_to_right[29] = input_forward[29];
  assign input_to_right[28] = input_forward[28];
  assign input_to_right[27] = input_forward[27];
  assign input_to_right[26] = input_forward[26];
  assign input_to_right[25] = input_forward[25];
  assign input_to_right[24] = input_forward[24];
  assign input_to_right[23] = input_forward[23];
  assign input_to_right[22] = input_forward[22];
  assign input_to_right[21] = input_forward[21];
  assign input_to_right[20] = input_forward[20];
  assign input_to_right[19] = input_forward[19];
  assign input_to_right[18] = input_forward[18];
  assign input_to_right[17] = input_forward[17];
  assign input_to_right[16] = input_forward[16];
  assign input_to_right[15] = input_forward[15];
  assign input_to_right[14] = input_forward[14];
  assign input_to_right[13] = input_forward[13];
  assign input_to_right[12] = input_forward[12];
  assign input_to_right[11] = input_forward[11];
  assign input_to_right[10] = input_forward[10];
  assign input_to_right[9] = input_forward[9];
  assign input_to_right[8] = input_forward[8];
  assign input_to_right[7] = input_forward[7];
  assign input_to_right[6] = input_forward[6];
  assign input_to_right[5] = input_forward[5];
  assign input_to_right[4] = input_forward[4];
  assign input_to_right[3] = input_forward[3];
  assign input_to_right[2] = input_forward[2];
  assign input_to_right[1] = input_forward[1];
  assign input_to_right[0] = input_forward[0];

  bit_brick_127 \genblk1[0].BB  ( .x(input_forward[1:0]), .y(weight[1:0]), 
        .sx(input_sign[0]), .sy(weight_sign[0]), .product({\products[0][5] , 
        \products[0][4] , \products[0][3] , \products[0][2] , \products[0][1] , 
        \products[0][0] }) );
  bit_brick_126 \genblk1[1].BB  ( .x(input_forward[3:2]), .y(weight[3:2]), 
        .sx(input_sign[0]), .sy(weight_sign[1]), .product({\products[1][5] , 
        \products[1][4] , \products[1][3] , \products[1][2] , \products[1][1] , 
        \products[1][0] }) );
  bit_brick_125 \genblk1[2].BB  ( .x(input_forward[5:4]), .y(weight[5:4]), 
        .sx(input_sign[0]), .sy(weight_sign[2]), .product({\products[2][5] , 
        \products[2][4] , \products[2][3] , \products[2][2] , \products[2][1] , 
        \products[2][0] }) );
  bit_brick_124 \genblk1[3].BB  ( .x(input_forward[7:6]), .y(weight[7:6]), 
        .sx(input_sign[0]), .sy(weight_sign[3]), .product({\products[3][5] , 
        \products[3][4] , \products[3][3] , \products[3][2] , \products[3][1] , 
        \products[3][0] }) );
  bit_brick_123 \genblk1[4].BB  ( .x(input_forward[9:8]), .y(weight[9:8]), 
        .sx(input_sign[1]), .sy(weight_sign[0]), .product({\products[4][5] , 
        \products[4][4] , \products[4][3] , \products[4][2] , \products[4][1] , 
        \products[4][0] }) );
  bit_brick_122 \genblk1[5].BB  ( .x(input_forward[11:10]), .y(weight[11:10]), 
        .sx(input_sign[1]), .sy(weight_sign[1]), .product({\products[5][5] , 
        \products[5][4] , \products[5][3] , \products[5][2] , \products[5][1] , 
        \products[5][0] }) );
  bit_brick_121 \genblk1[6].BB  ( .x(input_forward[13:12]), .y(weight[13:12]), 
        .sx(input_sign[1]), .sy(weight_sign[2]), .product({\products[6][5] , 
        \products[6][4] , \products[6][3] , \products[6][2] , \products[6][1] , 
        \products[6][0] }) );
  bit_brick_120 \genblk1[7].BB  ( .x(input_forward[15:14]), .y(weight[15:14]), 
        .sx(input_sign[1]), .sy(weight_sign[3]), .product({\products[7][5] , 
        \products[7][4] , \products[7][3] , \products[7][2] , \products[7][1] , 
        \products[7][0] }) );
  bit_brick_119 \genblk1[8].BB  ( .x(input_forward[17:16]), .y(weight[17:16]), 
        .sx(input_sign[2]), .sy(weight_sign[0]), .product({\products[8][5] , 
        \products[8][4] , \products[8][3] , \products[8][2] , \products[8][1] , 
        \products[8][0] }) );
  bit_brick_118 \genblk1[9].BB  ( .x(input_forward[19:18]), .y(weight[19:18]), 
        .sx(input_sign[2]), .sy(weight_sign[1]), .product({\products[9][5] , 
        \products[9][4] , \products[9][3] , \products[9][2] , \products[9][1] , 
        \products[9][0] }) );
  bit_brick_117 \genblk1[10].BB  ( .x(input_forward[21:20]), .y(weight[21:20]), 
        .sx(input_sign[2]), .sy(weight_sign[2]), .product({\products[10][5] , 
        \products[10][4] , \products[10][3] , \products[10][2] , 
        \products[10][1] , \products[10][0] }) );
  bit_brick_116 \genblk1[11].BB  ( .x(input_forward[23:22]), .y(weight[23:22]), 
        .sx(input_sign[2]), .sy(weight_sign[3]), .product({\products[11][5] , 
        \products[11][4] , \products[11][3] , \products[11][2] , 
        \products[11][1] , \products[11][0] }) );
  bit_brick_115 \genblk1[12].BB  ( .x(input_forward[25:24]), .y(weight[25:24]), 
        .sx(input_sign[3]), .sy(weight_sign[0]), .product({\products[12][5] , 
        \products[12][4] , \products[12][3] , \products[12][2] , 
        \products[12][1] , \products[12][0] }) );
  bit_brick_114 \genblk1[13].BB  ( .x(input_forward[27:26]), .y(weight[27:26]), 
        .sx(input_sign[3]), .sy(weight_sign[1]), .product({\products[13][5] , 
        \products[13][4] , \products[13][3] , \products[13][2] , 
        \products[13][1] , \products[13][0] }) );
  bit_brick_113 \genblk1[14].BB  ( .x(input_forward[29:28]), .y(weight[29:28]), 
        .sx(input_sign[3]), .sy(weight_sign[2]), .product({\products[14][5] , 
        \products[14][4] , \products[14][3] , \products[14][2] , 
        \products[14][1] , \products[14][0] }) );
  bit_brick_112 \genblk1[15].BB  ( .x(input_forward[31:30]), .y(weight[31:30]), 
        .sx(input_sign[3]), .sy(weight_sign[3]), .product({\products[15][5] , 
        \products[15][4] , \products[15][3] , \products[15][2] , 
        \products[15][1] , \products[15][0] }) );
  shift_add_7 shift_add ( .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .products({\products[15][5] , \products[15][4] , 
        \products[15][3] , \products[15][2] , \products[15][1] , 
        \products[15][0] , \products[14][5] , \products[14][4] , 
        \products[14][3] , \products[14][2] , \products[14][1] , 
        \products[14][0] , \products[13][5] , \products[13][4] , 
        \products[13][3] , \products[13][2] , \products[13][1] , 
        \products[13][0] , \products[12][5] , \products[12][4] , 
        \products[12][3] , \products[12][2] , \products[12][1] , 
        \products[12][0] , \products[11][5] , \products[11][4] , 
        \products[11][3] , \products[11][2] , \products[11][1] , 
        \products[11][0] , \products[10][5] , \products[10][4] , 
        \products[10][3] , \products[10][2] , \products[10][1] , 
        \products[10][0] , \products[9][5] , \products[9][4] , 
        \products[9][3] , \products[9][2] , \products[9][1] , \products[9][0] , 
        \products[8][5] , \products[8][4] , \products[8][3] , \products[8][2] , 
        \products[8][1] , \products[8][0] , \products[7][5] , \products[7][4] , 
        \products[7][3] , \products[7][2] , \products[7][1] , \products[7][0] , 
        \products[6][5] , \products[6][4] , \products[6][3] , \products[6][2] , 
        \products[6][1] , \products[6][0] , \products[5][5] , \products[5][4] , 
        \products[5][3] , \products[5][2] , \products[5][1] , \products[5][0] , 
        \products[4][5] , \products[4][4] , \products[4][3] , \products[4][2] , 
        \products[4][1] , \products[4][0] , \products[3][5] , \products[3][4] , 
        \products[3][3] , \products[3][2] , \products[3][1] , \products[3][0] , 
        \products[2][5] , \products[2][4] , \products[2][3] , \products[2][2] , 
        \products[2][1] , \products[2][0] , \products[1][5] , \products[1][4] , 
        \products[1][3] , \products[1][2] , \products[1][1] , \products[1][0] , 
        \products[0][5] , \products[0][4] , \products[0][3] , \products[0][2] , 
        \products[0][1] , \products[0][0] }), .shift_add_out(shift_add_out) );
  fusion_unit_7_DW01_add_0_DW01_add_11 add_53 ( .A(shift_add_out), .B(psum_in), 
        .CI(n2), .SUM(psum) );
  TIEL U1 ( .ZN(n2) );
endmodule


module WBUF_ARRAY_SIZE4_DATA_W32_6 ( clk, nRST, WBUF_wr_en, WBUF_data_in, 
        WBUF_data_out );
  input [31:0] WBUF_data_in;
  output [31:0] WBUF_data_out;
  input clk, nRST, WBUF_wr_en;
  wire   n1, n2, n3, n4, n5, n6;

  EDFCNQD1 \WBUF_data_out_reg[31]  ( .D(WBUF_data_in[31]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[31]) );
  EDFCNQD1 \WBUF_data_out_reg[30]  ( .D(WBUF_data_in[30]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[30]) );
  EDFCNQD1 \WBUF_data_out_reg[29]  ( .D(WBUF_data_in[29]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[29]) );
  EDFCNQD1 \WBUF_data_out_reg[28]  ( .D(WBUF_data_in[28]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[28]) );
  EDFCNQD1 \WBUF_data_out_reg[27]  ( .D(WBUF_data_in[27]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[27]) );
  EDFCNQD1 \WBUF_data_out_reg[26]  ( .D(WBUF_data_in[26]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[26]) );
  EDFCNQD1 \WBUF_data_out_reg[25]  ( .D(WBUF_data_in[25]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[25]) );
  EDFCNQD1 \WBUF_data_out_reg[24]  ( .D(WBUF_data_in[24]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[24]) );
  EDFCNQD1 \WBUF_data_out_reg[23]  ( .D(WBUF_data_in[23]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[23]) );
  EDFCNQD1 \WBUF_data_out_reg[22]  ( .D(WBUF_data_in[22]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[22]) );
  EDFCNQD1 \WBUF_data_out_reg[21]  ( .D(WBUF_data_in[21]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[21]) );
  EDFCNQD1 \WBUF_data_out_reg[20]  ( .D(WBUF_data_in[20]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[20]) );
  EDFCNQD1 \WBUF_data_out_reg[19]  ( .D(WBUF_data_in[19]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[19]) );
  EDFCNQD1 \WBUF_data_out_reg[18]  ( .D(WBUF_data_in[18]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[18]) );
  EDFCNQD1 \WBUF_data_out_reg[17]  ( .D(WBUF_data_in[17]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[17]) );
  EDFCNQD1 \WBUF_data_out_reg[16]  ( .D(WBUF_data_in[16]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[16]) );
  EDFCNQD1 \WBUF_data_out_reg[15]  ( .D(WBUF_data_in[15]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[15]) );
  EDFCNQD1 \WBUF_data_out_reg[14]  ( .D(WBUF_data_in[14]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[14]) );
  EDFCNQD1 \WBUF_data_out_reg[13]  ( .D(WBUF_data_in[13]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[13]) );
  EDFCNQD1 \WBUF_data_out_reg[12]  ( .D(WBUF_data_in[12]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[12]) );
  EDFCNQD1 \WBUF_data_out_reg[11]  ( .D(WBUF_data_in[11]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[11]) );
  EDFCNQD1 \WBUF_data_out_reg[10]  ( .D(WBUF_data_in[10]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[10]) );
  EDFCNQD1 \WBUF_data_out_reg[9]  ( .D(WBUF_data_in[9]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[9]) );
  EDFCNQD1 \WBUF_data_out_reg[8]  ( .D(WBUF_data_in[8]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[8]) );
  EDFCNQD1 \WBUF_data_out_reg[7]  ( .D(WBUF_data_in[7]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[7]) );
  EDFCNQD1 \WBUF_data_out_reg[6]  ( .D(WBUF_data_in[6]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[6]) );
  EDFCNQD1 \WBUF_data_out_reg[5]  ( .D(WBUF_data_in[5]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[5]) );
  EDFCNQD1 \WBUF_data_out_reg[4]  ( .D(WBUF_data_in[4]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[4]) );
  EDFCNQD1 \WBUF_data_out_reg[3]  ( .D(WBUF_data_in[3]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[3]) );
  EDFCNQD1 \WBUF_data_out_reg[2]  ( .D(WBUF_data_in[2]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[2]) );
  EDFCNQD1 \WBUF_data_out_reg[1]  ( .D(WBUF_data_in[1]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[1]) );
  EDFCNQD1 \WBUF_data_out_reg[0]  ( .D(WBUF_data_in[0]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[0]) );
  CKBD1 U2 ( .I(WBUF_wr_en), .Z(n5) );
  CKBD1 U3 ( .I(WBUF_wr_en), .Z(n4) );
  CKBD1 U4 ( .I(nRST), .Z(n1) );
  CKBD1 U5 ( .I(nRST), .Z(n2) );
  CKBD1 U6 ( .I(nRST), .Z(n3) );
  CKBD1 U7 ( .I(WBUF_wr_en), .Z(n6) );
endmodule


module w_mux_6 ( clk, nRST, input_bitwidth, rd_en, data_in, data_out );
  input [2:0] input_bitwidth;
  input [31:0] data_in;
  output [31:0] data_out;
  input clk, nRST, rd_en;
  wire   N40, N41, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129,
         n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140,
         n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151,
         n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162,
         n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173,
         n174, n175, n176, n177, n178;
  wire   [1:0] rd_ptr;
  wire   [31:0] next_data_out;

  EDFCNQD1 \rd_ptr_reg[0]  ( .D(N40), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[0]) );
  EDFCNQD1 \rd_ptr_reg[1]  ( .D(N41), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[1]) );
  DFCNQD1 \data_out_reg[31]  ( .D(next_data_out[31]), .CP(clk), .CDN(n1), .Q(
        data_out[31]) );
  DFCNQD1 \data_out_reg[30]  ( .D(next_data_out[30]), .CP(clk), .CDN(n3), .Q(
        data_out[30]) );
  DFCNQD1 \data_out_reg[29]  ( .D(next_data_out[29]), .CP(clk), .CDN(n3), .Q(
        data_out[29]) );
  DFCNQD1 \data_out_reg[28]  ( .D(next_data_out[28]), .CP(clk), .CDN(n3), .Q(
        data_out[28]) );
  DFCNQD1 \data_out_reg[27]  ( .D(next_data_out[27]), .CP(clk), .CDN(n3), .Q(
        data_out[27]) );
  DFCNQD1 \data_out_reg[26]  ( .D(next_data_out[26]), .CP(clk), .CDN(n3), .Q(
        data_out[26]) );
  DFCNQD1 \data_out_reg[25]  ( .D(next_data_out[25]), .CP(clk), .CDN(n2), .Q(
        data_out[25]) );
  DFCNQD1 \data_out_reg[24]  ( .D(next_data_out[24]), .CP(clk), .CDN(n2), .Q(
        data_out[24]) );
  DFCNQD1 \data_out_reg[23]  ( .D(next_data_out[23]), .CP(clk), .CDN(n3), .Q(
        data_out[23]) );
  DFCNQD1 \data_out_reg[22]  ( .D(next_data_out[22]), .CP(clk), .CDN(n2), .Q(
        data_out[22]) );
  DFCNQD1 \data_out_reg[21]  ( .D(next_data_out[21]), .CP(clk), .CDN(n2), .Q(
        data_out[21]) );
  DFCNQD1 \data_out_reg[20]  ( .D(next_data_out[20]), .CP(clk), .CDN(n2), .Q(
        data_out[20]) );
  DFCNQD1 \data_out_reg[19]  ( .D(next_data_out[19]), .CP(clk), .CDN(n2), .Q(
        data_out[19]) );
  DFCNQD1 \data_out_reg[18]  ( .D(next_data_out[18]), .CP(clk), .CDN(n2), .Q(
        data_out[18]) );
  DFCNQD1 \data_out_reg[17]  ( .D(next_data_out[17]), .CP(clk), .CDN(n2), .Q(
        data_out[17]) );
  DFCNQD1 \data_out_reg[16]  ( .D(next_data_out[16]), .CP(clk), .CDN(n2), .Q(
        data_out[16]) );
  DFCNQD1 \data_out_reg[15]  ( .D(next_data_out[15]), .CP(clk), .CDN(n2), .Q(
        data_out[15]) );
  DFCNQD1 \data_out_reg[14]  ( .D(next_data_out[14]), .CP(clk), .CDN(n2), .Q(
        data_out[14]) );
  DFCNQD1 \data_out_reg[13]  ( .D(next_data_out[13]), .CP(clk), .CDN(n2), .Q(
        data_out[13]) );
  DFCNQD1 \data_out_reg[12]  ( .D(next_data_out[12]), .CP(clk), .CDN(n1), .Q(
        data_out[12]) );
  DFCNQD1 \data_out_reg[11]  ( .D(next_data_out[11]), .CP(clk), .CDN(n1), .Q(
        data_out[11]) );
  DFCNQD1 \data_out_reg[10]  ( .D(next_data_out[10]), .CP(clk), .CDN(n1), .Q(
        data_out[10]) );
  DFCNQD1 \data_out_reg[9]  ( .D(next_data_out[9]), .CP(clk), .CDN(n1), .Q(
        data_out[9]) );
  DFCNQD1 \data_out_reg[8]  ( .D(next_data_out[8]), .CP(clk), .CDN(n1), .Q(
        data_out[8]) );
  DFCNQD1 \data_out_reg[7]  ( .D(next_data_out[7]), .CP(clk), .CDN(n1), .Q(
        data_out[7]) );
  DFCNQD1 \data_out_reg[6]  ( .D(next_data_out[6]), .CP(clk), .CDN(n1), .Q(
        data_out[6]) );
  DFCNQD1 \data_out_reg[5]  ( .D(next_data_out[5]), .CP(clk), .CDN(n1), .Q(
        data_out[5]) );
  DFCNQD1 \data_out_reg[4]  ( .D(next_data_out[4]), .CP(clk), .CDN(n1), .Q(
        data_out[4]) );
  DFCNQD1 \data_out_reg[3]  ( .D(next_data_out[3]), .CP(clk), .CDN(n1), .Q(
        data_out[3]) );
  DFCNQD1 \data_out_reg[2]  ( .D(next_data_out[2]), .CP(clk), .CDN(n1), .Q(
        data_out[2]) );
  DFCNQD1 \data_out_reg[1]  ( .D(next_data_out[1]), .CP(clk), .CDN(n1), .Q(
        data_out[1]) );
  DFCNQD1 \data_out_reg[0]  ( .D(next_data_out[0]), .CP(clk), .CDN(n2), .Q(
        data_out[0]) );
  OA21D1 U20 ( .A1(n161), .A2(n160), .B(n159), .Z(n170) );
  OA21D1 U23 ( .A1(n156), .A2(n160), .B(n155), .Z(n169) );
  OA21D1 U26 ( .A1(n154), .A2(n160), .B(n153), .Z(n167) );
  OA21D1 U29 ( .A1(n152), .A2(n160), .B(n151), .Z(n166) );
  OA21D1 U32 ( .A1(n150), .A2(n160), .B(n149), .Z(n177) );
  OA21D1 U35 ( .A1(n148), .A2(n160), .B(n147), .Z(n165) );
  OA21D1 U38 ( .A1(n146), .A2(n160), .B(n145), .Z(n164) );
  OA21D1 U41 ( .A1(n144), .A2(n160), .B(n149), .Z(n163) );
  OA21D1 U47 ( .A1(n139), .A2(n160), .B(n138), .Z(n162) );
  OA21D1 U50 ( .A1(n137), .A2(n160), .B(n159), .Z(n175) );
  OA21D1 U56 ( .A1(n134), .A2(n160), .B(n155), .Z(n174) );
  OA21D1 U62 ( .A1(n131), .A2(n160), .B(n153), .Z(n173) );
  OA21D1 U68 ( .A1(n128), .A2(n160), .B(n151), .Z(n172) );
  OA21D1 U74 ( .A1(n125), .A2(n160), .B(n147), .Z(n171) );
  OA21D1 U80 ( .A1(n122), .A2(n160), .B(n145), .Z(n168) );
  OA21D1 U86 ( .A1(n119), .A2(n160), .B(n138), .Z(n176) );
  AN2XD1 U90 ( .A1(rd_ptr[1]), .A2(rd_ptr[0]), .Z(n140) );
  AN4XD1 U91 ( .A1(input_bitwidth[2]), .A2(rd_en), .A3(n5), .A4(n7), .Z(n143)
         );
  MAOI22D1 U97 ( .A1(n115), .A2(n12), .B1(n115), .B2(n114), .ZN(n113) );
  NR2D1 U3 ( .A1(n13), .A2(rd_ptr[1]), .ZN(n158) );
  NR2D1 U4 ( .A1(rd_ptr[0]), .A2(rd_ptr[1]), .ZN(n157) );
  AOI21D1 U5 ( .A1(n12), .A2(n116), .B(n113), .ZN(N41) );
  OAI21D1 U6 ( .A1(n111), .A2(n10), .B(n177), .ZN(next_data_out[1]) );
  OAI21D1 U7 ( .A1(n37), .A2(n10), .B(n177), .ZN(next_data_out[9]) );
  OAI21D1 U8 ( .A1(n8), .A2(n112), .B(n176), .ZN(next_data_out[0]) );
  OAI21D1 U9 ( .A1(n9), .A2(n110), .B(n168), .ZN(next_data_out[2]) );
  OAI21D1 U10 ( .A1(n9), .A2(n109), .B(n171), .ZN(next_data_out[3]) );
  OAI21D1 U11 ( .A1(n9), .A2(n108), .B(n172), .ZN(next_data_out[4]) );
  OAI21D1 U12 ( .A1(n8), .A2(n36), .B(n168), .ZN(next_data_out[10]) );
  OAI21D1 U13 ( .A1(n8), .A2(n35), .B(n171), .ZN(next_data_out[11]) );
  OAI21D1 U14 ( .A1(n8), .A2(n34), .B(n172), .ZN(next_data_out[12]) );
  OAI21D1 U15 ( .A1(n9), .A2(n33), .B(n173), .ZN(next_data_out[13]) );
  OAI21D1 U16 ( .A1(n8), .A2(n32), .B(n174), .ZN(next_data_out[14]) );
  OAI21D1 U17 ( .A1(n8), .A2(n31), .B(n175), .ZN(next_data_out[15]) );
  OAI21D1 U18 ( .A1(n10), .A2(n107), .B(n173), .ZN(next_data_out[5]) );
  OAI21D1 U19 ( .A1(n10), .A2(n106), .B(n174), .ZN(next_data_out[6]) );
  OAI21D1 U21 ( .A1(n10), .A2(n105), .B(n175), .ZN(next_data_out[7]) );
  OAI21D1 U22 ( .A1(n10), .A2(n38), .B(n176), .ZN(next_data_out[8]) );
  CKBD1 U24 ( .I(n178), .Z(n8) );
  CKBD1 U25 ( .I(n178), .Z(n9) );
  CKBD1 U27 ( .I(n178), .Z(n10) );
  INVD1 U28 ( .I(n6), .ZN(n7) );
  INVD1 U30 ( .I(n4), .ZN(n5) );
  INVD1 U31 ( .I(n116), .ZN(n11) );
  INVD1 U33 ( .I(n157), .ZN(n14) );
  INVD1 U34 ( .I(n158), .ZN(n12) );
  ND2D1 U36 ( .A1(n114), .A2(rd_en), .ZN(n178) );
  NR3D0 U37 ( .A1(n4), .A2(input_bitwidth[2]), .A3(n7), .ZN(n115) );
  NR3D0 U39 ( .A1(n6), .A2(input_bitwidth[2]), .A3(n5), .ZN(n114) );
  ND2D1 U40 ( .A1(rd_en), .A2(n115), .ZN(n160) );
  ND2D1 U42 ( .A1(n143), .A2(n118), .ZN(n138) );
  OAI221D0 U43 ( .A1(n12), .A2(n38), .B1(n14), .B2(n112), .C(n117), .ZN(n118)
         );
  AOI22D1 U44 ( .A1(data_in[24]), .A2(n140), .B1(data_in[16]), .B2(n11), .ZN(
        n117) );
  ND2D1 U45 ( .A1(n143), .A2(n142), .ZN(n149) );
  OAI221D0 U46 ( .A1(n12), .A2(n37), .B1(n14), .B2(n111), .C(n141), .ZN(n142)
         );
  AOI22D1 U48 ( .A1(data_in[25]), .A2(n140), .B1(n11), .B2(data_in[17]), .ZN(
        n141) );
  ND2D1 U49 ( .A1(n143), .A2(n121), .ZN(n145) );
  OAI221D0 U51 ( .A1(n12), .A2(n36), .B1(n14), .B2(n110), .C(n120), .ZN(n121)
         );
  AOI22D1 U52 ( .A1(data_in[26]), .A2(n140), .B1(data_in[18]), .B2(n11), .ZN(
        n120) );
  ND2D1 U53 ( .A1(n143), .A2(n124), .ZN(n147) );
  OAI221D0 U54 ( .A1(n12), .A2(n35), .B1(n14), .B2(n109), .C(n123), .ZN(n124)
         );
  AOI22D1 U55 ( .A1(data_in[27]), .A2(n140), .B1(data_in[19]), .B2(n11), .ZN(
        n123) );
  ND2D1 U57 ( .A1(n143), .A2(n127), .ZN(n151) );
  OAI221D0 U58 ( .A1(n12), .A2(n34), .B1(n14), .B2(n108), .C(n126), .ZN(n127)
         );
  AOI22D1 U59 ( .A1(data_in[28]), .A2(n140), .B1(data_in[20]), .B2(n11), .ZN(
        n126) );
  ND2D1 U60 ( .A1(n143), .A2(n130), .ZN(n153) );
  OAI221D0 U61 ( .A1(n12), .A2(n33), .B1(n14), .B2(n107), .C(n129), .ZN(n130)
         );
  AOI22D1 U63 ( .A1(data_in[29]), .A2(n140), .B1(data_in[21]), .B2(n11), .ZN(
        n129) );
  ND2D1 U64 ( .A1(n143), .A2(n133), .ZN(n155) );
  OAI221D0 U65 ( .A1(n12), .A2(n32), .B1(n14), .B2(n106), .C(n132), .ZN(n133)
         );
  AOI22D1 U66 ( .A1(data_in[30]), .A2(n140), .B1(data_in[22]), .B2(n11), .ZN(
        n132) );
  ND2D1 U67 ( .A1(n143), .A2(n136), .ZN(n159) );
  OAI221D0 U69 ( .A1(n12), .A2(n31), .B1(n14), .B2(n105), .C(n135), .ZN(n136)
         );
  AOI22D1 U70 ( .A1(data_in[31]), .A2(n140), .B1(data_in[23]), .B2(n11), .ZN(
        n135) );
  AOI22D1 U71 ( .A1(data_in[16]), .A2(n158), .B1(data_in[0]), .B2(n157), .ZN(
        n119) );
  AOI22D1 U72 ( .A1(data_in[17]), .A2(n158), .B1(data_in[1]), .B2(n157), .ZN(
        n150) );
  AOI22D1 U73 ( .A1(data_in[18]), .A2(n158), .B1(data_in[2]), .B2(n157), .ZN(
        n122) );
  AOI22D1 U75 ( .A1(data_in[19]), .A2(n158), .B1(data_in[3]), .B2(n157), .ZN(
        n125) );
  AOI22D1 U76 ( .A1(data_in[20]), .A2(n158), .B1(data_in[4]), .B2(n157), .ZN(
        n128) );
  AOI22D1 U77 ( .A1(data_in[21]), .A2(n158), .B1(data_in[5]), .B2(n157), .ZN(
        n131) );
  AOI22D1 U78 ( .A1(data_in[22]), .A2(n158), .B1(data_in[6]), .B2(n157), .ZN(
        n134) );
  AOI22D1 U79 ( .A1(data_in[23]), .A2(n158), .B1(data_in[7]), .B2(n157), .ZN(
        n137) );
  AOI22D1 U81 ( .A1(data_in[24]), .A2(n158), .B1(data_in[8]), .B2(n157), .ZN(
        n139) );
  AOI22D1 U82 ( .A1(data_in[25]), .A2(n158), .B1(data_in[9]), .B2(n157), .ZN(
        n144) );
  AOI22D1 U83 ( .A1(data_in[26]), .A2(n158), .B1(data_in[10]), .B2(n157), .ZN(
        n146) );
  AOI22D1 U84 ( .A1(data_in[27]), .A2(n158), .B1(data_in[11]), .B2(n157), .ZN(
        n148) );
  AOI22D1 U85 ( .A1(data_in[28]), .A2(n158), .B1(data_in[12]), .B2(n157), .ZN(
        n152) );
  AOI22D1 U87 ( .A1(data_in[29]), .A2(n158), .B1(data_in[13]), .B2(n157), .ZN(
        n154) );
  AOI22D1 U88 ( .A1(data_in[30]), .A2(n158), .B1(data_in[14]), .B2(n157), .ZN(
        n156) );
  AOI22D1 U89 ( .A1(data_in[31]), .A2(n158), .B1(data_in[15]), .B2(n157), .ZN(
        n161) );
  NR2D1 U92 ( .A1(rd_ptr[0]), .A2(n114), .ZN(N40) );
  OAI21D1 U93 ( .A1(n29), .A2(n10), .B(n163), .ZN(next_data_out[17]) );
  INVD1 U94 ( .I(data_in[17]), .ZN(n29) );
  OAI21D1 U95 ( .A1(n8), .A2(n30), .B(n162), .ZN(next_data_out[16]) );
  INVD1 U96 ( .I(data_in[16]), .ZN(n30) );
  OAI21D1 U98 ( .A1(n8), .A2(n28), .B(n164), .ZN(next_data_out[18]) );
  INVD1 U99 ( .I(data_in[18]), .ZN(n28) );
  OAI21D1 U100 ( .A1(n8), .A2(n27), .B(n165), .ZN(next_data_out[19]) );
  INVD1 U101 ( .I(data_in[19]), .ZN(n27) );
  OAI21D1 U102 ( .A1(n8), .A2(n26), .B(n166), .ZN(next_data_out[20]) );
  INVD1 U103 ( .I(data_in[20]), .ZN(n26) );
  OAI21D1 U104 ( .A1(n8), .A2(n25), .B(n167), .ZN(next_data_out[21]) );
  INVD1 U105 ( .I(data_in[21]), .ZN(n25) );
  OAI21D1 U106 ( .A1(n8), .A2(n24), .B(n169), .ZN(next_data_out[22]) );
  INVD1 U107 ( .I(data_in[22]), .ZN(n24) );
  OAI21D1 U108 ( .A1(n9), .A2(n23), .B(n170), .ZN(next_data_out[23]) );
  INVD1 U109 ( .I(data_in[23]), .ZN(n23) );
  OAI21D1 U110 ( .A1(n9), .A2(n22), .B(n162), .ZN(next_data_out[24]) );
  INVD1 U111 ( .I(data_in[24]), .ZN(n22) );
  OAI21D1 U112 ( .A1(n9), .A2(n20), .B(n164), .ZN(next_data_out[26]) );
  INVD1 U113 ( .I(data_in[26]), .ZN(n20) );
  OAI21D1 U114 ( .A1(n9), .A2(n19), .B(n165), .ZN(next_data_out[27]) );
  INVD1 U115 ( .I(data_in[27]), .ZN(n19) );
  OAI21D1 U116 ( .A1(n9), .A2(n18), .B(n166), .ZN(next_data_out[28]) );
  INVD1 U117 ( .I(data_in[28]), .ZN(n18) );
  OAI21D1 U118 ( .A1(n9), .A2(n17), .B(n167), .ZN(next_data_out[29]) );
  INVD1 U119 ( .I(data_in[29]), .ZN(n17) );
  OAI21D1 U120 ( .A1(n9), .A2(n16), .B(n169), .ZN(next_data_out[30]) );
  INVD1 U121 ( .I(data_in[30]), .ZN(n16) );
  OAI21D1 U122 ( .A1(n9), .A2(n15), .B(n170), .ZN(next_data_out[31]) );
  INVD1 U123 ( .I(data_in[31]), .ZN(n15) );
  OAI21D1 U124 ( .A1(n21), .A2(n10), .B(n163), .ZN(next_data_out[25]) );
  INVD1 U125 ( .I(data_in[25]), .ZN(n21) );
  CKBD1 U126 ( .I(input_bitwidth[0]), .Z(n4) );
  CKBD1 U127 ( .I(input_bitwidth[1]), .Z(n6) );
  ND2D1 U128 ( .A1(rd_ptr[1]), .A2(n13), .ZN(n116) );
  INVD1 U129 ( .I(rd_ptr[0]), .ZN(n13) );
  INVD1 U130 ( .I(data_in[1]), .ZN(n111) );
  INVD1 U131 ( .I(data_in[9]), .ZN(n37) );
  INVD1 U132 ( .I(data_in[0]), .ZN(n112) );
  INVD1 U133 ( .I(data_in[2]), .ZN(n110) );
  INVD1 U134 ( .I(data_in[3]), .ZN(n109) );
  INVD1 U135 ( .I(data_in[4]), .ZN(n108) );
  INVD1 U136 ( .I(data_in[5]), .ZN(n107) );
  INVD1 U137 ( .I(data_in[6]), .ZN(n106) );
  INVD1 U138 ( .I(data_in[7]), .ZN(n105) );
  INVD1 U139 ( .I(data_in[8]), .ZN(n38) );
  INVD1 U140 ( .I(data_in[10]), .ZN(n36) );
  INVD1 U141 ( .I(data_in[11]), .ZN(n35) );
  INVD1 U142 ( .I(data_in[12]), .ZN(n34) );
  INVD1 U143 ( .I(data_in[13]), .ZN(n33) );
  INVD1 U144 ( .I(data_in[14]), .ZN(n32) );
  INVD1 U145 ( .I(data_in[15]), .ZN(n31) );
  CKBD1 U146 ( .I(nRST), .Z(n2) );
  CKBD1 U147 ( .I(nRST), .Z(n1) );
  CKBD1 U148 ( .I(nRST), .Z(n3) );
endmodule


module bit_brick_111 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_110 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_109 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_108 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_107 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_106 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_105 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_104 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_103 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_102 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_101 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_100 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_99 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_98 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_97 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_96 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module shift_add_6_DW01_add_14_DW01_add_139 ( A, B, CI, SUM, CO );
  input [28:0] A;
  input [28:0] B;
  output [28:0] SUM;
  input CI;
  output CO;
  wire   n1, \SUM[18] , n3, n4, n5, n6, n7;
  wire   [28:1] carry;
  assign SUM[27] = \SUM[18] ;
  assign SUM[28] = \SUM[18] ;
  assign SUM[26] = \SUM[18] ;
  assign SUM[25] = \SUM[18] ;
  assign SUM[24] = \SUM[18] ;
  assign SUM[23] = \SUM[18] ;
  assign SUM[22] = \SUM[18] ;
  assign SUM[21] = \SUM[18] ;
  assign SUM[20] = \SUM[18] ;
  assign SUM[19] = \SUM[18] ;
  assign SUM[18] = \SUM[18] ;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D0 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  AOI222D1 U3 ( .A1(carry[15]), .A2(A[27]), .B1(carry[15]), .B2(B[15]), .C1(
        B[15]), .C2(A[27]), .ZN(n5) );
  XNR3D4 U4 ( .A1(B[27]), .A2(n7), .A3(n3), .ZN(\SUM[18] ) );
  AO222D1 U5 ( .A1(n4), .A2(A[27]), .B1(n4), .B2(B[27]), .C1(A[27]), .C2(B[27]), .Z(n3) );
  CKND0 U6 ( .I(A[27]), .ZN(n7) );
  CKND0 U7 ( .I(B[16]), .ZN(n6) );
  OAI222D0 U8 ( .A1(n5), .A2(n7), .B1(n5), .B2(n6), .C1(n7), .C2(n6), .ZN(n4)
         );
  XNR3D0 U9 ( .A1(B[27]), .A2(n7), .A3(n4), .ZN(SUM[17]) );
  XNR3D0 U10 ( .A1(n6), .A2(n5), .A3(n7), .ZN(SUM[16]) );
  XNR3D0 U11 ( .A1(carry[15]), .A2(B[15]), .A3(n7), .ZN(SUM[15]) );
endmodule


module shift_add_6_DW01_add_6_DW01_add_131 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_6_DW01_add_5_DW01_add_130 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_6_DW01_add_4_DW01_add_129 ( A, B, CI, SUM, CO );
  input [30:0] A;
  input [30:0] B;
  output [30:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [30:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  XOR3D1 U1_30 ( .A1(A[30]), .A2(B[30]), .A3(carry[30]), .Z(SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_6_DW01_add_3_DW01_add_128 ( A, B, CI, SUM, CO );
  input [29:0] A;
  input [29:0] B;
  output [29:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3;
  wire   [29:1] carry;
  assign SUM[29] = SUM[23];
  assign SUM[28] = SUM[23];
  assign SUM[27] = SUM[23];
  assign SUM[26] = SUM[23];
  assign SUM[25] = SUM[23];
  assign SUM[24] = SUM[23];

  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  XNR3D2 U1 ( .A1(B[22]), .A2(A[21]), .A3(n2), .ZN(SUM[23]) );
  AN2XD1 U2 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  AOI222D1 U3 ( .A1(n3), .A2(A[21]), .B1(n3), .B2(B[22]), .C1(A[21]), .C2(
        B[22]), .ZN(n2) );
  CKXOR2D1 U4 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  XOR3D0 U5 ( .A1(carry[21]), .A2(B[21]), .A3(A[21]), .Z(SUM[21]) );
  AO222D0 U6 ( .A1(carry[21]), .A2(A[21]), .B1(B[21]), .B2(carry[21]), .C1(
        B[21]), .C2(A[21]), .Z(n3) );
  XOR3D0 U7 ( .A1(B[22]), .A2(A[21]), .A3(n3), .Z(SUM[22]) );
endmodule


module shift_add_6_DW01_add_2_DW01_add_127 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_6_DW01_add_1_DW01_add_126 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_6_DW01_add_0_DW01_add_125 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_6 ( input_bitwidth, weight_bitwidth, .products({
        \products[15][5] , \products[15][4] , \products[15][3] , 
        \products[15][2] , \products[15][1] , \products[15][0] , 
        \products[14][5] , \products[14][4] , \products[14][3] , 
        \products[14][2] , \products[14][1] , \products[14][0] , 
        \products[13][5] , \products[13][4] , \products[13][3] , 
        \products[13][2] , \products[13][1] , \products[13][0] , 
        \products[12][5] , \products[12][4] , \products[12][3] , 
        \products[12][2] , \products[12][1] , \products[12][0] , 
        \products[11][5] , \products[11][4] , \products[11][3] , 
        \products[11][2] , \products[11][1] , \products[11][0] , 
        \products[10][5] , \products[10][4] , \products[10][3] , 
        \products[10][2] , \products[10][1] , \products[10][0] , 
        \products[9][5] , \products[9][4] , \products[9][3] , \products[9][2] , 
        \products[9][1] , \products[9][0] , \products[8][5] , \products[8][4] , 
        \products[8][3] , \products[8][2] , \products[8][1] , \products[8][0] , 
        \products[7][5] , \products[7][4] , \products[7][3] , \products[7][2] , 
        \products[7][1] , \products[7][0] , \products[6][5] , \products[6][4] , 
        \products[6][3] , \products[6][2] , \products[6][1] , \products[6][0] , 
        \products[5][5] , \products[5][4] , \products[5][3] , \products[5][2] , 
        \products[5][1] , \products[5][0] , \products[4][5] , \products[4][4] , 
        \products[4][3] , \products[4][2] , \products[4][1] , \products[4][0] , 
        \products[3][5] , \products[3][4] , \products[3][3] , \products[3][2] , 
        \products[3][1] , \products[3][0] , \products[2][5] , \products[2][4] , 
        \products[2][3] , \products[2][2] , \products[2][1] , \products[2][0] , 
        \products[1][5] , \products[1][4] , \products[1][3] , \products[1][2] , 
        \products[1][1] , \products[1][0] , \products[0][5] , \products[0][4] , 
        \products[0][3] , \products[0][2] , \products[0][1] , \products[0][0] 
        }), shift_add_out );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  output [31:0] shift_add_out;
  input \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] ;
  wire   \shifted_products[15][16] , \shifted_products[15][15] ,
         \shifted_products[15][14] , \shifted_products[15][13] ,
         \shifted_products[15][12] , \shifted_products[15][11] ,
         \shifted_products[15][10] , \shifted_products[15][9] ,
         \shifted_products[15][8] , \shifted_products[15][7] ,
         \shifted_products[15][6] , \shifted_products[15][5] ,
         \shifted_products[15][4] , \shifted_products[15][3] ,
         \shifted_products[15][2] , \shifted_products[15][1] ,
         \shifted_products[15][0] , \shifted_products[14][14] ,
         \shifted_products[14][13] , \shifted_products[14][12] ,
         \shifted_products[14][11] , \shifted_products[14][10] ,
         \shifted_products[14][9] , \shifted_products[14][8] ,
         \shifted_products[14][7] , \shifted_products[14][6] ,
         \shifted_products[14][5] , \shifted_products[14][4] ,
         \shifted_products[14][3] , \shifted_products[14][2] ,
         \shifted_products[14][1] , \shifted_products[14][0] ,
         \shifted_products[13][12] , \shifted_products[13][11] ,
         \shifted_products[13][10] , \shifted_products[13][9] ,
         \shifted_products[13][8] , \shifted_products[13][7] ,
         \shifted_products[13][6] , \shifted_products[13][5] ,
         \shifted_products[13][4] , \shifted_products[13][3] ,
         \shifted_products[13][2] , \shifted_products[13][1] ,
         \shifted_products[13][0] , \shifted_products[12][10] ,
         \shifted_products[12][9] , \shifted_products[12][8] ,
         \shifted_products[12][7] , \shifted_products[12][6] ,
         \shifted_products[12][5] , \shifted_products[12][4] ,
         \shifted_products[12][3] , \shifted_products[12][2] ,
         \shifted_products[12][1] , \shifted_products[12][0] ,
         \shifted_products[11][13] , \shifted_products[11][12] ,
         \shifted_products[11][11] , \shifted_products[11][10] ,
         \shifted_products[11][9] , \shifted_products[11][8] ,
         \shifted_products[11][7] , \shifted_products[11][6] ,
         \shifted_products[11][5] , \shifted_products[11][4] ,
         \shifted_products[11][3] , \shifted_products[11][2] ,
         \shifted_products[11][1] , \shifted_products[11][0] ,
         \shifted_products[10][12] , \shifted_products[10][11] ,
         \shifted_products[10][10] , \shifted_products[10][9] ,
         \shifted_products[10][8] , \shifted_products[10][7] ,
         \shifted_products[10][6] , \shifted_products[10][5] ,
         \shifted_products[10][4] , \shifted_products[10][3] ,
         \shifted_products[10][2] , \shifted_products[10][1] ,
         \shifted_products[10][0] , \shifted_products[9][10] ,
         \shifted_products[9][9] , \shifted_products[9][8] ,
         \shifted_products[9][7] , \shifted_products[9][6] ,
         \shifted_products[9][5] , \shifted_products[9][4] ,
         \shifted_products[9][3] , \shifted_products[9][2] ,
         \shifted_products[9][1] , \shifted_products[9][0] ,
         \shifted_products[8][8] , \shifted_products[8][7] ,
         \shifted_products[8][6] , \shifted_products[8][5] ,
         \shifted_products[8][4] , \shifted_products[8][3] ,
         \shifted_products[8][2] , \shifted_products[8][1] ,
         \shifted_products[8][0] , \shifted_products[7][11] ,
         \shifted_products[7][10] , \shifted_products[7][9] ,
         \shifted_products[7][8] , \shifted_products[7][7] ,
         \shifted_products[7][6] , \shifted_products[7][5] ,
         \shifted_products[7][4] , \shifted_products[7][3] ,
         \shifted_products[7][2] , \shifted_products[7][1] ,
         \shifted_products[7][0] , \shifted_products[6][10] ,
         \shifted_products[6][9] , \shifted_products[6][8] ,
         \shifted_products[6][7] , \shifted_products[6][6] ,
         \shifted_products[6][5] , \shifted_products[6][4] ,
         \shifted_products[6][3] , \shifted_products[6][2] ,
         \shifted_products[6][1] , \shifted_products[6][0] ,
         \shifted_products[5][8] , \shifted_products[5][7] ,
         \shifted_products[5][6] , \shifted_products[5][5] ,
         \shifted_products[5][4] , \shifted_products[5][3] ,
         \shifted_products[5][2] , \shifted_products[5][1] ,
         \shifted_products[5][0] , \shifted_products[4][6] ,
         \shifted_products[4][5] , \shifted_products[4][4] ,
         \shifted_products[4][3] , \shifted_products[4][2] ,
         \shifted_products[4][1] , \shifted_products[4][0] ,
         \shifted_products[3][9] , \shifted_products[3][8] ,
         \shifted_products[3][7] , \shifted_products[3][6] ,
         \shifted_products[3][5] , \shifted_products[3][4] ,
         \shifted_products[3][3] , \shifted_products[3][2] ,
         \shifted_products[3][1] , \shifted_products[3][0] ,
         \shifted_products[2][8] , \shifted_products[2][7] ,
         \shifted_products[2][6] , \shifted_products[2][5] ,
         \shifted_products[2][4] , \shifted_products[2][3] ,
         \shifted_products[2][2] , \shifted_products[2][1] ,
         \shifted_products[2][0] , \shifted_products[1][6] ,
         \shifted_products[1][5] , \shifted_products[1][4] ,
         \shifted_products[1][3] , \shifted_products[1][2] ,
         \shifted_products[1][1] , \shifted_products[1][0] ,
         \shifted_products[0][9] , N99, N98, N87, N86, N85, N84, N83, N82, N81,
         N80, N79, N78, N77, N76, N61, N60, N59, N58, N57, N56, N55, N54, N446,
         N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435,
         N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424,
         N423, N422, N421, N420, N419, N418, N417, N416, N415, N414, N413,
         N412, N411, N410, N409, N408, N407, N406, N405, N404, N403, N402,
         N401, N400, N399, N398, N397, N396, N395, N394, N393, N392, N391,
         N390, N389, N388, N387, N386, N385, N384, N383, N382, N381, N380,
         N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369,
         N368, N367, N366, N365, N364, N363, N362, N361, N360, N359, N358,
         N357, N356, N355, N354, N353, N352, N351, N350, N349, N348, N347,
         N346, N345, N344, N343, N342, N341, N340, N339, N338, N337, N336,
         N335, N334, N333, N332, N331, N330, N329, N328, N327, N326, N325,
         N324, N323, N322, N321, N320, N319, N318, N317, N316, N315, N314,
         N313, N312, N311, N310, N309, N308, N307, N306, N305, N304, N303,
         N302, N301, N300, N299, N298, N297, N296, N295, N294, N293, N292,
         N291, N290, N289, N288, N287, N286, N285, N284, N283, N282, N281,
         N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270,
         N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259,
         N258, N257, N256, N255, N254, N253, N252, N251, N250, N249, N248,
         N247, N246, N245, N244, N243, N242, N241, N240, N239, N238, N237,
         N236, N235, N234, N233, N232, N231, N230, N229, N214, N213, N212,
         N211, N210, N209, N208, N207, N206, N205, N204, N203, N202, N201,
         N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, N179,
         N178, N177, N176, N175, N174, N159, N158, N157, N156, N155, N154,
         N153, N152, N151, N150, N149, N148, N136, N135, N134, N133, N132,
         N131, N130, N129, N128, N127, N126, N125, N124, N123, N108, N107,
         N106, N105, N104, N103, N102, N101, N100,
         \add_14_root_add_199_I16/carry[6] ,
         \add_14_root_add_199_I16/carry[5] ,
         \add_14_root_add_199_I16/carry[4] ,
         \add_14_root_add_199_I16/carry[3] ,
         \add_14_root_add_199_I16/carry[2] ,
         \add_14_root_add_199_I16/carry[1] ,
         \add_13_root_add_199_I16/carry[9] ,
         \add_13_root_add_199_I16/carry[8] ,
         \add_13_root_add_199_I16/carry[7] ,
         \add_13_root_add_199_I16/carry[6] ,
         \add_13_root_add_199_I16/carry[5] ,
         \add_13_root_add_199_I16/carry[4] ,
         \add_13_root_add_199_I16/carry[3] ,
         \add_13_root_add_199_I16/carry[2] ,
         \add_13_root_add_199_I16/carry[1] ,
         \add_12_root_add_199_I16/carry[7] ,
         \add_12_root_add_199_I16/carry[6] ,
         \add_12_root_add_199_I16/carry[5] ,
         \add_12_root_add_199_I16/carry[4] ,
         \add_12_root_add_199_I16/carry[3] ,
         \add_12_root_add_199_I16/carry[2] ,
         \add_12_root_add_199_I16/carry[1] ,
         \add_11_root_add_199_I16/carry[11] ,
         \add_11_root_add_199_I16/carry[10] ,
         \add_11_root_add_199_I16/carry[9] ,
         \add_11_root_add_199_I16/carry[8] ,
         \add_11_root_add_199_I16/carry[7] ,
         \add_11_root_add_199_I16/carry[6] ,
         \add_11_root_add_199_I16/carry[5] ,
         \add_11_root_add_199_I16/carry[4] ,
         \add_11_root_add_199_I16/carry[3] ,
         \add_11_root_add_199_I16/carry[2] ,
         \add_11_root_add_199_I16/carry[1] ,
         \add_10_root_add_199_I16/carry[9] ,
         \add_10_root_add_199_I16/carry[8] ,
         \add_10_root_add_199_I16/carry[7] ,
         \add_10_root_add_199_I16/carry[6] ,
         \add_10_root_add_199_I16/carry[5] ,
         \add_10_root_add_199_I16/carry[4] ,
         \add_10_root_add_199_I16/carry[3] ,
         \add_10_root_add_199_I16/carry[2] ,
         \add_10_root_add_199_I16/carry[1] ,
         \add_9_root_add_199_I16/carry[13] ,
         \add_9_root_add_199_I16/carry[12] ,
         \add_9_root_add_199_I16/carry[11] ,
         \add_9_root_add_199_I16/carry[10] , \add_9_root_add_199_I16/carry[9] ,
         \add_9_root_add_199_I16/carry[8] , \add_9_root_add_199_I16/carry[7] ,
         \add_9_root_add_199_I16/carry[6] , \add_9_root_add_199_I16/carry[5] ,
         \add_9_root_add_199_I16/carry[4] , \add_9_root_add_199_I16/carry[3] ,
         \add_9_root_add_199_I16/carry[2] , \add_9_root_add_199_I16/carry[1] ,
         \add_8_root_add_199_I16/carry[11] ,
         \add_8_root_add_199_I16/carry[10] , \add_8_root_add_199_I16/carry[9] ,
         \add_8_root_add_199_I16/carry[8] , \add_8_root_add_199_I16/carry[7] ,
         \add_8_root_add_199_I16/carry[6] , \add_8_root_add_199_I16/carry[5] ,
         \add_8_root_add_199_I16/carry[4] , \add_8_root_add_199_I16/carry[3] ,
         \add_8_root_add_199_I16/carry[2] , \add_8_root_add_199_I16/carry[1] ,
         n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72,
         n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86,
         n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100,
         n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, n111,
         n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122,
         n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133,
         n134, n135, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246,
         n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257,
         n258, n259, n260, n261, n262, n263, n264, n265, n266, n267, n268,
         n269, n270, n271, n272, n273, n274, n275, n276, n277, n278, n279,
         n280, n281, n282, n283, n284, n285, n286, n287, n288, n289, n290,
         n291, n292, n293, n294, n295, n296, n297, n298, n299, n300, n301,
         n302, n303, n304, n305, n306, n307, n308, n309, n310, n311, n312,
         n313, n314, n315, n316, n317, n318, n319, n320, n321, n322, n323,
         n324, n325, n326;

  MAOI22D1 U26 ( .A1(\products[7][0] ), .A2(n314), .B1(n110), .B2(n12), .ZN(
        n315) );
  AN2XD1 U66 ( .A1(n294), .A2(n305), .Z(n293) );
  AN2XD1 U74 ( .A1(n320), .A2(n289), .Z(n290) );
  OA21D1 U130 ( .A1(n244), .A2(n61), .B(n280), .Z(n271) );
  AN2XD1 U134 ( .A1(n307), .A2(n297), .Z(n281) );
  AN2XD1 U161 ( .A1(n294), .A2(n324), .Z(n264) );
  AN2XD1 U239 ( .A1(n297), .A2(n317), .Z(n283) );
  shift_add_6_DW01_add_14_DW01_add_139 add_7_root_add_199_I16 ( .A({
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \shifted_products[14][14] , 
        \shifted_products[14][13] , \shifted_products[14][12] , 
        \shifted_products[14][11] , \shifted_products[14][10] , 
        \shifted_products[14][9] , \shifted_products[14][8] , 
        \shifted_products[14][7] , \shifted_products[14][6] , 
        \shifted_products[14][5] , \shifted_products[14][4] , 
        \shifted_products[14][3] , \shifted_products[14][2] , 
        \shifted_products[14][1] , \shifted_products[14][0] }), .B({
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \shifted_products[15][16] , \shifted_products[15][15] , 
        \shifted_products[15][14] , \shifted_products[15][13] , 
        \shifted_products[15][12] , \shifted_products[15][11] , 
        \shifted_products[15][10] , \shifted_products[15][9] , 
        \shifted_products[15][8] , \shifted_products[15][7] , 
        \shifted_products[15][6] , \shifted_products[15][5] , 
        \shifted_products[15][4] , \shifted_products[15][3] , 
        \shifted_products[15][2] , \shifted_products[15][1] , 
        \shifted_products[15][0] }), .CI(n246), .SUM({N257, N256, N255, N254, 
        N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, N243, N242, 
        N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, N231, N230, 
        N229}) );
  shift_add_6_DW01_add_6_DW01_add_131 add_4_root_add_0_root_add_199_I16 ( .A({
        n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, 
        n20, n20, n20, n20, N214, N213, N212, N211, N210, N209, N208, N207, 
        N206, N205, N204, N203, N202, N201}), .B({N257, N257, N257, N257, N256, 
        N255, N254, N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, 
        N243, N242, N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, 
        N231, N230, N229}), .CI(n246), .SUM({N382, N381, N380, N379, N378, 
        N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, N367, N366, 
        N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, N355, N354, 
        N353, N352, N351}) );
  shift_add_6_DW01_add_5_DW01_add_130 add_3_root_add_0_root_add_199_I16 ( .A({
        n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, 
        n21, n21, N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, 
        N179, N178, N177, N176, N175, N174}), .B({n18, n18, n18, n18, n18, n18, 
        n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, 
        N159, N158, N157, N156, N155, N154, N153, N152, N151, N150, N149, N148}), .CI(n246), .SUM({N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, 
        N340, N339, N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, 
        N328, N327, N326, N325, N324, N323, N322, N321, N320, N319}) );
  shift_add_6_DW01_add_4_DW01_add_129 add_5_root_add_199_I16 ( .A({n19, n19, 
        n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, 
        n19, n19, n19, n19, n19, N108, N107, N106, N105, N104, N103, N102, 
        N101, N100, N99}), .B({n22, n22, n22, n22, n22, n22, n22, n22, n22, 
        n22, n22, n22, n22, n22, n22, n22, n22, N136, N135, N134, N133, N132, 
        N131, N130, N129, N128, N127, N126, N125, N124, N123}), .CI(n246), 
        .SUM({N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}) );
  shift_add_6_DW01_add_3_DW01_add_128 add_6_root_add_199_I16 ( .A({n16, n16, 
        n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, n16, 
        n16, n16, n16, n16, n16, n16, N61, N60, N59, N58, N57, N56, N55, N54}), 
        .B({N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, 
        N98, N98, N98, N98, N98, N87, N86, N85, N84, N83, N82, N81, N80, N79, 
        N78, N77, N76}), .CI(n246), .SUM({N287, N286, N285, N284, N283, N282, 
        N281, N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270, 
        N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259, N258}) );
  shift_add_6_DW01_add_2_DW01_add_127 add_2_root_add_0_root_add_199_I16 ( .A({
        N318, N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}), .B({N382, N381, N380, 
        N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, 
        N367, N366, N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, 
        N355, N354, N353, N352, N351}), .CI(n246), .SUM({N446, N445, N444, 
        N443, N442, N441, N440, N439, N438, N437, N436, N435, N434, N433, N432, 
        N431, N430, N429, N428, N427, N426, N425, N424, N423, N422, N421, N420, 
        N419, N418, N417, N416, N415}) );
  shift_add_6_DW01_add_1_DW01_add_126 add_1_root_add_0_root_add_199_I16 ( .A({
        N446, N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435, 
        N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424, N423, 
        N422, N421, N420, N419, N418, N417, N416, N415}), .B({N287, N287, N287, 
        N286, N285, N284, N283, N282, N281, N280, N279, N278, N277, N276, N275, 
        N274, N273, N272, N271, N270, N269, N268, N267, N266, N265, N264, N263, 
        N262, N261, N260, N259, N258}), .CI(n246), .SUM({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}) );
  shift_add_6_DW01_add_0_DW01_add_125 add_0_root_add_0_root_add_199_I16 ( .A({
        N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, N340, N339, 
        N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, N328, N327, 
        N326, N325, N324, N323, N322, N321, N320, N319}), .B({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}), .CI(n246), .SUM(shift_add_out) );
  INVD2 U2 ( .I(n325), .ZN(n243) );
  ND2D1 U3 ( .A1(n248), .A2(n247), .ZN(n325) );
  INR3D1 U4 ( .A1(input_bitwidth[2]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[1]), .ZN(n248) );
  IAO22D1 U5 ( .B1(\products[15][2] ), .B2(n277), .A1(n62), .A2(n306), .ZN(
        n278) );
  CKND2D0 U6 ( .A1(n307), .A2(n306), .ZN(n309) );
  CKND2D0 U7 ( .A1(n306), .A2(n274), .ZN(n266) );
  CKND2D0 U8 ( .A1(n297), .A2(n306), .ZN(n292) );
  ND2D2 U9 ( .A1(n306), .A2(n312), .ZN(n285) );
  CKAN2D1 U10 ( .A1(n324), .A2(n325), .Z(n313) );
  AOI222D2 U11 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[0][9] ), .B1(\add_14_root_add_199_I16/carry[6] ), 
        .B2(\shifted_products[1][6] ), .C1(\shifted_products[1][6] ), .C2(
        \shifted_products[0][9] ), .ZN(n60) );
  FA1D1 U12 ( .A(\products[0][5] ), .B(\shifted_products[1][5] ), .CI(
        \add_14_root_add_199_I16/carry[5] ), .CO(
        \add_14_root_add_199_I16/carry[6] ), .S(N59) );
  AOI222D2 U13 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(\products[4][5] ), .B1(\add_12_root_add_199_I16/carry[7] ), .B2(\shifted_products[5][7] ), .C1(
        \shifted_products[5][7] ), .C2(\products[4][5] ), .ZN(n52) );
  FA1D1 U14 ( .A(\shifted_products[4][6] ), .B(\shifted_products[5][6] ), .CI(
        \add_12_root_add_199_I16/carry[6] ), .CO(
        \add_12_root_add_199_I16/carry[7] ), .S(N105) );
  AOI222D2 U15 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \products[12][5] ), .B1(\add_8_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[13][11] ), .C1(\shifted_products[13][11] ), .C2(
        \products[12][5] ), .ZN(n38) );
  FA1D1 U16 ( .A(\shifted_products[12][10] ), .B(\shifted_products[13][10] ), 
        .CI(\add_8_root_add_199_I16/carry[10] ), .CO(
        \add_8_root_add_199_I16/carry[11] ), .S(N211) );
  ND3D2 U17 ( .A1(n6), .A2(n7), .A3(n8), .ZN(n58) );
  CKND2D1 U18 ( .A1(n250), .A2(n249), .ZN(n297) );
  CKND2D0 U19 ( .A1(n249), .A2(n251), .ZN(n12) );
  INR3D1 U20 ( .A1(weight_bitwidth[2]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[1]), .ZN(n249) );
  AOI222D2 U21 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \products[6][5] ), .B1(\add_11_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[7][11] ), .C1(\shifted_products[7][11] ), .C2(
        \products[6][5] ), .ZN(n50) );
  NR3D2 U22 ( .A1(n24), .A2(n25), .A3(n26), .ZN(n57) );
  OA21D1 U23 ( .A1(n288), .A2(n132), .B(n287), .Z(n30) );
  INVD1 U24 ( .I(\products[2][5] ), .ZN(n56) );
  INR2D1 U25 ( .A1(n274), .B1(n243), .ZN(n305) );
  AN2XD1 U27 ( .A1(n294), .A2(n37), .Z(n291) );
  ND2D1 U28 ( .A1(n305), .A2(n282), .ZN(n311) );
  NR2D1 U29 ( .A1(n321), .A2(n322), .ZN(n282) );
  FA1D0 U30 ( .A(\shifted_products[2][8] ), .B(\shifted_products[3][8] ), .CI(
        \add_13_root_add_199_I16/carry[8] ), .CO(
        \add_13_root_add_199_I16/carry[9] ), .S(N84) );
  FA1D0 U31 ( .A(\shifted_products[2][6] ), .B(\shifted_products[3][6] ), .CI(
        \add_13_root_add_199_I16/carry[6] ), .CO(
        \add_13_root_add_199_I16/carry[7] ), .S(N82) );
  ND2D2 U32 ( .A1(n283), .A2(n241), .ZN(n322) );
  ND2D1 U33 ( .A1(n34), .A2(n307), .ZN(n321) );
  XNR3D2 U34 ( .A1(\products[7][5] ), .A2(n113), .A3(n23), .ZN(n22) );
  CKAN2D0 U35 ( .A1(n312), .A2(n37), .Z(n1) );
  CKND2D1 U36 ( .A1(n252), .A2(n251), .ZN(n312) );
  OR2XD1 U37 ( .A1(n50), .A2(n113), .Z(n2) );
  OR2XD1 U38 ( .A1(n50), .A2(n31), .Z(n3) );
  OR2D1 U39 ( .A1(n113), .A2(n31), .Z(n4) );
  ND3D2 U40 ( .A1(n2), .A2(n3), .A3(n4), .ZN(n51) );
  NR2D0 U41 ( .A1(n321), .A2(n322), .ZN(n5) );
  OR2XD1 U42 ( .A1(n57), .A2(n56), .Z(n6) );
  OR2XD1 U43 ( .A1(n57), .A2(n30), .Z(n7) );
  OR2XD1 U44 ( .A1(n56), .A2(n30), .Z(n8) );
  AN2D1 U45 ( .A1(n53), .A2(\products[4][5] ), .Z(n9) );
  AN2D2 U46 ( .A1(n53), .A2(\products[5][5] ), .Z(n10) );
  AN2XD1 U47 ( .A1(\products[4][5] ), .A2(\products[5][5] ), .Z(n11) );
  NR3D2 U48 ( .A1(n9), .A2(n10), .A3(n11), .ZN(n54) );
  OAI222D1 U49 ( .A1(n52), .A2(n125), .B1(n52), .B2(n55), .C1(n125), .C2(n55), 
        .ZN(n53) );
  CKND2D0 U50 ( .A1(n249), .A2(n251), .ZN(n317) );
  AN2D1 U51 ( .A1(n39), .A2(\products[12][5] ), .Z(n13) );
  AN2D2 U52 ( .A1(n39), .A2(\products[13][5] ), .Z(n14) );
  AN2D1 U53 ( .A1(\products[12][5] ), .A2(\products[13][5] ), .Z(n15) );
  NR3D2 U54 ( .A1(n13), .A2(n14), .A3(n15), .ZN(n40) );
  OAI222D1 U55 ( .A1(n38), .A2(n79), .B1(n38), .B2(n41), .C1(n79), .C2(n41), 
        .ZN(n39) );
  NR2D0 U56 ( .A1(n36), .A2(n78), .ZN(\shifted_products[13][0] ) );
  AN2D1 U57 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(\products[2][5] ), 
        .Z(n24) );
  XNR3D1 U58 ( .A1(\products[3][5] ), .A2(n56), .A3(n29), .ZN(n28) );
  INVD3 U59 ( .I(n28), .ZN(N98) );
  NR2D0 U60 ( .A1(n313), .A2(n216), .ZN(\shifted_products[3][0] ) );
  AOI222D0 U61 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \products[10][5] ), .B1(\add_9_root_add_199_I16/carry[13] ), .B2(
        \shifted_products[11][13] ), .C1(\shifted_products[11][13] ), .C2(
        \products[10][5] ), .ZN(n43) );
  CKAN2D0 U62 ( .A1(n300), .A2(n34), .Z(n320) );
  AN2XD1 U63 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .Z(n25) );
  CKND2D3 U64 ( .A1(n300), .A2(n230), .ZN(n299) );
  OAI22D0 U65 ( .A1(n1), .A2(n115), .B1(n233), .B2(n117), .ZN(
        \shifted_products[6][3] ) );
  OAI22D0 U67 ( .A1(n324), .A2(n98), .B1(n236), .B2(n100), .ZN(
        \shifted_products[9][3] ) );
  NR2D0 U68 ( .A1(n324), .A2(n89), .ZN(\shifted_products[11][1] ) );
  AOI222D1 U69 ( .A1(n58), .A2(\products[2][5] ), .B1(n58), .B2(
        \products[3][5] ), .C1(\products[2][5] ), .C2(\products[3][5] ), .ZN(
        n29) );
  INR2D1 U70 ( .A1(n307), .B1(n243), .ZN(n300) );
  CKND2D1 U71 ( .A1(n252), .A2(n250), .ZN(n306) );
  XNR3D4 U72 ( .A1(n222), .A2(n17), .A3(n59), .ZN(n16) );
  OA222D1 U73 ( .A1(n60), .A2(n59), .B1(n60), .B2(n222), .C1(n59), .C2(n222), 
        .Z(n17) );
  CKND2 U75 ( .I(n270), .ZN(n230) );
  XNR3D1 U76 ( .A1(n30), .A2(n57), .A3(n56), .ZN(N86) );
  OAI22D0 U77 ( .A1(n313), .A2(n131), .B1(n286), .B2(n133), .ZN(
        \shifted_products[3][5] ) );
  OAI22D0 U78 ( .A1(n313), .A2(n133), .B1(n286), .B2(n135), .ZN(
        \shifted_products[3][3] ) );
  NR2D0 U79 ( .A1(n228), .A2(n218), .ZN(\shifted_products[2][3] ) );
  FA1D1 U80 ( .A(\shifted_products[2][7] ), .B(\shifted_products[3][7] ), .CI(
        \add_13_root_add_199_I16/carry[7] ), .CO(
        \add_13_root_add_199_I16/carry[8] ), .S(N83) );
  NR2D0 U81 ( .A1(n313), .A2(n135), .ZN(\shifted_products[3][1] ) );
  XOR3D4 U82 ( .A1(\products[9][5] ), .A2(n48), .A3(n46), .Z(n18) );
  AOI222D1 U83 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(\products[8][5] ), .B1(\add_10_root_add_199_I16/carry[9] ), .B2(\shifted_products[9][9] ), .C1(
        \shifted_products[9][9] ), .C2(\products[8][5] ), .ZN(n45) );
  XOR3D2 U84 ( .A1(\products[5][5] ), .A2(n54), .A3(n125), .Z(n19) );
  XOR3D2 U85 ( .A1(\products[13][5] ), .A2(n40), .A3(n79), .Z(n20) );
  XOR3D1 U86 ( .A1(\products[11][5] ), .A2(n42), .A3(n27), .Z(n21) );
  OAI22D0 U87 ( .A1(n313), .A2(n222), .B1(n5), .B2(n223), .ZN(
        \shifted_products[1][6] ) );
  OAI22D0 U88 ( .A1(n240), .A2(n109), .B1(n304), .B2(n107), .ZN(
        \shifted_products[7][11] ) );
  NR2D0 U89 ( .A1(n318), .A2(n243), .ZN(n326) );
  CKAN2D0 U90 ( .A1(n283), .A2(n34), .Z(n288) );
  OAI21D0 U91 ( .A1(n63), .A2(n34), .B(n273), .ZN(\shifted_products[15][15] )
         );
  NR2D0 U92 ( .A1(n36), .A2(n66), .ZN(\shifted_products[15][0] ) );
  CKND2D0 U93 ( .A1(n300), .A2(n229), .ZN(n272) );
  CKND2D0 U94 ( .A1(n230), .A2(n283), .ZN(n318) );
  CKND1 U95 ( .I(\products[13][5] ), .ZN(n73) );
  NR2D0 U96 ( .A1(n112), .A2(n36), .ZN(\shifted_products[7][0] ) );
  INVD2 U97 ( .I(n285), .ZN(n241) );
  CKND2D0 U98 ( .A1(\products[12][5] ), .A2(n318), .ZN(n260) );
  CKND2D0 U99 ( .A1(\products[8][5] ), .A2(n318), .ZN(n319) );
  CKND1 U100 ( .I(\products[7][5] ), .ZN(n107) );
  CKND2D0 U101 ( .A1(\products[3][5] ), .A2(n299), .ZN(n287) );
  NR2D0 U102 ( .A1(n270), .A2(n243), .ZN(n259) );
  CKND2D0 U103 ( .A1(\products[2][5] ), .A2(n299), .ZN(n284) );
  CKND2D0 U104 ( .A1(\products[10][5] ), .A2(n270), .ZN(n253) );
  CKND1 U105 ( .I(\products[6][5] ), .ZN(n113) );
  CKND1 U106 ( .I(\products[14][5] ), .ZN(n67) );
  CKAN2D0 U107 ( .A1(n300), .A2(n283), .Z(n254) );
  CKND2D0 U108 ( .A1(\products[15][5] ), .A2(n270), .ZN(n280) );
  CKND2D1 U109 ( .A1(n234), .A2(n300), .ZN(n301) );
  CKND1 U110 ( .I(\products[5][5] ), .ZN(n119) );
  CKAN2D0 U111 ( .A1(n294), .A2(n313), .Z(n295) );
  OAI22D0 U112 ( .A1(n291), .A2(n125), .B1(n290), .B2(n127), .ZN(
        \shifted_products[4][5] ) );
  OAI22D0 U113 ( .A1(n291), .A2(n79), .B1(n289), .B2(n81), .ZN(
        \shifted_products[12][5] ) );
  OAI22D0 U114 ( .A1(n36), .A2(n121), .B1(n293), .B2(n123), .ZN(
        \shifted_products[5][3] ) );
  OAI22D0 U115 ( .A1(n291), .A2(n127), .B1(n290), .B2(n129), .ZN(
        \shifted_products[4][3] ) );
  OAI22D0 U116 ( .A1(n36), .A2(n63), .B1(n235), .B2(n65), .ZN(
        \shifted_products[15][3] ) );
  OAI22D0 U117 ( .A1(n1), .A2(n69), .B1(n234), .B2(n71), .ZN(
        \shifted_products[14][3] ) );
  OAI22D0 U118 ( .A1(n324), .A2(n87), .B1(n241), .B2(n89), .ZN(
        \shifted_products[11][3] ) );
  NR2D0 U119 ( .A1(n230), .A2(n92), .ZN(\shifted_products[10][3] ) );
  NR2D0 U120 ( .A1(n229), .A2(n103), .ZN(\shifted_products[8][3] ) );
  OAI22D0 U121 ( .A1(n35), .A2(n75), .B1(n232), .B2(n77), .ZN(
        \shifted_products[13][3] ) );
  OAI22D0 U122 ( .A1(n291), .A2(n81), .B1(n289), .B2(n83), .ZN(
        \shifted_products[12][3] ) );
  OAI22D0 U123 ( .A1(n109), .A2(n35), .B1(n231), .B2(n111), .ZN(
        \shifted_products[7][3] ) );
  OAI21D0 U124 ( .A1(n65), .A2(n34), .B(n273), .ZN(\shifted_products[15][13] )
         );
  NR2D0 U125 ( .A1(n36), .A2(n123), .ZN(\shifted_products[5][1] ) );
  NR2D0 U126 ( .A1(n291), .A2(n83), .ZN(\shifted_products[12][1] ) );
  NR2D0 U127 ( .A1(n36), .A2(n77), .ZN(\shifted_products[13][1] ) );
  NR2D0 U128 ( .A1(n111), .A2(n36), .ZN(\shifted_products[7][1] ) );
  NR2D0 U129 ( .A1(n230), .A2(n94), .ZN(\shifted_products[10][1] ) );
  NR2D0 U131 ( .A1(n36), .A2(n65), .ZN(\shifted_products[15][1] ) );
  CKND1 U132 ( .I(\products[4][5] ), .ZN(n125) );
  CKAN2D0 U133 ( .A1(\products[0][5] ), .A2(n36), .Z(\shifted_products[0][9] )
         );
  AO222D1 U135 ( .A1(n51), .A2(\products[6][5] ), .B1(n51), .B2(
        \products[7][5] ), .C1(\products[6][5] ), .C2(\products[7][5] ), .Z(
        n23) );
  OAI21D0 U136 ( .A1(n62), .A2(n34), .B(n273), .ZN(\shifted_products[15][16] )
         );
  OAI21D0 U137 ( .A1(n288), .A2(n133), .B(n287), .ZN(\shifted_products[3][9] )
         );
  AN2D4 U138 ( .A1(n274), .A2(n37), .Z(n324) );
  NR2D0 U139 ( .A1(n228), .A2(n221), .ZN(\shifted_products[2][0] ) );
  OAI21D0 U140 ( .A1(n288), .A2(n219), .B(n284), .ZN(\shifted_products[2][6] )
         );
  OAI22D0 U141 ( .A1(n313), .A2(n223), .B1(n5), .B2(n225), .ZN(
        \shifted_products[1][4] ) );
  OAI22D0 U142 ( .A1(n313), .A2(n224), .B1(n5), .B2(n226), .ZN(
        \shifted_products[1][3] ) );
  OAI22D0 U143 ( .A1(n313), .A2(n132), .B1(n286), .B2(n134), .ZN(
        \shifted_products[3][4] ) );
  OAI22D0 U144 ( .A1(n228), .A2(n217), .B1(n288), .B2(n221), .ZN(
        \shifted_products[2][4] ) );
  OAI22D0 U145 ( .A1(n313), .A2(n134), .B1(n286), .B2(n216), .ZN(
        \shifted_products[3][2] ) );
  NR2D0 U146 ( .A1(n228), .A2(n219), .ZN(\shifted_products[2][2] ) );
  NR2D0 U147 ( .A1(n313), .A2(n226), .ZN(\shifted_products[1][1] ) );
  INR2XD0 U148 ( .A1(n274), .B1(n292), .ZN(n289) );
  CKAN2D0 U149 ( .A1(n312), .A2(n37), .Z(n303) );
  INR2D0 U150 ( .A1(n307), .B1(n285), .ZN(n286) );
  CKND2D0 U151 ( .A1(n325), .A2(n12), .ZN(n277) );
  CKND2D0 U152 ( .A1(n34), .A2(n297), .ZN(n314) );
  CKAN2D0 U153 ( .A1(n12), .A2(n312), .Z(n294) );
  CKND2D0 U154 ( .A1(n300), .A2(n297), .ZN(n267) );
  AOI22D0 U155 ( .A1(\products[14][0] ), .A2(n267), .B1(\products[14][4] ), 
        .B2(n266), .ZN(n268) );
  NR2D0 U156 ( .A1(n291), .A2(n130), .ZN(\shifted_products[4][0] ) );
  NR2D0 U157 ( .A1(n291), .A2(n84), .ZN(\shifted_products[12][0] ) );
  AOI22D0 U158 ( .A1(\products[6][4] ), .A2(n301), .B1(\products[6][0] ), .B2(
        n314), .ZN(n302) );
  NR2D0 U159 ( .A1(n230), .A2(n95), .ZN(\shifted_products[10][0] ) );
  NR2D0 U160 ( .A1(n229), .A2(n106), .ZN(\shifted_products[8][0] ) );
  CKND1 U162 ( .I(\products[15][4] ), .ZN(n62) );
  CKND1 U163 ( .I(\products[14][3] ), .ZN(n69) );
  OAI21D0 U164 ( .A1(n288), .A2(n134), .B(n287), .ZN(\shifted_products[3][8] )
         );
  OAI21D0 U165 ( .A1(n288), .A2(n217), .B(n284), .ZN(\shifted_products[2][8] )
         );
  CKND1 U166 ( .I(\products[13][3] ), .ZN(n75) );
  CKND1 U167 ( .I(\products[7][3] ), .ZN(n109) );
  CKND2D0 U168 ( .A1(n305), .A2(n312), .ZN(n308) );
  CKND2D0 U169 ( .A1(n294), .A2(n274), .ZN(n261) );
  CKND1 U170 ( .I(\products[6][3] ), .ZN(n115) );
  CKND1 U171 ( .I(\products[14][4] ), .ZN(n68) );
  CKND1 U172 ( .I(\products[7][4] ), .ZN(n108) );
  CKND1 U173 ( .I(\products[12][3] ), .ZN(n81) );
  CKND1 U174 ( .I(\products[13][4] ), .ZN(n74) );
  CKND1 U175 ( .I(\products[5][3] ), .ZN(n121) );
  OAI21D0 U176 ( .A1(n320), .A2(n103), .B(n319), .ZN(\shifted_products[8][7] )
         );
  CKND1 U177 ( .I(\products[6][4] ), .ZN(n114) );
  OAI21D0 U178 ( .A1(n320), .A2(n81), .B(n260), .ZN(\shifted_products[12][9] )
         );
  OAI22D0 U179 ( .A1(n229), .A2(n102), .B1(n320), .B2(n106), .ZN(
        \shifted_products[8][4] ) );
  OAI21D0 U180 ( .A1(n320), .A2(n105), .B(n319), .ZN(\shifted_products[8][5] )
         );
  OAI21D0 U181 ( .A1(n320), .A2(n83), .B(n260), .ZN(\shifted_products[12][7] )
         );
  OAI22D0 U182 ( .A1(n230), .A2(n91), .B1(n254), .B2(n95), .ZN(
        \shifted_products[10][4] ) );
  OAI22D0 U183 ( .A1(n291), .A2(n126), .B1(n290), .B2(n128), .ZN(
        \shifted_products[4][4] ) );
  OAI22D0 U184 ( .A1(n291), .A2(n80), .B1(n289), .B2(n82), .ZN(
        \shifted_products[12][4] ) );
  OAI21D0 U185 ( .A1(n320), .A2(n104), .B(n319), .ZN(\shifted_products[8][6] )
         );
  AOI22D0 U186 ( .A1(\products[9][4] ), .A2(n322), .B1(\products[9][0] ), .B2(
        n321), .ZN(n323) );
  AOI22D0 U187 ( .A1(\products[15][4] ), .A2(n275), .B1(\products[15][0] ), 
        .B2(n277), .ZN(n276) );
  AOI22D0 U188 ( .A1(\products[11][0] ), .A2(n257), .B1(\products[11][4] ), 
        .B2(n285), .ZN(n258) );
  OAI22D0 U189 ( .A1(n239), .A2(n69), .B1(n269), .B2(n67), .ZN(
        \shifted_products[14][9] ) );
  OAI22D0 U190 ( .A1(n36), .A2(n122), .B1(n293), .B2(n124), .ZN(
        \shifted_products[5][2] ) );
  OAI22D0 U191 ( .A1(n291), .A2(n128), .B1(n290), .B2(n130), .ZN(
        \shifted_products[4][2] ) );
  OAI22D0 U192 ( .A1(n36), .A2(n76), .B1(n232), .B2(n78), .ZN(
        \shifted_products[13][2] ) );
  OAI22D0 U193 ( .A1(n291), .A2(n82), .B1(n289), .B2(n84), .ZN(
        \shifted_products[12][2] ) );
  OAI22D0 U194 ( .A1(n36), .A2(n64), .B1(n235), .B2(n66), .ZN(
        \shifted_products[15][2] ) );
  OAI22D0 U195 ( .A1(n1), .A2(n70), .B1(n234), .B2(n72), .ZN(
        \shifted_products[14][2] ) );
  OAI22D0 U196 ( .A1(n324), .A2(n88), .B1(n241), .B2(n90), .ZN(
        \shifted_products[11][2] ) );
  NR2D0 U197 ( .A1(n230), .A2(n93), .ZN(\shifted_products[10][2] ) );
  OAI22D0 U198 ( .A1(n324), .A2(n99), .B1(n236), .B2(n101), .ZN(
        \shifted_products[9][2] ) );
  NR2D0 U199 ( .A1(n229), .A2(n104), .ZN(\shifted_products[8][2] ) );
  OAI22D0 U200 ( .A1(n1), .A2(n116), .B1(n233), .B2(n118), .ZN(
        \shifted_products[6][2] ) );
  CKAN2D0 U201 ( .A1(n313), .A2(n312), .Z(n316) );
  CKND1 U202 ( .I(\products[5][4] ), .ZN(n120) );
  CKND1 U203 ( .I(\products[4][4] ), .ZN(n126) );
  CKND1 U204 ( .I(\products[4][3] ), .ZN(n127) );
  CKAN2D0 U205 ( .A1(n324), .A2(n312), .Z(n279) );
  CKND2D0 U206 ( .A1(n283), .A2(n307), .ZN(n257) );
  OAI22D0 U207 ( .A1(n313), .A2(n225), .B1(n5), .B2(n227), .ZN(
        \shifted_products[1][2] ) );
  CKND2D0 U208 ( .A1(n250), .A2(n247), .ZN(n274) );
  CKND2D0 U209 ( .A1(n252), .A2(n248), .ZN(n307) );
  CKND2D0 U210 ( .A1(n249), .A2(n248), .ZN(n298) );
  CKND1 U211 ( .I(\products[6][2] ), .ZN(n116) );
  CKND1 U212 ( .I(\products[12][2] ), .ZN(n82) );
  AOI22D0 U213 ( .A1(\products[7][2] ), .A2(n309), .B1(\products[7][4] ), .B2(
        n308), .ZN(n310) );
  AOI22D0 U214 ( .A1(\products[13][4] ), .A2(n261), .B1(\products[13][2] ), 
        .B2(n292), .ZN(n262) );
  OAI21D0 U215 ( .A1(n320), .A2(n82), .B(n260), .ZN(\shifted_products[12][8] )
         );
  AOI22D0 U216 ( .A1(\products[13][4] ), .A2(n292), .B1(\products[13][2] ), 
        .B2(n243), .ZN(n263) );
  CKND1 U217 ( .I(\products[5][2] ), .ZN(n122) );
  CKND1 U218 ( .I(\products[4][2] ), .ZN(n128) );
  AN2D1 U219 ( .A1(\shifted_products[3][9] ), .A2(\products[2][5] ), .Z(n26)
         );
  INVD1 U220 ( .I(n318), .ZN(n229) );
  INVD1 U221 ( .I(n301), .ZN(n233) );
  INVD1 U222 ( .I(n299), .ZN(n228) );
  CKBD1 U223 ( .I(n311), .Z(n36) );
  CKBD1 U224 ( .I(n311), .Z(n35) );
  CKBD1 U225 ( .I(n311), .Z(n37) );
  INVD1 U226 ( .I(n322), .ZN(n236) );
  ND2D1 U227 ( .A1(n324), .A2(n241), .ZN(n270) );
  OAI22D1 U228 ( .A1(n296), .A2(n121), .B1(n295), .B2(n119), .ZN(
        \shifted_products[5][7] ) );
  INVD1 U229 ( .I(\products[15][5] ), .ZN(n61) );
  INVD1 U230 ( .I(n261), .ZN(n232) );
  NR2D1 U231 ( .A1(n1), .A2(n72), .ZN(\shifted_products[14][0] ) );
  INVD1 U232 ( .I(n308), .ZN(n231) );
  AOI222D0 U233 ( .A1(n44), .A2(\products[10][5] ), .B1(n44), .B2(
        \products[11][5] ), .C1(\products[10][5] ), .C2(\products[11][5] ), 
        .ZN(n27) );
  FA1D0 U234 ( .A(\shifted_products[10][1] ), .B(\shifted_products[11][1] ), 
        .CI(\add_9_root_add_199_I16/carry[1] ), .CO(
        \add_9_root_add_199_I16/carry[2] ), .S(N175) );
  FA1D0 U235 ( .A(\shifted_products[12][5] ), .B(\shifted_products[13][5] ), 
        .CI(\add_8_root_add_199_I16/carry[5] ), .CO(
        \add_8_root_add_199_I16/carry[6] ), .S(N206) );
  OAI222D0 U236 ( .A1(n238), .A2(n77), .B1(n232), .B2(n75), .C1(n35), .C2(n73), 
        .ZN(\shifted_products[13][5] ) );
  FA1D0 U237 ( .A(\shifted_products[4][5] ), .B(\shifted_products[5][5] ), 
        .CI(\add_12_root_add_199_I16/carry[5] ), .CO(
        \add_12_root_add_199_I16/carry[6] ), .S(N104) );
  OAI222D0 U238 ( .A1(n293), .A2(n121), .B1(n296), .B2(n123), .C1(n35), .C2(
        n119), .ZN(\shifted_products[5][5] ) );
  FA1D0 U240 ( .A(\shifted_products[4][3] ), .B(\shifted_products[5][3] ), 
        .CI(\add_12_root_add_199_I16/carry[3] ), .CO(
        \add_12_root_add_199_I16/carry[4] ), .S(N102) );
  FA1D0 U241 ( .A(\shifted_products[2][3] ), .B(\shifted_products[3][3] ), 
        .CI(\add_13_root_add_199_I16/carry[3] ), .CO(
        \add_13_root_add_199_I16/carry[4] ), .S(N79) );
  FA1D0 U242 ( .A(\shifted_products[10][3] ), .B(\shifted_products[11][3] ), 
        .CI(\add_9_root_add_199_I16/carry[3] ), .CO(
        \add_9_root_add_199_I16/carry[4] ), .S(N177) );
  FA1D0 U243 ( .A(\shifted_products[2][5] ), .B(\shifted_products[3][5] ), 
        .CI(\add_13_root_add_199_I16/carry[5] ), .CO(
        \add_13_root_add_199_I16/carry[6] ), .S(N81) );
  OAI21D1 U244 ( .A1(n288), .A2(n220), .B(n284), .ZN(\shifted_products[2][5] )
         );
  FA1D0 U245 ( .A(\shifted_products[10][9] ), .B(\shifted_products[11][9] ), 
        .CI(\add_9_root_add_199_I16/carry[9] ), .CO(
        \add_9_root_add_199_I16/carry[10] ), .S(N183) );
  OAI22D1 U246 ( .A1(n237), .A2(n87), .B1(n259), .B2(n85), .ZN(
        \shifted_products[11][9] ) );
  OAI21D1 U247 ( .A1(n33), .A2(n94), .B(n255), .ZN(\shifted_products[10][9] )
         );
  FA1D0 U248 ( .A(\shifted_products[6][3] ), .B(\shifted_products[7][3] ), 
        .CI(\add_11_root_add_199_I16/carry[3] ), .CO(
        \add_11_root_add_199_I16/carry[4] ), .S(N126) );
  FA1D0 U249 ( .A(\shifted_products[12][3] ), .B(\shifted_products[13][3] ), 
        .CI(\add_8_root_add_199_I16/carry[3] ), .CO(
        \add_8_root_add_199_I16/carry[4] ), .S(N204) );
  FA1D0 U250 ( .A(\shifted_products[8][3] ), .B(\shifted_products[9][3] ), 
        .CI(\add_10_root_add_199_I16/carry[3] ), .CO(
        \add_10_root_add_199_I16/carry[4] ), .S(N151) );
  OAI21D1 U251 ( .A1(n281), .A2(n63), .B(n271), .ZN(\shifted_products[15][11] ) );
  OAI21D1 U252 ( .A1(n33), .A2(n71), .B(n265), .ZN(\shifted_products[14][11] )
         );
  OAI21D1 U253 ( .A1(n33), .A2(n69), .B(n265), .ZN(\shifted_products[14][13] )
         );
  OAI21D1 U254 ( .A1(n288), .A2(n135), .B(n287), .ZN(\shifted_products[3][7] )
         );
  OAI21D1 U255 ( .A1(n288), .A2(n218), .B(n284), .ZN(\shifted_products[2][7] )
         );
  FA1D0 U256 ( .A(\shifted_products[10][11] ), .B(\shifted_products[11][11] ), 
        .CI(\add_9_root_add_199_I16/carry[11] ), .CO(
        \add_9_root_add_199_I16/carry[12] ), .S(N185) );
  OAI21D1 U257 ( .A1(n33), .A2(n89), .B(n256), .ZN(\shifted_products[11][11] )
         );
  OAI21D1 U258 ( .A1(n33), .A2(n92), .B(n255), .ZN(\shifted_products[10][11] )
         );
  FA1D0 U259 ( .A(\shifted_products[2][1] ), .B(\shifted_products[3][1] ), 
        .CI(\add_13_root_add_199_I16/carry[1] ), .CO(
        \add_13_root_add_199_I16/carry[2] ), .S(N77) );
  NR2D1 U260 ( .A1(n228), .A2(n220), .ZN(\shifted_products[2][1] ) );
  FA1D0 U261 ( .A(\shifted_products[6][1] ), .B(\shifted_products[7][1] ), 
        .CI(\add_11_root_add_199_I16/carry[1] ), .CO(
        \add_11_root_add_199_I16/carry[2] ), .S(N124) );
  NR2D1 U262 ( .A1(n303), .A2(n117), .ZN(\shifted_products[6][1] ) );
  FA1D0 U263 ( .A(\shifted_products[8][1] ), .B(\shifted_products[9][1] ), 
        .CI(\add_10_root_add_199_I16/carry[1] ), .CO(
        \add_10_root_add_199_I16/carry[2] ), .S(N149) );
  NR2D1 U264 ( .A1(n324), .A2(n100), .ZN(\shifted_products[9][1] ) );
  NR2D1 U265 ( .A1(n229), .A2(n105), .ZN(\shifted_products[8][1] ) );
  NR2D1 U266 ( .A1(n303), .A2(n71), .ZN(\shifted_products[14][1] ) );
  FA1D0 U267 ( .A(\shifted_products[4][1] ), .B(\shifted_products[5][1] ), 
        .CI(\add_12_root_add_199_I16/carry[1] ), .CO(
        \add_12_root_add_199_I16/carry[2] ), .S(N100) );
  NR2D1 U268 ( .A1(n291), .A2(n129), .ZN(\shifted_products[4][1] ) );
  FA1D0 U269 ( .A(\shifted_products[12][1] ), .B(\shifted_products[13][1] ), 
        .CI(\add_8_root_add_199_I16/carry[1] ), .CO(
        \add_8_root_add_199_I16/carry[2] ), .S(N202) );
  OAI22D1 U270 ( .A1(n313), .A2(n222), .B1(n5), .B2(n224), .ZN(
        \shifted_products[1][5] ) );
  NR2D1 U271 ( .A1(n303), .A2(n118), .ZN(\shifted_products[6][0] ) );
  INVD1 U272 ( .I(\products[12][5] ), .ZN(n79) );
  INVD1 U273 ( .I(\products[1][5] ), .ZN(n222) );
  NR2D1 U274 ( .A1(n292), .A2(n321), .ZN(n296) );
  INVD1 U275 ( .I(n314), .ZN(n240) );
  OAI22D1 U276 ( .A1(n245), .A2(n75), .B1(n326), .B2(n73), .ZN(
        \shifted_products[13][11] ) );
  OAI22D1 U277 ( .A1(n245), .A2(n98), .B1(n326), .B2(n96), .ZN(
        \shifted_products[9][9] ) );
  INVD1 U278 ( .I(\products[9][5] ), .ZN(n96) );
  INVD1 U279 ( .I(\products[11][5] ), .ZN(n85) );
  OAI21D1 U280 ( .A1(n33), .A2(n87), .B(n256), .ZN(\shifted_products[11][13] )
         );
  OAI22D1 U281 ( .A1(n245), .A2(n74), .B1(n326), .B2(n73), .ZN(
        \shifted_products[13][12] ) );
  OAI22D1 U282 ( .A1(n245), .A2(n97), .B1(n326), .B2(n96), .ZN(
        \shifted_products[9][10] ) );
  ND2D1 U283 ( .A1(\products[14][5] ), .A2(n272), .ZN(n265) );
  ND2D1 U284 ( .A1(\products[10][5] ), .A2(n272), .ZN(n255) );
  ND2D1 U285 ( .A1(\products[15][5] ), .A2(n272), .ZN(n273) );
  ND2D1 U286 ( .A1(\products[11][5] ), .A2(n272), .ZN(n256) );
  INVD1 U287 ( .I(n266), .ZN(n234) );
  INVD1 U288 ( .I(n321), .ZN(n245) );
  OAI22D1 U289 ( .A1(n296), .A2(n120), .B1(n295), .B2(n119), .ZN(
        \shifted_products[5][8] ) );
  INVD1 U290 ( .I(n267), .ZN(n239) );
  INVD1 U291 ( .I(n257), .ZN(n237) );
  OA22D0 U292 ( .A1(n240), .A2(n108), .B1(n304), .B2(n107), .Z(n31) );
  INVD1 U293 ( .I(n275), .ZN(n235) );
  INVD1 U294 ( .I(n309), .ZN(n242) );
  INVD1 U295 ( .I(n277), .ZN(n244) );
  INVD1 U296 ( .I(n292), .ZN(n238) );
  NR2D1 U297 ( .A1(n324), .A2(n101), .ZN(\shifted_products[9][0] ) );
  NR2D1 U298 ( .A1(n324), .A2(n90), .ZN(\shifted_products[11][0] ) );
  INVD1 U299 ( .I(\products[3][5] ), .ZN(n131) );
  OA21D1 U300 ( .A1(n33), .A2(n86), .B(n256), .Z(n32) );
  INVD1 U301 ( .I(\products[15][3] ), .ZN(n63) );
  NR2D1 U302 ( .A1(n313), .A2(n227), .ZN(\shifted_products[1][0] ) );
  FA1D0 U303 ( .A(\shifted_products[6][7] ), .B(\shifted_products[7][7] ), 
        .CI(\add_11_root_add_199_I16/carry[7] ), .CO(
        \add_11_root_add_199_I16/carry[8] ), .S(N130) );
  OAI222D0 U304 ( .A1(n242), .A2(n109), .B1(n316), .B2(n107), .C1(n111), .C2(
        n12), .ZN(\shifted_products[7][7] ) );
  OAI222D0 U305 ( .A1(n228), .A2(n113), .B1(n240), .B2(n117), .C1(n12), .C2(
        n115), .ZN(\shifted_products[6][7] ) );
  FA1D0 U306 ( .A(\shifted_products[8][7] ), .B(\shifted_products[9][7] ), 
        .CI(\add_10_root_add_199_I16/carry[7] ), .CO(
        \add_10_root_add_199_I16/carry[8] ), .S(N155) );
  OAI222D0 U307 ( .A1(n245), .A2(n100), .B1(n229), .B2(n96), .C1(n98), .C2(
        n325), .ZN(\shifted_products[9][7] ) );
  OAI222D0 U308 ( .A1(n35), .A2(n62), .B1(n235), .B2(n64), .C1(n66), .C2(n306), 
        .ZN(\shifted_products[15][4] ) );
  OAI222D0 U309 ( .A1(n1), .A2(n68), .B1(n234), .B2(n70), .C1(n12), .C2(n72), 
        .ZN(\shifted_products[14][4] ) );
  OAI222D0 U310 ( .A1(n35), .A2(n61), .B1(n235), .B2(n63), .C1(n65), .C2(n306), 
        .ZN(\shifted_products[15][5] ) );
  OAI222D0 U311 ( .A1(n1), .A2(n67), .B1(n234), .B2(n69), .C1(n12), .C2(n71), 
        .ZN(\shifted_products[14][5] ) );
  OAI222D0 U312 ( .A1(n244), .A2(n65), .B1(n279), .B2(n61), .C1(n63), .C2(n306), .ZN(\shifted_products[15][7] ) );
  OAI222D0 U313 ( .A1(n230), .A2(n67), .B1(n239), .B2(n71), .C1(n12), .C2(n69), 
        .ZN(\shifted_products[14][7] ) );
  FA1D0 U314 ( .A(\shifted_products[8][4] ), .B(\shifted_products[9][4] ), 
        .CI(\add_10_root_add_199_I16/carry[4] ), .CO(
        \add_10_root_add_199_I16/carry[5] ), .S(N152) );
  OAI222D0 U315 ( .A1(n324), .A2(n97), .B1(n236), .B2(n99), .C1(n325), .C2(
        n101), .ZN(\shifted_products[9][4] ) );
  FA1D0 U316 ( .A(\shifted_products[10][4] ), .B(\shifted_products[11][4] ), 
        .CI(\add_9_root_add_199_I16/carry[4] ), .CO(
        \add_9_root_add_199_I16/carry[5] ), .S(N178) );
  OAI222D0 U317 ( .A1(n324), .A2(n86), .B1(n241), .B2(n88), .C1(n325), .C2(n90), .ZN(\shifted_products[11][4] ) );
  FA1D0 U318 ( .A(\shifted_products[12][7] ), .B(\shifted_products[13][7] ), 
        .CI(\add_8_root_add_199_I16/carry[7] ), .CO(
        \add_8_root_add_199_I16/carry[8] ), .S(N208) );
  OAI222D0 U319 ( .A1(n238), .A2(n75), .B1(n264), .B2(n73), .C1(n325), .C2(n77), .ZN(\shifted_products[13][7] ) );
  FA1D0 U320 ( .A(\shifted_products[8][5] ), .B(\shifted_products[9][5] ), 
        .CI(\add_10_root_add_199_I16/carry[5] ), .CO(
        \add_10_root_add_199_I16/carry[6] ), .S(N153) );
  OAI222D0 U321 ( .A1(n324), .A2(n96), .B1(n236), .B2(n98), .C1(n325), .C2(
        n100), .ZN(\shifted_products[9][5] ) );
  FA1D0 U322 ( .A(\shifted_products[10][5] ), .B(\shifted_products[11][5] ), 
        .CI(\add_9_root_add_199_I16/carry[5] ), .CO(
        \add_9_root_add_199_I16/carry[6] ), .S(N179) );
  OAI222D0 U323 ( .A1(n324), .A2(n85), .B1(n241), .B2(n87), .C1(n325), .C2(n89), .ZN(\shifted_products[11][5] ) );
  OAI21D1 U324 ( .A1(n254), .A2(n94), .B(n253), .ZN(\shifted_products[10][5] )
         );
  FA1D0 U325 ( .A(\shifted_products[6][9] ), .B(\shifted_products[7][9] ), 
        .CI(\add_11_root_add_199_I16/carry[9] ), .CO(
        \add_11_root_add_199_I16/carry[10] ), .S(N132) );
  OAI222D0 U326 ( .A1(n228), .A2(n107), .B1(n240), .B2(n111), .C1(n12), .C2(
        n109), .ZN(\shifted_products[7][9] ) );
  OAI22D1 U327 ( .A1(n240), .A2(n115), .B1(n304), .B2(n113), .ZN(
        \shifted_products[6][9] ) );
  FA1D0 U328 ( .A(\shifted_products[12][9] ), .B(\shifted_products[13][9] ), 
        .CI(\add_8_root_add_199_I16/carry[9] ), .CO(
        \add_8_root_add_199_I16/carry[10] ), .S(N210) );
  OAI222D0 U329 ( .A1(n245), .A2(n77), .B1(n229), .B2(n73), .C1(n325), .C2(n75), .ZN(\shifted_products[13][9] ) );
  FA1D0 U330 ( .A(\shifted_products[10][7] ), .B(\shifted_products[11][7] ), 
        .CI(\add_9_root_add_199_I16/carry[7] ), .CO(
        \add_9_root_add_199_I16/carry[8] ), .S(N181) );
  OAI21D1 U331 ( .A1(n254), .A2(n92), .B(n253), .ZN(\shifted_products[10][7] )
         );
  OAI222D0 U332 ( .A1(n230), .A2(n85), .B1(n237), .B2(n89), .C1(n325), .C2(n87), .ZN(\shifted_products[11][7] ) );
  FA1D0 U333 ( .A(\shifted_products[10][8] ), .B(\shifted_products[11][8] ), 
        .CI(\add_9_root_add_199_I16/carry[8] ), .CO(
        \add_9_root_add_199_I16/carry[9] ), .S(N182) );
  OAI222D0 U334 ( .A1(n230), .A2(n85), .B1(n237), .B2(n88), .C1(n325), .C2(n86), .ZN(\shifted_products[11][8] ) );
  OAI221D0 U335 ( .A1(n254), .A2(n91), .B1(n34), .B2(n95), .C(n253), .ZN(
        \shifted_products[10][8] ) );
  FA1D0 U336 ( .A(\shifted_products[10][10] ), .B(\shifted_products[11][10] ), 
        .CI(\add_9_root_add_199_I16/carry[10] ), .CO(
        \add_9_root_add_199_I16/carry[11] ), .S(N184) );
  OAI222D0 U337 ( .A1(n237), .A2(n86), .B1(n259), .B2(n85), .C1(n33), .C2(n90), 
        .ZN(\shifted_products[11][10] ) );
  OAI21D1 U338 ( .A1(n33), .A2(n93), .B(n255), .ZN(\shifted_products[10][10] )
         );
  FA1D0 U339 ( .A(\shifted_products[12][4] ), .B(\shifted_products[13][4] ), 
        .CI(\add_8_root_add_199_I16/carry[4] ), .CO(
        \add_8_root_add_199_I16/carry[5] ), .S(N205) );
  OAI222D0 U340 ( .A1(n238), .A2(n78), .B1(n232), .B2(n76), .C1(n35), .C2(n74), 
        .ZN(\shifted_products[13][4] ) );
  FA1D0 U341 ( .A(\shifted_products[6][5] ), .B(\shifted_products[7][5] ), 
        .CI(\add_11_root_add_199_I16/carry[5] ), .CO(
        \add_11_root_add_199_I16/carry[6] ), .S(N128) );
  OAI222D0 U342 ( .A1(n1), .A2(n113), .B1(n233), .B2(n115), .C1(n12), .C2(n117), .ZN(\shifted_products[6][5] ) );
  OAI222D0 U343 ( .A1(n231), .A2(n109), .B1(n242), .B2(n111), .C1(n107), .C2(
        n36), .ZN(\shifted_products[7][5] ) );
  OAI222D0 U344 ( .A1(n288), .A2(n216), .B1(n286), .B2(n132), .C1(n313), .C2(
        n131), .ZN(\shifted_products[3][6] ) );
  FA1D0 U345 ( .A(\shifted_products[4][4] ), .B(\shifted_products[5][4] ), 
        .CI(\add_12_root_add_199_I16/carry[4] ), .CO(
        \add_12_root_add_199_I16/carry[5] ), .S(N103) );
  OAI222D0 U346 ( .A1(n293), .A2(n122), .B1(n296), .B2(n124), .C1(n35), .C2(
        n120), .ZN(\shifted_products[5][4] ) );
  FA1D0 U347 ( .A(\shifted_products[6][4] ), .B(\shifted_products[7][4] ), 
        .CI(\add_11_root_add_199_I16/carry[4] ), .CO(
        \add_11_root_add_199_I16/carry[5] ), .S(N127) );
  OAI222D0 U348 ( .A1(n1), .A2(n114), .B1(n233), .B2(n116), .C1(n12), .C2(n118), .ZN(\shifted_products[6][4] ) );
  OAI222D0 U349 ( .A1(n231), .A2(n110), .B1(n242), .B2(n112), .C1(n108), .C2(
        n36), .ZN(\shifted_products[7][4] ) );
  FA1D0 U350 ( .A(\shifted_products[8][6] ), .B(\shifted_products[9][6] ), 
        .CI(\add_10_root_add_199_I16/carry[6] ), .CO(
        \add_10_root_add_199_I16/carry[7] ), .S(N154) );
  OAI221D0 U351 ( .A1(n324), .A2(n96), .B1(n99), .B2(n325), .C(n323), .ZN(
        \shifted_products[9][6] ) );
  OAI221D0 U352 ( .A1(n35), .A2(n61), .B1(n64), .B2(n306), .C(n276), .ZN(
        \shifted_products[15][6] ) );
  OAI221D0 U353 ( .A1(n1), .A2(n67), .B1(n12), .B2(n70), .C(n268), .ZN(
        \shifted_products[14][6] ) );
  FA1D0 U354 ( .A(\shifted_products[10][6] ), .B(\shifted_products[11][6] ), 
        .CI(\add_9_root_add_199_I16/carry[6] ), .CO(
        \add_9_root_add_199_I16/carry[7] ), .S(N180) );
  OAI221D0 U355 ( .A1(n324), .A2(n85), .B1(n325), .B2(n88), .C(n258), .ZN(
        \shifted_products[11][6] ) );
  OAI21D1 U356 ( .A1(n254), .A2(n93), .B(n253), .ZN(\shifted_products[10][6] )
         );
  OAI221D0 U357 ( .A1(n281), .A2(n65), .B1(n244), .B2(n63), .C(n280), .ZN(
        \shifted_products[15][9] ) );
  OAI221D0 U358 ( .A1(n281), .A2(n64), .B1(n244), .B2(n62), .C(n280), .ZN(
        \shifted_products[15][10] ) );
  OAI222D0 U359 ( .A1(n239), .A2(n68), .B1(n269), .B2(n67), .C1(n33), .C2(n72), 
        .ZN(\shifted_products[14][10] ) );
  FA1D0 U360 ( .A(\shifted_products[6][8] ), .B(\shifted_products[7][8] ), 
        .CI(\add_11_root_add_199_I16/carry[8] ), .CO(
        \add_11_root_add_199_I16/carry[9] ), .S(N131) );
  OAI221D0 U361 ( .A1(n316), .A2(n107), .B1(n242), .B2(n108), .C(n315), .ZN(
        \shifted_products[7][8] ) );
  OAI222D0 U362 ( .A1(n228), .A2(n113), .B1(n240), .B2(n116), .C1(n12), .C2(
        n114), .ZN(\shifted_products[6][8] ) );
  OAI221D0 U363 ( .A1(n281), .A2(n62), .B1(n66), .B2(n34), .C(n271), .ZN(
        \shifted_products[15][12] ) );
  OAI21D1 U364 ( .A1(n33), .A2(n70), .B(n265), .ZN(\shifted_products[14][12] )
         );
  FA1D0 U365 ( .A(\shifted_products[4][2] ), .B(\shifted_products[5][2] ), 
        .CI(\add_12_root_add_199_I16/carry[2] ), .CO(
        \add_12_root_add_199_I16/carry[3] ), .S(N101) );
  FA1D0 U366 ( .A(\shifted_products[2][2] ), .B(\shifted_products[3][2] ), 
        .CI(\add_13_root_add_199_I16/carry[2] ), .CO(
        \add_13_root_add_199_I16/carry[3] ), .S(N78) );
  FA1D0 U367 ( .A(\shifted_products[10][2] ), .B(\shifted_products[11][2] ), 
        .CI(\add_9_root_add_199_I16/carry[2] ), .CO(
        \add_9_root_add_199_I16/carry[3] ), .S(N176) );
  FA1D0 U368 ( .A(\shifted_products[2][4] ), .B(\shifted_products[3][4] ), 
        .CI(\add_13_root_add_199_I16/carry[4] ), .CO(
        \add_13_root_add_199_I16/carry[5] ), .S(N80) );
  FA1D0 U369 ( .A(\shifted_products[6][2] ), .B(\shifted_products[7][2] ), 
        .CI(\add_11_root_add_199_I16/carry[2] ), .CO(
        \add_11_root_add_199_I16/carry[3] ), .S(N125) );
  OAI22D1 U370 ( .A1(n110), .A2(n35), .B1(n231), .B2(n112), .ZN(
        \shifted_products[7][2] ) );
  FA1D0 U371 ( .A(\shifted_products[12][2] ), .B(\shifted_products[13][2] ), 
        .CI(\add_8_root_add_199_I16/carry[2] ), .CO(
        \add_8_root_add_199_I16/carry[3] ), .S(N203) );
  FA1D0 U372 ( .A(\shifted_products[8][2] ), .B(\shifted_products[9][2] ), 
        .CI(\add_10_root_add_199_I16/carry[2] ), .CO(
        \add_10_root_add_199_I16/carry[3] ), .S(N150) );
  FA1D0 U373 ( .A(\products[0][3] ), .B(\shifted_products[1][3] ), .CI(
        \add_14_root_add_199_I16/carry[3] ), .CO(
        \add_14_root_add_199_I16/carry[4] ), .S(N57) );
  FA1D0 U374 ( .A(\products[0][4] ), .B(\shifted_products[1][4] ), .CI(
        \add_14_root_add_199_I16/carry[4] ), .CO(
        \add_14_root_add_199_I16/carry[5] ), .S(N58) );
  FA1D0 U375 ( .A(\products[0][1] ), .B(\shifted_products[1][1] ), .CI(
        \add_14_root_add_199_I16/carry[1] ), .CO(
        \add_14_root_add_199_I16/carry[2] ), .S(N55) );
  INVD1 U376 ( .I(\products[12][4] ), .ZN(n80) );
  FA1D0 U377 ( .A(\shifted_products[6][10] ), .B(\shifted_products[7][10] ), 
        .CI(\add_11_root_add_199_I16/carry[10] ), .CO(
        \add_11_root_add_199_I16/carry[11] ), .S(N133) );
  OAI222D0 U378 ( .A1(n228), .A2(n107), .B1(n240), .B2(n110), .C1(n12), .C2(
        n108), .ZN(\shifted_products[7][10] ) );
  OAI22D1 U379 ( .A1(n240), .A2(n114), .B1(n304), .B2(n113), .ZN(
        \shifted_products[6][10] ) );
  OAI21D1 U380 ( .A1(n64), .A2(n34), .B(n273), .ZN(\shifted_products[15][14] )
         );
  OAI21D1 U381 ( .A1(n34), .A2(n68), .B(n265), .ZN(\shifted_products[14][14] )
         );
  FA1D0 U382 ( .A(\shifted_products[10][12] ), .B(\shifted_products[11][12] ), 
        .CI(\add_9_root_add_199_I16/carry[12] ), .CO(
        \add_9_root_add_199_I16/carry[13] ), .S(N186) );
  OAI21D1 U383 ( .A1(n33), .A2(n88), .B(n256), .ZN(\shifted_products[11][12] )
         );
  OAI21D1 U384 ( .A1(n33), .A2(n91), .B(n255), .ZN(\shifted_products[10][12] )
         );
  OAI21D1 U385 ( .A1(n320), .A2(n80), .B(n260), .ZN(\shifted_products[12][10] ) );
  OAI222D0 U386 ( .A1(n245), .A2(n76), .B1(n229), .B2(n73), .C1(n325), .C2(n74), .ZN(\shifted_products[13][10] ) );
  FA1D0 U387 ( .A(\shifted_products[8][8] ), .B(\shifted_products[9][8] ), 
        .CI(\add_10_root_add_199_I16/carry[8] ), .CO(
        \add_10_root_add_199_I16/carry[9] ), .S(N156) );
  OAI21D1 U388 ( .A1(n320), .A2(n102), .B(n319), .ZN(\shifted_products[8][8] )
         );
  OAI222D0 U389 ( .A1(n245), .A2(n99), .B1(n229), .B2(n96), .C1(n325), .C2(n97), .ZN(\shifted_products[9][8] ) );
  OAI22D1 U390 ( .A1(n291), .A2(n125), .B1(n290), .B2(n126), .ZN(
        \shifted_products[4][6] ) );
  OAI222D0 U391 ( .A1(n293), .A2(n120), .B1(n296), .B2(n122), .C1(n35), .C2(
        n119), .ZN(\shifted_products[5][6] ) );
  NR2D1 U392 ( .A1(n36), .A2(n124), .ZN(\shifted_products[5][0] ) );
  INVD1 U393 ( .I(\products[1][4] ), .ZN(n223) );
  INVD1 U394 ( .I(\products[1][3] ), .ZN(n224) );
  CKBD1 U395 ( .I(n298), .Z(n34) );
  INR2D1 U396 ( .A1(n12), .B1(n299), .ZN(n304) );
  INR2D1 U397 ( .A1(n12), .B1(n270), .ZN(n269) );
  INVD1 U398 ( .I(\products[11][3] ), .ZN(n87) );
  INVD1 U399 ( .I(\products[9][3] ), .ZN(n98) );
  INVD1 U400 ( .I(\products[11][4] ), .ZN(n86) );
  ND2D1 U401 ( .A1(n274), .A2(n312), .ZN(n275) );
  INVD1 U402 ( .I(\products[9][4] ), .ZN(n97) );
  INVD1 U403 ( .I(\products[3][3] ), .ZN(n133) );
  INVD1 U404 ( .I(\products[3][4] ), .ZN(n132) );
  INVD1 U405 ( .I(\products[10][4] ), .ZN(n91) );
  INVD1 U406 ( .I(\products[10][3] ), .ZN(n92) );
  INVD1 U407 ( .I(\products[2][4] ), .ZN(n217) );
  INVD1 U408 ( .I(\products[8][4] ), .ZN(n102) );
  INVD1 U409 ( .I(\products[2][3] ), .ZN(n218) );
  INVD1 U410 ( .I(\products[8][3] ), .ZN(n103) );
  CKBD1 U411 ( .I(n298), .Z(n33) );
  INVD1 U412 ( .I(\products[15][1] ), .ZN(n65) );
  INVD1 U413 ( .I(\products[7][1] ), .ZN(n111) );
  INVD1 U414 ( .I(\products[14][1] ), .ZN(n71) );
  INVD1 U415 ( .I(\products[13][1] ), .ZN(n77) );
  INVD1 U416 ( .I(\products[6][1] ), .ZN(n117) );
  INVD1 U417 ( .I(\products[5][1] ), .ZN(n123) );
  INVD1 U418 ( .I(\products[12][1] ), .ZN(n83) );
  INVD1 U419 ( .I(\products[3][1] ), .ZN(n135) );
  INVD1 U420 ( .I(\products[4][1] ), .ZN(n129) );
  INVD1 U421 ( .I(\products[1][1] ), .ZN(n226) );
  INVD1 U422 ( .I(\products[2][1] ), .ZN(n220) );
  INVD1 U423 ( .I(\products[15][0] ), .ZN(n66) );
  INVD1 U424 ( .I(\products[14][0] ), .ZN(n72) );
  INVD1 U425 ( .I(\products[11][0] ), .ZN(n90) );
  INVD1 U426 ( .I(\products[7][0] ), .ZN(n112) );
  INVD1 U427 ( .I(\products[6][0] ), .ZN(n118) );
  INVD1 U428 ( .I(\products[9][0] ), .ZN(n101) );
  INVD1 U429 ( .I(\products[11][1] ), .ZN(n89) );
  INVD1 U430 ( .I(\products[9][1] ), .ZN(n100) );
  INVD1 U431 ( .I(\products[10][1] ), .ZN(n94) );
  INVD1 U432 ( .I(\products[8][1] ), .ZN(n105) );
  INVD1 U433 ( .I(\products[13][2] ), .ZN(n76) );
  FA1D0 U434 ( .A(\shifted_products[6][6] ), .B(\shifted_products[7][6] ), 
        .CI(\add_11_root_add_199_I16/carry[6] ), .CO(
        \add_11_root_add_199_I16/carry[7] ), .S(N129) );
  OAI221D0 U435 ( .A1(n107), .A2(n35), .B1(n12), .B2(n112), .C(n310), .ZN(
        \shifted_products[7][6] ) );
  OAI221D0 U436 ( .A1(n1), .A2(n113), .B1(n12), .B2(n116), .C(n302), .ZN(
        \shifted_products[6][6] ) );
  FA1D0 U437 ( .A(\shifted_products[12][6] ), .B(\shifted_products[13][6] ), 
        .CI(\add_8_root_add_199_I16/carry[6] ), .CO(
        \add_8_root_add_199_I16/carry[7] ), .S(N207) );
  OAI222D0 U438 ( .A1(n291), .A2(n79), .B1(n289), .B2(n80), .C1(n320), .C2(n84), .ZN(\shifted_products[12][6] ) );
  OAI221D0 U439 ( .A1(n35), .A2(n73), .B1(n325), .B2(n78), .C(n262), .ZN(
        \shifted_products[13][6] ) );
  OAI221D0 U440 ( .A1(n279), .A2(n61), .B1(n281), .B2(n66), .C(n278), .ZN(
        \shifted_products[15][8] ) );
  OAI222D0 U441 ( .A1(n230), .A2(n67), .B1(n239), .B2(n70), .C1(n12), .C2(n68), 
        .ZN(\shifted_products[14][8] ) );
  FA1D0 U442 ( .A(\shifted_products[12][8] ), .B(\shifted_products[13][8] ), 
        .CI(\add_8_root_add_199_I16/carry[8] ), .CO(
        \add_8_root_add_199_I16/carry[9] ), .S(N209) );
  OAI221D0 U443 ( .A1(n264), .A2(n73), .B1(n245), .B2(n78), .C(n263), .ZN(
        \shifted_products[13][8] ) );
  FA1D0 U444 ( .A(\products[0][2] ), .B(\shifted_products[1][2] ), .CI(
        \add_14_root_add_199_I16/carry[2] ), .CO(
        \add_14_root_add_199_I16/carry[3] ), .S(N56) );
  INVD1 U445 ( .I(\products[1][2] ), .ZN(n225) );
  INVD1 U446 ( .I(\products[15][2] ), .ZN(n64) );
  INVD1 U447 ( .I(\products[14][2] ), .ZN(n70) );
  INVD1 U448 ( .I(\products[11][2] ), .ZN(n88) );
  INVD1 U449 ( .I(\products[9][2] ), .ZN(n99) );
  INVD1 U450 ( .I(\products[7][2] ), .ZN(n110) );
  INVD1 U451 ( .I(\products[3][2] ), .ZN(n134) );
  INVD1 U452 ( .I(\products[10][2] ), .ZN(n93) );
  INVD1 U453 ( .I(\products[2][2] ), .ZN(n219) );
  INVD1 U454 ( .I(\products[8][2] ), .ZN(n104) );
  INVD1 U455 ( .I(\products[13][0] ), .ZN(n78) );
  INVD1 U456 ( .I(\products[5][0] ), .ZN(n124) );
  INVD1 U457 ( .I(\products[12][0] ), .ZN(n84) );
  INVD1 U458 ( .I(\products[4][0] ), .ZN(n130) );
  INVD1 U459 ( .I(\products[10][0] ), .ZN(n95) );
  INVD1 U460 ( .I(\products[3][0] ), .ZN(n216) );
  INVD1 U461 ( .I(\products[1][0] ), .ZN(n227) );
  INVD1 U462 ( .I(\products[2][0] ), .ZN(n221) );
  INVD1 U463 ( .I(\products[8][0] ), .ZN(n106) );
  INR3D0 U464 ( .A1(weight_bitwidth[0]), .B1(weight_bitwidth[1]), .B2(
        weight_bitwidth[2]), .ZN(n247) );
  INR3D0 U465 ( .A1(input_bitwidth[0]), .B1(input_bitwidth[1]), .B2(
        input_bitwidth[2]), .ZN(n251) );
  INR3D0 U466 ( .A1(input_bitwidth[1]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[2]), .ZN(n250) );
  INR3D0 U467 ( .A1(weight_bitwidth[1]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[2]), .ZN(n252) );
  TIEL U468 ( .ZN(n246) );
  AN2D0 U469 ( .A1(\shifted_products[2][0] ), .A2(\shifted_products[3][0] ), 
        .Z(\add_13_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U470 ( .A1(\shifted_products[3][0] ), .A2(\shifted_products[2][0] ), 
        .Z(N76) );
  AN2D0 U471 ( .A1(\products[0][0] ), .A2(\shifted_products[1][0] ), .Z(
        \add_14_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U472 ( .A1(\shifted_products[1][0] ), .A2(\products[0][0] ), .Z(N54) );
  AN2D0 U473 ( .A1(\shifted_products[12][0] ), .A2(\shifted_products[13][0] ), 
        .Z(\add_8_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U474 ( .A1(\shifted_products[13][0] ), .A2(
        \shifted_products[12][0] ), .Z(N201) );
  AN2D0 U475 ( .A1(\shifted_products[6][0] ), .A2(\shifted_products[7][0] ), 
        .Z(\add_11_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U476 ( .A1(\shifted_products[7][0] ), .A2(\shifted_products[6][0] ), 
        .Z(N123) );
  AN2D0 U477 ( .A1(\shifted_products[4][0] ), .A2(\shifted_products[5][0] ), 
        .Z(\add_12_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U478 ( .A1(\shifted_products[5][0] ), .A2(\shifted_products[4][0] ), 
        .Z(N99) );
  AN2D0 U479 ( .A1(\shifted_products[8][0] ), .A2(\shifted_products[9][0] ), 
        .Z(\add_10_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U480 ( .A1(\shifted_products[9][0] ), .A2(\shifted_products[8][0] ), 
        .Z(N148) );
  AN2D0 U481 ( .A1(\shifted_products[10][0] ), .A2(\shifted_products[11][0] ), 
        .Z(\add_9_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U482 ( .A1(\shifted_products[11][0] ), .A2(
        \shifted_products[10][0] ), .Z(N174) );
  XOR3D0 U483 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[13][11] ), .A3(\products[12][5] ), .Z(N212) );
  XOR3D0 U484 ( .A1(\shifted_products[13][12] ), .A2(n38), .A3(n79), .Z(N213)
         );
  XOR3D0 U485 ( .A1(\products[13][5] ), .A2(\products[12][5] ), .A3(n39), .Z(
        N214) );
  CKND0 U486 ( .I(\shifted_products[13][12] ), .ZN(n41) );
  XNR3D0 U487 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \shifted_products[11][13] ), .A3(n42), .ZN(N187) );
  XNR3D0 U488 ( .A1(n32), .A2(n43), .A3(n42), .ZN(N188) );
  XNR3D0 U489 ( .A1(\products[11][5] ), .A2(n42), .A3(n44), .ZN(N189) );
  OAI222D0 U490 ( .A1(n43), .A2(n42), .B1(n43), .B2(n32), .C1(n42), .C2(n32), 
        .ZN(n44) );
  CKND0 U491 ( .I(\products[10][5] ), .ZN(n42) );
  XOR3D0 U492 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[9][9] ), .A3(\products[8][5] ), .Z(N157) );
  XOR3D0 U493 ( .A1(\shifted_products[9][10] ), .A2(n45), .A3(n46), .Z(N158)
         );
  XOR3D0 U494 ( .A1(\products[9][5] ), .A2(\products[8][5] ), .A3(n47), .Z(
        N159) );
  AOI222D0 U495 ( .A1(n47), .A2(\products[8][5] ), .B1(n47), .B2(
        \products[9][5] ), .C1(\products[8][5] ), .C2(\products[9][5] ), .ZN(
        n48) );
  OAI222D0 U496 ( .A1(n45), .A2(n46), .B1(n45), .B2(n49), .C1(n46), .C2(n49), 
        .ZN(n47) );
  CKND0 U497 ( .I(\shifted_products[9][10] ), .ZN(n49) );
  CKND0 U498 ( .I(\products[8][5] ), .ZN(n46) );
  XNR3D0 U499 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[7][11] ), .A3(n113), .ZN(N134) );
  XNR3D0 U500 ( .A1(n31), .A2(n50), .A3(n113), .ZN(N135) );
  XNR3D0 U501 ( .A1(\products[7][5] ), .A2(n113), .A3(n51), .ZN(N136) );
  XOR3D0 U502 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(
        \shifted_products[5][7] ), .A3(\products[4][5] ), .Z(N106) );
  XOR3D0 U503 ( .A1(\shifted_products[5][8] ), .A2(n52), .A3(n125), .Z(N107)
         );
  XOR3D0 U504 ( .A1(\products[5][5] ), .A2(\products[4][5] ), .A3(n53), .Z(
        N108) );
  CKND0 U505 ( .I(\shifted_products[5][8] ), .ZN(n55) );
  XNR3D0 U506 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .A3(n56), .ZN(N85) );
  XNR3D0 U507 ( .A1(\products[3][5] ), .A2(n56), .A3(n58), .ZN(N87) );
  XNR3D0 U508 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[1][6] ), .A3(n59), .ZN(N60) );
  XNR3D0 U509 ( .A1(n222), .A2(n60), .A3(n59), .ZN(N61) );
  CKND0 U510 ( .I(\shifted_products[0][9] ), .ZN(n59) );
endmodule


module fusion_unit_6_DW01_add_0_DW01_add_10 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module fusion_unit_6 ( clk, nRST, input_bitwidth, weight_bitwidth, input_sign, 
        weight_sign, input_forward, weight, psum_in, psum, input_to_right );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  input [3:0] input_sign;
  input [3:0] weight_sign;
  input [31:0] input_forward;
  input [31:0] weight;
  input [31:0] psum_in;
  output [31:0] psum;
  output [31:0] input_to_right;
  input clk, nRST;
  wire   \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] , n2;
  wire   [31:0] shift_add_out;
  assign input_to_right[31] = input_forward[31];
  assign input_to_right[30] = input_forward[30];
  assign input_to_right[29] = input_forward[29];
  assign input_to_right[28] = input_forward[28];
  assign input_to_right[27] = input_forward[27];
  assign input_to_right[26] = input_forward[26];
  assign input_to_right[25] = input_forward[25];
  assign input_to_right[24] = input_forward[24];
  assign input_to_right[23] = input_forward[23];
  assign input_to_right[22] = input_forward[22];
  assign input_to_right[21] = input_forward[21];
  assign input_to_right[20] = input_forward[20];
  assign input_to_right[19] = input_forward[19];
  assign input_to_right[18] = input_forward[18];
  assign input_to_right[17] = input_forward[17];
  assign input_to_right[16] = input_forward[16];
  assign input_to_right[15] = input_forward[15];
  assign input_to_right[14] = input_forward[14];
  assign input_to_right[13] = input_forward[13];
  assign input_to_right[12] = input_forward[12];
  assign input_to_right[11] = input_forward[11];
  assign input_to_right[10] = input_forward[10];
  assign input_to_right[9] = input_forward[9];
  assign input_to_right[8] = input_forward[8];
  assign input_to_right[7] = input_forward[7];
  assign input_to_right[6] = input_forward[6];
  assign input_to_right[5] = input_forward[5];
  assign input_to_right[4] = input_forward[4];
  assign input_to_right[3] = input_forward[3];
  assign input_to_right[2] = input_forward[2];
  assign input_to_right[1] = input_forward[1];
  assign input_to_right[0] = input_forward[0];

  bit_brick_111 \genblk1[0].BB  ( .x(input_forward[1:0]), .y(weight[1:0]), 
        .sx(input_sign[0]), .sy(weight_sign[0]), .product({\products[0][5] , 
        \products[0][4] , \products[0][3] , \products[0][2] , \products[0][1] , 
        \products[0][0] }) );
  bit_brick_110 \genblk1[1].BB  ( .x(input_forward[3:2]), .y(weight[3:2]), 
        .sx(input_sign[0]), .sy(weight_sign[1]), .product({\products[1][5] , 
        \products[1][4] , \products[1][3] , \products[1][2] , \products[1][1] , 
        \products[1][0] }) );
  bit_brick_109 \genblk1[2].BB  ( .x(input_forward[5:4]), .y(weight[5:4]), 
        .sx(input_sign[0]), .sy(weight_sign[2]), .product({\products[2][5] , 
        \products[2][4] , \products[2][3] , \products[2][2] , \products[2][1] , 
        \products[2][0] }) );
  bit_brick_108 \genblk1[3].BB  ( .x(input_forward[7:6]), .y(weight[7:6]), 
        .sx(input_sign[0]), .sy(weight_sign[3]), .product({\products[3][5] , 
        \products[3][4] , \products[3][3] , \products[3][2] , \products[3][1] , 
        \products[3][0] }) );
  bit_brick_107 \genblk1[4].BB  ( .x(input_forward[9:8]), .y(weight[9:8]), 
        .sx(input_sign[1]), .sy(weight_sign[0]), .product({\products[4][5] , 
        \products[4][4] , \products[4][3] , \products[4][2] , \products[4][1] , 
        \products[4][0] }) );
  bit_brick_106 \genblk1[5].BB  ( .x(input_forward[11:10]), .y(weight[11:10]), 
        .sx(input_sign[1]), .sy(weight_sign[1]), .product({\products[5][5] , 
        \products[5][4] , \products[5][3] , \products[5][2] , \products[5][1] , 
        \products[5][0] }) );
  bit_brick_105 \genblk1[6].BB  ( .x(input_forward[13:12]), .y(weight[13:12]), 
        .sx(input_sign[1]), .sy(weight_sign[2]), .product({\products[6][5] , 
        \products[6][4] , \products[6][3] , \products[6][2] , \products[6][1] , 
        \products[6][0] }) );
  bit_brick_104 \genblk1[7].BB  ( .x(input_forward[15:14]), .y(weight[15:14]), 
        .sx(input_sign[1]), .sy(weight_sign[3]), .product({\products[7][5] , 
        \products[7][4] , \products[7][3] , \products[7][2] , \products[7][1] , 
        \products[7][0] }) );
  bit_brick_103 \genblk1[8].BB  ( .x(input_forward[17:16]), .y(weight[17:16]), 
        .sx(input_sign[2]), .sy(weight_sign[0]), .product({\products[8][5] , 
        \products[8][4] , \products[8][3] , \products[8][2] , \products[8][1] , 
        \products[8][0] }) );
  bit_brick_102 \genblk1[9].BB  ( .x(input_forward[19:18]), .y(weight[19:18]), 
        .sx(input_sign[2]), .sy(weight_sign[1]), .product({\products[9][5] , 
        \products[9][4] , \products[9][3] , \products[9][2] , \products[9][1] , 
        \products[9][0] }) );
  bit_brick_101 \genblk1[10].BB  ( .x(input_forward[21:20]), .y(weight[21:20]), 
        .sx(input_sign[2]), .sy(weight_sign[2]), .product({\products[10][5] , 
        \products[10][4] , \products[10][3] , \products[10][2] , 
        \products[10][1] , \products[10][0] }) );
  bit_brick_100 \genblk1[11].BB  ( .x(input_forward[23:22]), .y(weight[23:22]), 
        .sx(input_sign[2]), .sy(weight_sign[3]), .product({\products[11][5] , 
        \products[11][4] , \products[11][3] , \products[11][2] , 
        \products[11][1] , \products[11][0] }) );
  bit_brick_99 \genblk1[12].BB  ( .x(input_forward[25:24]), .y(weight[25:24]), 
        .sx(input_sign[3]), .sy(weight_sign[0]), .product({\products[12][5] , 
        \products[12][4] , \products[12][3] , \products[12][2] , 
        \products[12][1] , \products[12][0] }) );
  bit_brick_98 \genblk1[13].BB  ( .x(input_forward[27:26]), .y(weight[27:26]), 
        .sx(input_sign[3]), .sy(weight_sign[1]), .product({\products[13][5] , 
        \products[13][4] , \products[13][3] , \products[13][2] , 
        \products[13][1] , \products[13][0] }) );
  bit_brick_97 \genblk1[14].BB  ( .x(input_forward[29:28]), .y(weight[29:28]), 
        .sx(input_sign[3]), .sy(weight_sign[2]), .product({\products[14][5] , 
        \products[14][4] , \products[14][3] , \products[14][2] , 
        \products[14][1] , \products[14][0] }) );
  bit_brick_96 \genblk1[15].BB  ( .x(input_forward[31:30]), .y(weight[31:30]), 
        .sx(input_sign[3]), .sy(weight_sign[3]), .product({\products[15][5] , 
        \products[15][4] , \products[15][3] , \products[15][2] , 
        \products[15][1] , \products[15][0] }) );
  shift_add_6 shift_add ( .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .products({\products[15][5] , \products[15][4] , 
        \products[15][3] , \products[15][2] , \products[15][1] , 
        \products[15][0] , \products[14][5] , \products[14][4] , 
        \products[14][3] , \products[14][2] , \products[14][1] , 
        \products[14][0] , \products[13][5] , \products[13][4] , 
        \products[13][3] , \products[13][2] , \products[13][1] , 
        \products[13][0] , \products[12][5] , \products[12][4] , 
        \products[12][3] , \products[12][2] , \products[12][1] , 
        \products[12][0] , \products[11][5] , \products[11][4] , 
        \products[11][3] , \products[11][2] , \products[11][1] , 
        \products[11][0] , \products[10][5] , \products[10][4] , 
        \products[10][3] , \products[10][2] , \products[10][1] , 
        \products[10][0] , \products[9][5] , \products[9][4] , 
        \products[9][3] , \products[9][2] , \products[9][1] , \products[9][0] , 
        \products[8][5] , \products[8][4] , \products[8][3] , \products[8][2] , 
        \products[8][1] , \products[8][0] , \products[7][5] , \products[7][4] , 
        \products[7][3] , \products[7][2] , \products[7][1] , \products[7][0] , 
        \products[6][5] , \products[6][4] , \products[6][3] , \products[6][2] , 
        \products[6][1] , \products[6][0] , \products[5][5] , \products[5][4] , 
        \products[5][3] , \products[5][2] , \products[5][1] , \products[5][0] , 
        \products[4][5] , \products[4][4] , \products[4][3] , \products[4][2] , 
        \products[4][1] , \products[4][0] , \products[3][5] , \products[3][4] , 
        \products[3][3] , \products[3][2] , \products[3][1] , \products[3][0] , 
        \products[2][5] , \products[2][4] , \products[2][3] , \products[2][2] , 
        \products[2][1] , \products[2][0] , \products[1][5] , \products[1][4] , 
        \products[1][3] , \products[1][2] , \products[1][1] , \products[1][0] , 
        \products[0][5] , \products[0][4] , \products[0][3] , \products[0][2] , 
        \products[0][1] , \products[0][0] }), .shift_add_out(shift_add_out) );
  fusion_unit_6_DW01_add_0_DW01_add_10 add_53 ( .A(shift_add_out), .B(psum_in), 
        .CI(n2), .SUM(psum) );
  TIEL U1 ( .ZN(n2) );
endmodule


module WBUF_ARRAY_SIZE4_DATA_W32_5 ( clk, nRST, WBUF_wr_en, WBUF_data_in, 
        WBUF_data_out );
  input [31:0] WBUF_data_in;
  output [31:0] WBUF_data_out;
  input clk, nRST, WBUF_wr_en;
  wire   n1, n2, n3, n4, n5, n6;

  EDFCNQD1 \WBUF_data_out_reg[31]  ( .D(WBUF_data_in[31]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[31]) );
  EDFCNQD1 \WBUF_data_out_reg[30]  ( .D(WBUF_data_in[30]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[30]) );
  EDFCNQD1 \WBUF_data_out_reg[29]  ( .D(WBUF_data_in[29]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[29]) );
  EDFCNQD1 \WBUF_data_out_reg[28]  ( .D(WBUF_data_in[28]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[28]) );
  EDFCNQD1 \WBUF_data_out_reg[27]  ( .D(WBUF_data_in[27]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[27]) );
  EDFCNQD1 \WBUF_data_out_reg[26]  ( .D(WBUF_data_in[26]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[26]) );
  EDFCNQD1 \WBUF_data_out_reg[25]  ( .D(WBUF_data_in[25]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[25]) );
  EDFCNQD1 \WBUF_data_out_reg[24]  ( .D(WBUF_data_in[24]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[24]) );
  EDFCNQD1 \WBUF_data_out_reg[23]  ( .D(WBUF_data_in[23]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[23]) );
  EDFCNQD1 \WBUF_data_out_reg[22]  ( .D(WBUF_data_in[22]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[22]) );
  EDFCNQD1 \WBUF_data_out_reg[21]  ( .D(WBUF_data_in[21]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[21]) );
  EDFCNQD1 \WBUF_data_out_reg[20]  ( .D(WBUF_data_in[20]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[20]) );
  EDFCNQD1 \WBUF_data_out_reg[19]  ( .D(WBUF_data_in[19]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[19]) );
  EDFCNQD1 \WBUF_data_out_reg[18]  ( .D(WBUF_data_in[18]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[18]) );
  EDFCNQD1 \WBUF_data_out_reg[17]  ( .D(WBUF_data_in[17]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[17]) );
  EDFCNQD1 \WBUF_data_out_reg[16]  ( .D(WBUF_data_in[16]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[16]) );
  EDFCNQD1 \WBUF_data_out_reg[15]  ( .D(WBUF_data_in[15]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[15]) );
  EDFCNQD1 \WBUF_data_out_reg[14]  ( .D(WBUF_data_in[14]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[14]) );
  EDFCNQD1 \WBUF_data_out_reg[13]  ( .D(WBUF_data_in[13]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[13]) );
  EDFCNQD1 \WBUF_data_out_reg[12]  ( .D(WBUF_data_in[12]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[12]) );
  EDFCNQD1 \WBUF_data_out_reg[11]  ( .D(WBUF_data_in[11]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[11]) );
  EDFCNQD1 \WBUF_data_out_reg[10]  ( .D(WBUF_data_in[10]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[10]) );
  EDFCNQD1 \WBUF_data_out_reg[9]  ( .D(WBUF_data_in[9]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[9]) );
  EDFCNQD1 \WBUF_data_out_reg[8]  ( .D(WBUF_data_in[8]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[8]) );
  EDFCNQD1 \WBUF_data_out_reg[7]  ( .D(WBUF_data_in[7]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[7]) );
  EDFCNQD1 \WBUF_data_out_reg[6]  ( .D(WBUF_data_in[6]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[6]) );
  EDFCNQD1 \WBUF_data_out_reg[5]  ( .D(WBUF_data_in[5]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[5]) );
  EDFCNQD1 \WBUF_data_out_reg[4]  ( .D(WBUF_data_in[4]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[4]) );
  EDFCNQD1 \WBUF_data_out_reg[3]  ( .D(WBUF_data_in[3]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[3]) );
  EDFCNQD1 \WBUF_data_out_reg[2]  ( .D(WBUF_data_in[2]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[2]) );
  EDFCNQD1 \WBUF_data_out_reg[1]  ( .D(WBUF_data_in[1]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[1]) );
  EDFCNQD1 \WBUF_data_out_reg[0]  ( .D(WBUF_data_in[0]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[0]) );
  CKBD1 U2 ( .I(WBUF_wr_en), .Z(n5) );
  CKBD1 U3 ( .I(WBUF_wr_en), .Z(n4) );
  CKBD1 U4 ( .I(nRST), .Z(n1) );
  CKBD1 U5 ( .I(nRST), .Z(n2) );
  CKBD1 U6 ( .I(nRST), .Z(n3) );
  CKBD1 U7 ( .I(WBUF_wr_en), .Z(n6) );
endmodule


module w_mux_5 ( clk, nRST, input_bitwidth, rd_en, data_in, data_out );
  input [2:0] input_bitwidth;
  input [31:0] data_in;
  output [31:0] data_out;
  input clk, nRST, rd_en;
  wire   N40, N41, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129,
         n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140,
         n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151,
         n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162,
         n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173,
         n174, n175, n176, n177, n178;
  wire   [1:0] rd_ptr;
  wire   [31:0] next_data_out;

  EDFCNQD1 \rd_ptr_reg[0]  ( .D(N40), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[0]) );
  EDFCNQD1 \rd_ptr_reg[1]  ( .D(N41), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[1]) );
  DFCNQD1 \data_out_reg[31]  ( .D(next_data_out[31]), .CP(clk), .CDN(n1), .Q(
        data_out[31]) );
  DFCNQD1 \data_out_reg[30]  ( .D(next_data_out[30]), .CP(clk), .CDN(n3), .Q(
        data_out[30]) );
  DFCNQD1 \data_out_reg[29]  ( .D(next_data_out[29]), .CP(clk), .CDN(n3), .Q(
        data_out[29]) );
  DFCNQD1 \data_out_reg[28]  ( .D(next_data_out[28]), .CP(clk), .CDN(n3), .Q(
        data_out[28]) );
  DFCNQD1 \data_out_reg[27]  ( .D(next_data_out[27]), .CP(clk), .CDN(n3), .Q(
        data_out[27]) );
  DFCNQD1 \data_out_reg[26]  ( .D(next_data_out[26]), .CP(clk), .CDN(n3), .Q(
        data_out[26]) );
  DFCNQD1 \data_out_reg[25]  ( .D(next_data_out[25]), .CP(clk), .CDN(n2), .Q(
        data_out[25]) );
  DFCNQD1 \data_out_reg[24]  ( .D(next_data_out[24]), .CP(clk), .CDN(n2), .Q(
        data_out[24]) );
  DFCNQD1 \data_out_reg[23]  ( .D(next_data_out[23]), .CP(clk), .CDN(n3), .Q(
        data_out[23]) );
  DFCNQD1 \data_out_reg[22]  ( .D(next_data_out[22]), .CP(clk), .CDN(n2), .Q(
        data_out[22]) );
  DFCNQD1 \data_out_reg[21]  ( .D(next_data_out[21]), .CP(clk), .CDN(n2), .Q(
        data_out[21]) );
  DFCNQD1 \data_out_reg[20]  ( .D(next_data_out[20]), .CP(clk), .CDN(n2), .Q(
        data_out[20]) );
  DFCNQD1 \data_out_reg[19]  ( .D(next_data_out[19]), .CP(clk), .CDN(n2), .Q(
        data_out[19]) );
  DFCNQD1 \data_out_reg[18]  ( .D(next_data_out[18]), .CP(clk), .CDN(n2), .Q(
        data_out[18]) );
  DFCNQD1 \data_out_reg[17]  ( .D(next_data_out[17]), .CP(clk), .CDN(n2), .Q(
        data_out[17]) );
  DFCNQD1 \data_out_reg[16]  ( .D(next_data_out[16]), .CP(clk), .CDN(n2), .Q(
        data_out[16]) );
  DFCNQD1 \data_out_reg[15]  ( .D(next_data_out[15]), .CP(clk), .CDN(n2), .Q(
        data_out[15]) );
  DFCNQD1 \data_out_reg[14]  ( .D(next_data_out[14]), .CP(clk), .CDN(n2), .Q(
        data_out[14]) );
  DFCNQD1 \data_out_reg[13]  ( .D(next_data_out[13]), .CP(clk), .CDN(n2), .Q(
        data_out[13]) );
  DFCNQD1 \data_out_reg[12]  ( .D(next_data_out[12]), .CP(clk), .CDN(n1), .Q(
        data_out[12]) );
  DFCNQD1 \data_out_reg[11]  ( .D(next_data_out[11]), .CP(clk), .CDN(n1), .Q(
        data_out[11]) );
  DFCNQD1 \data_out_reg[10]  ( .D(next_data_out[10]), .CP(clk), .CDN(n1), .Q(
        data_out[10]) );
  DFCNQD1 \data_out_reg[9]  ( .D(next_data_out[9]), .CP(clk), .CDN(n1), .Q(
        data_out[9]) );
  DFCNQD1 \data_out_reg[8]  ( .D(next_data_out[8]), .CP(clk), .CDN(n1), .Q(
        data_out[8]) );
  DFCNQD1 \data_out_reg[7]  ( .D(next_data_out[7]), .CP(clk), .CDN(n1), .Q(
        data_out[7]) );
  DFCNQD1 \data_out_reg[6]  ( .D(next_data_out[6]), .CP(clk), .CDN(n1), .Q(
        data_out[6]) );
  DFCNQD1 \data_out_reg[5]  ( .D(next_data_out[5]), .CP(clk), .CDN(n1), .Q(
        data_out[5]) );
  DFCNQD1 \data_out_reg[4]  ( .D(next_data_out[4]), .CP(clk), .CDN(n1), .Q(
        data_out[4]) );
  DFCNQD1 \data_out_reg[3]  ( .D(next_data_out[3]), .CP(clk), .CDN(n1), .Q(
        data_out[3]) );
  DFCNQD1 \data_out_reg[2]  ( .D(next_data_out[2]), .CP(clk), .CDN(n1), .Q(
        data_out[2]) );
  DFCNQD1 \data_out_reg[1]  ( .D(next_data_out[1]), .CP(clk), .CDN(n1), .Q(
        data_out[1]) );
  DFCNQD1 \data_out_reg[0]  ( .D(next_data_out[0]), .CP(clk), .CDN(n2), .Q(
        data_out[0]) );
  OA21D1 U20 ( .A1(n161), .A2(n160), .B(n159), .Z(n170) );
  OA21D1 U23 ( .A1(n156), .A2(n160), .B(n155), .Z(n169) );
  OA21D1 U26 ( .A1(n154), .A2(n160), .B(n153), .Z(n167) );
  OA21D1 U29 ( .A1(n152), .A2(n160), .B(n151), .Z(n166) );
  OA21D1 U32 ( .A1(n150), .A2(n160), .B(n149), .Z(n177) );
  OA21D1 U35 ( .A1(n148), .A2(n160), .B(n147), .Z(n165) );
  OA21D1 U38 ( .A1(n146), .A2(n160), .B(n145), .Z(n164) );
  OA21D1 U41 ( .A1(n144), .A2(n160), .B(n149), .Z(n163) );
  OA21D1 U47 ( .A1(n139), .A2(n160), .B(n138), .Z(n162) );
  OA21D1 U50 ( .A1(n137), .A2(n160), .B(n159), .Z(n175) );
  OA21D1 U56 ( .A1(n134), .A2(n160), .B(n155), .Z(n174) );
  OA21D1 U62 ( .A1(n131), .A2(n160), .B(n153), .Z(n173) );
  OA21D1 U68 ( .A1(n128), .A2(n160), .B(n151), .Z(n172) );
  OA21D1 U74 ( .A1(n125), .A2(n160), .B(n147), .Z(n171) );
  OA21D1 U80 ( .A1(n122), .A2(n160), .B(n145), .Z(n168) );
  OA21D1 U86 ( .A1(n119), .A2(n160), .B(n138), .Z(n176) );
  AN2XD1 U90 ( .A1(rd_ptr[1]), .A2(rd_ptr[0]), .Z(n140) );
  AN4XD1 U91 ( .A1(input_bitwidth[2]), .A2(rd_en), .A3(n5), .A4(n7), .Z(n143)
         );
  MAOI22D1 U97 ( .A1(n115), .A2(n12), .B1(n115), .B2(n114), .ZN(n113) );
  NR2D1 U3 ( .A1(n13), .A2(rd_ptr[1]), .ZN(n158) );
  NR2D1 U4 ( .A1(rd_ptr[0]), .A2(rd_ptr[1]), .ZN(n157) );
  AOI21D1 U5 ( .A1(n12), .A2(n116), .B(n113), .ZN(N41) );
  OAI21D1 U6 ( .A1(n111), .A2(n10), .B(n177), .ZN(next_data_out[1]) );
  OAI21D1 U7 ( .A1(n37), .A2(n10), .B(n177), .ZN(next_data_out[9]) );
  OAI21D1 U8 ( .A1(n8), .A2(n112), .B(n176), .ZN(next_data_out[0]) );
  OAI21D1 U9 ( .A1(n9), .A2(n110), .B(n168), .ZN(next_data_out[2]) );
  OAI21D1 U10 ( .A1(n9), .A2(n109), .B(n171), .ZN(next_data_out[3]) );
  OAI21D1 U11 ( .A1(n9), .A2(n108), .B(n172), .ZN(next_data_out[4]) );
  OAI21D1 U12 ( .A1(n8), .A2(n36), .B(n168), .ZN(next_data_out[10]) );
  OAI21D1 U13 ( .A1(n8), .A2(n35), .B(n171), .ZN(next_data_out[11]) );
  OAI21D1 U14 ( .A1(n8), .A2(n34), .B(n172), .ZN(next_data_out[12]) );
  OAI21D1 U15 ( .A1(n9), .A2(n33), .B(n173), .ZN(next_data_out[13]) );
  OAI21D1 U16 ( .A1(n8), .A2(n32), .B(n174), .ZN(next_data_out[14]) );
  OAI21D1 U17 ( .A1(n8), .A2(n31), .B(n175), .ZN(next_data_out[15]) );
  OAI21D1 U18 ( .A1(n10), .A2(n107), .B(n173), .ZN(next_data_out[5]) );
  OAI21D1 U19 ( .A1(n10), .A2(n106), .B(n174), .ZN(next_data_out[6]) );
  OAI21D1 U21 ( .A1(n10), .A2(n105), .B(n175), .ZN(next_data_out[7]) );
  OAI21D1 U22 ( .A1(n10), .A2(n38), .B(n176), .ZN(next_data_out[8]) );
  CKBD1 U24 ( .I(n178), .Z(n8) );
  CKBD1 U25 ( .I(n178), .Z(n9) );
  CKBD1 U27 ( .I(n178), .Z(n10) );
  INVD1 U28 ( .I(n6), .ZN(n7) );
  INVD1 U30 ( .I(n4), .ZN(n5) );
  INVD1 U31 ( .I(n116), .ZN(n11) );
  INVD1 U33 ( .I(n157), .ZN(n14) );
  INVD1 U34 ( .I(n158), .ZN(n12) );
  ND2D1 U36 ( .A1(n114), .A2(rd_en), .ZN(n178) );
  NR3D0 U37 ( .A1(n4), .A2(input_bitwidth[2]), .A3(n7), .ZN(n115) );
  NR3D0 U39 ( .A1(n6), .A2(input_bitwidth[2]), .A3(n5), .ZN(n114) );
  ND2D1 U40 ( .A1(rd_en), .A2(n115), .ZN(n160) );
  ND2D1 U42 ( .A1(n143), .A2(n118), .ZN(n138) );
  OAI221D0 U43 ( .A1(n12), .A2(n38), .B1(n14), .B2(n112), .C(n117), .ZN(n118)
         );
  AOI22D1 U44 ( .A1(data_in[24]), .A2(n140), .B1(data_in[16]), .B2(n11), .ZN(
        n117) );
  ND2D1 U45 ( .A1(n143), .A2(n142), .ZN(n149) );
  OAI221D0 U46 ( .A1(n12), .A2(n37), .B1(n14), .B2(n111), .C(n141), .ZN(n142)
         );
  AOI22D1 U48 ( .A1(data_in[25]), .A2(n140), .B1(n11), .B2(data_in[17]), .ZN(
        n141) );
  ND2D1 U49 ( .A1(n143), .A2(n121), .ZN(n145) );
  OAI221D0 U51 ( .A1(n12), .A2(n36), .B1(n14), .B2(n110), .C(n120), .ZN(n121)
         );
  AOI22D1 U52 ( .A1(data_in[26]), .A2(n140), .B1(data_in[18]), .B2(n11), .ZN(
        n120) );
  ND2D1 U53 ( .A1(n143), .A2(n124), .ZN(n147) );
  OAI221D0 U54 ( .A1(n12), .A2(n35), .B1(n14), .B2(n109), .C(n123), .ZN(n124)
         );
  AOI22D1 U55 ( .A1(data_in[27]), .A2(n140), .B1(data_in[19]), .B2(n11), .ZN(
        n123) );
  ND2D1 U57 ( .A1(n143), .A2(n127), .ZN(n151) );
  OAI221D0 U58 ( .A1(n12), .A2(n34), .B1(n14), .B2(n108), .C(n126), .ZN(n127)
         );
  AOI22D1 U59 ( .A1(data_in[28]), .A2(n140), .B1(data_in[20]), .B2(n11), .ZN(
        n126) );
  ND2D1 U60 ( .A1(n143), .A2(n130), .ZN(n153) );
  OAI221D0 U61 ( .A1(n12), .A2(n33), .B1(n14), .B2(n107), .C(n129), .ZN(n130)
         );
  AOI22D1 U63 ( .A1(data_in[29]), .A2(n140), .B1(data_in[21]), .B2(n11), .ZN(
        n129) );
  ND2D1 U64 ( .A1(n143), .A2(n133), .ZN(n155) );
  OAI221D0 U65 ( .A1(n12), .A2(n32), .B1(n14), .B2(n106), .C(n132), .ZN(n133)
         );
  AOI22D1 U66 ( .A1(data_in[30]), .A2(n140), .B1(data_in[22]), .B2(n11), .ZN(
        n132) );
  ND2D1 U67 ( .A1(n143), .A2(n136), .ZN(n159) );
  OAI221D0 U69 ( .A1(n12), .A2(n31), .B1(n14), .B2(n105), .C(n135), .ZN(n136)
         );
  AOI22D1 U70 ( .A1(data_in[31]), .A2(n140), .B1(data_in[23]), .B2(n11), .ZN(
        n135) );
  AOI22D1 U71 ( .A1(data_in[16]), .A2(n158), .B1(data_in[0]), .B2(n157), .ZN(
        n119) );
  AOI22D1 U72 ( .A1(data_in[17]), .A2(n158), .B1(data_in[1]), .B2(n157), .ZN(
        n150) );
  AOI22D1 U73 ( .A1(data_in[18]), .A2(n158), .B1(data_in[2]), .B2(n157), .ZN(
        n122) );
  AOI22D1 U75 ( .A1(data_in[19]), .A2(n158), .B1(data_in[3]), .B2(n157), .ZN(
        n125) );
  AOI22D1 U76 ( .A1(data_in[20]), .A2(n158), .B1(data_in[4]), .B2(n157), .ZN(
        n128) );
  AOI22D1 U77 ( .A1(data_in[21]), .A2(n158), .B1(data_in[5]), .B2(n157), .ZN(
        n131) );
  AOI22D1 U78 ( .A1(data_in[22]), .A2(n158), .B1(data_in[6]), .B2(n157), .ZN(
        n134) );
  AOI22D1 U79 ( .A1(data_in[23]), .A2(n158), .B1(data_in[7]), .B2(n157), .ZN(
        n137) );
  AOI22D1 U81 ( .A1(data_in[24]), .A2(n158), .B1(data_in[8]), .B2(n157), .ZN(
        n139) );
  AOI22D1 U82 ( .A1(data_in[25]), .A2(n158), .B1(data_in[9]), .B2(n157), .ZN(
        n144) );
  AOI22D1 U83 ( .A1(data_in[26]), .A2(n158), .B1(data_in[10]), .B2(n157), .ZN(
        n146) );
  AOI22D1 U84 ( .A1(data_in[27]), .A2(n158), .B1(data_in[11]), .B2(n157), .ZN(
        n148) );
  AOI22D1 U85 ( .A1(data_in[28]), .A2(n158), .B1(data_in[12]), .B2(n157), .ZN(
        n152) );
  AOI22D1 U87 ( .A1(data_in[29]), .A2(n158), .B1(data_in[13]), .B2(n157), .ZN(
        n154) );
  AOI22D1 U88 ( .A1(data_in[30]), .A2(n158), .B1(data_in[14]), .B2(n157), .ZN(
        n156) );
  AOI22D1 U89 ( .A1(data_in[31]), .A2(n158), .B1(data_in[15]), .B2(n157), .ZN(
        n161) );
  NR2D1 U92 ( .A1(rd_ptr[0]), .A2(n114), .ZN(N40) );
  OAI21D1 U93 ( .A1(n29), .A2(n10), .B(n163), .ZN(next_data_out[17]) );
  INVD1 U94 ( .I(data_in[17]), .ZN(n29) );
  OAI21D1 U95 ( .A1(n8), .A2(n30), .B(n162), .ZN(next_data_out[16]) );
  INVD1 U96 ( .I(data_in[16]), .ZN(n30) );
  OAI21D1 U98 ( .A1(n8), .A2(n28), .B(n164), .ZN(next_data_out[18]) );
  INVD1 U99 ( .I(data_in[18]), .ZN(n28) );
  OAI21D1 U100 ( .A1(n8), .A2(n27), .B(n165), .ZN(next_data_out[19]) );
  INVD1 U101 ( .I(data_in[19]), .ZN(n27) );
  OAI21D1 U102 ( .A1(n8), .A2(n26), .B(n166), .ZN(next_data_out[20]) );
  INVD1 U103 ( .I(data_in[20]), .ZN(n26) );
  OAI21D1 U104 ( .A1(n8), .A2(n25), .B(n167), .ZN(next_data_out[21]) );
  INVD1 U105 ( .I(data_in[21]), .ZN(n25) );
  OAI21D1 U106 ( .A1(n8), .A2(n24), .B(n169), .ZN(next_data_out[22]) );
  INVD1 U107 ( .I(data_in[22]), .ZN(n24) );
  OAI21D1 U108 ( .A1(n9), .A2(n23), .B(n170), .ZN(next_data_out[23]) );
  INVD1 U109 ( .I(data_in[23]), .ZN(n23) );
  OAI21D1 U110 ( .A1(n9), .A2(n22), .B(n162), .ZN(next_data_out[24]) );
  INVD1 U111 ( .I(data_in[24]), .ZN(n22) );
  OAI21D1 U112 ( .A1(n9), .A2(n20), .B(n164), .ZN(next_data_out[26]) );
  INVD1 U113 ( .I(data_in[26]), .ZN(n20) );
  OAI21D1 U114 ( .A1(n9), .A2(n19), .B(n165), .ZN(next_data_out[27]) );
  INVD1 U115 ( .I(data_in[27]), .ZN(n19) );
  OAI21D1 U116 ( .A1(n9), .A2(n18), .B(n166), .ZN(next_data_out[28]) );
  INVD1 U117 ( .I(data_in[28]), .ZN(n18) );
  OAI21D1 U118 ( .A1(n9), .A2(n17), .B(n167), .ZN(next_data_out[29]) );
  INVD1 U119 ( .I(data_in[29]), .ZN(n17) );
  OAI21D1 U120 ( .A1(n9), .A2(n16), .B(n169), .ZN(next_data_out[30]) );
  INVD1 U121 ( .I(data_in[30]), .ZN(n16) );
  OAI21D1 U122 ( .A1(n9), .A2(n15), .B(n170), .ZN(next_data_out[31]) );
  INVD1 U123 ( .I(data_in[31]), .ZN(n15) );
  OAI21D1 U124 ( .A1(n21), .A2(n10), .B(n163), .ZN(next_data_out[25]) );
  INVD1 U125 ( .I(data_in[25]), .ZN(n21) );
  CKBD1 U126 ( .I(input_bitwidth[0]), .Z(n4) );
  CKBD1 U127 ( .I(input_bitwidth[1]), .Z(n6) );
  ND2D1 U128 ( .A1(rd_ptr[1]), .A2(n13), .ZN(n116) );
  INVD1 U129 ( .I(rd_ptr[0]), .ZN(n13) );
  INVD1 U130 ( .I(data_in[1]), .ZN(n111) );
  INVD1 U131 ( .I(data_in[9]), .ZN(n37) );
  INVD1 U132 ( .I(data_in[0]), .ZN(n112) );
  INVD1 U133 ( .I(data_in[2]), .ZN(n110) );
  INVD1 U134 ( .I(data_in[3]), .ZN(n109) );
  INVD1 U135 ( .I(data_in[4]), .ZN(n108) );
  INVD1 U136 ( .I(data_in[5]), .ZN(n107) );
  INVD1 U137 ( .I(data_in[6]), .ZN(n106) );
  INVD1 U138 ( .I(data_in[7]), .ZN(n105) );
  INVD1 U139 ( .I(data_in[8]), .ZN(n38) );
  INVD1 U140 ( .I(data_in[10]), .ZN(n36) );
  INVD1 U141 ( .I(data_in[11]), .ZN(n35) );
  INVD1 U142 ( .I(data_in[12]), .ZN(n34) );
  INVD1 U143 ( .I(data_in[13]), .ZN(n33) );
  INVD1 U144 ( .I(data_in[14]), .ZN(n32) );
  INVD1 U145 ( .I(data_in[15]), .ZN(n31) );
  CKBD1 U146 ( .I(nRST), .Z(n2) );
  CKBD1 U147 ( .I(nRST), .Z(n1) );
  CKBD1 U148 ( .I(nRST), .Z(n3) );
endmodule


module bit_brick_95 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_94 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_93 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_92 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_91 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_90 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_89 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_88 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_87 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_86 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[0]), .ZN(n5) );
  INVD1 U6 ( .I(y[1]), .ZN(n6) );
  INVD1 U7 ( .I(x[0]), .ZN(n4) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_85 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_84 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_83 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_82 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_81 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_80 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module shift_add_5_DW01_add_14_DW01_add_154 ( A, B, CI, SUM, CO );
  input [28:0] A;
  input [28:0] B;
  output [28:0] SUM;
  input CI;
  output CO;
  wire   n1, \SUM[18] , n3, n4, n5, n6, n7;
  wire   [28:1] carry;
  assign SUM[27] = \SUM[18] ;
  assign SUM[28] = \SUM[18] ;
  assign SUM[26] = \SUM[18] ;
  assign SUM[25] = \SUM[18] ;
  assign SUM[24] = \SUM[18] ;
  assign SUM[23] = \SUM[18] ;
  assign SUM[22] = \SUM[18] ;
  assign SUM[21] = \SUM[18] ;
  assign SUM[20] = \SUM[18] ;
  assign SUM[19] = \SUM[18] ;
  assign SUM[18] = \SUM[18] ;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D0 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  AOI222D1 U3 ( .A1(carry[15]), .A2(A[27]), .B1(carry[15]), .B2(B[15]), .C1(
        B[15]), .C2(A[27]), .ZN(n5) );
  XNR3D4 U4 ( .A1(B[27]), .A2(n7), .A3(n3), .ZN(\SUM[18] ) );
  AO222D1 U5 ( .A1(n4), .A2(A[27]), .B1(n4), .B2(B[27]), .C1(A[27]), .C2(B[27]), .Z(n3) );
  CKND0 U6 ( .I(A[27]), .ZN(n7) );
  CKND0 U7 ( .I(B[16]), .ZN(n6) );
  OAI222D0 U8 ( .A1(n5), .A2(n7), .B1(n5), .B2(n6), .C1(n7), .C2(n6), .ZN(n4)
         );
  XNR3D0 U9 ( .A1(B[27]), .A2(n7), .A3(n4), .ZN(SUM[17]) );
  XNR3D0 U10 ( .A1(n6), .A2(n5), .A3(n7), .ZN(SUM[16]) );
  XNR3D0 U11 ( .A1(carry[15]), .A2(B[15]), .A3(n7), .ZN(SUM[15]) );
endmodule


module shift_add_5_DW01_add_6_DW01_add_146 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_5_DW01_add_5_DW01_add_145 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_5_DW01_add_4_DW01_add_144 ( A, B, CI, SUM, CO );
  input [30:0] A;
  input [30:0] B;
  output [30:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [30:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  XOR3D1 U1_30 ( .A1(A[30]), .A2(B[30]), .A3(carry[30]), .Z(SUM[30]) );
  FA1D2 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_5_DW01_add_3_DW01_add_143 ( A, B, CI, SUM, CO );
  input [29:0] A;
  input [29:0] B;
  output [29:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3;
  wire   [29:1] carry;
  assign SUM[29] = SUM[23];
  assign SUM[28] = SUM[23];
  assign SUM[27] = SUM[23];
  assign SUM[26] = SUM[23];
  assign SUM[25] = SUM[23];
  assign SUM[24] = SUM[23];

  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D1 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  XOR3D4 U1 ( .A1(B[22]), .A2(A[21]), .A3(n3), .Z(SUM[23]) );
  AN2XD1 U2 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U3 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  AO222D1 U4 ( .A1(n2), .A2(A[21]), .B1(n2), .B2(B[22]), .C1(A[21]), .C2(B[22]), .Z(n3) );
  AO222D1 U5 ( .A1(carry[21]), .A2(A[21]), .B1(B[21]), .B2(carry[21]), .C1(
        B[21]), .C2(A[21]), .Z(n2) );
  XOR3D0 U6 ( .A1(carry[21]), .A2(B[21]), .A3(A[21]), .Z(SUM[21]) );
  XOR3D0 U7 ( .A1(B[22]), .A2(A[21]), .A3(n2), .Z(SUM[22]) );
endmodule


module shift_add_5_DW01_add_2_DW01_add_142 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_5_DW01_add_1_DW01_add_141 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_5_DW01_add_0_DW01_add_140 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_5 ( input_bitwidth, weight_bitwidth, .products({
        \products[15][5] , \products[15][4] , \products[15][3] , 
        \products[15][2] , \products[15][1] , \products[15][0] , 
        \products[14][5] , \products[14][4] , \products[14][3] , 
        \products[14][2] , \products[14][1] , \products[14][0] , 
        \products[13][5] , \products[13][4] , \products[13][3] , 
        \products[13][2] , \products[13][1] , \products[13][0] , 
        \products[12][5] , \products[12][4] , \products[12][3] , 
        \products[12][2] , \products[12][1] , \products[12][0] , 
        \products[11][5] , \products[11][4] , \products[11][3] , 
        \products[11][2] , \products[11][1] , \products[11][0] , 
        \products[10][5] , \products[10][4] , \products[10][3] , 
        \products[10][2] , \products[10][1] , \products[10][0] , 
        \products[9][5] , \products[9][4] , \products[9][3] , \products[9][2] , 
        \products[9][1] , \products[9][0] , \products[8][5] , \products[8][4] , 
        \products[8][3] , \products[8][2] , \products[8][1] , \products[8][0] , 
        \products[7][5] , \products[7][4] , \products[7][3] , \products[7][2] , 
        \products[7][1] , \products[7][0] , \products[6][5] , \products[6][4] , 
        \products[6][3] , \products[6][2] , \products[6][1] , \products[6][0] , 
        \products[5][5] , \products[5][4] , \products[5][3] , \products[5][2] , 
        \products[5][1] , \products[5][0] , \products[4][5] , \products[4][4] , 
        \products[4][3] , \products[4][2] , \products[4][1] , \products[4][0] , 
        \products[3][5] , \products[3][4] , \products[3][3] , \products[3][2] , 
        \products[3][1] , \products[3][0] , \products[2][5] , \products[2][4] , 
        \products[2][3] , \products[2][2] , \products[2][1] , \products[2][0] , 
        \products[1][5] , \products[1][4] , \products[1][3] , \products[1][2] , 
        \products[1][1] , \products[1][0] , \products[0][5] , \products[0][4] , 
        \products[0][3] , \products[0][2] , \products[0][1] , \products[0][0] 
        }), shift_add_out );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  output [31:0] shift_add_out;
  input \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] ;
  wire   \shifted_products[15][16] , \shifted_products[15][15] ,
         \shifted_products[15][14] , \shifted_products[15][13] ,
         \shifted_products[15][12] , \shifted_products[15][11] ,
         \shifted_products[15][10] , \shifted_products[15][9] ,
         \shifted_products[15][8] , \shifted_products[15][7] ,
         \shifted_products[15][6] , \shifted_products[15][5] ,
         \shifted_products[15][4] , \shifted_products[15][3] ,
         \shifted_products[15][2] , \shifted_products[15][1] ,
         \shifted_products[15][0] , \shifted_products[14][14] ,
         \shifted_products[14][13] , \shifted_products[14][12] ,
         \shifted_products[14][11] , \shifted_products[14][10] ,
         \shifted_products[14][9] , \shifted_products[14][8] ,
         \shifted_products[14][7] , \shifted_products[14][6] ,
         \shifted_products[14][5] , \shifted_products[14][4] ,
         \shifted_products[14][3] , \shifted_products[14][2] ,
         \shifted_products[14][1] , \shifted_products[14][0] ,
         \shifted_products[13][12] , \shifted_products[13][11] ,
         \shifted_products[13][10] , \shifted_products[13][9] ,
         \shifted_products[13][8] , \shifted_products[13][7] ,
         \shifted_products[13][6] , \shifted_products[13][5] ,
         \shifted_products[13][4] , \shifted_products[13][3] ,
         \shifted_products[13][2] , \shifted_products[13][1] ,
         \shifted_products[13][0] , \shifted_products[12][10] ,
         \shifted_products[12][9] , \shifted_products[12][8] ,
         \shifted_products[12][7] , \shifted_products[12][6] ,
         \shifted_products[12][5] , \shifted_products[12][4] ,
         \shifted_products[12][3] , \shifted_products[12][2] ,
         \shifted_products[12][1] , \shifted_products[12][0] ,
         \shifted_products[11][13] , \shifted_products[11][12] ,
         \shifted_products[11][11] , \shifted_products[11][10] ,
         \shifted_products[11][9] , \shifted_products[11][8] ,
         \shifted_products[11][7] , \shifted_products[11][6] ,
         \shifted_products[11][5] , \shifted_products[11][4] ,
         \shifted_products[11][3] , \shifted_products[11][2] ,
         \shifted_products[11][1] , \shifted_products[11][0] ,
         \shifted_products[10][12] , \shifted_products[10][11] ,
         \shifted_products[10][10] , \shifted_products[10][9] ,
         \shifted_products[10][8] , \shifted_products[10][7] ,
         \shifted_products[10][6] , \shifted_products[10][5] ,
         \shifted_products[10][4] , \shifted_products[10][3] ,
         \shifted_products[10][2] , \shifted_products[10][1] ,
         \shifted_products[10][0] , \shifted_products[9][10] ,
         \shifted_products[9][9] , \shifted_products[9][8] ,
         \shifted_products[9][7] , \shifted_products[9][6] ,
         \shifted_products[9][5] , \shifted_products[9][4] ,
         \shifted_products[9][3] , \shifted_products[9][2] ,
         \shifted_products[9][1] , \shifted_products[9][0] ,
         \shifted_products[8][8] , \shifted_products[8][7] ,
         \shifted_products[8][6] , \shifted_products[8][5] ,
         \shifted_products[8][4] , \shifted_products[8][3] ,
         \shifted_products[8][2] , \shifted_products[8][1] ,
         \shifted_products[8][0] , \shifted_products[7][11] ,
         \shifted_products[7][10] , \shifted_products[7][9] ,
         \shifted_products[7][8] , \shifted_products[7][7] ,
         \shifted_products[7][6] , \shifted_products[7][5] ,
         \shifted_products[7][4] , \shifted_products[7][3] ,
         \shifted_products[7][2] , \shifted_products[7][1] ,
         \shifted_products[7][0] , \shifted_products[6][10] ,
         \shifted_products[6][9] , \shifted_products[6][8] ,
         \shifted_products[6][7] , \shifted_products[6][6] ,
         \shifted_products[6][5] , \shifted_products[6][4] ,
         \shifted_products[6][3] , \shifted_products[6][2] ,
         \shifted_products[6][1] , \shifted_products[6][0] ,
         \shifted_products[5][8] , \shifted_products[5][7] ,
         \shifted_products[5][6] , \shifted_products[5][5] ,
         \shifted_products[5][4] , \shifted_products[5][3] ,
         \shifted_products[5][2] , \shifted_products[5][1] ,
         \shifted_products[5][0] , \shifted_products[4][6] ,
         \shifted_products[4][5] , \shifted_products[4][4] ,
         \shifted_products[4][3] , \shifted_products[4][2] ,
         \shifted_products[4][1] , \shifted_products[4][0] ,
         \shifted_products[3][9] , \shifted_products[3][8] ,
         \shifted_products[3][7] , \shifted_products[3][6] ,
         \shifted_products[3][5] , \shifted_products[3][4] ,
         \shifted_products[3][3] , \shifted_products[3][2] ,
         \shifted_products[3][1] , \shifted_products[3][0] ,
         \shifted_products[2][8] , \shifted_products[2][7] ,
         \shifted_products[2][6] , \shifted_products[2][5] ,
         \shifted_products[2][4] , \shifted_products[2][3] ,
         \shifted_products[2][2] , \shifted_products[2][1] ,
         \shifted_products[2][0] , \shifted_products[1][6] ,
         \shifted_products[1][5] , \shifted_products[1][4] ,
         \shifted_products[1][3] , \shifted_products[1][2] ,
         \shifted_products[1][1] , \shifted_products[1][0] ,
         \shifted_products[0][9] , N99, N87, N86, N85, N84, N83, N82, N81, N80,
         N79, N78, N77, N76, N61, N60, N59, N58, N57, N56, N55, N54, N446,
         N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435,
         N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424,
         N423, N422, N421, N420, N419, N418, N417, N416, N415, N414, N413,
         N412, N411, N410, N409, N408, N407, N406, N405, N404, N403, N402,
         N401, N400, N399, N398, N397, N396, N395, N394, N393, N392, N391,
         N390, N389, N388, N387, N386, N385, N384, N383, N382, N381, N380,
         N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369,
         N368, N367, N366, N365, N364, N363, N362, N361, N360, N359, N358,
         N357, N356, N355, N354, N353, N352, N351, N350, N349, N348, N347,
         N346, N345, N344, N343, N342, N341, N340, N339, N338, N337, N336,
         N335, N334, N333, N332, N331, N330, N329, N328, N327, N326, N325,
         N324, N323, N322, N321, N320, N319, N318, N317, N316, N315, N314,
         N313, N312, N311, N310, N309, N308, N307, N306, N305, N304, N303,
         N302, N301, N300, N299, N298, N297, N296, N295, N294, N293, N292,
         N291, N290, N289, N288, N287, N286, N285, N284, N283, N282, N281,
         N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270,
         N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259,
         N258, N257, N256, N255, N254, N253, N252, N251, N250, N249, N248,
         N247, N246, N245, N244, N243, N242, N241, N240, N239, N238, N237,
         N236, N235, N234, N233, N232, N231, N230, N229, N214, N213, N212,
         N211, N210, N209, N208, N207, N206, N205, N204, N203, N202, N201,
         N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, N179,
         N178, N177, N176, N175, N174, N159, N158, N157, N156, N155, N154,
         N153, N152, N151, N150, N149, N148, N136, N135, N134, N133, N132,
         N131, N130, N129, N128, N127, N126, N125, N124, N123, N108, N107,
         N106, N105, N104, N103, N102, N101, N100,
         \add_14_root_add_199_I16/carry[6] ,
         \add_14_root_add_199_I16/carry[5] ,
         \add_14_root_add_199_I16/carry[4] ,
         \add_14_root_add_199_I16/carry[3] ,
         \add_14_root_add_199_I16/carry[2] ,
         \add_14_root_add_199_I16/carry[1] ,
         \add_13_root_add_199_I16/carry[9] ,
         \add_13_root_add_199_I16/carry[8] ,
         \add_13_root_add_199_I16/carry[7] ,
         \add_13_root_add_199_I16/carry[6] ,
         \add_13_root_add_199_I16/carry[5] ,
         \add_13_root_add_199_I16/carry[4] ,
         \add_13_root_add_199_I16/carry[3] ,
         \add_13_root_add_199_I16/carry[2] ,
         \add_13_root_add_199_I16/carry[1] ,
         \add_12_root_add_199_I16/carry[7] ,
         \add_12_root_add_199_I16/carry[6] ,
         \add_12_root_add_199_I16/carry[5] ,
         \add_12_root_add_199_I16/carry[4] ,
         \add_12_root_add_199_I16/carry[3] ,
         \add_12_root_add_199_I16/carry[2] ,
         \add_12_root_add_199_I16/carry[1] ,
         \add_11_root_add_199_I16/carry[11] ,
         \add_11_root_add_199_I16/carry[10] ,
         \add_11_root_add_199_I16/carry[9] ,
         \add_11_root_add_199_I16/carry[8] ,
         \add_11_root_add_199_I16/carry[7] ,
         \add_11_root_add_199_I16/carry[6] ,
         \add_11_root_add_199_I16/carry[5] ,
         \add_11_root_add_199_I16/carry[4] ,
         \add_11_root_add_199_I16/carry[3] ,
         \add_11_root_add_199_I16/carry[2] ,
         \add_11_root_add_199_I16/carry[1] ,
         \add_10_root_add_199_I16/carry[9] ,
         \add_10_root_add_199_I16/carry[8] ,
         \add_10_root_add_199_I16/carry[7] ,
         \add_10_root_add_199_I16/carry[6] ,
         \add_10_root_add_199_I16/carry[5] ,
         \add_10_root_add_199_I16/carry[4] ,
         \add_10_root_add_199_I16/carry[3] ,
         \add_10_root_add_199_I16/carry[2] ,
         \add_10_root_add_199_I16/carry[1] ,
         \add_9_root_add_199_I16/carry[13] ,
         \add_9_root_add_199_I16/carry[12] ,
         \add_9_root_add_199_I16/carry[11] ,
         \add_9_root_add_199_I16/carry[10] , \add_9_root_add_199_I16/carry[9] ,
         \add_9_root_add_199_I16/carry[8] , \add_9_root_add_199_I16/carry[7] ,
         \add_9_root_add_199_I16/carry[6] , \add_9_root_add_199_I16/carry[5] ,
         \add_9_root_add_199_I16/carry[4] , \add_9_root_add_199_I16/carry[3] ,
         \add_9_root_add_199_I16/carry[2] , \add_9_root_add_199_I16/carry[1] ,
         \add_8_root_add_199_I16/carry[11] ,
         \add_8_root_add_199_I16/carry[10] , \add_8_root_add_199_I16/carry[9] ,
         \add_8_root_add_199_I16/carry[8] , \add_8_root_add_199_I16/carry[7] ,
         \add_8_root_add_199_I16/carry[6] , \add_8_root_add_199_I16/carry[5] ,
         \add_8_root_add_199_I16/carry[4] , \add_8_root_add_199_I16/carry[3] ,
         \add_8_root_add_199_I16/carry[2] , \add_8_root_add_199_I16/carry[1] ,
         n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72,
         n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86,
         n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100,
         n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, n111,
         n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122,
         n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133,
         n134, n135, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246,
         n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257,
         n258, n259, n260, n261, n262, n263, n264, n265, n266, n267, n268,
         n269, n270, n271, n272, n273, n274, n275, n276, n277, n278, n279,
         n280, n281, n282, n283, n284, n285, n286, n287, n288, n289, n290,
         n291, n292, n293, n294, n295, n296, n297, n298, n299, n300, n301,
         n302, n303, n304, n305, n306, n307, n308, n309, n310, n311, n312,
         n313, n314, n315, n316, n317, n318, n319, n320, n321, n322, n323,
         n324, n325, n326;

  MAOI22D1 U26 ( .A1(\products[7][0] ), .A2(n314), .B1(n111), .B2(n317), .ZN(
        n315) );
  AN2XD1 U74 ( .A1(n320), .A2(n289), .Z(n290) );
  MAOI22D1 U112 ( .A1(\products[15][2] ), .A2(n277), .B1(n63), .B2(n306), .ZN(
        n278) );
  OA21D1 U130 ( .A1(n244), .A2(n62), .B(n280), .Z(n271) );
  AN2XD1 U134 ( .A1(n307), .A2(n297), .Z(n281) );
  AN2XD1 U191 ( .A1(n317), .A2(n312), .Z(n294) );
  AN2XD1 U239 ( .A1(n297), .A2(n317), .Z(n283) );
  shift_add_5_DW01_add_14_DW01_add_154 add_7_root_add_199_I16 ( .A({
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \shifted_products[14][14] , 
        \shifted_products[14][13] , \shifted_products[14][12] , 
        \shifted_products[14][11] , \shifted_products[14][10] , 
        \shifted_products[14][9] , \shifted_products[14][8] , 
        \shifted_products[14][7] , \shifted_products[14][6] , 
        \shifted_products[14][5] , \shifted_products[14][4] , 
        \shifted_products[14][3] , \shifted_products[14][2] , 
        \shifted_products[14][1] , \shifted_products[14][0] }), .B({
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \shifted_products[15][16] , \shifted_products[15][15] , 
        \shifted_products[15][14] , \shifted_products[15][13] , 
        \shifted_products[15][12] , \shifted_products[15][11] , 
        \shifted_products[15][10] , \shifted_products[15][9] , 
        \shifted_products[15][8] , \shifted_products[15][7] , 
        \shifted_products[15][6] , \shifted_products[15][5] , 
        \shifted_products[15][4] , \shifted_products[15][3] , 
        \shifted_products[15][2] , \shifted_products[15][1] , 
        \shifted_products[15][0] }), .CI(n246), .SUM({N257, N256, N255, N254, 
        N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, N243, N242, 
        N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, N231, N230, 
        N229}) );
  shift_add_5_DW01_add_6_DW01_add_146 add_4_root_add_0_root_add_199_I16 ( .A({
        n24, n24, n24, n24, n24, n24, n24, n24, n24, n24, n24, n24, n24, n24, 
        n24, n24, n24, n24, N214, N213, N212, N211, N210, N209, N208, N207, 
        N206, N205, N204, N203, N202, N201}), .B({N257, N257, N257, N257, N256, 
        N255, N254, N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, 
        N243, N242, N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, 
        N231, N230, N229}), .CI(n246), .SUM({N382, N381, N380, N379, N378, 
        N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, N367, N366, 
        N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, N355, N354, 
        N353, N352, N351}) );
  shift_add_5_DW01_add_5_DW01_add_145 add_3_root_add_0_root_add_199_I16 ( .A({
        n25, n25, n25, n25, n25, n25, n25, n25, n25, n25, n25, n25, n25, n25, 
        n25, n25, N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, 
        N179, N178, N177, N176, N175, N174}), .B({n22, n22, n22, n22, n22, n22, 
        n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, 
        N159, N158, N157, N156, N155, N154, N153, N152, N151, N150, N149, N148}), .CI(n246), .SUM({N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, 
        N340, N339, N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, 
        N328, N327, N326, N325, N324, N323, N322, N321, N320, N319}) );
  shift_add_5_DW01_add_4_DW01_add_144 add_5_root_add_199_I16 ( .A({n23, n23, 
        n23, n23, n23, n23, n23, n23, n23, n23, n23, n23, n23, n23, n23, n23, 
        n23, n23, n23, n23, n23, N108, N107, N106, N105, N104, N103, N102, 
        N101, N100, N99}), .B({n28, n28, n28, n28, n28, n28, n28, n28, n28, 
        n28, n28, n28, n28, n28, n28, n28, n28, N136, N135, N134, N133, N132, 
        N131, N130, N129, N128, N127, N126, N125, N124, N123}), .CI(n246), 
        .SUM({N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}) );
  shift_add_5_DW01_add_3_DW01_add_143 add_6_root_add_199_I16 ( .A({n20, n20, 
        n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, 
        n20, n20, n20, n20, n20, n20, N61, N60, N59, N58, N57, N56, N55, N54}), 
        .B({n26, n26, n26, n26, n26, n26, n26, n26, n26, n26, n26, n26, n26, 
        n26, n26, n26, n26, n26, N87, N86, N85, N84, N83, N82, N81, N80, N79, 
        N78, N77, N76}), .CI(n246), .SUM({N287, N286, N285, N284, N283, N282, 
        N281, N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270, 
        N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259, N258}) );
  shift_add_5_DW01_add_2_DW01_add_142 add_2_root_add_0_root_add_199_I16 ( .A({
        N318, N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}), .B({N382, N381, N380, 
        N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, 
        N367, N366, N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, 
        N355, N354, N353, N352, N351}), .CI(n246), .SUM({N446, N445, N444, 
        N443, N442, N441, N440, N439, N438, N437, N436, N435, N434, N433, N432, 
        N431, N430, N429, N428, N427, N426, N425, N424, N423, N422, N421, N420, 
        N419, N418, N417, N416, N415}) );
  shift_add_5_DW01_add_1_DW01_add_141 add_1_root_add_0_root_add_199_I16 ( .A({
        N446, N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435, 
        N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424, N423, 
        N422, N421, N420, N419, N418, N417, N416, N415}), .B({N287, N287, N287, 
        N286, N285, N284, N283, N282, N281, N280, N279, N278, N277, N276, N275, 
        N274, N273, N272, N271, N270, N269, N268, N267, N266, N265, N264, N263, 
        N262, N261, N260, N259, N258}), .CI(n246), .SUM({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}) );
  shift_add_5_DW01_add_0_DW01_add_140 add_0_root_add_0_root_add_199_I16 ( .A({
        N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, N340, N339, 
        N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, N328, N327, 
        N326, N325, N324, N323, N322, N321, N320, N319}), .B({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}), .CI(n246), .SUM(shift_add_out) );
  NR2D2 U2 ( .A1(n321), .A2(n322), .ZN(n282) );
  FA1D1 U3 ( .A(\products[0][1] ), .B(\shifted_products[1][1] ), .CI(
        \add_14_root_add_199_I16/carry[1] ), .CO(
        \add_14_root_add_199_I16/carry[2] ), .S(N55) );
  NR2D1 U4 ( .A1(n313), .A2(n227), .ZN(\shifted_products[1][1] ) );
  AOI222D2 U5 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(\products[4][5] ), 
        .B1(\add_12_root_add_199_I16/carry[7] ), .B2(\shifted_products[5][7] ), 
        .C1(\shifted_products[5][7] ), .C2(\products[4][5] ), .ZN(n53) );
  AOI222D1 U6 ( .A1(n48), .A2(\products[8][5] ), .B1(n48), .B2(
        \products[9][5] ), .C1(\products[8][5] ), .C2(\products[9][5] ), .ZN(
        n49) );
  AOI222D2 U7 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(\products[12][5] ), .B1(\add_8_root_add_199_I16/carry[11] ), .B2(\shifted_products[13][11] ), 
        .C1(\shifted_products[13][11] ), .C2(\products[12][5] ), .ZN(n39) );
  FA1D1 U8 ( .A(\shifted_products[12][10] ), .B(\shifted_products[13][10] ), 
        .CI(\add_8_root_add_199_I16/carry[10] ), .CO(
        \add_8_root_add_199_I16/carry[11] ), .S(N211) );
  XNR3D4 U9 ( .A1(\products[7][5] ), .A2(n114), .A3(n29), .ZN(n28) );
  INR2D1 U10 ( .A1(n274), .B1(n243), .ZN(n305) );
  AN2XD1 U11 ( .A1(n312), .A2(n38), .Z(n3) );
  AN2XD1 U12 ( .A1(n294), .A2(n38), .Z(n291) );
  AOI222D0 U13 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \products[6][5] ), .B1(\add_11_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[7][11] ), .C1(\shifted_products[7][11] ), .C2(
        \products[6][5] ), .ZN(n51) );
  AN2XD1 U14 ( .A1(n306), .A2(n312), .Z(n2) );
  XOR3D2 U15 ( .A1(\products[9][5] ), .A2(n49), .A3(n47), .Z(n22) );
  CKXOR2D1 U16 ( .A1(n223), .A2(n60), .Z(n1) );
  OAI222D1 U17 ( .A1(n46), .A2(n47), .B1(n46), .B2(n50), .C1(n47), .C2(n50), 
        .ZN(n48) );
  FA1D1 U18 ( .A(\shifted_products[4][6] ), .B(\shifted_products[5][6] ), .CI(
        \add_12_root_add_199_I16/carry[6] ), .CO(
        \add_12_root_add_199_I16/carry[7] ), .S(N105) );
  CKAN2D0 U19 ( .A1(n300), .A2(n283), .Z(n254) );
  CKND2D1 U20 ( .A1(n300), .A2(n231), .ZN(n299) );
  INR2XD0 U21 ( .A1(n307), .B1(n243), .ZN(n300) );
  CKND2D1 U22 ( .A1(n252), .A2(n251), .ZN(n312) );
  CKAN2D1 U23 ( .A1(n312), .A2(n38), .Z(n303) );
  OR2XD1 U24 ( .A1(n51), .A2(n114), .Z(n4) );
  OR2XD1 U25 ( .A1(n51), .A2(n32), .Z(n5) );
  OR2D1 U27 ( .A1(n114), .A2(n32), .Z(n6) );
  ND3D2 U28 ( .A1(n4), .A2(n5), .A3(n6), .ZN(n52) );
  AN2D1 U29 ( .A1(n40), .A2(\products[12][5] ), .Z(n7) );
  AN2D2 U30 ( .A1(n40), .A2(\products[13][5] ), .Z(n8) );
  AN2D1 U31 ( .A1(\products[12][5] ), .A2(\products[13][5] ), .Z(n9) );
  NR3D2 U32 ( .A1(n7), .A2(n8), .A3(n9), .ZN(n41) );
  OAI222D1 U33 ( .A1(n39), .A2(n80), .B1(n39), .B2(n42), .C1(n80), .C2(n42), 
        .ZN(n40) );
  INR2XD0 U34 ( .A1(n324), .B1(n243), .ZN(n313) );
  AN2XD1 U35 ( .A1(n54), .A2(\products[5][5] ), .Z(n11) );
  OAI222D1 U36 ( .A1(n53), .A2(n126), .B1(n53), .B2(n56), .C1(n126), .C2(n56), 
        .ZN(n54) );
  NR3D1 U37 ( .A1(n10), .A2(n11), .A3(n12), .ZN(n55) );
  AOI222D1 U38 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[0][9] ), .B1(\add_14_root_add_199_I16/carry[6] ), 
        .B2(\shifted_products[1][6] ), .C1(\shifted_products[1][6] ), .C2(
        \shifted_products[0][9] ), .ZN(n61) );
  CKND2D4 U39 ( .A1(n18), .A2(n19), .ZN(n20) );
  ND3D2 U40 ( .A1(n13), .A2(n14), .A3(n15), .ZN(n59) );
  ND2D2 U41 ( .A1(n305), .A2(n282), .ZN(n311) );
  NR2D1 U42 ( .A1(n37), .A2(n79), .ZN(\shifted_products[13][0] ) );
  CKND2D1 U43 ( .A1(n252), .A2(n250), .ZN(n306) );
  ND2D1 U44 ( .A1(n248), .A2(n247), .ZN(n325) );
  AN2D1 U45 ( .A1(n54), .A2(\products[4][5] ), .Z(n10) );
  AN2XD1 U46 ( .A1(\products[4][5] ), .A2(\products[5][5] ), .Z(n12) );
  CKND2D0 U47 ( .A1(n1), .A2(n21), .ZN(n18) );
  OR2XD1 U48 ( .A1(n58), .A2(n57), .Z(n13) );
  OR2XD1 U49 ( .A1(n58), .A2(n31), .Z(n14) );
  OR2D1 U50 ( .A1(n57), .A2(n31), .Z(n15) );
  AOI222D2 U51 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(\products[2][5] ), .B1(\add_13_root_add_199_I16/carry[9] ), .B2(\shifted_products[3][9] ), .C1(
        \shifted_products[3][9] ), .C2(\products[2][5] ), .ZN(n58) );
  OAI22D0 U52 ( .A1(n313), .A2(n223), .B1(n282), .B2(n225), .ZN(
        \shifted_products[1][5] ) );
  ND2D3 U53 ( .A1(n16), .A2(n17), .ZN(n19) );
  INVD1 U54 ( .I(n1), .ZN(n16) );
  INVD1 U55 ( .I(n21), .ZN(n17) );
  AN2D4 U56 ( .A1(n274), .A2(n38), .Z(n324) );
  INR2D1 U57 ( .A1(n317), .B1(n270), .ZN(n269) );
  CKND2D0 U58 ( .A1(n250), .A2(n249), .ZN(n297) );
  CKND2D0 U59 ( .A1(n252), .A2(n248), .ZN(n307) );
  CKND2D0 U60 ( .A1(n249), .A2(n248), .ZN(n298) );
  CKND2D0 U61 ( .A1(n250), .A2(n247), .ZN(n274) );
  OA222D0 U62 ( .A1(n61), .A2(n60), .B1(n61), .B2(n223), .C1(n60), .C2(n223), 
        .Z(n21) );
  AOI222D0 U63 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \products[10][5] ), .B1(\add_9_root_add_199_I16/carry[13] ), .B2(
        \shifted_products[11][13] ), .C1(\shifted_products[11][13] ), .C2(
        \products[10][5] ), .ZN(n44) );
  CKAN2D0 U64 ( .A1(n300), .A2(n35), .Z(n320) );
  OAI22D0 U65 ( .A1(n3), .A2(n116), .B1(n234), .B2(n118), .ZN(
        \shifted_products[6][3] ) );
  INR2D1 U66 ( .A1(n317), .B1(n299), .ZN(n304) );
  CKND2 U67 ( .I(n270), .ZN(n231) );
  AOI222D1 U68 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(\products[8][5] ), .B1(\add_10_root_add_199_I16/carry[9] ), .B2(\shifted_products[9][9] ), .C1(
        \shifted_products[9][9] ), .C2(\products[8][5] ), .ZN(n46) );
  XOR3D2 U69 ( .A1(\products[5][5] ), .A2(n55), .A3(n126), .Z(n23) );
  XOR3D2 U70 ( .A1(\products[13][5] ), .A2(n41), .A3(n80), .Z(n24) );
  XOR3D1 U71 ( .A1(\products[11][5] ), .A2(n43), .A3(n30), .Z(n25) );
  OAI22D0 U72 ( .A1(n313), .A2(n223), .B1(n282), .B2(n224), .ZN(
        \shifted_products[1][6] ) );
  NR2D0 U73 ( .A1(n318), .A2(n243), .ZN(n326) );
  CKAN2D0 U75 ( .A1(n283), .A2(n35), .Z(n288) );
  OAI21D0 U76 ( .A1(n64), .A2(n35), .B(n273), .ZN(\shifted_products[15][15] )
         );
  NR2D0 U77 ( .A1(n37), .A2(n67), .ZN(\shifted_products[15][0] ) );
  CKND2D0 U78 ( .A1(n300), .A2(n230), .ZN(n272) );
  CKND2D0 U79 ( .A1(n231), .A2(n283), .ZN(n318) );
  CKND1 U80 ( .I(\products[13][5] ), .ZN(n74) );
  NR2D0 U81 ( .A1(n113), .A2(n37), .ZN(\shifted_products[7][0] ) );
  CKND2D0 U82 ( .A1(\products[12][5] ), .A2(n318), .ZN(n260) );
  CKND2D0 U83 ( .A1(\products[8][5] ), .A2(n318), .ZN(n319) );
  CKND1 U84 ( .I(\products[7][5] ), .ZN(n108) );
  CKND2D0 U85 ( .A1(\products[3][5] ), .A2(n299), .ZN(n287) );
  NR2D0 U86 ( .A1(n270), .A2(n243), .ZN(n259) );
  CKND2D0 U87 ( .A1(\products[2][5] ), .A2(n299), .ZN(n284) );
  CKND2D0 U88 ( .A1(\products[10][5] ), .A2(n270), .ZN(n253) );
  CKND1 U89 ( .I(\products[6][5] ), .ZN(n114) );
  CKND1 U90 ( .I(\products[14][5] ), .ZN(n68) );
  ND2D2 U91 ( .A1(n283), .A2(n2), .ZN(n322) );
  CKND2D0 U92 ( .A1(\products[15][5] ), .A2(n270), .ZN(n280) );
  CKND2D1 U93 ( .A1(n235), .A2(n300), .ZN(n301) );
  CKAN2D0 U94 ( .A1(n294), .A2(n305), .Z(n293) );
  CKND1 U95 ( .I(\products[5][5] ), .ZN(n120) );
  CKAN2D0 U96 ( .A1(n294), .A2(n313), .Z(n295) );
  OAI22D0 U97 ( .A1(n291), .A2(n126), .B1(n290), .B2(n128), .ZN(
        \shifted_products[4][5] ) );
  OAI22D0 U98 ( .A1(n291), .A2(n80), .B1(n289), .B2(n82), .ZN(
        \shifted_products[12][5] ) );
  OAI22D0 U99 ( .A1(n37), .A2(n122), .B1(n293), .B2(n124), .ZN(
        \shifted_products[5][3] ) );
  OAI22D0 U100 ( .A1(n291), .A2(n128), .B1(n290), .B2(n130), .ZN(
        \shifted_products[4][3] ) );
  OAI22D0 U101 ( .A1(n37), .A2(n64), .B1(n236), .B2(n66), .ZN(
        \shifted_products[15][3] ) );
  OAI22D0 U102 ( .A1(n3), .A2(n70), .B1(n235), .B2(n72), .ZN(
        \shifted_products[14][3] ) );
  OAI22D0 U103 ( .A1(n324), .A2(n88), .B1(n2), .B2(n90), .ZN(
        \shifted_products[11][3] ) );
  NR2D0 U104 ( .A1(n231), .A2(n93), .ZN(\shifted_products[10][3] ) );
  OAI22D0 U105 ( .A1(n313), .A2(n132), .B1(n286), .B2(n134), .ZN(
        \shifted_products[3][5] ) );
  OAI21D0 U106 ( .A1(n288), .A2(n221), .B(n284), .ZN(\shifted_products[2][5] )
         );
  OAI22D0 U107 ( .A1(n313), .A2(n134), .B1(n286), .B2(n216), .ZN(
        \shifted_products[3][3] ) );
  NR2D0 U108 ( .A1(n229), .A2(n219), .ZN(\shifted_products[2][3] ) );
  NR2D0 U109 ( .A1(n230), .A2(n104), .ZN(\shifted_products[8][3] ) );
  OAI22D0 U110 ( .A1(n36), .A2(n76), .B1(n233), .B2(n78), .ZN(
        \shifted_products[13][3] ) );
  OAI22D0 U111 ( .A1(n291), .A2(n82), .B1(n289), .B2(n84), .ZN(
        \shifted_products[12][3] ) );
  OAI22D0 U113 ( .A1(n110), .A2(n36), .B1(n232), .B2(n112), .ZN(
        \shifted_products[7][3] ) );
  OAI21D0 U114 ( .A1(n66), .A2(n35), .B(n273), .ZN(\shifted_products[15][13] )
         );
  NR2D0 U115 ( .A1(n313), .A2(n216), .ZN(\shifted_products[3][1] ) );
  NR2D0 U116 ( .A1(n37), .A2(n124), .ZN(\shifted_products[5][1] ) );
  NR2D0 U117 ( .A1(n291), .A2(n84), .ZN(\shifted_products[12][1] ) );
  NR2D0 U118 ( .A1(n37), .A2(n78), .ZN(\shifted_products[13][1] ) );
  NR2D0 U119 ( .A1(n112), .A2(n37), .ZN(\shifted_products[7][1] ) );
  NR2D0 U120 ( .A1(n231), .A2(n95), .ZN(\shifted_products[10][1] ) );
  NR2D0 U121 ( .A1(n37), .A2(n66), .ZN(\shifted_products[15][1] ) );
  OA21D0 U122 ( .A1(n288), .A2(n133), .B(n287), .Z(n31) );
  CKND1 U123 ( .I(\products[4][5] ), .ZN(n126) );
  CKAN2D0 U124 ( .A1(\products[0][5] ), .A2(n37), .Z(\shifted_products[0][9] )
         );
  XNR3D4 U125 ( .A1(\products[3][5] ), .A2(n57), .A3(n27), .ZN(n26) );
  AO222D1 U126 ( .A1(n59), .A2(\products[2][5] ), .B1(n59), .B2(
        \products[3][5] ), .C1(\products[2][5] ), .C2(\products[3][5] ), .Z(
        n27) );
  AO222D1 U127 ( .A1(n52), .A2(\products[6][5] ), .B1(n52), .B2(
        \products[7][5] ), .C1(\products[6][5] ), .C2(\products[7][5] ), .Z(
        n29) );
  CKAN2D0 U128 ( .A1(n294), .A2(n324), .Z(n264) );
  OAI21D0 U129 ( .A1(n63), .A2(n35), .B(n273), .ZN(\shifted_products[15][16] )
         );
  INR2XD0 U131 ( .A1(n274), .B1(n292), .ZN(n289) );
  INR2D0 U132 ( .A1(n307), .B1(n285), .ZN(n286) );
  NR2D0 U133 ( .A1(n313), .A2(n217), .ZN(\shifted_products[3][0] ) );
  ND2D2 U135 ( .A1(n35), .A2(n307), .ZN(n321) );
  CKND2D0 U136 ( .A1(n35), .A2(n297), .ZN(n314) );
  CKND2D0 U137 ( .A1(n300), .A2(n297), .ZN(n267) );
  AOI22D0 U138 ( .A1(\products[14][0] ), .A2(n267), .B1(\products[14][4] ), 
        .B2(n266), .ZN(n268) );
  NR2D0 U139 ( .A1(n291), .A2(n131), .ZN(\shifted_products[4][0] ) );
  NR2D0 U140 ( .A1(n291), .A2(n85), .ZN(\shifted_products[12][0] ) );
  AOI22D0 U141 ( .A1(\products[6][4] ), .A2(n301), .B1(\products[6][0] ), .B2(
        n314), .ZN(n302) );
  NR2D0 U142 ( .A1(n231), .A2(n96), .ZN(\shifted_products[10][0] ) );
  NR2D0 U143 ( .A1(n230), .A2(n107), .ZN(\shifted_products[8][0] ) );
  CKND1 U144 ( .I(\products[15][4] ), .ZN(n63) );
  CKND1 U145 ( .I(\products[14][3] ), .ZN(n70) );
  OAI21D0 U146 ( .A1(n288), .A2(n218), .B(n284), .ZN(\shifted_products[2][8] )
         );
  OAI21D0 U147 ( .A1(n288), .A2(n135), .B(n287), .ZN(\shifted_products[3][8] )
         );
  NR2D0 U148 ( .A1(n229), .A2(n222), .ZN(\shifted_products[2][0] ) );
  CKND1 U149 ( .I(\products[13][3] ), .ZN(n76) );
  CKND1 U150 ( .I(\products[7][3] ), .ZN(n110) );
  CKND2D0 U151 ( .A1(n305), .A2(n312), .ZN(n308) );
  CKND2D0 U152 ( .A1(n294), .A2(n274), .ZN(n261) );
  CKND1 U153 ( .I(\products[6][3] ), .ZN(n116) );
  CKND1 U154 ( .I(\products[14][4] ), .ZN(n69) );
  CKND1 U155 ( .I(\products[7][4] ), .ZN(n109) );
  CKND1 U156 ( .I(\products[12][3] ), .ZN(n82) );
  CKND1 U157 ( .I(\products[13][4] ), .ZN(n75) );
  CKND1 U158 ( .I(\products[5][3] ), .ZN(n122) );
  OAI21D0 U159 ( .A1(n320), .A2(n104), .B(n319), .ZN(\shifted_products[8][7] )
         );
  CKND1 U160 ( .I(\products[6][4] ), .ZN(n115) );
  OAI21D0 U161 ( .A1(n320), .A2(n82), .B(n260), .ZN(\shifted_products[12][9] )
         );
  OAI22D0 U162 ( .A1(n230), .A2(n103), .B1(n320), .B2(n107), .ZN(
        \shifted_products[8][4] ) );
  OAI21D0 U163 ( .A1(n320), .A2(n106), .B(n319), .ZN(\shifted_products[8][5] )
         );
  OAI21D0 U164 ( .A1(n320), .A2(n84), .B(n260), .ZN(\shifted_products[12][7] )
         );
  OAI22D0 U165 ( .A1(n231), .A2(n92), .B1(n254), .B2(n96), .ZN(
        \shifted_products[10][4] ) );
  FA1D1 U166 ( .A(\shifted_products[2][6] ), .B(\shifted_products[3][6] ), 
        .CI(\add_13_root_add_199_I16/carry[6] ), .CO(
        \add_13_root_add_199_I16/carry[7] ), .S(N82) );
  OAI21D0 U167 ( .A1(n288), .A2(n220), .B(n284), .ZN(\shifted_products[2][6] )
         );
  OAI22D0 U168 ( .A1(n291), .A2(n127), .B1(n290), .B2(n129), .ZN(
        \shifted_products[4][4] ) );
  OAI22D0 U169 ( .A1(n291), .A2(n81), .B1(n289), .B2(n83), .ZN(
        \shifted_products[12][4] ) );
  OAI21D0 U170 ( .A1(n320), .A2(n105), .B(n319), .ZN(\shifted_products[8][6] )
         );
  AOI22D0 U171 ( .A1(\products[9][4] ), .A2(n322), .B1(\products[9][0] ), .B2(
        n321), .ZN(n323) );
  AOI22D0 U172 ( .A1(\products[15][4] ), .A2(n275), .B1(\products[15][0] ), 
        .B2(n277), .ZN(n276) );
  AOI22D0 U173 ( .A1(\products[11][0] ), .A2(n257), .B1(\products[11][4] ), 
        .B2(n285), .ZN(n258) );
  OAI22D0 U174 ( .A1(n240), .A2(n70), .B1(n269), .B2(n68), .ZN(
        \shifted_products[14][9] ) );
  OAI22D0 U175 ( .A1(n37), .A2(n123), .B1(n293), .B2(n125), .ZN(
        \shifted_products[5][2] ) );
  OAI22D0 U176 ( .A1(n291), .A2(n129), .B1(n290), .B2(n131), .ZN(
        \shifted_products[4][2] ) );
  OAI22D0 U177 ( .A1(n37), .A2(n77), .B1(n233), .B2(n79), .ZN(
        \shifted_products[13][2] ) );
  OAI22D0 U178 ( .A1(n291), .A2(n83), .B1(n289), .B2(n85), .ZN(
        \shifted_products[12][2] ) );
  OAI22D0 U179 ( .A1(n37), .A2(n65), .B1(n236), .B2(n67), .ZN(
        \shifted_products[15][2] ) );
  OAI22D0 U180 ( .A1(n3), .A2(n71), .B1(n235), .B2(n73), .ZN(
        \shifted_products[14][2] ) );
  OAI22D0 U181 ( .A1(n313), .A2(n224), .B1(n282), .B2(n226), .ZN(
        \shifted_products[1][4] ) );
  OAI22D0 U182 ( .A1(n313), .A2(n225), .B1(n282), .B2(n227), .ZN(
        \shifted_products[1][3] ) );
  OAI22D0 U183 ( .A1(n324), .A2(n89), .B1(n2), .B2(n91), .ZN(
        \shifted_products[11][2] ) );
  NR2D0 U184 ( .A1(n231), .A2(n94), .ZN(\shifted_products[10][2] ) );
  OAI22D0 U185 ( .A1(n313), .A2(n133), .B1(n286), .B2(n135), .ZN(
        \shifted_products[3][4] ) );
  OAI22D0 U186 ( .A1(n229), .A2(n218), .B1(n288), .B2(n222), .ZN(
        \shifted_products[2][4] ) );
  OAI22D0 U187 ( .A1(n313), .A2(n135), .B1(n286), .B2(n217), .ZN(
        \shifted_products[3][2] ) );
  NR2D0 U188 ( .A1(n229), .A2(n220), .ZN(\shifted_products[2][2] ) );
  OAI22D0 U189 ( .A1(n324), .A2(n100), .B1(n237), .B2(n102), .ZN(
        \shifted_products[9][2] ) );
  NR2D0 U190 ( .A1(n230), .A2(n105), .ZN(\shifted_products[8][2] ) );
  OAI22D0 U192 ( .A1(n3), .A2(n117), .B1(n234), .B2(n119), .ZN(
        \shifted_products[6][2] ) );
  CKAN2D0 U193 ( .A1(n313), .A2(n312), .Z(n316) );
  CKND1 U194 ( .I(\products[5][4] ), .ZN(n121) );
  CKND1 U195 ( .I(\products[4][4] ), .ZN(n127) );
  CKND1 U196 ( .I(\products[4][3] ), .ZN(n128) );
  CKAN2D0 U197 ( .A1(n324), .A2(n312), .Z(n279) );
  CKND2D0 U198 ( .A1(n283), .A2(n307), .ZN(n257) );
  CKND2D2 U199 ( .A1(n249), .A2(n251), .ZN(n317) );
  CKND1 U200 ( .I(\products[6][2] ), .ZN(n117) );
  CKND1 U201 ( .I(\products[12][2] ), .ZN(n83) );
  AOI22D0 U202 ( .A1(\products[7][2] ), .A2(n309), .B1(\products[7][4] ), .B2(
        n308), .ZN(n310) );
  AOI22D0 U203 ( .A1(\products[13][4] ), .A2(n261), .B1(\products[13][2] ), 
        .B2(n292), .ZN(n262) );
  OAI21D0 U204 ( .A1(n320), .A2(n83), .B(n260), .ZN(\shifted_products[12][8] )
         );
  AOI22D0 U205 ( .A1(\products[13][4] ), .A2(n292), .B1(\products[13][2] ), 
        .B2(n243), .ZN(n263) );
  OAI22D0 U206 ( .A1(n313), .A2(n226), .B1(n282), .B2(n228), .ZN(
        \shifted_products[1][2] ) );
  CKND1 U207 ( .I(\products[5][2] ), .ZN(n123) );
  CKND1 U208 ( .I(\products[4][2] ), .ZN(n129) );
  INVD1 U209 ( .I(n318), .ZN(n230) );
  INVD1 U210 ( .I(n299), .ZN(n229) );
  INVD1 U211 ( .I(n301), .ZN(n234) );
  CKBD1 U212 ( .I(n311), .Z(n37) );
  CKBD1 U213 ( .I(n311), .Z(n36) );
  CKBD1 U214 ( .I(n311), .Z(n38) );
  INVD1 U215 ( .I(n322), .ZN(n237) );
  NR2D1 U216 ( .A1(n292), .A2(n321), .ZN(n296) );
  OAI22D1 U217 ( .A1(n296), .A2(n122), .B1(n295), .B2(n120), .ZN(
        \shifted_products[5][7] ) );
  ND2D1 U218 ( .A1(n324), .A2(n2), .ZN(n270) );
  INVD1 U219 ( .I(\products[15][5] ), .ZN(n62) );
  INVD1 U220 ( .I(n261), .ZN(n233) );
  NR2D1 U221 ( .A1(n3), .A2(n73), .ZN(\shifted_products[14][0] ) );
  INVD1 U222 ( .I(n308), .ZN(n232) );
  AOI222D0 U223 ( .A1(n45), .A2(\products[10][5] ), .B1(n45), .B2(
        \products[11][5] ), .C1(\products[10][5] ), .C2(\products[11][5] ), 
        .ZN(n30) );
  FA1D0 U224 ( .A(\shifted_products[12][5] ), .B(\shifted_products[13][5] ), 
        .CI(\add_8_root_add_199_I16/carry[5] ), .CO(
        \add_8_root_add_199_I16/carry[6] ), .S(N206) );
  OAI222D0 U225 ( .A1(n239), .A2(n78), .B1(n233), .B2(n76), .C1(n36), .C2(n74), 
        .ZN(\shifted_products[13][5] ) );
  FA1D0 U226 ( .A(\shifted_products[4][5] ), .B(\shifted_products[5][5] ), 
        .CI(\add_12_root_add_199_I16/carry[5] ), .CO(
        \add_12_root_add_199_I16/carry[6] ), .S(N104) );
  OAI222D0 U227 ( .A1(n293), .A2(n122), .B1(n296), .B2(n124), .C1(n36), .C2(
        n120), .ZN(\shifted_products[5][5] ) );
  FA1D0 U228 ( .A(\shifted_products[10][3] ), .B(\shifted_products[11][3] ), 
        .CI(\add_9_root_add_199_I16/carry[3] ), .CO(
        \add_9_root_add_199_I16/carry[4] ), .S(N177) );
  FA1D0 U229 ( .A(\shifted_products[4][3] ), .B(\shifted_products[5][3] ), 
        .CI(\add_12_root_add_199_I16/carry[3] ), .CO(
        \add_12_root_add_199_I16/carry[4] ), .S(N102) );
  FA1D0 U230 ( .A(\shifted_products[2][3] ), .B(\shifted_products[3][3] ), 
        .CI(\add_13_root_add_199_I16/carry[3] ), .CO(
        \add_13_root_add_199_I16/carry[4] ), .S(N79) );
  FA1D0 U231 ( .A(\shifted_products[2][5] ), .B(\shifted_products[3][5] ), 
        .CI(\add_13_root_add_199_I16/carry[5] ), .CO(
        \add_13_root_add_199_I16/carry[6] ), .S(N81) );
  FA1D0 U232 ( .A(\shifted_products[10][9] ), .B(\shifted_products[11][9] ), 
        .CI(\add_9_root_add_199_I16/carry[9] ), .CO(
        \add_9_root_add_199_I16/carry[10] ), .S(N183) );
  OAI22D1 U233 ( .A1(n238), .A2(n88), .B1(n259), .B2(n86), .ZN(
        \shifted_products[11][9] ) );
  OAI21D1 U234 ( .A1(n34), .A2(n95), .B(n255), .ZN(\shifted_products[10][9] )
         );
  FA1D0 U235 ( .A(\shifted_products[6][3] ), .B(\shifted_products[7][3] ), 
        .CI(\add_11_root_add_199_I16/carry[3] ), .CO(
        \add_11_root_add_199_I16/carry[4] ), .S(N126) );
  FA1D0 U236 ( .A(\shifted_products[12][3] ), .B(\shifted_products[13][3] ), 
        .CI(\add_8_root_add_199_I16/carry[3] ), .CO(
        \add_8_root_add_199_I16/carry[4] ), .S(N204) );
  FA1D0 U237 ( .A(\shifted_products[8][3] ), .B(\shifted_products[9][3] ), 
        .CI(\add_10_root_add_199_I16/carry[3] ), .CO(
        \add_10_root_add_199_I16/carry[4] ), .S(N151) );
  OAI22D1 U238 ( .A1(n324), .A2(n99), .B1(n237), .B2(n101), .ZN(
        \shifted_products[9][3] ) );
  OAI21D1 U240 ( .A1(n281), .A2(n64), .B(n271), .ZN(\shifted_products[15][11] ) );
  OAI21D1 U241 ( .A1(n34), .A2(n72), .B(n265), .ZN(\shifted_products[14][11] )
         );
  OAI21D1 U242 ( .A1(n34), .A2(n70), .B(n265), .ZN(\shifted_products[14][13] )
         );
  FA1D0 U243 ( .A(\shifted_products[10][11] ), .B(\shifted_products[11][11] ), 
        .CI(\add_9_root_add_199_I16/carry[11] ), .CO(
        \add_9_root_add_199_I16/carry[12] ), .S(N185) );
  OAI21D1 U244 ( .A1(n34), .A2(n90), .B(n256), .ZN(\shifted_products[11][11] )
         );
  OAI21D1 U245 ( .A1(n34), .A2(n93), .B(n255), .ZN(\shifted_products[10][11] )
         );
  FA1D0 U246 ( .A(\shifted_products[2][1] ), .B(\shifted_products[3][1] ), 
        .CI(\add_13_root_add_199_I16/carry[1] ), .CO(
        \add_13_root_add_199_I16/carry[2] ), .S(N77) );
  NR2D1 U247 ( .A1(n229), .A2(n221), .ZN(\shifted_products[2][1] ) );
  FA1D0 U248 ( .A(\shifted_products[6][1] ), .B(\shifted_products[7][1] ), 
        .CI(\add_11_root_add_199_I16/carry[1] ), .CO(
        \add_11_root_add_199_I16/carry[2] ), .S(N124) );
  NR2D1 U249 ( .A1(n303), .A2(n118), .ZN(\shifted_products[6][1] ) );
  FA1D0 U250 ( .A(\shifted_products[8][1] ), .B(\shifted_products[9][1] ), 
        .CI(\add_10_root_add_199_I16/carry[1] ), .CO(
        \add_10_root_add_199_I16/carry[2] ), .S(N149) );
  NR2D1 U251 ( .A1(n324), .A2(n101), .ZN(\shifted_products[9][1] ) );
  NR2D1 U252 ( .A1(n230), .A2(n106), .ZN(\shifted_products[8][1] ) );
  FA1D0 U253 ( .A(\shifted_products[10][1] ), .B(\shifted_products[11][1] ), 
        .CI(\add_9_root_add_199_I16/carry[1] ), .CO(
        \add_9_root_add_199_I16/carry[2] ), .S(N175) );
  NR2D1 U254 ( .A1(n324), .A2(n90), .ZN(\shifted_products[11][1] ) );
  NR2D1 U255 ( .A1(n303), .A2(n72), .ZN(\shifted_products[14][1] ) );
  FA1D0 U256 ( .A(\shifted_products[4][1] ), .B(\shifted_products[5][1] ), 
        .CI(\add_12_root_add_199_I16/carry[1] ), .CO(
        \add_12_root_add_199_I16/carry[2] ), .S(N100) );
  NR2D1 U257 ( .A1(n291), .A2(n130), .ZN(\shifted_products[4][1] ) );
  FA1D0 U258 ( .A(\shifted_products[12][1] ), .B(\shifted_products[13][1] ), 
        .CI(\add_8_root_add_199_I16/carry[1] ), .CO(
        \add_8_root_add_199_I16/carry[2] ), .S(N202) );
  NR2D1 U259 ( .A1(n324), .A2(n102), .ZN(\shifted_products[9][0] ) );
  FA1D0 U260 ( .A(\products[0][5] ), .B(\shifted_products[1][5] ), .CI(
        \add_14_root_add_199_I16/carry[5] ), .CO(
        \add_14_root_add_199_I16/carry[6] ), .S(N59) );
  NR2D1 U261 ( .A1(n303), .A2(n119), .ZN(\shifted_products[6][0] ) );
  INVD1 U262 ( .I(\products[12][5] ), .ZN(n80) );
  FA1D0 U263 ( .A(\shifted_products[2][7] ), .B(\shifted_products[3][7] ), 
        .CI(\add_13_root_add_199_I16/carry[7] ), .CO(
        \add_13_root_add_199_I16/carry[8] ), .S(N83) );
  OAI21D1 U264 ( .A1(n288), .A2(n216), .B(n287), .ZN(\shifted_products[3][7] )
         );
  OAI21D1 U265 ( .A1(n288), .A2(n219), .B(n284), .ZN(\shifted_products[2][7] )
         );
  INVD1 U266 ( .I(\products[1][5] ), .ZN(n223) );
  INVD1 U267 ( .I(n314), .ZN(n241) );
  OAI21D1 U268 ( .A1(n288), .A2(n134), .B(n287), .ZN(\shifted_products[3][9] )
         );
  OAI22D1 U269 ( .A1(n245), .A2(n76), .B1(n326), .B2(n74), .ZN(
        \shifted_products[13][11] ) );
  OAI22D1 U270 ( .A1(n245), .A2(n99), .B1(n326), .B2(n97), .ZN(
        \shifted_products[9][9] ) );
  OAI22D1 U271 ( .A1(n241), .A2(n110), .B1(n304), .B2(n108), .ZN(
        \shifted_products[7][11] ) );
  INVD1 U272 ( .I(\products[9][5] ), .ZN(n97) );
  INVD1 U273 ( .I(\products[11][5] ), .ZN(n86) );
  OAI21D1 U274 ( .A1(n34), .A2(n88), .B(n256), .ZN(\shifted_products[11][13] )
         );
  OAI22D1 U275 ( .A1(n245), .A2(n75), .B1(n326), .B2(n74), .ZN(
        \shifted_products[13][12] ) );
  OAI22D1 U276 ( .A1(n245), .A2(n98), .B1(n326), .B2(n97), .ZN(
        \shifted_products[9][10] ) );
  ND2D1 U277 ( .A1(\products[14][5] ), .A2(n272), .ZN(n265) );
  ND2D1 U278 ( .A1(\products[10][5] ), .A2(n272), .ZN(n255) );
  ND2D1 U279 ( .A1(\products[15][5] ), .A2(n272), .ZN(n273) );
  ND2D1 U280 ( .A1(\products[11][5] ), .A2(n272), .ZN(n256) );
  INVD1 U281 ( .I(n266), .ZN(n235) );
  INVD1 U282 ( .I(n321), .ZN(n245) );
  OAI22D1 U283 ( .A1(n296), .A2(n121), .B1(n295), .B2(n120), .ZN(
        \shifted_products[5][8] ) );
  INVD1 U284 ( .I(n267), .ZN(n240) );
  INVD1 U285 ( .I(n257), .ZN(n238) );
  OA22D0 U286 ( .A1(n241), .A2(n109), .B1(n304), .B2(n108), .Z(n32) );
  INVD1 U287 ( .I(n275), .ZN(n236) );
  INVD1 U288 ( .I(n309), .ZN(n242) );
  INVD1 U289 ( .I(n277), .ZN(n244) );
  INVD1 U290 ( .I(n292), .ZN(n239) );
  NR2D1 U291 ( .A1(n324), .A2(n91), .ZN(\shifted_products[11][0] ) );
  INVD1 U292 ( .I(\products[3][5] ), .ZN(n132) );
  OA21D1 U293 ( .A1(n34), .A2(n87), .B(n256), .Z(n33) );
  INVD1 U294 ( .I(n325), .ZN(n243) );
  ND2D1 U295 ( .A1(n297), .A2(n306), .ZN(n292) );
  INVD1 U296 ( .I(\products[15][3] ), .ZN(n64) );
  ND2D1 U297 ( .A1(n306), .A2(n312), .ZN(n285) );
  NR2D1 U298 ( .A1(n313), .A2(n228), .ZN(\shifted_products[1][0] ) );
  INVD1 U299 ( .I(\products[3][3] ), .ZN(n134) );
  FA1D0 U300 ( .A(\shifted_products[6][7] ), .B(\shifted_products[7][7] ), 
        .CI(\add_11_root_add_199_I16/carry[7] ), .CO(
        \add_11_root_add_199_I16/carry[8] ), .S(N130) );
  OAI222D0 U301 ( .A1(n229), .A2(n114), .B1(n241), .B2(n118), .C1(n317), .C2(
        n116), .ZN(\shifted_products[6][7] ) );
  OAI222D0 U302 ( .A1(n242), .A2(n110), .B1(n316), .B2(n108), .C1(n112), .C2(
        n317), .ZN(\shifted_products[7][7] ) );
  FA1D0 U303 ( .A(\shifted_products[8][7] ), .B(\shifted_products[9][7] ), 
        .CI(\add_10_root_add_199_I16/carry[7] ), .CO(
        \add_10_root_add_199_I16/carry[8] ), .S(N155) );
  OAI222D0 U304 ( .A1(n245), .A2(n101), .B1(n230), .B2(n97), .C1(n99), .C2(
        n325), .ZN(\shifted_products[9][7] ) );
  OAI222D0 U305 ( .A1(n36), .A2(n63), .B1(n236), .B2(n65), .C1(n67), .C2(n306), 
        .ZN(\shifted_products[15][4] ) );
  OAI222D0 U306 ( .A1(n3), .A2(n69), .B1(n235), .B2(n71), .C1(n317), .C2(n73), 
        .ZN(\shifted_products[14][4] ) );
  OAI222D0 U307 ( .A1(n36), .A2(n62), .B1(n236), .B2(n64), .C1(n66), .C2(n306), 
        .ZN(\shifted_products[15][5] ) );
  OAI222D0 U308 ( .A1(n3), .A2(n68), .B1(n235), .B2(n70), .C1(n317), .C2(n72), 
        .ZN(\shifted_products[14][5] ) );
  OAI222D0 U309 ( .A1(n231), .A2(n68), .B1(n240), .B2(n72), .C1(n317), .C2(n70), .ZN(\shifted_products[14][7] ) );
  OAI222D0 U310 ( .A1(n244), .A2(n66), .B1(n279), .B2(n62), .C1(n64), .C2(n306), .ZN(\shifted_products[15][7] ) );
  FA1D0 U311 ( .A(\shifted_products[8][4] ), .B(\shifted_products[9][4] ), 
        .CI(\add_10_root_add_199_I16/carry[4] ), .CO(
        \add_10_root_add_199_I16/carry[5] ), .S(N152) );
  OAI222D0 U312 ( .A1(n324), .A2(n98), .B1(n237), .B2(n100), .C1(n325), .C2(
        n102), .ZN(\shifted_products[9][4] ) );
  FA1D0 U313 ( .A(\shifted_products[10][4] ), .B(\shifted_products[11][4] ), 
        .CI(\add_9_root_add_199_I16/carry[4] ), .CO(
        \add_9_root_add_199_I16/carry[5] ), .S(N178) );
  OAI222D0 U314 ( .A1(n324), .A2(n87), .B1(n2), .B2(n89), .C1(n325), .C2(n91), 
        .ZN(\shifted_products[11][4] ) );
  FA1D0 U315 ( .A(\shifted_products[12][7] ), .B(\shifted_products[13][7] ), 
        .CI(\add_8_root_add_199_I16/carry[7] ), .CO(
        \add_8_root_add_199_I16/carry[8] ), .S(N208) );
  OAI222D0 U316 ( .A1(n239), .A2(n76), .B1(n264), .B2(n74), .C1(n325), .C2(n78), .ZN(\shifted_products[13][7] ) );
  FA1D0 U317 ( .A(\shifted_products[8][5] ), .B(\shifted_products[9][5] ), 
        .CI(\add_10_root_add_199_I16/carry[5] ), .CO(
        \add_10_root_add_199_I16/carry[6] ), .S(N153) );
  OAI222D0 U318 ( .A1(n324), .A2(n97), .B1(n237), .B2(n99), .C1(n325), .C2(
        n101), .ZN(\shifted_products[9][5] ) );
  FA1D0 U319 ( .A(\shifted_products[10][5] ), .B(\shifted_products[11][5] ), 
        .CI(\add_9_root_add_199_I16/carry[5] ), .CO(
        \add_9_root_add_199_I16/carry[6] ), .S(N179) );
  OAI222D0 U320 ( .A1(n324), .A2(n86), .B1(n2), .B2(n88), .C1(n325), .C2(n90), 
        .ZN(\shifted_products[11][5] ) );
  OAI21D1 U321 ( .A1(n254), .A2(n95), .B(n253), .ZN(\shifted_products[10][5] )
         );
  FA1D0 U322 ( .A(\shifted_products[6][9] ), .B(\shifted_products[7][9] ), 
        .CI(\add_11_root_add_199_I16/carry[9] ), .CO(
        \add_11_root_add_199_I16/carry[10] ), .S(N132) );
  OAI222D0 U323 ( .A1(n229), .A2(n108), .B1(n241), .B2(n112), .C1(n317), .C2(
        n110), .ZN(\shifted_products[7][9] ) );
  OAI22D1 U324 ( .A1(n241), .A2(n116), .B1(n304), .B2(n114), .ZN(
        \shifted_products[6][9] ) );
  FA1D0 U325 ( .A(\shifted_products[12][9] ), .B(\shifted_products[13][9] ), 
        .CI(\add_8_root_add_199_I16/carry[9] ), .CO(
        \add_8_root_add_199_I16/carry[10] ), .S(N210) );
  OAI222D0 U326 ( .A1(n245), .A2(n78), .B1(n230), .B2(n74), .C1(n325), .C2(n76), .ZN(\shifted_products[13][9] ) );
  FA1D0 U327 ( .A(\shifted_products[10][7] ), .B(\shifted_products[11][7] ), 
        .CI(\add_9_root_add_199_I16/carry[7] ), .CO(
        \add_9_root_add_199_I16/carry[8] ), .S(N181) );
  OAI222D0 U328 ( .A1(n231), .A2(n86), .B1(n238), .B2(n90), .C1(n325), .C2(n88), .ZN(\shifted_products[11][7] ) );
  OAI21D1 U329 ( .A1(n254), .A2(n93), .B(n253), .ZN(\shifted_products[10][7] )
         );
  FA1D0 U330 ( .A(\shifted_products[10][8] ), .B(\shifted_products[11][8] ), 
        .CI(\add_9_root_add_199_I16/carry[8] ), .CO(
        \add_9_root_add_199_I16/carry[9] ), .S(N182) );
  OAI222D0 U331 ( .A1(n231), .A2(n86), .B1(n238), .B2(n89), .C1(n325), .C2(n87), .ZN(\shifted_products[11][8] ) );
  OAI221D0 U332 ( .A1(n254), .A2(n92), .B1(n35), .B2(n96), .C(n253), .ZN(
        \shifted_products[10][8] ) );
  FA1D0 U333 ( .A(\shifted_products[10][10] ), .B(\shifted_products[11][10] ), 
        .CI(\add_9_root_add_199_I16/carry[10] ), .CO(
        \add_9_root_add_199_I16/carry[11] ), .S(N184) );
  OAI222D0 U334 ( .A1(n238), .A2(n87), .B1(n259), .B2(n86), .C1(n34), .C2(n91), 
        .ZN(\shifted_products[11][10] ) );
  OAI21D1 U335 ( .A1(n34), .A2(n94), .B(n255), .ZN(\shifted_products[10][10] )
         );
  FA1D0 U336 ( .A(\shifted_products[12][4] ), .B(\shifted_products[13][4] ), 
        .CI(\add_8_root_add_199_I16/carry[4] ), .CO(
        \add_8_root_add_199_I16/carry[5] ), .S(N205) );
  OAI222D0 U337 ( .A1(n239), .A2(n79), .B1(n233), .B2(n77), .C1(n36), .C2(n75), 
        .ZN(\shifted_products[13][4] ) );
  FA1D0 U338 ( .A(\shifted_products[6][5] ), .B(\shifted_products[7][5] ), 
        .CI(\add_11_root_add_199_I16/carry[5] ), .CO(
        \add_11_root_add_199_I16/carry[6] ), .S(N128) );
  OAI222D0 U339 ( .A1(n3), .A2(n114), .B1(n234), .B2(n116), .C1(n317), .C2(
        n118), .ZN(\shifted_products[6][5] ) );
  OAI222D0 U340 ( .A1(n232), .A2(n110), .B1(n242), .B2(n112), .C1(n108), .C2(
        n37), .ZN(\shifted_products[7][5] ) );
  OAI222D0 U341 ( .A1(n288), .A2(n217), .B1(n286), .B2(n133), .C1(n313), .C2(
        n132), .ZN(\shifted_products[3][6] ) );
  FA1D0 U342 ( .A(\shifted_products[4][4] ), .B(\shifted_products[5][4] ), 
        .CI(\add_12_root_add_199_I16/carry[4] ), .CO(
        \add_12_root_add_199_I16/carry[5] ), .S(N103) );
  OAI222D0 U343 ( .A1(n293), .A2(n123), .B1(n296), .B2(n125), .C1(n36), .C2(
        n121), .ZN(\shifted_products[5][4] ) );
  FA1D0 U344 ( .A(\shifted_products[6][4] ), .B(\shifted_products[7][4] ), 
        .CI(\add_11_root_add_199_I16/carry[4] ), .CO(
        \add_11_root_add_199_I16/carry[5] ), .S(N127) );
  OAI222D0 U345 ( .A1(n3), .A2(n115), .B1(n234), .B2(n117), .C1(n317), .C2(
        n119), .ZN(\shifted_products[6][4] ) );
  OAI222D0 U346 ( .A1(n232), .A2(n111), .B1(n242), .B2(n113), .C1(n109), .C2(
        n37), .ZN(\shifted_products[7][4] ) );
  FA1D0 U347 ( .A(\shifted_products[8][6] ), .B(\shifted_products[9][6] ), 
        .CI(\add_10_root_add_199_I16/carry[6] ), .CO(
        \add_10_root_add_199_I16/carry[7] ), .S(N154) );
  OAI221D0 U348 ( .A1(n324), .A2(n97), .B1(n100), .B2(n325), .C(n323), .ZN(
        \shifted_products[9][6] ) );
  OAI221D0 U349 ( .A1(n36), .A2(n62), .B1(n65), .B2(n306), .C(n276), .ZN(
        \shifted_products[15][6] ) );
  OAI221D0 U350 ( .A1(n3), .A2(n68), .B1(n317), .B2(n71), .C(n268), .ZN(
        \shifted_products[14][6] ) );
  FA1D0 U351 ( .A(\shifted_products[10][6] ), .B(\shifted_products[11][6] ), 
        .CI(\add_9_root_add_199_I16/carry[6] ), .CO(
        \add_9_root_add_199_I16/carry[7] ), .S(N180) );
  OAI221D0 U352 ( .A1(n324), .A2(n86), .B1(n325), .B2(n89), .C(n258), .ZN(
        \shifted_products[11][6] ) );
  OAI21D1 U353 ( .A1(n254), .A2(n94), .B(n253), .ZN(\shifted_products[10][6] )
         );
  OAI221D0 U354 ( .A1(n281), .A2(n66), .B1(n244), .B2(n64), .C(n280), .ZN(
        \shifted_products[15][9] ) );
  OAI221D0 U355 ( .A1(n281), .A2(n65), .B1(n244), .B2(n63), .C(n280), .ZN(
        \shifted_products[15][10] ) );
  OAI222D0 U356 ( .A1(n240), .A2(n69), .B1(n269), .B2(n68), .C1(n34), .C2(n73), 
        .ZN(\shifted_products[14][10] ) );
  FA1D0 U357 ( .A(\shifted_products[6][8] ), .B(\shifted_products[7][8] ), 
        .CI(\add_11_root_add_199_I16/carry[8] ), .CO(
        \add_11_root_add_199_I16/carry[9] ), .S(N131) );
  OAI221D0 U358 ( .A1(n316), .A2(n108), .B1(n242), .B2(n109), .C(n315), .ZN(
        \shifted_products[7][8] ) );
  OAI222D0 U359 ( .A1(n229), .A2(n114), .B1(n241), .B2(n117), .C1(n317), .C2(
        n115), .ZN(\shifted_products[6][8] ) );
  OAI221D0 U360 ( .A1(n281), .A2(n63), .B1(n67), .B2(n35), .C(n271), .ZN(
        \shifted_products[15][12] ) );
  OAI21D1 U361 ( .A1(n34), .A2(n71), .B(n265), .ZN(\shifted_products[14][12] )
         );
  FA1D0 U362 ( .A(\shifted_products[10][2] ), .B(\shifted_products[11][2] ), 
        .CI(\add_9_root_add_199_I16/carry[2] ), .CO(
        \add_9_root_add_199_I16/carry[3] ), .S(N176) );
  FA1D0 U363 ( .A(\shifted_products[4][2] ), .B(\shifted_products[5][2] ), 
        .CI(\add_12_root_add_199_I16/carry[2] ), .CO(
        \add_12_root_add_199_I16/carry[3] ), .S(N101) );
  FA1D0 U364 ( .A(\shifted_products[2][2] ), .B(\shifted_products[3][2] ), 
        .CI(\add_13_root_add_199_I16/carry[2] ), .CO(
        \add_13_root_add_199_I16/carry[3] ), .S(N78) );
  FA1D0 U365 ( .A(\shifted_products[2][4] ), .B(\shifted_products[3][4] ), 
        .CI(\add_13_root_add_199_I16/carry[4] ), .CO(
        \add_13_root_add_199_I16/carry[5] ), .S(N80) );
  FA1D0 U366 ( .A(\shifted_products[6][2] ), .B(\shifted_products[7][2] ), 
        .CI(\add_11_root_add_199_I16/carry[2] ), .CO(
        \add_11_root_add_199_I16/carry[3] ), .S(N125) );
  OAI22D1 U367 ( .A1(n111), .A2(n36), .B1(n232), .B2(n113), .ZN(
        \shifted_products[7][2] ) );
  FA1D0 U368 ( .A(\shifted_products[12][2] ), .B(\shifted_products[13][2] ), 
        .CI(\add_8_root_add_199_I16/carry[2] ), .CO(
        \add_8_root_add_199_I16/carry[3] ), .S(N203) );
  FA1D0 U369 ( .A(\shifted_products[8][2] ), .B(\shifted_products[9][2] ), 
        .CI(\add_10_root_add_199_I16/carry[2] ), .CO(
        \add_10_root_add_199_I16/carry[3] ), .S(N150) );
  FA1D0 U370 ( .A(\products[0][3] ), .B(\shifted_products[1][3] ), .CI(
        \add_14_root_add_199_I16/carry[3] ), .CO(
        \add_14_root_add_199_I16/carry[4] ), .S(N57) );
  FA1D0 U371 ( .A(\products[0][4] ), .B(\shifted_products[1][4] ), .CI(
        \add_14_root_add_199_I16/carry[4] ), .CO(
        \add_14_root_add_199_I16/carry[5] ), .S(N58) );
  INVD1 U372 ( .I(\products[12][4] ), .ZN(n81) );
  INVD1 U373 ( .I(\products[3][4] ), .ZN(n133) );
  FA1D0 U374 ( .A(\shifted_products[6][10] ), .B(\shifted_products[7][10] ), 
        .CI(\add_11_root_add_199_I16/carry[10] ), .CO(
        \add_11_root_add_199_I16/carry[11] ), .S(N133) );
  OAI222D0 U375 ( .A1(n229), .A2(n108), .B1(n241), .B2(n111), .C1(n317), .C2(
        n109), .ZN(\shifted_products[7][10] ) );
  OAI22D1 U376 ( .A1(n241), .A2(n115), .B1(n304), .B2(n114), .ZN(
        \shifted_products[6][10] ) );
  OAI21D1 U377 ( .A1(n65), .A2(n35), .B(n273), .ZN(\shifted_products[15][14] )
         );
  OAI21D1 U378 ( .A1(n35), .A2(n69), .B(n265), .ZN(\shifted_products[14][14] )
         );
  FA1D0 U379 ( .A(\shifted_products[10][12] ), .B(\shifted_products[11][12] ), 
        .CI(\add_9_root_add_199_I16/carry[12] ), .CO(
        \add_9_root_add_199_I16/carry[13] ), .S(N186) );
  OAI21D1 U380 ( .A1(n34), .A2(n89), .B(n256), .ZN(\shifted_products[11][12] )
         );
  OAI21D1 U381 ( .A1(n34), .A2(n92), .B(n255), .ZN(\shifted_products[10][12] )
         );
  OAI21D1 U382 ( .A1(n320), .A2(n81), .B(n260), .ZN(\shifted_products[12][10] ) );
  OAI222D0 U383 ( .A1(n245), .A2(n77), .B1(n230), .B2(n74), .C1(n325), .C2(n75), .ZN(\shifted_products[13][10] ) );
  FA1D0 U384 ( .A(\shifted_products[8][8] ), .B(\shifted_products[9][8] ), 
        .CI(\add_10_root_add_199_I16/carry[8] ), .CO(
        \add_10_root_add_199_I16/carry[9] ), .S(N156) );
  OAI21D1 U385 ( .A1(n320), .A2(n103), .B(n319), .ZN(\shifted_products[8][8] )
         );
  OAI222D0 U386 ( .A1(n245), .A2(n100), .B1(n230), .B2(n97), .C1(n325), .C2(
        n98), .ZN(\shifted_products[9][8] ) );
  OAI22D1 U387 ( .A1(n291), .A2(n126), .B1(n290), .B2(n127), .ZN(
        \shifted_products[4][6] ) );
  OAI222D0 U388 ( .A1(n293), .A2(n121), .B1(n296), .B2(n123), .C1(n36), .C2(
        n120), .ZN(\shifted_products[5][6] ) );
  NR2D1 U389 ( .A1(n37), .A2(n125), .ZN(\shifted_products[5][0] ) );
  INVD1 U390 ( .I(\products[1][4] ), .ZN(n224) );
  INVD1 U391 ( .I(\products[1][3] ), .ZN(n225) );
  INVD1 U392 ( .I(\products[2][4] ), .ZN(n218) );
  CKBD1 U393 ( .I(n298), .Z(n35) );
  ND2D1 U394 ( .A1(n325), .A2(n317), .ZN(n277) );
  INVD1 U395 ( .I(\products[11][3] ), .ZN(n88) );
  INVD1 U396 ( .I(\products[9][3] ), .ZN(n99) );
  INVD1 U397 ( .I(\products[11][4] ), .ZN(n87) );
  ND2D1 U398 ( .A1(n306), .A2(n274), .ZN(n266) );
  ND2D1 U399 ( .A1(n274), .A2(n312), .ZN(n275) );
  ND2D1 U400 ( .A1(n307), .A2(n306), .ZN(n309) );
  INVD1 U401 ( .I(\products[9][4] ), .ZN(n98) );
  INVD1 U402 ( .I(\products[10][4] ), .ZN(n92) );
  INVD1 U403 ( .I(\products[10][3] ), .ZN(n93) );
  INVD1 U404 ( .I(\products[8][4] ), .ZN(n103) );
  INVD1 U405 ( .I(\products[2][3] ), .ZN(n219) );
  INVD1 U406 ( .I(\products[8][3] ), .ZN(n104) );
  CKBD1 U407 ( .I(n298), .Z(n34) );
  INVD1 U408 ( .I(\products[15][1] ), .ZN(n66) );
  INVD1 U409 ( .I(\products[7][1] ), .ZN(n112) );
  INVD1 U410 ( .I(\products[14][1] ), .ZN(n72) );
  INVD1 U411 ( .I(\products[13][1] ), .ZN(n78) );
  INVD1 U412 ( .I(\products[6][1] ), .ZN(n118) );
  INVD1 U413 ( .I(\products[5][1] ), .ZN(n124) );
  INVD1 U414 ( .I(\products[12][1] ), .ZN(n84) );
  INVD1 U415 ( .I(\products[3][1] ), .ZN(n216) );
  INVD1 U416 ( .I(\products[4][1] ), .ZN(n130) );
  INVD1 U417 ( .I(\products[1][1] ), .ZN(n227) );
  INVD1 U418 ( .I(\products[2][1] ), .ZN(n221) );
  INVD1 U419 ( .I(\products[15][0] ), .ZN(n67) );
  INVD1 U420 ( .I(\products[14][0] ), .ZN(n73) );
  INVD1 U421 ( .I(\products[11][0] ), .ZN(n91) );
  INVD1 U422 ( .I(\products[7][0] ), .ZN(n113) );
  INVD1 U423 ( .I(\products[6][0] ), .ZN(n119) );
  INVD1 U424 ( .I(\products[9][0] ), .ZN(n102) );
  INVD1 U425 ( .I(\products[11][1] ), .ZN(n90) );
  INVD1 U426 ( .I(\products[9][1] ), .ZN(n101) );
  INVD1 U427 ( .I(\products[10][1] ), .ZN(n95) );
  INVD1 U428 ( .I(\products[8][1] ), .ZN(n106) );
  INVD1 U429 ( .I(\products[15][2] ), .ZN(n65) );
  INVD1 U430 ( .I(\products[14][2] ), .ZN(n71) );
  INVD1 U431 ( .I(\products[13][2] ), .ZN(n77) );
  INVD1 U432 ( .I(\products[7][2] ), .ZN(n111) );
  FA1D0 U433 ( .A(\shifted_products[6][6] ), .B(\shifted_products[7][6] ), 
        .CI(\add_11_root_add_199_I16/carry[6] ), .CO(
        \add_11_root_add_199_I16/carry[7] ), .S(N129) );
  OAI221D0 U434 ( .A1(n108), .A2(n36), .B1(n317), .B2(n113), .C(n310), .ZN(
        \shifted_products[7][6] ) );
  OAI221D0 U435 ( .A1(n3), .A2(n114), .B1(n317), .B2(n117), .C(n302), .ZN(
        \shifted_products[6][6] ) );
  FA1D0 U436 ( .A(\shifted_products[12][6] ), .B(\shifted_products[13][6] ), 
        .CI(\add_8_root_add_199_I16/carry[6] ), .CO(
        \add_8_root_add_199_I16/carry[7] ), .S(N207) );
  OAI222D0 U437 ( .A1(n291), .A2(n80), .B1(n289), .B2(n81), .C1(n320), .C2(n85), .ZN(\shifted_products[12][6] ) );
  OAI221D0 U438 ( .A1(n36), .A2(n74), .B1(n325), .B2(n79), .C(n262), .ZN(
        \shifted_products[13][6] ) );
  OAI222D0 U439 ( .A1(n231), .A2(n68), .B1(n240), .B2(n71), .C1(n317), .C2(n69), .ZN(\shifted_products[14][8] ) );
  OAI221D0 U440 ( .A1(n279), .A2(n62), .B1(n281), .B2(n67), .C(n278), .ZN(
        \shifted_products[15][8] ) );
  FA1D0 U441 ( .A(\shifted_products[12][8] ), .B(\shifted_products[13][8] ), 
        .CI(\add_8_root_add_199_I16/carry[8] ), .CO(
        \add_8_root_add_199_I16/carry[9] ), .S(N209) );
  OAI221D0 U442 ( .A1(n264), .A2(n74), .B1(n245), .B2(n79), .C(n263), .ZN(
        \shifted_products[13][8] ) );
  FA1D0 U443 ( .A(\products[0][2] ), .B(\shifted_products[1][2] ), .CI(
        \add_14_root_add_199_I16/carry[2] ), .CO(
        \add_14_root_add_199_I16/carry[3] ), .S(N56) );
  INVD1 U444 ( .I(\products[1][2] ), .ZN(n226) );
  INVD1 U445 ( .I(\products[11][2] ), .ZN(n89) );
  INVD1 U446 ( .I(\products[9][2] ), .ZN(n100) );
  INVD1 U447 ( .I(\products[3][2] ), .ZN(n135) );
  INVD1 U448 ( .I(\products[10][2] ), .ZN(n94) );
  INVD1 U449 ( .I(\products[2][2] ), .ZN(n220) );
  INVD1 U450 ( .I(\products[8][2] ), .ZN(n105) );
  INVD1 U451 ( .I(\products[13][0] ), .ZN(n79) );
  INVD1 U452 ( .I(\products[5][0] ), .ZN(n125) );
  INVD1 U453 ( .I(\products[12][0] ), .ZN(n85) );
  INVD1 U454 ( .I(\products[1][0] ), .ZN(n228) );
  INVD1 U455 ( .I(\products[4][0] ), .ZN(n131) );
  INVD1 U456 ( .I(\products[10][0] ), .ZN(n96) );
  INVD1 U457 ( .I(\products[3][0] ), .ZN(n217) );
  INVD1 U458 ( .I(\products[2][0] ), .ZN(n222) );
  INVD1 U459 ( .I(\products[8][0] ), .ZN(n107) );
  INR3D0 U460 ( .A1(input_bitwidth[2]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[1]), .ZN(n248) );
  INR3D0 U461 ( .A1(weight_bitwidth[0]), .B1(weight_bitwidth[1]), .B2(
        weight_bitwidth[2]), .ZN(n247) );
  INR3D0 U462 ( .A1(input_bitwidth[0]), .B1(input_bitwidth[1]), .B2(
        input_bitwidth[2]), .ZN(n251) );
  INR3D0 U463 ( .A1(input_bitwidth[1]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[2]), .ZN(n250) );
  INR3D0 U464 ( .A1(weight_bitwidth[1]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[2]), .ZN(n252) );
  INR3D0 U465 ( .A1(weight_bitwidth[2]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[1]), .ZN(n249) );
  TIEL U466 ( .ZN(n246) );
  FA1D0 U467 ( .A(\shifted_products[2][8] ), .B(\shifted_products[3][8] ), 
        .CI(\add_13_root_add_199_I16/carry[8] ), .CO(
        \add_13_root_add_199_I16/carry[9] ), .S(N84) );
  AN2D0 U468 ( .A1(\shifted_products[2][0] ), .A2(\shifted_products[3][0] ), 
        .Z(\add_13_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U469 ( .A1(\shifted_products[3][0] ), .A2(\shifted_products[2][0] ), 
        .Z(N76) );
  AN2D0 U470 ( .A1(\products[0][0] ), .A2(\shifted_products[1][0] ), .Z(
        \add_14_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U471 ( .A1(\shifted_products[1][0] ), .A2(\products[0][0] ), .Z(N54) );
  AN2D0 U472 ( .A1(\shifted_products[12][0] ), .A2(\shifted_products[13][0] ), 
        .Z(\add_8_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U473 ( .A1(\shifted_products[13][0] ), .A2(
        \shifted_products[12][0] ), .Z(N201) );
  AN2D0 U474 ( .A1(\shifted_products[6][0] ), .A2(\shifted_products[7][0] ), 
        .Z(\add_11_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U475 ( .A1(\shifted_products[7][0] ), .A2(\shifted_products[6][0] ), 
        .Z(N123) );
  AN2D0 U476 ( .A1(\shifted_products[4][0] ), .A2(\shifted_products[5][0] ), 
        .Z(\add_12_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U477 ( .A1(\shifted_products[5][0] ), .A2(\shifted_products[4][0] ), 
        .Z(N99) );
  AN2D0 U478 ( .A1(\shifted_products[8][0] ), .A2(\shifted_products[9][0] ), 
        .Z(\add_10_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U479 ( .A1(\shifted_products[9][0] ), .A2(\shifted_products[8][0] ), 
        .Z(N148) );
  AN2D0 U480 ( .A1(\shifted_products[10][0] ), .A2(\shifted_products[11][0] ), 
        .Z(\add_9_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U481 ( .A1(\shifted_products[11][0] ), .A2(
        \shifted_products[10][0] ), .Z(N174) );
  XOR3D0 U482 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[13][11] ), .A3(\products[12][5] ), .Z(N212) );
  XOR3D0 U483 ( .A1(\shifted_products[13][12] ), .A2(n39), .A3(n80), .Z(N213)
         );
  XOR3D0 U484 ( .A1(\products[13][5] ), .A2(\products[12][5] ), .A3(n40), .Z(
        N214) );
  CKND0 U485 ( .I(\shifted_products[13][12] ), .ZN(n42) );
  XNR3D0 U486 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \shifted_products[11][13] ), .A3(n43), .ZN(N187) );
  XNR3D0 U487 ( .A1(n33), .A2(n44), .A3(n43), .ZN(N188) );
  XNR3D0 U488 ( .A1(\products[11][5] ), .A2(n43), .A3(n45), .ZN(N189) );
  OAI222D0 U489 ( .A1(n44), .A2(n43), .B1(n44), .B2(n33), .C1(n43), .C2(n33), 
        .ZN(n45) );
  CKND0 U490 ( .I(\products[10][5] ), .ZN(n43) );
  XOR3D0 U491 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[9][9] ), .A3(\products[8][5] ), .Z(N157) );
  XOR3D0 U492 ( .A1(\shifted_products[9][10] ), .A2(n46), .A3(n47), .Z(N158)
         );
  XOR3D0 U493 ( .A1(\products[9][5] ), .A2(\products[8][5] ), .A3(n48), .Z(
        N159) );
  CKND0 U494 ( .I(\shifted_products[9][10] ), .ZN(n50) );
  CKND0 U495 ( .I(\products[8][5] ), .ZN(n47) );
  XNR3D0 U496 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[7][11] ), .A3(n114), .ZN(N134) );
  XNR3D0 U497 ( .A1(n32), .A2(n51), .A3(n114), .ZN(N135) );
  XNR3D0 U498 ( .A1(\products[7][5] ), .A2(n114), .A3(n52), .ZN(N136) );
  XOR3D0 U499 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(
        \shifted_products[5][7] ), .A3(\products[4][5] ), .Z(N106) );
  XOR3D0 U500 ( .A1(\shifted_products[5][8] ), .A2(n53), .A3(n126), .Z(N107)
         );
  XOR3D0 U501 ( .A1(\products[5][5] ), .A2(\products[4][5] ), .A3(n54), .Z(
        N108) );
  CKND0 U502 ( .I(\shifted_products[5][8] ), .ZN(n56) );
  XNR3D0 U503 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .A3(n57), .ZN(N85) );
  XNR3D0 U504 ( .A1(n31), .A2(n58), .A3(n57), .ZN(N86) );
  XNR3D0 U505 ( .A1(\products[3][5] ), .A2(n57), .A3(n59), .ZN(N87) );
  CKND0 U506 ( .I(\products[2][5] ), .ZN(n57) );
  XNR3D0 U507 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[1][6] ), .A3(n60), .ZN(N60) );
  XNR3D0 U508 ( .A1(n223), .A2(n61), .A3(n60), .ZN(N61) );
  CKND0 U509 ( .I(\shifted_products[0][9] ), .ZN(n60) );
endmodule


module fusion_unit_5_DW01_add_0_DW01_add_9 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module fusion_unit_5 ( clk, nRST, input_bitwidth, weight_bitwidth, input_sign, 
        weight_sign, input_forward, weight, psum_in, psum, input_to_right );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  input [3:0] input_sign;
  input [3:0] weight_sign;
  input [31:0] input_forward;
  input [31:0] weight;
  input [31:0] psum_in;
  output [31:0] psum;
  output [31:0] input_to_right;
  input clk, nRST;
  wire   \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] , n2;
  wire   [31:0] shift_add_out;
  assign input_to_right[31] = input_forward[31];
  assign input_to_right[30] = input_forward[30];
  assign input_to_right[29] = input_forward[29];
  assign input_to_right[28] = input_forward[28];
  assign input_to_right[27] = input_forward[27];
  assign input_to_right[26] = input_forward[26];
  assign input_to_right[25] = input_forward[25];
  assign input_to_right[24] = input_forward[24];
  assign input_to_right[23] = input_forward[23];
  assign input_to_right[22] = input_forward[22];
  assign input_to_right[21] = input_forward[21];
  assign input_to_right[20] = input_forward[20];
  assign input_to_right[19] = input_forward[19];
  assign input_to_right[18] = input_forward[18];
  assign input_to_right[17] = input_forward[17];
  assign input_to_right[16] = input_forward[16];
  assign input_to_right[15] = input_forward[15];
  assign input_to_right[14] = input_forward[14];
  assign input_to_right[13] = input_forward[13];
  assign input_to_right[12] = input_forward[12];
  assign input_to_right[11] = input_forward[11];
  assign input_to_right[10] = input_forward[10];
  assign input_to_right[9] = input_forward[9];
  assign input_to_right[8] = input_forward[8];
  assign input_to_right[7] = input_forward[7];
  assign input_to_right[6] = input_forward[6];
  assign input_to_right[5] = input_forward[5];
  assign input_to_right[4] = input_forward[4];
  assign input_to_right[3] = input_forward[3];
  assign input_to_right[2] = input_forward[2];
  assign input_to_right[1] = input_forward[1];
  assign input_to_right[0] = input_forward[0];

  bit_brick_95 \genblk1[0].BB  ( .x(input_forward[1:0]), .y(weight[1:0]), .sx(
        input_sign[0]), .sy(weight_sign[0]), .product({\products[0][5] , 
        \products[0][4] , \products[0][3] , \products[0][2] , \products[0][1] , 
        \products[0][0] }) );
  bit_brick_94 \genblk1[1].BB  ( .x(input_forward[3:2]), .y(weight[3:2]), .sx(
        input_sign[0]), .sy(weight_sign[1]), .product({\products[1][5] , 
        \products[1][4] , \products[1][3] , \products[1][2] , \products[1][1] , 
        \products[1][0] }) );
  bit_brick_93 \genblk1[2].BB  ( .x(input_forward[5:4]), .y(weight[5:4]), .sx(
        input_sign[0]), .sy(weight_sign[2]), .product({\products[2][5] , 
        \products[2][4] , \products[2][3] , \products[2][2] , \products[2][1] , 
        \products[2][0] }) );
  bit_brick_92 \genblk1[3].BB  ( .x(input_forward[7:6]), .y(weight[7:6]), .sx(
        input_sign[0]), .sy(weight_sign[3]), .product({\products[3][5] , 
        \products[3][4] , \products[3][3] , \products[3][2] , \products[3][1] , 
        \products[3][0] }) );
  bit_brick_91 \genblk1[4].BB  ( .x(input_forward[9:8]), .y(weight[9:8]), .sx(
        input_sign[1]), .sy(weight_sign[0]), .product({\products[4][5] , 
        \products[4][4] , \products[4][3] , \products[4][2] , \products[4][1] , 
        \products[4][0] }) );
  bit_brick_90 \genblk1[5].BB  ( .x(input_forward[11:10]), .y(weight[11:10]), 
        .sx(input_sign[1]), .sy(weight_sign[1]), .product({\products[5][5] , 
        \products[5][4] , \products[5][3] , \products[5][2] , \products[5][1] , 
        \products[5][0] }) );
  bit_brick_89 \genblk1[6].BB  ( .x(input_forward[13:12]), .y(weight[13:12]), 
        .sx(input_sign[1]), .sy(weight_sign[2]), .product({\products[6][5] , 
        \products[6][4] , \products[6][3] , \products[6][2] , \products[6][1] , 
        \products[6][0] }) );
  bit_brick_88 \genblk1[7].BB  ( .x(input_forward[15:14]), .y(weight[15:14]), 
        .sx(input_sign[1]), .sy(weight_sign[3]), .product({\products[7][5] , 
        \products[7][4] , \products[7][3] , \products[7][2] , \products[7][1] , 
        \products[7][0] }) );
  bit_brick_87 \genblk1[8].BB  ( .x(input_forward[17:16]), .y(weight[17:16]), 
        .sx(input_sign[2]), .sy(weight_sign[0]), .product({\products[8][5] , 
        \products[8][4] , \products[8][3] , \products[8][2] , \products[8][1] , 
        \products[8][0] }) );
  bit_brick_86 \genblk1[9].BB  ( .x(input_forward[19:18]), .y(weight[19:18]), 
        .sx(input_sign[2]), .sy(weight_sign[1]), .product({\products[9][5] , 
        \products[9][4] , \products[9][3] , \products[9][2] , \products[9][1] , 
        \products[9][0] }) );
  bit_brick_85 \genblk1[10].BB  ( .x(input_forward[21:20]), .y(weight[21:20]), 
        .sx(input_sign[2]), .sy(weight_sign[2]), .product({\products[10][5] , 
        \products[10][4] , \products[10][3] , \products[10][2] , 
        \products[10][1] , \products[10][0] }) );
  bit_brick_84 \genblk1[11].BB  ( .x(input_forward[23:22]), .y(weight[23:22]), 
        .sx(input_sign[2]), .sy(weight_sign[3]), .product({\products[11][5] , 
        \products[11][4] , \products[11][3] , \products[11][2] , 
        \products[11][1] , \products[11][0] }) );
  bit_brick_83 \genblk1[12].BB  ( .x(input_forward[25:24]), .y(weight[25:24]), 
        .sx(input_sign[3]), .sy(weight_sign[0]), .product({\products[12][5] , 
        \products[12][4] , \products[12][3] , \products[12][2] , 
        \products[12][1] , \products[12][0] }) );
  bit_brick_82 \genblk1[13].BB  ( .x(input_forward[27:26]), .y(weight[27:26]), 
        .sx(input_sign[3]), .sy(weight_sign[1]), .product({\products[13][5] , 
        \products[13][4] , \products[13][3] , \products[13][2] , 
        \products[13][1] , \products[13][0] }) );
  bit_brick_81 \genblk1[14].BB  ( .x(input_forward[29:28]), .y(weight[29:28]), 
        .sx(input_sign[3]), .sy(weight_sign[2]), .product({\products[14][5] , 
        \products[14][4] , \products[14][3] , \products[14][2] , 
        \products[14][1] , \products[14][0] }) );
  bit_brick_80 \genblk1[15].BB  ( .x(input_forward[31:30]), .y(weight[31:30]), 
        .sx(input_sign[3]), .sy(weight_sign[3]), .product({\products[15][5] , 
        \products[15][4] , \products[15][3] , \products[15][2] , 
        \products[15][1] , \products[15][0] }) );
  shift_add_5 shift_add ( .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .products({\products[15][5] , \products[15][4] , 
        \products[15][3] , \products[15][2] , \products[15][1] , 
        \products[15][0] , \products[14][5] , \products[14][4] , 
        \products[14][3] , \products[14][2] , \products[14][1] , 
        \products[14][0] , \products[13][5] , \products[13][4] , 
        \products[13][3] , \products[13][2] , \products[13][1] , 
        \products[13][0] , \products[12][5] , \products[12][4] , 
        \products[12][3] , \products[12][2] , \products[12][1] , 
        \products[12][0] , \products[11][5] , \products[11][4] , 
        \products[11][3] , \products[11][2] , \products[11][1] , 
        \products[11][0] , \products[10][5] , \products[10][4] , 
        \products[10][3] , \products[10][2] , \products[10][1] , 
        \products[10][0] , \products[9][5] , \products[9][4] , 
        \products[9][3] , \products[9][2] , \products[9][1] , \products[9][0] , 
        \products[8][5] , \products[8][4] , \products[8][3] , \products[8][2] , 
        \products[8][1] , \products[8][0] , \products[7][5] , \products[7][4] , 
        \products[7][3] , \products[7][2] , \products[7][1] , \products[7][0] , 
        \products[6][5] , \products[6][4] , \products[6][3] , \products[6][2] , 
        \products[6][1] , \products[6][0] , \products[5][5] , \products[5][4] , 
        \products[5][3] , \products[5][2] , \products[5][1] , \products[5][0] , 
        \products[4][5] , \products[4][4] , \products[4][3] , \products[4][2] , 
        \products[4][1] , \products[4][0] , \products[3][5] , \products[3][4] , 
        \products[3][3] , \products[3][2] , \products[3][1] , \products[3][0] , 
        \products[2][5] , \products[2][4] , \products[2][3] , \products[2][2] , 
        \products[2][1] , \products[2][0] , \products[1][5] , \products[1][4] , 
        \products[1][3] , \products[1][2] , \products[1][1] , \products[1][0] , 
        \products[0][5] , \products[0][4] , \products[0][3] , \products[0][2] , 
        \products[0][1] , \products[0][0] }), .shift_add_out(shift_add_out) );
  fusion_unit_5_DW01_add_0_DW01_add_9 add_53 ( .A(shift_add_out), .B(psum_in), 
        .CI(n2), .SUM(psum) );
  TIEL U1 ( .ZN(n2) );
endmodule


module WBUF_ARRAY_SIZE4_DATA_W32_4 ( clk, nRST, WBUF_wr_en, WBUF_data_in, 
        WBUF_data_out );
  input [31:0] WBUF_data_in;
  output [31:0] WBUF_data_out;
  input clk, nRST, WBUF_wr_en;
  wire   n1, n2, n3, n4, n5, n6;

  EDFCNQD1 \WBUF_data_out_reg[31]  ( .D(WBUF_data_in[31]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[31]) );
  EDFCNQD1 \WBUF_data_out_reg[30]  ( .D(WBUF_data_in[30]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[30]) );
  EDFCNQD1 \WBUF_data_out_reg[29]  ( .D(WBUF_data_in[29]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[29]) );
  EDFCNQD1 \WBUF_data_out_reg[28]  ( .D(WBUF_data_in[28]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[28]) );
  EDFCNQD1 \WBUF_data_out_reg[27]  ( .D(WBUF_data_in[27]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[27]) );
  EDFCNQD1 \WBUF_data_out_reg[26]  ( .D(WBUF_data_in[26]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[26]) );
  EDFCNQD1 \WBUF_data_out_reg[25]  ( .D(WBUF_data_in[25]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[25]) );
  EDFCNQD1 \WBUF_data_out_reg[24]  ( .D(WBUF_data_in[24]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[24]) );
  EDFCNQD1 \WBUF_data_out_reg[23]  ( .D(WBUF_data_in[23]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[23]) );
  EDFCNQD1 \WBUF_data_out_reg[22]  ( .D(WBUF_data_in[22]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[22]) );
  EDFCNQD1 \WBUF_data_out_reg[21]  ( .D(WBUF_data_in[21]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[21]) );
  EDFCNQD1 \WBUF_data_out_reg[20]  ( .D(WBUF_data_in[20]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[20]) );
  EDFCNQD1 \WBUF_data_out_reg[19]  ( .D(WBUF_data_in[19]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[19]) );
  EDFCNQD1 \WBUF_data_out_reg[18]  ( .D(WBUF_data_in[18]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[18]) );
  EDFCNQD1 \WBUF_data_out_reg[17]  ( .D(WBUF_data_in[17]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[17]) );
  EDFCNQD1 \WBUF_data_out_reg[16]  ( .D(WBUF_data_in[16]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[16]) );
  EDFCNQD1 \WBUF_data_out_reg[15]  ( .D(WBUF_data_in[15]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[15]) );
  EDFCNQD1 \WBUF_data_out_reg[14]  ( .D(WBUF_data_in[14]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[14]) );
  EDFCNQD1 \WBUF_data_out_reg[13]  ( .D(WBUF_data_in[13]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[13]) );
  EDFCNQD1 \WBUF_data_out_reg[12]  ( .D(WBUF_data_in[12]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[12]) );
  EDFCNQD1 \WBUF_data_out_reg[11]  ( .D(WBUF_data_in[11]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[11]) );
  EDFCNQD1 \WBUF_data_out_reg[10]  ( .D(WBUF_data_in[10]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[10]) );
  EDFCNQD1 \WBUF_data_out_reg[9]  ( .D(WBUF_data_in[9]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[9]) );
  EDFCNQD1 \WBUF_data_out_reg[8]  ( .D(WBUF_data_in[8]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[8]) );
  EDFCNQD1 \WBUF_data_out_reg[7]  ( .D(WBUF_data_in[7]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[7]) );
  EDFCNQD1 \WBUF_data_out_reg[6]  ( .D(WBUF_data_in[6]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[6]) );
  EDFCNQD1 \WBUF_data_out_reg[5]  ( .D(WBUF_data_in[5]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[5]) );
  EDFCNQD1 \WBUF_data_out_reg[4]  ( .D(WBUF_data_in[4]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[4]) );
  EDFCNQD1 \WBUF_data_out_reg[3]  ( .D(WBUF_data_in[3]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[3]) );
  EDFCNQD1 \WBUF_data_out_reg[2]  ( .D(WBUF_data_in[2]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[2]) );
  EDFCNQD1 \WBUF_data_out_reg[1]  ( .D(WBUF_data_in[1]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[1]) );
  EDFCNQD1 \WBUF_data_out_reg[0]  ( .D(WBUF_data_in[0]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[0]) );
  CKBD1 U2 ( .I(WBUF_wr_en), .Z(n5) );
  CKBD1 U3 ( .I(WBUF_wr_en), .Z(n4) );
  CKBD1 U4 ( .I(nRST), .Z(n1) );
  CKBD1 U5 ( .I(nRST), .Z(n2) );
  CKBD1 U6 ( .I(nRST), .Z(n3) );
  CKBD1 U7 ( .I(WBUF_wr_en), .Z(n6) );
endmodule


module w_mux_4 ( clk, nRST, input_bitwidth, rd_en, data_in, data_out );
  input [2:0] input_bitwidth;
  input [31:0] data_in;
  output [31:0] data_out;
  input clk, nRST, rd_en;
  wire   N40, N41, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129,
         n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140,
         n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151,
         n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162,
         n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173,
         n174, n175, n176, n177, n178;
  wire   [1:0] rd_ptr;
  wire   [31:0] next_data_out;

  EDFCNQD1 \rd_ptr_reg[0]  ( .D(N40), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[0]) );
  EDFCNQD1 \rd_ptr_reg[1]  ( .D(N41), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[1]) );
  DFCNQD1 \data_out_reg[31]  ( .D(next_data_out[31]), .CP(clk), .CDN(n1), .Q(
        data_out[31]) );
  DFCNQD1 \data_out_reg[30]  ( .D(next_data_out[30]), .CP(clk), .CDN(n3), .Q(
        data_out[30]) );
  DFCNQD1 \data_out_reg[29]  ( .D(next_data_out[29]), .CP(clk), .CDN(n3), .Q(
        data_out[29]) );
  DFCNQD1 \data_out_reg[28]  ( .D(next_data_out[28]), .CP(clk), .CDN(n3), .Q(
        data_out[28]) );
  DFCNQD1 \data_out_reg[27]  ( .D(next_data_out[27]), .CP(clk), .CDN(n3), .Q(
        data_out[27]) );
  DFCNQD1 \data_out_reg[26]  ( .D(next_data_out[26]), .CP(clk), .CDN(n3), .Q(
        data_out[26]) );
  DFCNQD1 \data_out_reg[25]  ( .D(next_data_out[25]), .CP(clk), .CDN(n2), .Q(
        data_out[25]) );
  DFCNQD1 \data_out_reg[24]  ( .D(next_data_out[24]), .CP(clk), .CDN(n2), .Q(
        data_out[24]) );
  DFCNQD1 \data_out_reg[23]  ( .D(next_data_out[23]), .CP(clk), .CDN(n3), .Q(
        data_out[23]) );
  DFCNQD1 \data_out_reg[22]  ( .D(next_data_out[22]), .CP(clk), .CDN(n2), .Q(
        data_out[22]) );
  DFCNQD1 \data_out_reg[21]  ( .D(next_data_out[21]), .CP(clk), .CDN(n2), .Q(
        data_out[21]) );
  DFCNQD1 \data_out_reg[20]  ( .D(next_data_out[20]), .CP(clk), .CDN(n2), .Q(
        data_out[20]) );
  DFCNQD1 \data_out_reg[19]  ( .D(next_data_out[19]), .CP(clk), .CDN(n2), .Q(
        data_out[19]) );
  DFCNQD1 \data_out_reg[18]  ( .D(next_data_out[18]), .CP(clk), .CDN(n2), .Q(
        data_out[18]) );
  DFCNQD1 \data_out_reg[17]  ( .D(next_data_out[17]), .CP(clk), .CDN(n2), .Q(
        data_out[17]) );
  DFCNQD1 \data_out_reg[16]  ( .D(next_data_out[16]), .CP(clk), .CDN(n2), .Q(
        data_out[16]) );
  DFCNQD1 \data_out_reg[15]  ( .D(next_data_out[15]), .CP(clk), .CDN(n2), .Q(
        data_out[15]) );
  DFCNQD1 \data_out_reg[14]  ( .D(next_data_out[14]), .CP(clk), .CDN(n2), .Q(
        data_out[14]) );
  DFCNQD1 \data_out_reg[13]  ( .D(next_data_out[13]), .CP(clk), .CDN(n2), .Q(
        data_out[13]) );
  DFCNQD1 \data_out_reg[12]  ( .D(next_data_out[12]), .CP(clk), .CDN(n1), .Q(
        data_out[12]) );
  DFCNQD1 \data_out_reg[11]  ( .D(next_data_out[11]), .CP(clk), .CDN(n1), .Q(
        data_out[11]) );
  DFCNQD1 \data_out_reg[10]  ( .D(next_data_out[10]), .CP(clk), .CDN(n1), .Q(
        data_out[10]) );
  DFCNQD1 \data_out_reg[9]  ( .D(next_data_out[9]), .CP(clk), .CDN(n1), .Q(
        data_out[9]) );
  DFCNQD1 \data_out_reg[8]  ( .D(next_data_out[8]), .CP(clk), .CDN(n1), .Q(
        data_out[8]) );
  DFCNQD1 \data_out_reg[7]  ( .D(next_data_out[7]), .CP(clk), .CDN(n1), .Q(
        data_out[7]) );
  DFCNQD1 \data_out_reg[6]  ( .D(next_data_out[6]), .CP(clk), .CDN(n1), .Q(
        data_out[6]) );
  DFCNQD1 \data_out_reg[5]  ( .D(next_data_out[5]), .CP(clk), .CDN(n1), .Q(
        data_out[5]) );
  DFCNQD1 \data_out_reg[4]  ( .D(next_data_out[4]), .CP(clk), .CDN(n1), .Q(
        data_out[4]) );
  DFCNQD1 \data_out_reg[3]  ( .D(next_data_out[3]), .CP(clk), .CDN(n1), .Q(
        data_out[3]) );
  DFCNQD1 \data_out_reg[2]  ( .D(next_data_out[2]), .CP(clk), .CDN(n1), .Q(
        data_out[2]) );
  DFCNQD1 \data_out_reg[1]  ( .D(next_data_out[1]), .CP(clk), .CDN(n1), .Q(
        data_out[1]) );
  DFCNQD1 \data_out_reg[0]  ( .D(next_data_out[0]), .CP(clk), .CDN(n2), .Q(
        data_out[0]) );
  OA21D1 U20 ( .A1(n161), .A2(n160), .B(n159), .Z(n170) );
  OA21D1 U23 ( .A1(n156), .A2(n160), .B(n155), .Z(n169) );
  OA21D1 U26 ( .A1(n154), .A2(n160), .B(n153), .Z(n167) );
  OA21D1 U29 ( .A1(n152), .A2(n160), .B(n151), .Z(n166) );
  OA21D1 U32 ( .A1(n150), .A2(n160), .B(n149), .Z(n177) );
  OA21D1 U35 ( .A1(n148), .A2(n160), .B(n147), .Z(n165) );
  OA21D1 U38 ( .A1(n146), .A2(n160), .B(n145), .Z(n164) );
  OA21D1 U41 ( .A1(n144), .A2(n160), .B(n149), .Z(n163) );
  OA21D1 U47 ( .A1(n139), .A2(n160), .B(n138), .Z(n162) );
  OA21D1 U50 ( .A1(n137), .A2(n160), .B(n159), .Z(n175) );
  OA21D1 U56 ( .A1(n134), .A2(n160), .B(n155), .Z(n174) );
  OA21D1 U62 ( .A1(n131), .A2(n160), .B(n153), .Z(n173) );
  OA21D1 U68 ( .A1(n128), .A2(n160), .B(n151), .Z(n172) );
  OA21D1 U74 ( .A1(n125), .A2(n160), .B(n147), .Z(n171) );
  OA21D1 U80 ( .A1(n122), .A2(n160), .B(n145), .Z(n168) );
  OA21D1 U86 ( .A1(n119), .A2(n160), .B(n138), .Z(n176) );
  AN2XD1 U90 ( .A1(rd_ptr[1]), .A2(rd_ptr[0]), .Z(n140) );
  AN4XD1 U91 ( .A1(input_bitwidth[2]), .A2(rd_en), .A3(n5), .A4(n7), .Z(n143)
         );
  MAOI22D1 U97 ( .A1(n115), .A2(n12), .B1(n115), .B2(n114), .ZN(n113) );
  NR2D1 U3 ( .A1(n13), .A2(rd_ptr[1]), .ZN(n158) );
  NR2D1 U4 ( .A1(rd_ptr[0]), .A2(rd_ptr[1]), .ZN(n157) );
  AOI21D1 U5 ( .A1(n12), .A2(n116), .B(n113), .ZN(N41) );
  OAI21D1 U6 ( .A1(n111), .A2(n10), .B(n177), .ZN(next_data_out[1]) );
  OAI21D1 U7 ( .A1(n37), .A2(n10), .B(n177), .ZN(next_data_out[9]) );
  OAI21D1 U8 ( .A1(n8), .A2(n112), .B(n176), .ZN(next_data_out[0]) );
  OAI21D1 U9 ( .A1(n9), .A2(n110), .B(n168), .ZN(next_data_out[2]) );
  OAI21D1 U10 ( .A1(n9), .A2(n109), .B(n171), .ZN(next_data_out[3]) );
  OAI21D1 U11 ( .A1(n9), .A2(n108), .B(n172), .ZN(next_data_out[4]) );
  OAI21D1 U12 ( .A1(n8), .A2(n36), .B(n168), .ZN(next_data_out[10]) );
  OAI21D1 U13 ( .A1(n8), .A2(n35), .B(n171), .ZN(next_data_out[11]) );
  OAI21D1 U14 ( .A1(n8), .A2(n34), .B(n172), .ZN(next_data_out[12]) );
  OAI21D1 U15 ( .A1(n9), .A2(n33), .B(n173), .ZN(next_data_out[13]) );
  OAI21D1 U16 ( .A1(n8), .A2(n32), .B(n174), .ZN(next_data_out[14]) );
  OAI21D1 U17 ( .A1(n8), .A2(n31), .B(n175), .ZN(next_data_out[15]) );
  OAI21D1 U18 ( .A1(n10), .A2(n107), .B(n173), .ZN(next_data_out[5]) );
  OAI21D1 U19 ( .A1(n10), .A2(n106), .B(n174), .ZN(next_data_out[6]) );
  OAI21D1 U21 ( .A1(n10), .A2(n105), .B(n175), .ZN(next_data_out[7]) );
  OAI21D1 U22 ( .A1(n10), .A2(n38), .B(n176), .ZN(next_data_out[8]) );
  CKBD1 U24 ( .I(n178), .Z(n8) );
  CKBD1 U25 ( .I(n178), .Z(n9) );
  CKBD1 U27 ( .I(n178), .Z(n10) );
  INVD1 U28 ( .I(n6), .ZN(n7) );
  INVD1 U30 ( .I(n4), .ZN(n5) );
  INVD1 U31 ( .I(n116), .ZN(n11) );
  INVD1 U33 ( .I(n157), .ZN(n14) );
  INVD1 U34 ( .I(n158), .ZN(n12) );
  ND2D1 U36 ( .A1(n114), .A2(rd_en), .ZN(n178) );
  NR3D0 U37 ( .A1(n4), .A2(input_bitwidth[2]), .A3(n7), .ZN(n115) );
  NR3D0 U39 ( .A1(n6), .A2(input_bitwidth[2]), .A3(n5), .ZN(n114) );
  ND2D1 U40 ( .A1(rd_en), .A2(n115), .ZN(n160) );
  ND2D1 U42 ( .A1(n143), .A2(n118), .ZN(n138) );
  OAI221D0 U43 ( .A1(n12), .A2(n38), .B1(n14), .B2(n112), .C(n117), .ZN(n118)
         );
  AOI22D1 U44 ( .A1(data_in[24]), .A2(n140), .B1(data_in[16]), .B2(n11), .ZN(
        n117) );
  ND2D1 U45 ( .A1(n143), .A2(n142), .ZN(n149) );
  OAI221D0 U46 ( .A1(n12), .A2(n37), .B1(n14), .B2(n111), .C(n141), .ZN(n142)
         );
  AOI22D1 U48 ( .A1(data_in[25]), .A2(n140), .B1(n11), .B2(data_in[17]), .ZN(
        n141) );
  ND2D1 U49 ( .A1(n143), .A2(n121), .ZN(n145) );
  OAI221D0 U51 ( .A1(n12), .A2(n36), .B1(n14), .B2(n110), .C(n120), .ZN(n121)
         );
  AOI22D1 U52 ( .A1(data_in[26]), .A2(n140), .B1(data_in[18]), .B2(n11), .ZN(
        n120) );
  ND2D1 U53 ( .A1(n143), .A2(n124), .ZN(n147) );
  OAI221D0 U54 ( .A1(n12), .A2(n35), .B1(n14), .B2(n109), .C(n123), .ZN(n124)
         );
  AOI22D1 U55 ( .A1(data_in[27]), .A2(n140), .B1(data_in[19]), .B2(n11), .ZN(
        n123) );
  ND2D1 U57 ( .A1(n143), .A2(n127), .ZN(n151) );
  OAI221D0 U58 ( .A1(n12), .A2(n34), .B1(n14), .B2(n108), .C(n126), .ZN(n127)
         );
  AOI22D1 U59 ( .A1(data_in[28]), .A2(n140), .B1(data_in[20]), .B2(n11), .ZN(
        n126) );
  ND2D1 U60 ( .A1(n143), .A2(n130), .ZN(n153) );
  OAI221D0 U61 ( .A1(n12), .A2(n33), .B1(n14), .B2(n107), .C(n129), .ZN(n130)
         );
  AOI22D1 U63 ( .A1(data_in[29]), .A2(n140), .B1(data_in[21]), .B2(n11), .ZN(
        n129) );
  ND2D1 U64 ( .A1(n143), .A2(n133), .ZN(n155) );
  OAI221D0 U65 ( .A1(n12), .A2(n32), .B1(n14), .B2(n106), .C(n132), .ZN(n133)
         );
  AOI22D1 U66 ( .A1(data_in[30]), .A2(n140), .B1(data_in[22]), .B2(n11), .ZN(
        n132) );
  ND2D1 U67 ( .A1(n143), .A2(n136), .ZN(n159) );
  OAI221D0 U69 ( .A1(n12), .A2(n31), .B1(n14), .B2(n105), .C(n135), .ZN(n136)
         );
  AOI22D1 U70 ( .A1(data_in[31]), .A2(n140), .B1(data_in[23]), .B2(n11), .ZN(
        n135) );
  AOI22D1 U71 ( .A1(data_in[16]), .A2(n158), .B1(data_in[0]), .B2(n157), .ZN(
        n119) );
  AOI22D1 U72 ( .A1(data_in[17]), .A2(n158), .B1(data_in[1]), .B2(n157), .ZN(
        n150) );
  AOI22D1 U73 ( .A1(data_in[18]), .A2(n158), .B1(data_in[2]), .B2(n157), .ZN(
        n122) );
  AOI22D1 U75 ( .A1(data_in[19]), .A2(n158), .B1(data_in[3]), .B2(n157), .ZN(
        n125) );
  AOI22D1 U76 ( .A1(data_in[20]), .A2(n158), .B1(data_in[4]), .B2(n157), .ZN(
        n128) );
  AOI22D1 U77 ( .A1(data_in[21]), .A2(n158), .B1(data_in[5]), .B2(n157), .ZN(
        n131) );
  AOI22D1 U78 ( .A1(data_in[22]), .A2(n158), .B1(data_in[6]), .B2(n157), .ZN(
        n134) );
  AOI22D1 U79 ( .A1(data_in[23]), .A2(n158), .B1(data_in[7]), .B2(n157), .ZN(
        n137) );
  AOI22D1 U81 ( .A1(data_in[24]), .A2(n158), .B1(data_in[8]), .B2(n157), .ZN(
        n139) );
  AOI22D1 U82 ( .A1(data_in[25]), .A2(n158), .B1(data_in[9]), .B2(n157), .ZN(
        n144) );
  AOI22D1 U83 ( .A1(data_in[26]), .A2(n158), .B1(data_in[10]), .B2(n157), .ZN(
        n146) );
  AOI22D1 U84 ( .A1(data_in[27]), .A2(n158), .B1(data_in[11]), .B2(n157), .ZN(
        n148) );
  AOI22D1 U85 ( .A1(data_in[28]), .A2(n158), .B1(data_in[12]), .B2(n157), .ZN(
        n152) );
  AOI22D1 U87 ( .A1(data_in[29]), .A2(n158), .B1(data_in[13]), .B2(n157), .ZN(
        n154) );
  AOI22D1 U88 ( .A1(data_in[30]), .A2(n158), .B1(data_in[14]), .B2(n157), .ZN(
        n156) );
  AOI22D1 U89 ( .A1(data_in[31]), .A2(n158), .B1(data_in[15]), .B2(n157), .ZN(
        n161) );
  NR2D1 U92 ( .A1(rd_ptr[0]), .A2(n114), .ZN(N40) );
  OAI21D1 U93 ( .A1(n29), .A2(n10), .B(n163), .ZN(next_data_out[17]) );
  INVD1 U94 ( .I(data_in[17]), .ZN(n29) );
  OAI21D1 U95 ( .A1(n8), .A2(n30), .B(n162), .ZN(next_data_out[16]) );
  INVD1 U96 ( .I(data_in[16]), .ZN(n30) );
  OAI21D1 U98 ( .A1(n8), .A2(n28), .B(n164), .ZN(next_data_out[18]) );
  INVD1 U99 ( .I(data_in[18]), .ZN(n28) );
  OAI21D1 U100 ( .A1(n8), .A2(n27), .B(n165), .ZN(next_data_out[19]) );
  INVD1 U101 ( .I(data_in[19]), .ZN(n27) );
  OAI21D1 U102 ( .A1(n8), .A2(n26), .B(n166), .ZN(next_data_out[20]) );
  INVD1 U103 ( .I(data_in[20]), .ZN(n26) );
  OAI21D1 U104 ( .A1(n8), .A2(n25), .B(n167), .ZN(next_data_out[21]) );
  INVD1 U105 ( .I(data_in[21]), .ZN(n25) );
  OAI21D1 U106 ( .A1(n8), .A2(n24), .B(n169), .ZN(next_data_out[22]) );
  INVD1 U107 ( .I(data_in[22]), .ZN(n24) );
  OAI21D1 U108 ( .A1(n9), .A2(n23), .B(n170), .ZN(next_data_out[23]) );
  INVD1 U109 ( .I(data_in[23]), .ZN(n23) );
  OAI21D1 U110 ( .A1(n9), .A2(n22), .B(n162), .ZN(next_data_out[24]) );
  INVD1 U111 ( .I(data_in[24]), .ZN(n22) );
  OAI21D1 U112 ( .A1(n9), .A2(n20), .B(n164), .ZN(next_data_out[26]) );
  INVD1 U113 ( .I(data_in[26]), .ZN(n20) );
  OAI21D1 U114 ( .A1(n9), .A2(n19), .B(n165), .ZN(next_data_out[27]) );
  INVD1 U115 ( .I(data_in[27]), .ZN(n19) );
  OAI21D1 U116 ( .A1(n9), .A2(n18), .B(n166), .ZN(next_data_out[28]) );
  INVD1 U117 ( .I(data_in[28]), .ZN(n18) );
  OAI21D1 U118 ( .A1(n9), .A2(n17), .B(n167), .ZN(next_data_out[29]) );
  INVD1 U119 ( .I(data_in[29]), .ZN(n17) );
  OAI21D1 U120 ( .A1(n9), .A2(n16), .B(n169), .ZN(next_data_out[30]) );
  INVD1 U121 ( .I(data_in[30]), .ZN(n16) );
  OAI21D1 U122 ( .A1(n9), .A2(n15), .B(n170), .ZN(next_data_out[31]) );
  INVD1 U123 ( .I(data_in[31]), .ZN(n15) );
  OAI21D1 U124 ( .A1(n21), .A2(n10), .B(n163), .ZN(next_data_out[25]) );
  INVD1 U125 ( .I(data_in[25]), .ZN(n21) );
  CKBD1 U126 ( .I(input_bitwidth[0]), .Z(n4) );
  CKBD1 U127 ( .I(input_bitwidth[1]), .Z(n6) );
  ND2D1 U128 ( .A1(rd_ptr[1]), .A2(n13), .ZN(n116) );
  INVD1 U129 ( .I(rd_ptr[0]), .ZN(n13) );
  INVD1 U130 ( .I(data_in[1]), .ZN(n111) );
  INVD1 U131 ( .I(data_in[9]), .ZN(n37) );
  INVD1 U132 ( .I(data_in[0]), .ZN(n112) );
  INVD1 U133 ( .I(data_in[2]), .ZN(n110) );
  INVD1 U134 ( .I(data_in[3]), .ZN(n109) );
  INVD1 U135 ( .I(data_in[4]), .ZN(n108) );
  INVD1 U136 ( .I(data_in[5]), .ZN(n107) );
  INVD1 U137 ( .I(data_in[6]), .ZN(n106) );
  INVD1 U138 ( .I(data_in[7]), .ZN(n105) );
  INVD1 U139 ( .I(data_in[8]), .ZN(n38) );
  INVD1 U140 ( .I(data_in[10]), .ZN(n36) );
  INVD1 U141 ( .I(data_in[11]), .ZN(n35) );
  INVD1 U142 ( .I(data_in[12]), .ZN(n34) );
  INVD1 U143 ( .I(data_in[13]), .ZN(n33) );
  INVD1 U144 ( .I(data_in[14]), .ZN(n32) );
  INVD1 U145 ( .I(data_in[15]), .ZN(n31) );
  CKBD1 U146 ( .I(nRST), .Z(n2) );
  CKBD1 U147 ( .I(nRST), .Z(n1) );
  CKBD1 U148 ( .I(nRST), .Z(n3) );
endmodule


module bit_brick_79 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_78 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_77 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_76 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_75 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_74 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_73 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_72 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_71 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_70 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_69 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_68 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_67 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_66 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_65 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_64 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module shift_add_4_DW01_add_14_DW01_add_169 ( A, B, CI, SUM, CO );
  input [28:0] A;
  input [28:0] B;
  output [28:0] SUM;
  input CI;
  output CO;
  wire   n1, \SUM[18] , n3, n4, n5, n6, n7;
  wire   [28:1] carry;
  assign SUM[27] = \SUM[18] ;
  assign SUM[28] = \SUM[18] ;
  assign SUM[26] = \SUM[18] ;
  assign SUM[25] = \SUM[18] ;
  assign SUM[24] = \SUM[18] ;
  assign SUM[23] = \SUM[18] ;
  assign SUM[22] = \SUM[18] ;
  assign SUM[21] = \SUM[18] ;
  assign SUM[20] = \SUM[18] ;
  assign SUM[19] = \SUM[18] ;
  assign SUM[18] = \SUM[18] ;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D2 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  AOI222XD4 U1 ( .A1(carry[15]), .A2(A[27]), .B1(carry[15]), .B2(B[15]), .C1(
        B[15]), .C2(A[27]), .ZN(n5) );
  XNR3D2 U2 ( .A1(B[27]), .A2(n7), .A3(n3), .ZN(\SUM[18] ) );
  AN2XD1 U3 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  OAI222D1 U4 ( .A1(n5), .A2(n7), .B1(n5), .B2(n6), .C1(n7), .C2(n6), .ZN(n4)
         );
  CKXOR2D0 U5 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  AO222D1 U6 ( .A1(n4), .A2(A[27]), .B1(n4), .B2(B[27]), .C1(A[27]), .C2(B[27]), .Z(n3) );
  CKND0 U7 ( .I(A[27]), .ZN(n7) );
  CKND0 U8 ( .I(B[16]), .ZN(n6) );
  XNR3D0 U9 ( .A1(B[27]), .A2(n7), .A3(n4), .ZN(SUM[17]) );
  XNR3D0 U10 ( .A1(n6), .A2(n5), .A3(n7), .ZN(SUM[16]) );
  XNR3D0 U11 ( .A1(carry[15]), .A2(B[15]), .A3(n7), .ZN(SUM[15]) );
endmodule


module shift_add_4_DW01_add_6_DW01_add_161 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_4_DW01_add_5_DW01_add_160 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D1 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_4_DW01_add_4_DW01_add_159 ( A, B, CI, SUM, CO );
  input [30:0] A;
  input [30:0] B;
  output [30:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [30:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  XOR3D1 U1_30 ( .A1(A[30]), .A2(B[30]), .A3(carry[30]), .Z(SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_4_DW01_add_3_DW01_add_158 ( A, B, CI, SUM, CO );
  input [29:0] A;
  input [29:0] B;
  output [29:0] SUM;
  input CI;
  output CO;
  wire   SUM_23, \SUM[26] , n2, n3, n4;
  wire   [29:1] carry;
  assign SUM[25] = \SUM[26] ;
  assign SUM[27] = \SUM[26] ;
  assign SUM[29] = \SUM[26] ;
  assign SUM[24] = \SUM[26] ;
  assign SUM[23] = \SUM[26] ;
  assign SUM[28] = \SUM[26] ;
  assign SUM[26] = \SUM[26] ;

  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n2), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  BUFFD2 U1 ( .I(SUM_23), .Z(\SUM[26] ) );
  XNR3D0 U2 ( .A1(B[22]), .A2(A[21]), .A3(n3), .ZN(SUM_23) );
  AN2XD1 U3 ( .A1(B[0]), .A2(A[0]), .Z(n2) );
  AOI222D1 U4 ( .A1(n4), .A2(A[21]), .B1(n4), .B2(B[22]), .C1(A[21]), .C2(
        B[22]), .ZN(n3) );
  CKXOR2D1 U5 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  XOR3D0 U6 ( .A1(carry[21]), .A2(B[21]), .A3(A[21]), .Z(SUM[21]) );
  AO222D0 U7 ( .A1(carry[21]), .A2(A[21]), .B1(B[21]), .B2(carry[21]), .C1(
        B[21]), .C2(A[21]), .Z(n4) );
  XOR3D0 U8 ( .A1(B[22]), .A2(A[21]), .A3(n4), .Z(SUM[22]) );
endmodule


module shift_add_4_DW01_add_2_DW01_add_157 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_4_DW01_add_1_DW01_add_156 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_4_DW01_add_0_DW01_add_155 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_4 ( input_bitwidth, weight_bitwidth, .products({
        \products[15][5] , \products[15][4] , \products[15][3] , 
        \products[15][2] , \products[15][1] , \products[15][0] , 
        \products[14][5] , \products[14][4] , \products[14][3] , 
        \products[14][2] , \products[14][1] , \products[14][0] , 
        \products[13][5] , \products[13][4] , \products[13][3] , 
        \products[13][2] , \products[13][1] , \products[13][0] , 
        \products[12][5] , \products[12][4] , \products[12][3] , 
        \products[12][2] , \products[12][1] , \products[12][0] , 
        \products[11][5] , \products[11][4] , \products[11][3] , 
        \products[11][2] , \products[11][1] , \products[11][0] , 
        \products[10][5] , \products[10][4] , \products[10][3] , 
        \products[10][2] , \products[10][1] , \products[10][0] , 
        \products[9][5] , \products[9][4] , \products[9][3] , \products[9][2] , 
        \products[9][1] , \products[9][0] , \products[8][5] , \products[8][4] , 
        \products[8][3] , \products[8][2] , \products[8][1] , \products[8][0] , 
        \products[7][5] , \products[7][4] , \products[7][3] , \products[7][2] , 
        \products[7][1] , \products[7][0] , \products[6][5] , \products[6][4] , 
        \products[6][3] , \products[6][2] , \products[6][1] , \products[6][0] , 
        \products[5][5] , \products[5][4] , \products[5][3] , \products[5][2] , 
        \products[5][1] , \products[5][0] , \products[4][5] , \products[4][4] , 
        \products[4][3] , \products[4][2] , \products[4][1] , \products[4][0] , 
        \products[3][5] , \products[3][4] , \products[3][3] , \products[3][2] , 
        \products[3][1] , \products[3][0] , \products[2][5] , \products[2][4] , 
        \products[2][3] , \products[2][2] , \products[2][1] , \products[2][0] , 
        \products[1][5] , \products[1][4] , \products[1][3] , \products[1][2] , 
        \products[1][1] , \products[1][0] , \products[0][5] , \products[0][4] , 
        \products[0][3] , \products[0][2] , \products[0][1] , \products[0][0] 
        }), shift_add_out );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  output [31:0] shift_add_out;
  input \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] ;
  wire   \shifted_products[15][16] , \shifted_products[15][15] ,
         \shifted_products[15][14] , \shifted_products[15][13] ,
         \shifted_products[15][12] , \shifted_products[15][11] ,
         \shifted_products[15][10] , \shifted_products[15][9] ,
         \shifted_products[15][8] , \shifted_products[15][7] ,
         \shifted_products[15][6] , \shifted_products[15][5] ,
         \shifted_products[15][4] , \shifted_products[15][3] ,
         \shifted_products[15][2] , \shifted_products[15][1] ,
         \shifted_products[15][0] , \shifted_products[14][14] ,
         \shifted_products[14][13] , \shifted_products[14][12] ,
         \shifted_products[14][11] , \shifted_products[14][10] ,
         \shifted_products[14][9] , \shifted_products[14][8] ,
         \shifted_products[14][7] , \shifted_products[14][6] ,
         \shifted_products[14][5] , \shifted_products[14][4] ,
         \shifted_products[14][3] , \shifted_products[14][2] ,
         \shifted_products[14][1] , \shifted_products[14][0] ,
         \shifted_products[13][12] , \shifted_products[13][11] ,
         \shifted_products[13][10] , \shifted_products[13][9] ,
         \shifted_products[13][8] , \shifted_products[13][7] ,
         \shifted_products[13][6] , \shifted_products[13][5] ,
         \shifted_products[13][4] , \shifted_products[13][3] ,
         \shifted_products[13][2] , \shifted_products[13][1] ,
         \shifted_products[13][0] , \shifted_products[12][10] ,
         \shifted_products[12][9] , \shifted_products[12][8] ,
         \shifted_products[12][7] , \shifted_products[12][6] ,
         \shifted_products[12][5] , \shifted_products[12][4] ,
         \shifted_products[12][3] , \shifted_products[12][2] ,
         \shifted_products[12][1] , \shifted_products[12][0] ,
         \shifted_products[11][13] , \shifted_products[11][12] ,
         \shifted_products[11][11] , \shifted_products[11][10] ,
         \shifted_products[11][9] , \shifted_products[11][8] ,
         \shifted_products[11][7] , \shifted_products[11][6] ,
         \shifted_products[11][5] , \shifted_products[11][4] ,
         \shifted_products[11][3] , \shifted_products[11][2] ,
         \shifted_products[11][1] , \shifted_products[11][0] ,
         \shifted_products[10][12] , \shifted_products[10][11] ,
         \shifted_products[10][10] , \shifted_products[10][9] ,
         \shifted_products[10][8] , \shifted_products[10][7] ,
         \shifted_products[10][6] , \shifted_products[10][5] ,
         \shifted_products[10][4] , \shifted_products[10][3] ,
         \shifted_products[10][2] , \shifted_products[10][1] ,
         \shifted_products[10][0] , \shifted_products[9][10] ,
         \shifted_products[9][9] , \shifted_products[9][8] ,
         \shifted_products[9][7] , \shifted_products[9][6] ,
         \shifted_products[9][5] , \shifted_products[9][4] ,
         \shifted_products[9][3] , \shifted_products[9][2] ,
         \shifted_products[9][1] , \shifted_products[9][0] ,
         \shifted_products[8][8] , \shifted_products[8][7] ,
         \shifted_products[8][6] , \shifted_products[8][5] ,
         \shifted_products[8][4] , \shifted_products[8][3] ,
         \shifted_products[8][2] , \shifted_products[8][1] ,
         \shifted_products[8][0] , \shifted_products[7][11] ,
         \shifted_products[7][10] , \shifted_products[7][9] ,
         \shifted_products[7][8] , \shifted_products[7][7] ,
         \shifted_products[7][6] , \shifted_products[7][5] ,
         \shifted_products[7][4] , \shifted_products[7][3] ,
         \shifted_products[7][2] , \shifted_products[7][1] ,
         \shifted_products[7][0] , \shifted_products[6][10] ,
         \shifted_products[6][9] , \shifted_products[6][8] ,
         \shifted_products[6][7] , \shifted_products[6][6] ,
         \shifted_products[6][5] , \shifted_products[6][4] ,
         \shifted_products[6][3] , \shifted_products[6][2] ,
         \shifted_products[6][1] , \shifted_products[6][0] ,
         \shifted_products[5][8] , \shifted_products[5][7] ,
         \shifted_products[5][6] , \shifted_products[5][5] ,
         \shifted_products[5][4] , \shifted_products[5][3] ,
         \shifted_products[5][2] , \shifted_products[5][1] ,
         \shifted_products[5][0] , \shifted_products[4][6] ,
         \shifted_products[4][5] , \shifted_products[4][4] ,
         \shifted_products[4][3] , \shifted_products[4][2] ,
         \shifted_products[4][1] , \shifted_products[4][0] ,
         \shifted_products[3][9] , \shifted_products[3][8] ,
         \shifted_products[3][7] , \shifted_products[3][6] ,
         \shifted_products[3][5] , \shifted_products[3][4] ,
         \shifted_products[3][3] , \shifted_products[3][2] ,
         \shifted_products[3][1] , \shifted_products[3][0] ,
         \shifted_products[2][8] , \shifted_products[2][7] ,
         \shifted_products[2][6] , \shifted_products[2][5] ,
         \shifted_products[2][4] , \shifted_products[2][3] ,
         \shifted_products[2][2] , \shifted_products[2][1] ,
         \shifted_products[2][0] , \shifted_products[1][6] ,
         \shifted_products[1][5] , \shifted_products[1][4] ,
         \shifted_products[1][3] , \shifted_products[1][2] ,
         \shifted_products[1][1] , \shifted_products[1][0] ,
         \shifted_products[0][9] , N99, N98, N87, N86, N85, N84, N83, N82, N81,
         N80, N79, N78, N77, N76, N61, N60, N59, N58, N57, N56, N55, N54, N446,
         N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435,
         N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424,
         N423, N422, N421, N420, N419, N418, N417, N416, N415, N414, N413,
         N412, N411, N410, N409, N408, N407, N406, N405, N404, N403, N402,
         N401, N400, N399, N398, N397, N396, N395, N394, N393, N392, N391,
         N390, N389, N388, N387, N386, N385, N384, N383, N382, N381, N380,
         N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369,
         N368, N367, N366, N365, N364, N363, N362, N361, N360, N359, N358,
         N357, N356, N355, N354, N353, N352, N351, N350, N349, N348, N347,
         N346, N345, N344, N343, N342, N341, N340, N339, N338, N337, N336,
         N335, N334, N333, N332, N331, N330, N329, N328, N327, N326, N325,
         N324, N323, N322, N321, N320, N319, N318, N317, N316, N315, N314,
         N313, N312, N311, N310, N309, N308, N307, N306, N305, N304, N303,
         N302, N301, N300, N299, N298, N297, N296, N295, N294, N293, N292,
         N291, N290, N289, N288, N287, N286, N285, N284, N283, N282, N281,
         N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270,
         N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259,
         N258, N257, N256, N255, N254, N253, N252, N251, N250, N249, N248,
         N247, N246, N245, N244, N243, N242, N241, N240, N239, N238, N237,
         N236, N235, N234, N233, N232, N231, N230, N229, N214, N213, N212,
         N211, N210, N209, N208, N207, N206, N205, N204, N203, N202, N201,
         N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, N179,
         N178, N177, N176, N175, N174, N159, N158, N157, N156, N155, N154,
         N153, N152, N151, N150, N149, N148, N136, N135, N134, N133, N132,
         N131, N130, N129, N128, N127, N126, N125, N124, N123, N108, N107,
         N106, N105, N104, N103, N102, N101, N100,
         \add_14_root_add_199_I16/carry[6] ,
         \add_14_root_add_199_I16/carry[5] ,
         \add_14_root_add_199_I16/carry[4] ,
         \add_14_root_add_199_I16/carry[3] ,
         \add_14_root_add_199_I16/carry[2] ,
         \add_14_root_add_199_I16/carry[1] ,
         \add_13_root_add_199_I16/carry[9] ,
         \add_13_root_add_199_I16/carry[8] ,
         \add_13_root_add_199_I16/carry[7] ,
         \add_13_root_add_199_I16/carry[6] ,
         \add_13_root_add_199_I16/carry[5] ,
         \add_13_root_add_199_I16/carry[4] ,
         \add_13_root_add_199_I16/carry[3] ,
         \add_13_root_add_199_I16/carry[2] ,
         \add_13_root_add_199_I16/carry[1] ,
         \add_12_root_add_199_I16/carry[7] ,
         \add_12_root_add_199_I16/carry[6] ,
         \add_12_root_add_199_I16/carry[5] ,
         \add_12_root_add_199_I16/carry[4] ,
         \add_12_root_add_199_I16/carry[3] ,
         \add_12_root_add_199_I16/carry[2] ,
         \add_12_root_add_199_I16/carry[1] ,
         \add_11_root_add_199_I16/carry[11] ,
         \add_11_root_add_199_I16/carry[10] ,
         \add_11_root_add_199_I16/carry[9] ,
         \add_11_root_add_199_I16/carry[8] ,
         \add_11_root_add_199_I16/carry[7] ,
         \add_11_root_add_199_I16/carry[6] ,
         \add_11_root_add_199_I16/carry[5] ,
         \add_11_root_add_199_I16/carry[4] ,
         \add_11_root_add_199_I16/carry[3] ,
         \add_11_root_add_199_I16/carry[2] ,
         \add_11_root_add_199_I16/carry[1] ,
         \add_10_root_add_199_I16/carry[9] ,
         \add_10_root_add_199_I16/carry[8] ,
         \add_10_root_add_199_I16/carry[7] ,
         \add_10_root_add_199_I16/carry[6] ,
         \add_10_root_add_199_I16/carry[5] ,
         \add_10_root_add_199_I16/carry[4] ,
         \add_10_root_add_199_I16/carry[3] ,
         \add_10_root_add_199_I16/carry[2] ,
         \add_10_root_add_199_I16/carry[1] ,
         \add_9_root_add_199_I16/carry[13] ,
         \add_9_root_add_199_I16/carry[12] ,
         \add_9_root_add_199_I16/carry[11] ,
         \add_9_root_add_199_I16/carry[10] , \add_9_root_add_199_I16/carry[9] ,
         \add_9_root_add_199_I16/carry[8] , \add_9_root_add_199_I16/carry[7] ,
         \add_9_root_add_199_I16/carry[6] , \add_9_root_add_199_I16/carry[5] ,
         \add_9_root_add_199_I16/carry[4] , \add_9_root_add_199_I16/carry[3] ,
         \add_9_root_add_199_I16/carry[2] , \add_9_root_add_199_I16/carry[1] ,
         \add_8_root_add_199_I16/carry[11] ,
         \add_8_root_add_199_I16/carry[10] , \add_8_root_add_199_I16/carry[9] ,
         \add_8_root_add_199_I16/carry[8] , \add_8_root_add_199_I16/carry[7] ,
         \add_8_root_add_199_I16/carry[6] , \add_8_root_add_199_I16/carry[5] ,
         \add_8_root_add_199_I16/carry[4] , \add_8_root_add_199_I16/carry[3] ,
         \add_8_root_add_199_I16/carry[2] , \add_8_root_add_199_I16/carry[1] ,
         n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72,
         n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86,
         n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100,
         n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, n111,
         n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122,
         n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133,
         n134, n135, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246,
         n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257,
         n258, n259, n260, n261, n262, n263, n264, n265, n266, n267, n268,
         n269, n270, n271, n272, n273, n274, n275, n276, n277, n278, n279,
         n280, n281, n282, n283, n284, n285, n286, n287, n288, n289, n290,
         n291, n292, n293, n294, n295, n296, n297, n298, n299, n300, n301,
         n302, n303, n304, n305, n306, n307, n308, n309, n310, n311, n312,
         n313, n314, n315, n316, n317, n318, n319, n320, n321, n322, n323,
         n324, n325, n326, n327;

  MAOI22D1 U26 ( .A1(\products[7][0] ), .A2(n315), .B1(n111), .B2(n318), .ZN(
        n316) );
  AN2XD1 U66 ( .A1(n295), .A2(n306), .Z(n294) );
  AN2XD1 U74 ( .A1(n321), .A2(n290), .Z(n291) );
  OA21D1 U130 ( .A1(n245), .A2(n62), .B(n281), .Z(n272) );
  AN2XD1 U134 ( .A1(n308), .A2(n298), .Z(n282) );
  AN2XD1 U161 ( .A1(n295), .A2(n325), .Z(n265) );
  AN2XD1 U239 ( .A1(n298), .A2(n318), .Z(n284) );
  shift_add_4_DW01_add_14_DW01_add_169 add_7_root_add_199_I16 ( .A({
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \shifted_products[14][14] , 
        \shifted_products[14][13] , \shifted_products[14][12] , 
        \shifted_products[14][11] , \shifted_products[14][10] , 
        \shifted_products[14][9] , \shifted_products[14][8] , 
        \shifted_products[14][7] , \shifted_products[14][6] , 
        \shifted_products[14][5] , \shifted_products[14][4] , 
        \shifted_products[14][3] , \shifted_products[14][2] , 
        \shifted_products[14][1] , \shifted_products[14][0] }), .B({
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \shifted_products[15][16] , \shifted_products[15][15] , 
        \shifted_products[15][14] , \shifted_products[15][13] , 
        \shifted_products[15][12] , \shifted_products[15][11] , 
        \shifted_products[15][10] , \shifted_products[15][9] , 
        \shifted_products[15][8] , \shifted_products[15][7] , 
        \shifted_products[15][6] , \shifted_products[15][5] , 
        \shifted_products[15][4] , \shifted_products[15][3] , 
        \shifted_products[15][2] , \shifted_products[15][1] , 
        \shifted_products[15][0] }), .CI(n247), .SUM({N257, N256, N255, N254, 
        N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, N243, N242, 
        N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, N231, N230, 
        N229}) );
  shift_add_4_DW01_add_6_DW01_add_161 add_4_root_add_0_root_add_199_I16 ( .A({
        n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, 
        n21, n21, n21, n21, N214, N213, N212, N211, N210, N209, N208, N207, 
        N206, N205, N204, N203, N202, N201}), .B({N257, N257, N257, N257, N256, 
        N255, N254, N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, 
        N243, N242, N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, 
        N231, N230, N229}), .CI(n247), .SUM({N382, N381, N380, N379, N378, 
        N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, N367, N366, 
        N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, N355, N354, 
        N353, N352, N351}) );
  shift_add_4_DW01_add_5_DW01_add_160 add_3_root_add_0_root_add_199_I16 ( .A({
        n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, n22, 
        n22, n22, N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, 
        N179, N178, N177, N176, N175, N174}), .B({n19, n19, n19, n19, n19, n19, 
        n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, 
        N159, N158, N157, N156, N155, N154, N153, N152, N151, N150, N149, N148}), .CI(n247), .SUM({N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, 
        N340, N339, N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, 
        N328, N327, N326, N325, N324, N323, N322, N321, N320, N319}) );
  shift_add_4_DW01_add_4_DW01_add_159 add_5_root_add_199_I16 ( .A({n20, n20, 
        n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, 
        n20, n20, n20, n20, n20, N108, N107, N106, N105, N104, N103, N102, 
        N101, N100, N99}), .B({n23, n23, n23, n23, n23, n23, n23, n23, n23, 
        n23, n23, n23, n23, n23, n23, n23, n23, N136, N135, N134, N133, N132, 
        N131, N130, N129, N128, N127, N126, N125, N124, N123}), .CI(n247), 
        .SUM({N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}) );
  shift_add_4_DW01_add_3_DW01_add_158 add_6_root_add_199_I16 ( .A({n17, n17, 
        n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, 
        n17, n17, n17, n17, n17, n17, N61, N60, N59, N58, N57, N56, N55, N54}), 
        .B({N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, N98, 
        N98, N98, N98, N98, N98, N87, N86, N85, N84, N83, N82, N81, N80, N79, 
        N78, N77, N76}), .CI(n247), .SUM({N287, N286, N285, N284, N283, N282, 
        N281, N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270, 
        N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259, N258}) );
  shift_add_4_DW01_add_2_DW01_add_157 add_2_root_add_0_root_add_199_I16 ( .A({
        N318, N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}), .B({N382, N381, N380, 
        N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, 
        N367, N366, N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, 
        N355, N354, N353, N352, N351}), .CI(n247), .SUM({N446, N445, N444, 
        N443, N442, N441, N440, N439, N438, N437, N436, N435, N434, N433, N432, 
        N431, N430, N429, N428, N427, N426, N425, N424, N423, N422, N421, N420, 
        N419, N418, N417, N416, N415}) );
  shift_add_4_DW01_add_1_DW01_add_156 add_1_root_add_0_root_add_199_I16 ( .A({
        N446, N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435, 
        N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424, N423, 
        N422, N421, N420, N419, N418, N417, N416, N415}), .B({N287, N287, N287, 
        N286, N285, N284, N283, N282, N281, N280, N279, N278, N277, N276, N275, 
        N274, N273, N272, N271, N270, N269, N268, N267, N266, N265, N264, N263, 
        N262, N261, N260, N259, N258}), .CI(n247), .SUM({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}) );
  shift_add_4_DW01_add_0_DW01_add_155 add_0_root_add_0_root_add_199_I16 ( .A({
        N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, N340, N339, 
        N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, N328, N327, 
        N326, N325, N324, N323, N322, N321, N320, N319}), .B({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}), .CI(n247), .SUM(shift_add_out) );
  INR3D1 U2 ( .A1(weight_bitwidth[1]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[2]), .ZN(n253) );
  INR3D1 U3 ( .A1(weight_bitwidth[2]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[1]), .ZN(n250) );
  CKBD1 U4 ( .I(n307), .Z(n1) );
  CKBD0 U5 ( .I(n307), .Z(n2) );
  AOI222D2 U6 ( .A1(n59), .A2(\products[2][5] ), .B1(n59), .B2(
        \products[3][5] ), .C1(\products[2][5] ), .C2(\products[3][5] ), .ZN(
        n30) );
  INR3D1 U7 ( .A1(input_bitwidth[0]), .B1(input_bitwidth[1]), .B2(
        input_bitwidth[2]), .ZN(n252) );
  IAO22D1 U8 ( .B1(\products[15][2] ), .B2(n278), .A1(n63), .A2(n2), .ZN(n279)
         );
  CKND2D0 U9 ( .A1(n308), .A2(n2), .ZN(n310) );
  CKND2D0 U10 ( .A1(n2), .A2(n275), .ZN(n267) );
  CKND2D0 U11 ( .A1(n298), .A2(n2), .ZN(n293) );
  AOI222XD4 U12 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[0][9] ), .B1(\add_14_root_add_199_I16/carry[6] ), 
        .B2(\shifted_products[1][6] ), .C1(\shifted_products[1][6] ), .C2(
        \shifted_products[0][9] ), .ZN(n61) );
  FA1D2 U13 ( .A(\products[0][5] ), .B(\shifted_products[1][5] ), .CI(
        \add_14_root_add_199_I16/carry[5] ), .CO(
        \add_14_root_add_199_I16/carry[6] ), .S(N59) );
  INVD4 U14 ( .I(n29), .ZN(N98) );
  AOI222XD4 U15 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \products[6][5] ), .B1(\add_11_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[7][11] ), .C1(\shifted_products[7][11] ), .C2(
        \products[6][5] ), .ZN(n51) );
  FA1D2 U16 ( .A(\shifted_products[6][10] ), .B(\shifted_products[7][10] ), 
        .CI(\add_11_root_add_199_I16/carry[10] ), .CO(
        \add_11_root_add_199_I16/carry[11] ), .S(N133) );
  INVD1 U17 ( .I(\products[2][5] ), .ZN(n57) );
  ND2D2 U18 ( .A1(n301), .A2(n231), .ZN(n300) );
  ND2D1 U19 ( .A1(n306), .A2(n283), .ZN(n312) );
  INR3D0 U20 ( .A1(input_bitwidth[2]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[1]), .ZN(n249) );
  NR3D1 U21 ( .A1(n25), .A2(n26), .A3(n27), .ZN(n58) );
  OA21D1 U22 ( .A1(n289), .A2(n133), .B(n288), .Z(n31) );
  ND2D1 U23 ( .A1(n284), .A2(n242), .ZN(n323) );
  ND2D1 U24 ( .A1(n35), .A2(n308), .ZN(n322) );
  INVD1 U25 ( .I(n286), .ZN(n242) );
  NR2D1 U27 ( .A1(n314), .A2(n227), .ZN(\shifted_products[1][1] ) );
  NR3D1 U28 ( .A1(n11), .A2(n12), .A3(n13), .ZN(n55) );
  AN2XD1 U29 ( .A1(n54), .A2(\products[5][5] ), .Z(n12) );
  XNR3D2 U30 ( .A1(\products[7][5] ), .A2(n114), .A3(n24), .ZN(n23) );
  XNR3D2 U31 ( .A1(n223), .A2(n18), .A3(n60), .ZN(n17) );
  NR3D1 U32 ( .A1(n14), .A2(n15), .A3(n16), .ZN(n41) );
  ND2D1 U33 ( .A1(n249), .A2(n248), .ZN(n326) );
  AN2XD1 U34 ( .A1(n40), .A2(\products[13][5] ), .Z(n15) );
  OAI222D1 U35 ( .A1(n39), .A2(n80), .B1(n39), .B2(n42), .C1(n80), .C2(n42), 
        .ZN(n40) );
  NR2D2 U36 ( .A1(n314), .A2(n228), .ZN(\shifted_products[1][0] ) );
  INR2XD4 U37 ( .A1(n325), .B1(n244), .ZN(n314) );
  INR2D2 U38 ( .A1(n275), .B1(n244), .ZN(n306) );
  CKND3 U39 ( .I(n326), .ZN(n244) );
  CKAN2D0 U40 ( .A1(n313), .A2(n38), .Z(n3) );
  CKND2D1 U41 ( .A1(n253), .A2(n252), .ZN(n313) );
  OR2XD1 U42 ( .A1(n51), .A2(n114), .Z(n4) );
  OR2XD1 U43 ( .A1(n51), .A2(n32), .Z(n5) );
  OR2D1 U44 ( .A1(n114), .A2(n32), .Z(n6) );
  ND3D2 U45 ( .A1(n4), .A2(n5), .A3(n6), .ZN(n52) );
  NR2D1 U46 ( .A1(n322), .A2(n323), .ZN(n7) );
  OR2XD1 U47 ( .A1(n58), .A2(n57), .Z(n8) );
  OR2XD1 U48 ( .A1(n58), .A2(n31), .Z(n9) );
  OR2XD1 U49 ( .A1(n57), .A2(n31), .Z(n10) );
  ND3D2 U50 ( .A1(n8), .A2(n9), .A3(n10), .ZN(n59) );
  CKND2D2 U51 ( .A1(n250), .A2(n252), .ZN(n318) );
  AN2D1 U52 ( .A1(n54), .A2(\products[4][5] ), .Z(n11) );
  AN2XD1 U53 ( .A1(\products[4][5] ), .A2(\products[5][5] ), .Z(n13) );
  OAI222D1 U54 ( .A1(n53), .A2(n126), .B1(n53), .B2(n56), .C1(n126), .C2(n56), 
        .ZN(n54) );
  NR2D0 U55 ( .A1(n37), .A2(n79), .ZN(\shifted_products[13][0] ) );
  AN2D1 U56 ( .A1(n40), .A2(\products[12][5] ), .Z(n14) );
  AN2D1 U57 ( .A1(\products[12][5] ), .A2(\products[13][5] ), .Z(n16) );
  AN2D1 U58 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(\products[2][5] ), 
        .Z(n25) );
  AN2D2 U59 ( .A1(n295), .A2(n38), .Z(n292) );
  NR2D0 U60 ( .A1(n314), .A2(n217), .ZN(\shifted_products[3][0] ) );
  AOI222D0 U61 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \products[10][5] ), .B1(\add_9_root_add_199_I16/carry[13] ), .B2(
        \shifted_products[11][13] ), .C1(\shifted_products[11][13] ), .C2(
        \products[10][5] ), .ZN(n44) );
  CKAN2D0 U62 ( .A1(n301), .A2(n35), .Z(n321) );
  OAI22D0 U63 ( .A1(n3), .A2(n116), .B1(n234), .B2(n118), .ZN(
        \shifted_products[6][3] ) );
  OAI22D0 U64 ( .A1(n325), .A2(n99), .B1(n237), .B2(n101), .ZN(
        \shifted_products[9][3] ) );
  NR2D0 U65 ( .A1(n325), .A2(n90), .ZN(\shifted_products[11][1] ) );
  INR2D1 U67 ( .A1(n308), .B1(n244), .ZN(n301) );
  CKND2D1 U68 ( .A1(n253), .A2(n251), .ZN(n307) );
  OA222D1 U69 ( .A1(n61), .A2(n60), .B1(n61), .B2(n223), .C1(n60), .C2(n223), 
        .Z(n18) );
  CKND2 U70 ( .I(n271), .ZN(n231) );
  XNR3D1 U71 ( .A1(n31), .A2(n58), .A3(n57), .ZN(N86) );
  OAI22D0 U72 ( .A1(n314), .A2(n132), .B1(n287), .B2(n134), .ZN(
        \shifted_products[3][5] ) );
  OAI22D0 U73 ( .A1(n314), .A2(n134), .B1(n287), .B2(n216), .ZN(
        \shifted_products[3][3] ) );
  NR2D0 U75 ( .A1(n229), .A2(n219), .ZN(\shifted_products[2][3] ) );
  FA1D1 U76 ( .A(\shifted_products[2][7] ), .B(\shifted_products[3][7] ), .CI(
        \add_13_root_add_199_I16/carry[7] ), .CO(
        \add_13_root_add_199_I16/carry[8] ), .S(N83) );
  NR2D0 U77 ( .A1(n314), .A2(n216), .ZN(\shifted_products[3][1] ) );
  XOR3D4 U78 ( .A1(\products[9][5] ), .A2(n49), .A3(n47), .Z(n19) );
  AOI222D1 U79 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(\products[4][5] ), .B1(\add_12_root_add_199_I16/carry[7] ), .B2(\shifted_products[5][7] ), .C1(
        \shifted_products[5][7] ), .C2(\products[4][5] ), .ZN(n53) );
  AOI222D1 U80 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(\products[8][5] ), .B1(\add_10_root_add_199_I16/carry[9] ), .B2(\shifted_products[9][9] ), .C1(
        \shifted_products[9][9] ), .C2(\products[8][5] ), .ZN(n46) );
  AOI222D1 U81 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \products[12][5] ), .B1(\add_8_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[13][11] ), .C1(\shifted_products[13][11] ), .C2(
        \products[12][5] ), .ZN(n39) );
  XOR3D2 U82 ( .A1(\products[5][5] ), .A2(n55), .A3(n126), .Z(n20) );
  XOR3D2 U83 ( .A1(\products[13][5] ), .A2(n41), .A3(n80), .Z(n21) );
  XOR3D1 U84 ( .A1(\products[11][5] ), .A2(n43), .A3(n28), .Z(n22) );
  OAI22D0 U85 ( .A1(n314), .A2(n223), .B1(n7), .B2(n224), .ZN(
        \shifted_products[1][6] ) );
  OAI22D0 U86 ( .A1(n241), .A2(n110), .B1(n305), .B2(n108), .ZN(
        \shifted_products[7][11] ) );
  NR2D0 U87 ( .A1(n319), .A2(n244), .ZN(n327) );
  CKAN2D0 U88 ( .A1(n284), .A2(n35), .Z(n289) );
  OAI21D0 U89 ( .A1(n64), .A2(n35), .B(n274), .ZN(\shifted_products[15][15] )
         );
  NR2D0 U90 ( .A1(n37), .A2(n67), .ZN(\shifted_products[15][0] ) );
  CKND2D0 U91 ( .A1(n301), .A2(n230), .ZN(n273) );
  CKND2D0 U92 ( .A1(n231), .A2(n284), .ZN(n319) );
  CKND1 U93 ( .I(\products[13][5] ), .ZN(n74) );
  NR2D0 U94 ( .A1(n113), .A2(n37), .ZN(\shifted_products[7][0] ) );
  CKND2D0 U95 ( .A1(\products[12][5] ), .A2(n319), .ZN(n261) );
  CKND2D0 U96 ( .A1(\products[8][5] ), .A2(n319), .ZN(n320) );
  CKND1 U97 ( .I(\products[7][5] ), .ZN(n108) );
  CKND2D0 U98 ( .A1(\products[3][5] ), .A2(n300), .ZN(n288) );
  NR2D0 U99 ( .A1(n271), .A2(n244), .ZN(n260) );
  CKND2D0 U100 ( .A1(\products[2][5] ), .A2(n300), .ZN(n285) );
  CKND2D0 U101 ( .A1(\products[10][5] ), .A2(n271), .ZN(n254) );
  CKND1 U102 ( .I(\products[6][5] ), .ZN(n114) );
  CKND1 U103 ( .I(\products[14][5] ), .ZN(n68) );
  CKAN2D0 U104 ( .A1(n301), .A2(n284), .Z(n255) );
  CKND2D0 U105 ( .A1(\products[15][5] ), .A2(n271), .ZN(n281) );
  CKND2D1 U106 ( .A1(n235), .A2(n301), .ZN(n302) );
  CKND1 U107 ( .I(\products[5][5] ), .ZN(n120) );
  CKAN2D0 U108 ( .A1(n295), .A2(n314), .Z(n296) );
  OAI22D0 U109 ( .A1(n292), .A2(n126), .B1(n291), .B2(n128), .ZN(
        \shifted_products[4][5] ) );
  OAI22D0 U110 ( .A1(n292), .A2(n80), .B1(n290), .B2(n82), .ZN(
        \shifted_products[12][5] ) );
  OAI22D0 U111 ( .A1(n37), .A2(n122), .B1(n294), .B2(n124), .ZN(
        \shifted_products[5][3] ) );
  OAI22D0 U112 ( .A1(n292), .A2(n128), .B1(n291), .B2(n130), .ZN(
        \shifted_products[4][3] ) );
  OAI22D0 U113 ( .A1(n37), .A2(n64), .B1(n236), .B2(n66), .ZN(
        \shifted_products[15][3] ) );
  OAI22D0 U114 ( .A1(n3), .A2(n70), .B1(n235), .B2(n72), .ZN(
        \shifted_products[14][3] ) );
  OAI22D0 U115 ( .A1(n325), .A2(n88), .B1(n242), .B2(n90), .ZN(
        \shifted_products[11][3] ) );
  NR2D0 U116 ( .A1(n231), .A2(n93), .ZN(\shifted_products[10][3] ) );
  NR2D0 U117 ( .A1(n230), .A2(n104), .ZN(\shifted_products[8][3] ) );
  OAI22D0 U118 ( .A1(n36), .A2(n76), .B1(n233), .B2(n78), .ZN(
        \shifted_products[13][3] ) );
  OAI22D0 U119 ( .A1(n292), .A2(n82), .B1(n290), .B2(n84), .ZN(
        \shifted_products[12][3] ) );
  OAI22D0 U120 ( .A1(n110), .A2(n36), .B1(n232), .B2(n112), .ZN(
        \shifted_products[7][3] ) );
  OAI21D0 U121 ( .A1(n66), .A2(n35), .B(n274), .ZN(\shifted_products[15][13] )
         );
  NR2D0 U122 ( .A1(n37), .A2(n124), .ZN(\shifted_products[5][1] ) );
  NR2D0 U123 ( .A1(n292), .A2(n84), .ZN(\shifted_products[12][1] ) );
  NR2D0 U124 ( .A1(n37), .A2(n78), .ZN(\shifted_products[13][1] ) );
  NR2D0 U125 ( .A1(n112), .A2(n37), .ZN(\shifted_products[7][1] ) );
  NR2D0 U126 ( .A1(n231), .A2(n95), .ZN(\shifted_products[10][1] ) );
  NR2D0 U127 ( .A1(n37), .A2(n66), .ZN(\shifted_products[15][1] ) );
  CKND1 U128 ( .I(\products[4][5] ), .ZN(n126) );
  CKAN2D0 U129 ( .A1(\products[0][5] ), .A2(n37), .Z(\shifted_products[0][9] )
         );
  AO222D1 U131 ( .A1(n52), .A2(\products[6][5] ), .B1(n52), .B2(
        \products[7][5] ), .C1(\products[6][5] ), .C2(\products[7][5] ), .Z(
        n24) );
  OAI21D0 U132 ( .A1(n63), .A2(n35), .B(n274), .ZN(\shifted_products[15][16] )
         );
  AN2XD1 U133 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .Z(n26) );
  OAI21D0 U135 ( .A1(n289), .A2(n134), .B(n288), .ZN(\shifted_products[3][9] )
         );
  AN2D4 U136 ( .A1(n275), .A2(n38), .Z(n325) );
  NR2D0 U137 ( .A1(n229), .A2(n222), .ZN(\shifted_products[2][0] ) );
  FA1D1 U138 ( .A(\shifted_products[2][6] ), .B(\shifted_products[3][6] ), 
        .CI(\add_13_root_add_199_I16/carry[6] ), .CO(
        \add_13_root_add_199_I16/carry[7] ), .S(N82) );
  OAI21D0 U139 ( .A1(n289), .A2(n220), .B(n285), .ZN(\shifted_products[2][6] )
         );
  OAI22D0 U140 ( .A1(n314), .A2(n224), .B1(n7), .B2(n226), .ZN(
        \shifted_products[1][4] ) );
  OAI22D0 U141 ( .A1(n314), .A2(n225), .B1(n7), .B2(n227), .ZN(
        \shifted_products[1][3] ) );
  OAI22D0 U142 ( .A1(n314), .A2(n133), .B1(n287), .B2(n135), .ZN(
        \shifted_products[3][4] ) );
  OAI22D0 U143 ( .A1(n229), .A2(n218), .B1(n289), .B2(n222), .ZN(
        \shifted_products[2][4] ) );
  OAI22D0 U144 ( .A1(n314), .A2(n135), .B1(n287), .B2(n217), .ZN(
        \shifted_products[3][2] ) );
  NR2D0 U145 ( .A1(n229), .A2(n220), .ZN(\shifted_products[2][2] ) );
  INR2XD0 U146 ( .A1(n275), .B1(n293), .ZN(n290) );
  CKAN2D0 U147 ( .A1(n313), .A2(n38), .Z(n304) );
  INR2D0 U148 ( .A1(n308), .B1(n286), .ZN(n287) );
  CKND2D0 U149 ( .A1(n326), .A2(n318), .ZN(n278) );
  CKND2D0 U150 ( .A1(n35), .A2(n298), .ZN(n315) );
  CKAN2D0 U151 ( .A1(n318), .A2(n313), .Z(n295) );
  CKND2D0 U152 ( .A1(n301), .A2(n298), .ZN(n268) );
  AOI22D0 U153 ( .A1(\products[14][0] ), .A2(n268), .B1(\products[14][4] ), 
        .B2(n267), .ZN(n269) );
  NR2D0 U154 ( .A1(n292), .A2(n131), .ZN(\shifted_products[4][0] ) );
  NR2D0 U155 ( .A1(n292), .A2(n85), .ZN(\shifted_products[12][0] ) );
  AOI22D0 U156 ( .A1(\products[6][4] ), .A2(n302), .B1(\products[6][0] ), .B2(
        n315), .ZN(n303) );
  NR2D0 U157 ( .A1(n231), .A2(n96), .ZN(\shifted_products[10][0] ) );
  NR2D0 U158 ( .A1(n230), .A2(n107), .ZN(\shifted_products[8][0] ) );
  CKND1 U159 ( .I(\products[15][4] ), .ZN(n63) );
  CKND1 U160 ( .I(\products[14][3] ), .ZN(n70) );
  OAI21D0 U162 ( .A1(n289), .A2(n135), .B(n288), .ZN(\shifted_products[3][8] )
         );
  OAI21D0 U163 ( .A1(n289), .A2(n218), .B(n285), .ZN(\shifted_products[2][8] )
         );
  CKND1 U164 ( .I(\products[13][3] ), .ZN(n76) );
  CKND1 U165 ( .I(\products[7][3] ), .ZN(n110) );
  CKND2D0 U166 ( .A1(n306), .A2(n313), .ZN(n309) );
  CKND2D0 U167 ( .A1(n295), .A2(n275), .ZN(n262) );
  CKND1 U168 ( .I(\products[6][3] ), .ZN(n116) );
  CKND1 U169 ( .I(\products[14][4] ), .ZN(n69) );
  CKND1 U170 ( .I(\products[7][4] ), .ZN(n109) );
  CKND1 U171 ( .I(\products[12][3] ), .ZN(n82) );
  CKND1 U172 ( .I(\products[13][4] ), .ZN(n75) );
  CKND1 U173 ( .I(\products[5][3] ), .ZN(n122) );
  OAI21D0 U174 ( .A1(n321), .A2(n104), .B(n320), .ZN(\shifted_products[8][7] )
         );
  CKND1 U175 ( .I(\products[6][4] ), .ZN(n115) );
  OAI21D0 U176 ( .A1(n321), .A2(n82), .B(n261), .ZN(\shifted_products[12][9] )
         );
  OAI22D0 U177 ( .A1(n230), .A2(n103), .B1(n321), .B2(n107), .ZN(
        \shifted_products[8][4] ) );
  OAI21D0 U178 ( .A1(n321), .A2(n106), .B(n320), .ZN(\shifted_products[8][5] )
         );
  OAI21D0 U179 ( .A1(n321), .A2(n84), .B(n261), .ZN(\shifted_products[12][7] )
         );
  OAI22D0 U180 ( .A1(n231), .A2(n92), .B1(n255), .B2(n96), .ZN(
        \shifted_products[10][4] ) );
  OAI22D0 U181 ( .A1(n292), .A2(n127), .B1(n291), .B2(n129), .ZN(
        \shifted_products[4][4] ) );
  OAI22D0 U182 ( .A1(n292), .A2(n81), .B1(n290), .B2(n83), .ZN(
        \shifted_products[12][4] ) );
  OAI21D0 U183 ( .A1(n321), .A2(n105), .B(n320), .ZN(\shifted_products[8][6] )
         );
  AOI22D0 U184 ( .A1(\products[9][4] ), .A2(n323), .B1(\products[9][0] ), .B2(
        n322), .ZN(n324) );
  AOI22D0 U185 ( .A1(\products[15][4] ), .A2(n276), .B1(\products[15][0] ), 
        .B2(n278), .ZN(n277) );
  AOI22D0 U186 ( .A1(\products[11][0] ), .A2(n258), .B1(\products[11][4] ), 
        .B2(n286), .ZN(n259) );
  OAI22D0 U187 ( .A1(n240), .A2(n70), .B1(n270), .B2(n68), .ZN(
        \shifted_products[14][9] ) );
  OAI22D0 U188 ( .A1(n37), .A2(n123), .B1(n294), .B2(n125), .ZN(
        \shifted_products[5][2] ) );
  OAI22D0 U189 ( .A1(n292), .A2(n129), .B1(n291), .B2(n131), .ZN(
        \shifted_products[4][2] ) );
  OAI22D0 U190 ( .A1(n37), .A2(n77), .B1(n233), .B2(n79), .ZN(
        \shifted_products[13][2] ) );
  OAI22D0 U191 ( .A1(n292), .A2(n83), .B1(n290), .B2(n85), .ZN(
        \shifted_products[12][2] ) );
  OAI22D0 U192 ( .A1(n37), .A2(n65), .B1(n236), .B2(n67), .ZN(
        \shifted_products[15][2] ) );
  OAI22D0 U193 ( .A1(n3), .A2(n71), .B1(n235), .B2(n73), .ZN(
        \shifted_products[14][2] ) );
  OAI22D0 U194 ( .A1(n325), .A2(n89), .B1(n242), .B2(n91), .ZN(
        \shifted_products[11][2] ) );
  NR2D0 U195 ( .A1(n231), .A2(n94), .ZN(\shifted_products[10][2] ) );
  OAI22D0 U196 ( .A1(n325), .A2(n100), .B1(n237), .B2(n102), .ZN(
        \shifted_products[9][2] ) );
  NR2D0 U197 ( .A1(n230), .A2(n105), .ZN(\shifted_products[8][2] ) );
  OAI22D0 U198 ( .A1(n3), .A2(n117), .B1(n234), .B2(n119), .ZN(
        \shifted_products[6][2] ) );
  CKAN2D0 U199 ( .A1(n314), .A2(n313), .Z(n317) );
  CKND1 U200 ( .I(\products[5][4] ), .ZN(n121) );
  CKND1 U201 ( .I(\products[4][4] ), .ZN(n127) );
  CKND1 U202 ( .I(\products[4][3] ), .ZN(n128) );
  CKAN2D0 U203 ( .A1(n325), .A2(n313), .Z(n280) );
  CKND2D0 U204 ( .A1(n284), .A2(n308), .ZN(n258) );
  OAI22D0 U205 ( .A1(n314), .A2(n226), .B1(n7), .B2(n228), .ZN(
        \shifted_products[1][2] ) );
  CKND2D0 U206 ( .A1(n251), .A2(n248), .ZN(n275) );
  CKND2D0 U207 ( .A1(n253), .A2(n249), .ZN(n308) );
  CKND2D0 U208 ( .A1(n251), .A2(n250), .ZN(n298) );
  CKND2D0 U209 ( .A1(n250), .A2(n249), .ZN(n299) );
  CKND1 U210 ( .I(\products[6][2] ), .ZN(n117) );
  CKND1 U211 ( .I(\products[12][2] ), .ZN(n83) );
  AOI22D0 U212 ( .A1(\products[7][2] ), .A2(n310), .B1(\products[7][4] ), .B2(
        n309), .ZN(n311) );
  AOI22D0 U213 ( .A1(\products[13][4] ), .A2(n262), .B1(\products[13][2] ), 
        .B2(n293), .ZN(n263) );
  OAI21D0 U214 ( .A1(n321), .A2(n83), .B(n261), .ZN(\shifted_products[12][8] )
         );
  AOI22D0 U215 ( .A1(\products[13][4] ), .A2(n293), .B1(\products[13][2] ), 
        .B2(n244), .ZN(n264) );
  CKND1 U216 ( .I(\products[5][2] ), .ZN(n123) );
  CKND1 U217 ( .I(\products[4][2] ), .ZN(n129) );
  AN2D1 U218 ( .A1(\shifted_products[3][9] ), .A2(\products[2][5] ), .Z(n27)
         );
  FA1D1 U219 ( .A(\shifted_products[2][8] ), .B(\shifted_products[3][8] ), 
        .CI(\add_13_root_add_199_I16/carry[8] ), .CO(
        \add_13_root_add_199_I16/carry[9] ), .S(N84) );
  INVD1 U220 ( .I(n319), .ZN(n230) );
  INVD1 U221 ( .I(n302), .ZN(n234) );
  INVD1 U222 ( .I(n300), .ZN(n229) );
  CKBD1 U223 ( .I(n312), .Z(n37) );
  CKBD1 U224 ( .I(n312), .Z(n36) );
  CKBD1 U225 ( .I(n312), .Z(n38) );
  INVD1 U226 ( .I(n323), .ZN(n237) );
  ND2D1 U227 ( .A1(n325), .A2(n242), .ZN(n271) );
  NR2D1 U228 ( .A1(n322), .A2(n323), .ZN(n283) );
  OAI22D1 U229 ( .A1(n297), .A2(n122), .B1(n296), .B2(n120), .ZN(
        \shifted_products[5][7] ) );
  INVD1 U230 ( .I(\products[15][5] ), .ZN(n62) );
  INVD1 U231 ( .I(n262), .ZN(n233) );
  NR2D1 U232 ( .A1(n3), .A2(n73), .ZN(\shifted_products[14][0] ) );
  INVD1 U233 ( .I(n309), .ZN(n232) );
  AOI222D0 U234 ( .A1(n45), .A2(\products[10][5] ), .B1(n45), .B2(
        \products[11][5] ), .C1(\products[10][5] ), .C2(\products[11][5] ), 
        .ZN(n28) );
  FA1D0 U235 ( .A(\shifted_products[10][1] ), .B(\shifted_products[11][1] ), 
        .CI(\add_9_root_add_199_I16/carry[1] ), .CO(
        \add_9_root_add_199_I16/carry[2] ), .S(N175) );
  FA1D0 U236 ( .A(\shifted_products[12][5] ), .B(\shifted_products[13][5] ), 
        .CI(\add_8_root_add_199_I16/carry[5] ), .CO(
        \add_8_root_add_199_I16/carry[6] ), .S(N206) );
  OAI222D0 U237 ( .A1(n239), .A2(n78), .B1(n233), .B2(n76), .C1(n36), .C2(n74), 
        .ZN(\shifted_products[13][5] ) );
  FA1D0 U238 ( .A(\shifted_products[4][5] ), .B(\shifted_products[5][5] ), 
        .CI(\add_12_root_add_199_I16/carry[5] ), .CO(
        \add_12_root_add_199_I16/carry[6] ), .S(N104) );
  OAI222D0 U240 ( .A1(n294), .A2(n122), .B1(n297), .B2(n124), .C1(n36), .C2(
        n120), .ZN(\shifted_products[5][5] ) );
  FA1D0 U241 ( .A(\shifted_products[4][3] ), .B(\shifted_products[5][3] ), 
        .CI(\add_12_root_add_199_I16/carry[3] ), .CO(
        \add_12_root_add_199_I16/carry[4] ), .S(N102) );
  FA1D0 U242 ( .A(\shifted_products[2][3] ), .B(\shifted_products[3][3] ), 
        .CI(\add_13_root_add_199_I16/carry[3] ), .CO(
        \add_13_root_add_199_I16/carry[4] ), .S(N79) );
  FA1D0 U243 ( .A(\shifted_products[10][3] ), .B(\shifted_products[11][3] ), 
        .CI(\add_9_root_add_199_I16/carry[3] ), .CO(
        \add_9_root_add_199_I16/carry[4] ), .S(N177) );
  FA1D0 U244 ( .A(\shifted_products[2][5] ), .B(\shifted_products[3][5] ), 
        .CI(\add_13_root_add_199_I16/carry[5] ), .CO(
        \add_13_root_add_199_I16/carry[6] ), .S(N81) );
  OAI21D1 U245 ( .A1(n289), .A2(n221), .B(n285), .ZN(\shifted_products[2][5] )
         );
  FA1D0 U246 ( .A(\shifted_products[10][9] ), .B(\shifted_products[11][9] ), 
        .CI(\add_9_root_add_199_I16/carry[9] ), .CO(
        \add_9_root_add_199_I16/carry[10] ), .S(N183) );
  OAI22D1 U247 ( .A1(n238), .A2(n88), .B1(n260), .B2(n86), .ZN(
        \shifted_products[11][9] ) );
  OAI21D1 U248 ( .A1(n34), .A2(n95), .B(n256), .ZN(\shifted_products[10][9] )
         );
  FA1D0 U249 ( .A(\shifted_products[6][3] ), .B(\shifted_products[7][3] ), 
        .CI(\add_11_root_add_199_I16/carry[3] ), .CO(
        \add_11_root_add_199_I16/carry[4] ), .S(N126) );
  FA1D0 U250 ( .A(\shifted_products[12][3] ), .B(\shifted_products[13][3] ), 
        .CI(\add_8_root_add_199_I16/carry[3] ), .CO(
        \add_8_root_add_199_I16/carry[4] ), .S(N204) );
  FA1D0 U251 ( .A(\shifted_products[8][3] ), .B(\shifted_products[9][3] ), 
        .CI(\add_10_root_add_199_I16/carry[3] ), .CO(
        \add_10_root_add_199_I16/carry[4] ), .S(N151) );
  OAI21D1 U252 ( .A1(n282), .A2(n64), .B(n272), .ZN(\shifted_products[15][11] ) );
  OAI21D1 U253 ( .A1(n34), .A2(n72), .B(n266), .ZN(\shifted_products[14][11] )
         );
  OAI21D1 U254 ( .A1(n34), .A2(n70), .B(n266), .ZN(\shifted_products[14][13] )
         );
  OAI21D1 U255 ( .A1(n289), .A2(n216), .B(n288), .ZN(\shifted_products[3][7] )
         );
  OAI21D1 U256 ( .A1(n289), .A2(n219), .B(n285), .ZN(\shifted_products[2][7] )
         );
  FA1D0 U257 ( .A(\shifted_products[10][11] ), .B(\shifted_products[11][11] ), 
        .CI(\add_9_root_add_199_I16/carry[11] ), .CO(
        \add_9_root_add_199_I16/carry[12] ), .S(N185) );
  OAI21D1 U258 ( .A1(n34), .A2(n90), .B(n257), .ZN(\shifted_products[11][11] )
         );
  OAI21D1 U259 ( .A1(n34), .A2(n93), .B(n256), .ZN(\shifted_products[10][11] )
         );
  FA1D0 U260 ( .A(\shifted_products[2][1] ), .B(\shifted_products[3][1] ), 
        .CI(\add_13_root_add_199_I16/carry[1] ), .CO(
        \add_13_root_add_199_I16/carry[2] ), .S(N77) );
  NR2D1 U261 ( .A1(n229), .A2(n221), .ZN(\shifted_products[2][1] ) );
  FA1D0 U262 ( .A(\shifted_products[6][1] ), .B(\shifted_products[7][1] ), 
        .CI(\add_11_root_add_199_I16/carry[1] ), .CO(
        \add_11_root_add_199_I16/carry[2] ), .S(N124) );
  NR2D1 U263 ( .A1(n304), .A2(n118), .ZN(\shifted_products[6][1] ) );
  FA1D0 U264 ( .A(\shifted_products[8][1] ), .B(\shifted_products[9][1] ), 
        .CI(\add_10_root_add_199_I16/carry[1] ), .CO(
        \add_10_root_add_199_I16/carry[2] ), .S(N149) );
  NR2D1 U265 ( .A1(n325), .A2(n101), .ZN(\shifted_products[9][1] ) );
  NR2D1 U266 ( .A1(n230), .A2(n106), .ZN(\shifted_products[8][1] ) );
  NR2D1 U267 ( .A1(n304), .A2(n72), .ZN(\shifted_products[14][1] ) );
  FA1D0 U268 ( .A(\shifted_products[4][1] ), .B(\shifted_products[5][1] ), 
        .CI(\add_12_root_add_199_I16/carry[1] ), .CO(
        \add_12_root_add_199_I16/carry[2] ), .S(N100) );
  NR2D1 U269 ( .A1(n292), .A2(n130), .ZN(\shifted_products[4][1] ) );
  FA1D0 U270 ( .A(\shifted_products[12][1] ), .B(\shifted_products[13][1] ), 
        .CI(\add_8_root_add_199_I16/carry[1] ), .CO(
        \add_8_root_add_199_I16/carry[2] ), .S(N202) );
  OAI22D1 U271 ( .A1(n314), .A2(n223), .B1(n7), .B2(n225), .ZN(
        \shifted_products[1][5] ) );
  NR2D1 U272 ( .A1(n304), .A2(n119), .ZN(\shifted_products[6][0] ) );
  INVD1 U273 ( .I(\products[12][5] ), .ZN(n80) );
  XNR3D1 U274 ( .A1(\products[3][5] ), .A2(n57), .A3(n30), .ZN(n29) );
  INVD1 U275 ( .I(\products[1][5] ), .ZN(n223) );
  NR2D1 U276 ( .A1(n293), .A2(n322), .ZN(n297) );
  INVD1 U277 ( .I(n315), .ZN(n241) );
  OAI22D1 U278 ( .A1(n246), .A2(n76), .B1(n327), .B2(n74), .ZN(
        \shifted_products[13][11] ) );
  OAI22D1 U279 ( .A1(n246), .A2(n99), .B1(n327), .B2(n97), .ZN(
        \shifted_products[9][9] ) );
  INVD1 U280 ( .I(\products[9][5] ), .ZN(n97) );
  INVD1 U281 ( .I(\products[11][5] ), .ZN(n86) );
  OAI21D1 U282 ( .A1(n34), .A2(n88), .B(n257), .ZN(\shifted_products[11][13] )
         );
  OAI22D1 U283 ( .A1(n246), .A2(n75), .B1(n327), .B2(n74), .ZN(
        \shifted_products[13][12] ) );
  OAI22D1 U284 ( .A1(n246), .A2(n98), .B1(n327), .B2(n97), .ZN(
        \shifted_products[9][10] ) );
  ND2D1 U285 ( .A1(\products[14][5] ), .A2(n273), .ZN(n266) );
  ND2D1 U286 ( .A1(\products[10][5] ), .A2(n273), .ZN(n256) );
  ND2D1 U287 ( .A1(\products[15][5] ), .A2(n273), .ZN(n274) );
  ND2D1 U288 ( .A1(\products[11][5] ), .A2(n273), .ZN(n257) );
  INVD1 U289 ( .I(n267), .ZN(n235) );
  INVD1 U290 ( .I(n322), .ZN(n246) );
  OAI22D1 U291 ( .A1(n297), .A2(n121), .B1(n296), .B2(n120), .ZN(
        \shifted_products[5][8] ) );
  INVD1 U292 ( .I(n268), .ZN(n240) );
  INVD1 U293 ( .I(n258), .ZN(n238) );
  OA22D0 U294 ( .A1(n241), .A2(n109), .B1(n305), .B2(n108), .Z(n32) );
  INVD1 U295 ( .I(n276), .ZN(n236) );
  INVD1 U296 ( .I(n310), .ZN(n243) );
  INVD1 U297 ( .I(n278), .ZN(n245) );
  INVD1 U298 ( .I(n293), .ZN(n239) );
  NR2D1 U299 ( .A1(n325), .A2(n102), .ZN(\shifted_products[9][0] ) );
  NR2D1 U300 ( .A1(n325), .A2(n91), .ZN(\shifted_products[11][0] ) );
  INVD1 U301 ( .I(\products[3][5] ), .ZN(n132) );
  OA21D1 U302 ( .A1(n34), .A2(n87), .B(n257), .Z(n33) );
  INVD1 U303 ( .I(\products[15][3] ), .ZN(n64) );
  ND2D1 U304 ( .A1(n1), .A2(n313), .ZN(n286) );
  FA1D0 U305 ( .A(\shifted_products[6][7] ), .B(\shifted_products[7][7] ), 
        .CI(\add_11_root_add_199_I16/carry[7] ), .CO(
        \add_11_root_add_199_I16/carry[8] ), .S(N130) );
  OAI222D0 U306 ( .A1(n243), .A2(n110), .B1(n317), .B2(n108), .C1(n112), .C2(
        n318), .ZN(\shifted_products[7][7] ) );
  OAI222D0 U307 ( .A1(n229), .A2(n114), .B1(n241), .B2(n118), .C1(n318), .C2(
        n116), .ZN(\shifted_products[6][7] ) );
  FA1D0 U308 ( .A(\shifted_products[8][7] ), .B(\shifted_products[9][7] ), 
        .CI(\add_10_root_add_199_I16/carry[7] ), .CO(
        \add_10_root_add_199_I16/carry[8] ), .S(N155) );
  OAI222D0 U309 ( .A1(n246), .A2(n101), .B1(n230), .B2(n97), .C1(n99), .C2(
        n326), .ZN(\shifted_products[9][7] ) );
  OAI222D0 U310 ( .A1(n36), .A2(n63), .B1(n236), .B2(n65), .C1(n67), .C2(n2), 
        .ZN(\shifted_products[15][4] ) );
  OAI222D0 U311 ( .A1(n3), .A2(n69), .B1(n235), .B2(n71), .C1(n318), .C2(n73), 
        .ZN(\shifted_products[14][4] ) );
  OAI222D0 U312 ( .A1(n36), .A2(n62), .B1(n236), .B2(n64), .C1(n66), .C2(n2), 
        .ZN(\shifted_products[15][5] ) );
  OAI222D0 U313 ( .A1(n3), .A2(n68), .B1(n235), .B2(n70), .C1(n318), .C2(n72), 
        .ZN(\shifted_products[14][5] ) );
  OAI222D0 U314 ( .A1(n245), .A2(n66), .B1(n280), .B2(n62), .C1(n64), .C2(n2), 
        .ZN(\shifted_products[15][7] ) );
  OAI222D0 U315 ( .A1(n231), .A2(n68), .B1(n240), .B2(n72), .C1(n318), .C2(n70), .ZN(\shifted_products[14][7] ) );
  FA1D0 U316 ( .A(\shifted_products[8][4] ), .B(\shifted_products[9][4] ), 
        .CI(\add_10_root_add_199_I16/carry[4] ), .CO(
        \add_10_root_add_199_I16/carry[5] ), .S(N152) );
  OAI222D0 U317 ( .A1(n325), .A2(n98), .B1(n237), .B2(n100), .C1(n326), .C2(
        n102), .ZN(\shifted_products[9][4] ) );
  FA1D0 U318 ( .A(\shifted_products[10][4] ), .B(\shifted_products[11][4] ), 
        .CI(\add_9_root_add_199_I16/carry[4] ), .CO(
        \add_9_root_add_199_I16/carry[5] ), .S(N178) );
  OAI222D0 U319 ( .A1(n325), .A2(n87), .B1(n242), .B2(n89), .C1(n326), .C2(n91), .ZN(\shifted_products[11][4] ) );
  FA1D0 U320 ( .A(\shifted_products[12][7] ), .B(\shifted_products[13][7] ), 
        .CI(\add_8_root_add_199_I16/carry[7] ), .CO(
        \add_8_root_add_199_I16/carry[8] ), .S(N208) );
  OAI222D0 U321 ( .A1(n239), .A2(n76), .B1(n265), .B2(n74), .C1(n326), .C2(n78), .ZN(\shifted_products[13][7] ) );
  FA1D0 U322 ( .A(\shifted_products[8][5] ), .B(\shifted_products[9][5] ), 
        .CI(\add_10_root_add_199_I16/carry[5] ), .CO(
        \add_10_root_add_199_I16/carry[6] ), .S(N153) );
  OAI222D0 U323 ( .A1(n325), .A2(n97), .B1(n237), .B2(n99), .C1(n326), .C2(
        n101), .ZN(\shifted_products[9][5] ) );
  FA1D0 U324 ( .A(\shifted_products[10][5] ), .B(\shifted_products[11][5] ), 
        .CI(\add_9_root_add_199_I16/carry[5] ), .CO(
        \add_9_root_add_199_I16/carry[6] ), .S(N179) );
  OAI222D0 U325 ( .A1(n325), .A2(n86), .B1(n242), .B2(n88), .C1(n326), .C2(n90), .ZN(\shifted_products[11][5] ) );
  OAI21D1 U326 ( .A1(n255), .A2(n95), .B(n254), .ZN(\shifted_products[10][5] )
         );
  FA1D0 U327 ( .A(\shifted_products[6][9] ), .B(\shifted_products[7][9] ), 
        .CI(\add_11_root_add_199_I16/carry[9] ), .CO(
        \add_11_root_add_199_I16/carry[10] ), .S(N132) );
  OAI222D0 U328 ( .A1(n229), .A2(n108), .B1(n241), .B2(n112), .C1(n318), .C2(
        n110), .ZN(\shifted_products[7][9] ) );
  OAI22D1 U329 ( .A1(n241), .A2(n116), .B1(n305), .B2(n114), .ZN(
        \shifted_products[6][9] ) );
  FA1D0 U330 ( .A(\shifted_products[12][9] ), .B(\shifted_products[13][9] ), 
        .CI(\add_8_root_add_199_I16/carry[9] ), .CO(
        \add_8_root_add_199_I16/carry[10] ), .S(N210) );
  OAI222D0 U331 ( .A1(n246), .A2(n78), .B1(n230), .B2(n74), .C1(n326), .C2(n76), .ZN(\shifted_products[13][9] ) );
  FA1D0 U332 ( .A(\shifted_products[10][7] ), .B(\shifted_products[11][7] ), 
        .CI(\add_9_root_add_199_I16/carry[7] ), .CO(
        \add_9_root_add_199_I16/carry[8] ), .S(N181) );
  OAI21D1 U333 ( .A1(n255), .A2(n93), .B(n254), .ZN(\shifted_products[10][7] )
         );
  OAI222D0 U334 ( .A1(n231), .A2(n86), .B1(n238), .B2(n90), .C1(n326), .C2(n88), .ZN(\shifted_products[11][7] ) );
  FA1D0 U335 ( .A(\shifted_products[10][8] ), .B(\shifted_products[11][8] ), 
        .CI(\add_9_root_add_199_I16/carry[8] ), .CO(
        \add_9_root_add_199_I16/carry[9] ), .S(N182) );
  OAI222D0 U336 ( .A1(n231), .A2(n86), .B1(n238), .B2(n89), .C1(n326), .C2(n87), .ZN(\shifted_products[11][8] ) );
  OAI221D0 U337 ( .A1(n255), .A2(n92), .B1(n35), .B2(n96), .C(n254), .ZN(
        \shifted_products[10][8] ) );
  FA1D0 U338 ( .A(\shifted_products[10][10] ), .B(\shifted_products[11][10] ), 
        .CI(\add_9_root_add_199_I16/carry[10] ), .CO(
        \add_9_root_add_199_I16/carry[11] ), .S(N184) );
  OAI222D0 U339 ( .A1(n238), .A2(n87), .B1(n260), .B2(n86), .C1(n34), .C2(n91), 
        .ZN(\shifted_products[11][10] ) );
  OAI21D1 U340 ( .A1(n34), .A2(n94), .B(n256), .ZN(\shifted_products[10][10] )
         );
  FA1D0 U341 ( .A(\shifted_products[12][4] ), .B(\shifted_products[13][4] ), 
        .CI(\add_8_root_add_199_I16/carry[4] ), .CO(
        \add_8_root_add_199_I16/carry[5] ), .S(N205) );
  OAI222D0 U342 ( .A1(n239), .A2(n79), .B1(n233), .B2(n77), .C1(n36), .C2(n75), 
        .ZN(\shifted_products[13][4] ) );
  FA1D0 U343 ( .A(\shifted_products[6][5] ), .B(\shifted_products[7][5] ), 
        .CI(\add_11_root_add_199_I16/carry[5] ), .CO(
        \add_11_root_add_199_I16/carry[6] ), .S(N128) );
  OAI222D0 U344 ( .A1(n3), .A2(n114), .B1(n234), .B2(n116), .C1(n318), .C2(
        n118), .ZN(\shifted_products[6][5] ) );
  OAI222D0 U345 ( .A1(n232), .A2(n110), .B1(n243), .B2(n112), .C1(n108), .C2(
        n37), .ZN(\shifted_products[7][5] ) );
  OAI222D0 U346 ( .A1(n289), .A2(n217), .B1(n287), .B2(n133), .C1(n314), .C2(
        n132), .ZN(\shifted_products[3][6] ) );
  FA1D0 U347 ( .A(\shifted_products[4][4] ), .B(\shifted_products[5][4] ), 
        .CI(\add_12_root_add_199_I16/carry[4] ), .CO(
        \add_12_root_add_199_I16/carry[5] ), .S(N103) );
  OAI222D0 U348 ( .A1(n294), .A2(n123), .B1(n297), .B2(n125), .C1(n36), .C2(
        n121), .ZN(\shifted_products[5][4] ) );
  FA1D0 U349 ( .A(\shifted_products[6][4] ), .B(\shifted_products[7][4] ), 
        .CI(\add_11_root_add_199_I16/carry[4] ), .CO(
        \add_11_root_add_199_I16/carry[5] ), .S(N127) );
  OAI222D0 U350 ( .A1(n3), .A2(n115), .B1(n234), .B2(n117), .C1(n318), .C2(
        n119), .ZN(\shifted_products[6][4] ) );
  OAI222D0 U351 ( .A1(n232), .A2(n111), .B1(n243), .B2(n113), .C1(n109), .C2(
        n37), .ZN(\shifted_products[7][4] ) );
  FA1D0 U352 ( .A(\shifted_products[8][6] ), .B(\shifted_products[9][6] ), 
        .CI(\add_10_root_add_199_I16/carry[6] ), .CO(
        \add_10_root_add_199_I16/carry[7] ), .S(N154) );
  OAI221D0 U353 ( .A1(n325), .A2(n97), .B1(n100), .B2(n326), .C(n324), .ZN(
        \shifted_products[9][6] ) );
  OAI221D0 U354 ( .A1(n36), .A2(n62), .B1(n65), .B2(n2), .C(n277), .ZN(
        \shifted_products[15][6] ) );
  OAI221D0 U355 ( .A1(n3), .A2(n68), .B1(n318), .B2(n71), .C(n269), .ZN(
        \shifted_products[14][6] ) );
  FA1D0 U356 ( .A(\shifted_products[10][6] ), .B(\shifted_products[11][6] ), 
        .CI(\add_9_root_add_199_I16/carry[6] ), .CO(
        \add_9_root_add_199_I16/carry[7] ), .S(N180) );
  OAI221D0 U357 ( .A1(n325), .A2(n86), .B1(n326), .B2(n89), .C(n259), .ZN(
        \shifted_products[11][6] ) );
  OAI21D1 U358 ( .A1(n255), .A2(n94), .B(n254), .ZN(\shifted_products[10][6] )
         );
  OAI221D0 U359 ( .A1(n282), .A2(n66), .B1(n245), .B2(n64), .C(n281), .ZN(
        \shifted_products[15][9] ) );
  OAI221D0 U360 ( .A1(n282), .A2(n65), .B1(n245), .B2(n63), .C(n281), .ZN(
        \shifted_products[15][10] ) );
  OAI222D0 U361 ( .A1(n240), .A2(n69), .B1(n270), .B2(n68), .C1(n34), .C2(n73), 
        .ZN(\shifted_products[14][10] ) );
  FA1D0 U362 ( .A(\shifted_products[6][8] ), .B(\shifted_products[7][8] ), 
        .CI(\add_11_root_add_199_I16/carry[8] ), .CO(
        \add_11_root_add_199_I16/carry[9] ), .S(N131) );
  OAI221D0 U363 ( .A1(n317), .A2(n108), .B1(n243), .B2(n109), .C(n316), .ZN(
        \shifted_products[7][8] ) );
  OAI222D0 U364 ( .A1(n229), .A2(n114), .B1(n241), .B2(n117), .C1(n318), .C2(
        n115), .ZN(\shifted_products[6][8] ) );
  OAI221D0 U365 ( .A1(n282), .A2(n63), .B1(n67), .B2(n35), .C(n272), .ZN(
        \shifted_products[15][12] ) );
  OAI21D1 U366 ( .A1(n34), .A2(n71), .B(n266), .ZN(\shifted_products[14][12] )
         );
  FA1D0 U367 ( .A(\shifted_products[4][2] ), .B(\shifted_products[5][2] ), 
        .CI(\add_12_root_add_199_I16/carry[2] ), .CO(
        \add_12_root_add_199_I16/carry[3] ), .S(N101) );
  FA1D0 U368 ( .A(\shifted_products[2][2] ), .B(\shifted_products[3][2] ), 
        .CI(\add_13_root_add_199_I16/carry[2] ), .CO(
        \add_13_root_add_199_I16/carry[3] ), .S(N78) );
  FA1D0 U369 ( .A(\shifted_products[10][2] ), .B(\shifted_products[11][2] ), 
        .CI(\add_9_root_add_199_I16/carry[2] ), .CO(
        \add_9_root_add_199_I16/carry[3] ), .S(N176) );
  FA1D0 U370 ( .A(\shifted_products[2][4] ), .B(\shifted_products[3][4] ), 
        .CI(\add_13_root_add_199_I16/carry[4] ), .CO(
        \add_13_root_add_199_I16/carry[5] ), .S(N80) );
  FA1D0 U371 ( .A(\shifted_products[6][2] ), .B(\shifted_products[7][2] ), 
        .CI(\add_11_root_add_199_I16/carry[2] ), .CO(
        \add_11_root_add_199_I16/carry[3] ), .S(N125) );
  OAI22D1 U372 ( .A1(n111), .A2(n36), .B1(n232), .B2(n113), .ZN(
        \shifted_products[7][2] ) );
  FA1D0 U373 ( .A(\shifted_products[12][2] ), .B(\shifted_products[13][2] ), 
        .CI(\add_8_root_add_199_I16/carry[2] ), .CO(
        \add_8_root_add_199_I16/carry[3] ), .S(N203) );
  FA1D0 U374 ( .A(\shifted_products[8][2] ), .B(\shifted_products[9][2] ), 
        .CI(\add_10_root_add_199_I16/carry[2] ), .CO(
        \add_10_root_add_199_I16/carry[3] ), .S(N150) );
  FA1D0 U375 ( .A(\products[0][3] ), .B(\shifted_products[1][3] ), .CI(
        \add_14_root_add_199_I16/carry[3] ), .CO(
        \add_14_root_add_199_I16/carry[4] ), .S(N57) );
  FA1D0 U376 ( .A(\products[0][4] ), .B(\shifted_products[1][4] ), .CI(
        \add_14_root_add_199_I16/carry[4] ), .CO(
        \add_14_root_add_199_I16/carry[5] ), .S(N58) );
  FA1D0 U377 ( .A(\products[0][1] ), .B(\shifted_products[1][1] ), .CI(
        \add_14_root_add_199_I16/carry[1] ), .CO(
        \add_14_root_add_199_I16/carry[2] ), .S(N55) );
  INVD1 U378 ( .I(\products[12][4] ), .ZN(n81) );
  OAI222D0 U379 ( .A1(n229), .A2(n108), .B1(n241), .B2(n111), .C1(n318), .C2(
        n109), .ZN(\shifted_products[7][10] ) );
  OAI22D1 U380 ( .A1(n241), .A2(n115), .B1(n305), .B2(n114), .ZN(
        \shifted_products[6][10] ) );
  OAI21D1 U381 ( .A1(n65), .A2(n35), .B(n274), .ZN(\shifted_products[15][14] )
         );
  OAI21D1 U382 ( .A1(n35), .A2(n69), .B(n266), .ZN(\shifted_products[14][14] )
         );
  FA1D0 U383 ( .A(\shifted_products[10][12] ), .B(\shifted_products[11][12] ), 
        .CI(\add_9_root_add_199_I16/carry[12] ), .CO(
        \add_9_root_add_199_I16/carry[13] ), .S(N186) );
  OAI21D1 U384 ( .A1(n34), .A2(n89), .B(n257), .ZN(\shifted_products[11][12] )
         );
  OAI21D1 U385 ( .A1(n34), .A2(n92), .B(n256), .ZN(\shifted_products[10][12] )
         );
  FA1D0 U386 ( .A(\shifted_products[12][10] ), .B(\shifted_products[13][10] ), 
        .CI(\add_8_root_add_199_I16/carry[10] ), .CO(
        \add_8_root_add_199_I16/carry[11] ), .S(N211) );
  OAI21D1 U387 ( .A1(n321), .A2(n81), .B(n261), .ZN(\shifted_products[12][10] ) );
  OAI222D0 U388 ( .A1(n246), .A2(n77), .B1(n230), .B2(n74), .C1(n326), .C2(n75), .ZN(\shifted_products[13][10] ) );
  FA1D0 U389 ( .A(\shifted_products[8][8] ), .B(\shifted_products[9][8] ), 
        .CI(\add_10_root_add_199_I16/carry[8] ), .CO(
        \add_10_root_add_199_I16/carry[9] ), .S(N156) );
  OAI21D1 U390 ( .A1(n321), .A2(n103), .B(n320), .ZN(\shifted_products[8][8] )
         );
  OAI222D0 U391 ( .A1(n246), .A2(n100), .B1(n230), .B2(n97), .C1(n326), .C2(
        n98), .ZN(\shifted_products[9][8] ) );
  FA1D0 U392 ( .A(\shifted_products[4][6] ), .B(\shifted_products[5][6] ), 
        .CI(\add_12_root_add_199_I16/carry[6] ), .CO(
        \add_12_root_add_199_I16/carry[7] ), .S(N105) );
  OAI22D1 U393 ( .A1(n292), .A2(n126), .B1(n291), .B2(n127), .ZN(
        \shifted_products[4][6] ) );
  OAI222D0 U394 ( .A1(n294), .A2(n121), .B1(n297), .B2(n123), .C1(n36), .C2(
        n120), .ZN(\shifted_products[5][6] ) );
  NR2D1 U395 ( .A1(n37), .A2(n125), .ZN(\shifted_products[5][0] ) );
  INVD1 U396 ( .I(\products[1][4] ), .ZN(n224) );
  INVD1 U397 ( .I(\products[1][3] ), .ZN(n225) );
  CKBD1 U398 ( .I(n299), .Z(n35) );
  INR2D1 U399 ( .A1(n318), .B1(n300), .ZN(n305) );
  INR2D1 U400 ( .A1(n318), .B1(n271), .ZN(n270) );
  INVD1 U401 ( .I(\products[11][3] ), .ZN(n88) );
  INVD1 U402 ( .I(\products[9][3] ), .ZN(n99) );
  INVD1 U403 ( .I(\products[11][4] ), .ZN(n87) );
  ND2D1 U404 ( .A1(n275), .A2(n313), .ZN(n276) );
  INVD1 U405 ( .I(\products[9][4] ), .ZN(n98) );
  INVD1 U406 ( .I(\products[3][3] ), .ZN(n134) );
  INVD1 U407 ( .I(\products[3][4] ), .ZN(n133) );
  INVD1 U408 ( .I(\products[10][4] ), .ZN(n92) );
  INVD1 U409 ( .I(\products[10][3] ), .ZN(n93) );
  INVD1 U410 ( .I(\products[2][4] ), .ZN(n218) );
  INVD1 U411 ( .I(\products[8][4] ), .ZN(n103) );
  INVD1 U412 ( .I(\products[2][3] ), .ZN(n219) );
  INVD1 U413 ( .I(\products[8][3] ), .ZN(n104) );
  CKBD1 U414 ( .I(n299), .Z(n34) );
  INVD1 U415 ( .I(\products[15][1] ), .ZN(n66) );
  INVD1 U416 ( .I(\products[7][1] ), .ZN(n112) );
  INVD1 U417 ( .I(\products[14][1] ), .ZN(n72) );
  INVD1 U418 ( .I(\products[13][1] ), .ZN(n78) );
  INVD1 U419 ( .I(\products[6][1] ), .ZN(n118) );
  INVD1 U420 ( .I(\products[5][1] ), .ZN(n124) );
  INVD1 U421 ( .I(\products[12][1] ), .ZN(n84) );
  INVD1 U422 ( .I(\products[3][1] ), .ZN(n216) );
  INVD1 U423 ( .I(\products[4][1] ), .ZN(n130) );
  INVD1 U424 ( .I(\products[1][1] ), .ZN(n227) );
  INVD1 U425 ( .I(\products[2][1] ), .ZN(n221) );
  INVD1 U426 ( .I(\products[15][0] ), .ZN(n67) );
  INVD1 U427 ( .I(\products[14][0] ), .ZN(n73) );
  INVD1 U428 ( .I(\products[11][0] ), .ZN(n91) );
  INVD1 U429 ( .I(\products[7][0] ), .ZN(n113) );
  INVD1 U430 ( .I(\products[6][0] ), .ZN(n119) );
  INVD1 U431 ( .I(\products[9][0] ), .ZN(n102) );
  INVD1 U432 ( .I(\products[11][1] ), .ZN(n90) );
  INVD1 U433 ( .I(\products[9][1] ), .ZN(n101) );
  INVD1 U434 ( .I(\products[10][1] ), .ZN(n95) );
  INVD1 U435 ( .I(\products[8][1] ), .ZN(n106) );
  INVD1 U436 ( .I(\products[13][2] ), .ZN(n77) );
  FA1D0 U437 ( .A(\shifted_products[6][6] ), .B(\shifted_products[7][6] ), 
        .CI(\add_11_root_add_199_I16/carry[6] ), .CO(
        \add_11_root_add_199_I16/carry[7] ), .S(N129) );
  OAI221D0 U438 ( .A1(n108), .A2(n36), .B1(n318), .B2(n113), .C(n311), .ZN(
        \shifted_products[7][6] ) );
  OAI221D0 U439 ( .A1(n3), .A2(n114), .B1(n318), .B2(n117), .C(n303), .ZN(
        \shifted_products[6][6] ) );
  FA1D0 U440 ( .A(\shifted_products[12][6] ), .B(\shifted_products[13][6] ), 
        .CI(\add_8_root_add_199_I16/carry[6] ), .CO(
        \add_8_root_add_199_I16/carry[7] ), .S(N207) );
  OAI222D0 U441 ( .A1(n292), .A2(n80), .B1(n290), .B2(n81), .C1(n321), .C2(n85), .ZN(\shifted_products[12][6] ) );
  OAI221D0 U442 ( .A1(n36), .A2(n74), .B1(n326), .B2(n79), .C(n263), .ZN(
        \shifted_products[13][6] ) );
  OAI221D0 U443 ( .A1(n280), .A2(n62), .B1(n282), .B2(n67), .C(n279), .ZN(
        \shifted_products[15][8] ) );
  OAI222D0 U444 ( .A1(n231), .A2(n68), .B1(n240), .B2(n71), .C1(n318), .C2(n69), .ZN(\shifted_products[14][8] ) );
  FA1D0 U445 ( .A(\shifted_products[12][8] ), .B(\shifted_products[13][8] ), 
        .CI(\add_8_root_add_199_I16/carry[8] ), .CO(
        \add_8_root_add_199_I16/carry[9] ), .S(N209) );
  OAI221D0 U446 ( .A1(n265), .A2(n74), .B1(n246), .B2(n79), .C(n264), .ZN(
        \shifted_products[13][8] ) );
  FA1D0 U447 ( .A(\products[0][2] ), .B(\shifted_products[1][2] ), .CI(
        \add_14_root_add_199_I16/carry[2] ), .CO(
        \add_14_root_add_199_I16/carry[3] ), .S(N56) );
  INVD1 U448 ( .I(\products[1][2] ), .ZN(n226) );
  INVD1 U449 ( .I(\products[15][2] ), .ZN(n65) );
  INVD1 U450 ( .I(\products[14][2] ), .ZN(n71) );
  INVD1 U451 ( .I(\products[11][2] ), .ZN(n89) );
  INVD1 U452 ( .I(\products[9][2] ), .ZN(n100) );
  INVD1 U453 ( .I(\products[7][2] ), .ZN(n111) );
  INVD1 U454 ( .I(\products[3][2] ), .ZN(n135) );
  INVD1 U455 ( .I(\products[10][2] ), .ZN(n94) );
  INVD1 U456 ( .I(\products[2][2] ), .ZN(n220) );
  INVD1 U457 ( .I(\products[8][2] ), .ZN(n105) );
  INVD1 U458 ( .I(\products[4][0] ), .ZN(n131) );
  INVD1 U459 ( .I(\products[5][0] ), .ZN(n125) );
  INVD1 U460 ( .I(\products[12][0] ), .ZN(n85) );
  INVD1 U461 ( .I(\products[13][0] ), .ZN(n79) );
  INVD1 U462 ( .I(\products[10][0] ), .ZN(n96) );
  INVD1 U463 ( .I(\products[3][0] ), .ZN(n217) );
  INVD1 U464 ( .I(\products[1][0] ), .ZN(n228) );
  INVD1 U465 ( .I(\products[2][0] ), .ZN(n222) );
  INVD1 U466 ( .I(\products[8][0] ), .ZN(n107) );
  INR3D0 U467 ( .A1(weight_bitwidth[0]), .B1(weight_bitwidth[1]), .B2(
        weight_bitwidth[2]), .ZN(n248) );
  INR3D0 U468 ( .A1(input_bitwidth[1]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[2]), .ZN(n251) );
  TIEL U469 ( .ZN(n247) );
  AN2D0 U470 ( .A1(\shifted_products[2][0] ), .A2(\shifted_products[3][0] ), 
        .Z(\add_13_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U471 ( .A1(\shifted_products[3][0] ), .A2(\shifted_products[2][0] ), 
        .Z(N76) );
  AN2D0 U472 ( .A1(\products[0][0] ), .A2(\shifted_products[1][0] ), .Z(
        \add_14_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U473 ( .A1(\shifted_products[1][0] ), .A2(\products[0][0] ), .Z(N54) );
  AN2D0 U474 ( .A1(\shifted_products[12][0] ), .A2(\shifted_products[13][0] ), 
        .Z(\add_8_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U475 ( .A1(\shifted_products[13][0] ), .A2(
        \shifted_products[12][0] ), .Z(N201) );
  AN2D0 U476 ( .A1(\shifted_products[6][0] ), .A2(\shifted_products[7][0] ), 
        .Z(\add_11_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U477 ( .A1(\shifted_products[7][0] ), .A2(\shifted_products[6][0] ), 
        .Z(N123) );
  AN2D0 U478 ( .A1(\shifted_products[4][0] ), .A2(\shifted_products[5][0] ), 
        .Z(\add_12_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U479 ( .A1(\shifted_products[5][0] ), .A2(\shifted_products[4][0] ), 
        .Z(N99) );
  AN2D0 U480 ( .A1(\shifted_products[8][0] ), .A2(\shifted_products[9][0] ), 
        .Z(\add_10_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U481 ( .A1(\shifted_products[9][0] ), .A2(\shifted_products[8][0] ), 
        .Z(N148) );
  AN2D0 U482 ( .A1(\shifted_products[10][0] ), .A2(\shifted_products[11][0] ), 
        .Z(\add_9_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U483 ( .A1(\shifted_products[11][0] ), .A2(
        \shifted_products[10][0] ), .Z(N174) );
  XOR3D0 U484 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[13][11] ), .A3(\products[12][5] ), .Z(N212) );
  XOR3D0 U485 ( .A1(\shifted_products[13][12] ), .A2(n39), .A3(n80), .Z(N213)
         );
  XOR3D0 U486 ( .A1(\products[13][5] ), .A2(\products[12][5] ), .A3(n40), .Z(
        N214) );
  CKND0 U487 ( .I(\shifted_products[13][12] ), .ZN(n42) );
  XNR3D0 U488 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \shifted_products[11][13] ), .A3(n43), .ZN(N187) );
  XNR3D0 U489 ( .A1(n33), .A2(n44), .A3(n43), .ZN(N188) );
  XNR3D0 U490 ( .A1(\products[11][5] ), .A2(n43), .A3(n45), .ZN(N189) );
  OAI222D0 U491 ( .A1(n44), .A2(n43), .B1(n44), .B2(n33), .C1(n43), .C2(n33), 
        .ZN(n45) );
  CKND0 U492 ( .I(\products[10][5] ), .ZN(n43) );
  XOR3D0 U493 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[9][9] ), .A3(\products[8][5] ), .Z(N157) );
  XOR3D0 U494 ( .A1(\shifted_products[9][10] ), .A2(n46), .A3(n47), .Z(N158)
         );
  XOR3D0 U495 ( .A1(\products[9][5] ), .A2(\products[8][5] ), .A3(n48), .Z(
        N159) );
  AOI222D0 U496 ( .A1(n48), .A2(\products[8][5] ), .B1(n48), .B2(
        \products[9][5] ), .C1(\products[8][5] ), .C2(\products[9][5] ), .ZN(
        n49) );
  OAI222D0 U497 ( .A1(n46), .A2(n47), .B1(n46), .B2(n50), .C1(n47), .C2(n50), 
        .ZN(n48) );
  CKND0 U498 ( .I(\shifted_products[9][10] ), .ZN(n50) );
  CKND0 U499 ( .I(\products[8][5] ), .ZN(n47) );
  XNR3D0 U500 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[7][11] ), .A3(n114), .ZN(N134) );
  XNR3D0 U501 ( .A1(n32), .A2(n51), .A3(n114), .ZN(N135) );
  XNR3D0 U502 ( .A1(\products[7][5] ), .A2(n114), .A3(n52), .ZN(N136) );
  XOR3D0 U503 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(
        \shifted_products[5][7] ), .A3(\products[4][5] ), .Z(N106) );
  XOR3D0 U504 ( .A1(\shifted_products[5][8] ), .A2(n53), .A3(n126), .Z(N107)
         );
  XOR3D0 U505 ( .A1(\products[5][5] ), .A2(\products[4][5] ), .A3(n54), .Z(
        N108) );
  CKND0 U506 ( .I(\shifted_products[5][8] ), .ZN(n56) );
  XNR3D0 U507 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .A3(n57), .ZN(N85) );
  XNR3D0 U508 ( .A1(\products[3][5] ), .A2(n57), .A3(n59), .ZN(N87) );
  XNR3D0 U509 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[1][6] ), .A3(n60), .ZN(N60) );
  XNR3D0 U510 ( .A1(n223), .A2(n61), .A3(n60), .ZN(N61) );
  CKND0 U511 ( .I(\shifted_products[0][9] ), .ZN(n60) );
endmodule


module fusion_unit_4_DW01_add_0_DW01_add_8 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module fusion_unit_4 ( clk, nRST, input_bitwidth, weight_bitwidth, input_sign, 
        weight_sign, input_forward, weight, psum_in, psum, input_to_right );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  input [3:0] input_sign;
  input [3:0] weight_sign;
  input [31:0] input_forward;
  input [31:0] weight;
  input [31:0] psum_in;
  output [31:0] psum;
  output [31:0] input_to_right;
  input clk, nRST;
  wire   \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] , n2;
  wire   [31:0] shift_add_out;
  assign input_to_right[31] = input_forward[31];
  assign input_to_right[30] = input_forward[30];
  assign input_to_right[29] = input_forward[29];
  assign input_to_right[28] = input_forward[28];
  assign input_to_right[27] = input_forward[27];
  assign input_to_right[26] = input_forward[26];
  assign input_to_right[25] = input_forward[25];
  assign input_to_right[24] = input_forward[24];
  assign input_to_right[23] = input_forward[23];
  assign input_to_right[22] = input_forward[22];
  assign input_to_right[21] = input_forward[21];
  assign input_to_right[20] = input_forward[20];
  assign input_to_right[19] = input_forward[19];
  assign input_to_right[18] = input_forward[18];
  assign input_to_right[17] = input_forward[17];
  assign input_to_right[16] = input_forward[16];
  assign input_to_right[15] = input_forward[15];
  assign input_to_right[14] = input_forward[14];
  assign input_to_right[13] = input_forward[13];
  assign input_to_right[12] = input_forward[12];
  assign input_to_right[11] = input_forward[11];
  assign input_to_right[10] = input_forward[10];
  assign input_to_right[9] = input_forward[9];
  assign input_to_right[8] = input_forward[8];
  assign input_to_right[7] = input_forward[7];
  assign input_to_right[6] = input_forward[6];
  assign input_to_right[5] = input_forward[5];
  assign input_to_right[4] = input_forward[4];
  assign input_to_right[3] = input_forward[3];
  assign input_to_right[2] = input_forward[2];
  assign input_to_right[1] = input_forward[1];
  assign input_to_right[0] = input_forward[0];

  bit_brick_79 \genblk1[0].BB  ( .x(input_forward[1:0]), .y(weight[1:0]), .sx(
        input_sign[0]), .sy(weight_sign[0]), .product({\products[0][5] , 
        \products[0][4] , \products[0][3] , \products[0][2] , \products[0][1] , 
        \products[0][0] }) );
  bit_brick_78 \genblk1[1].BB  ( .x(input_forward[3:2]), .y(weight[3:2]), .sx(
        input_sign[0]), .sy(weight_sign[1]), .product({\products[1][5] , 
        \products[1][4] , \products[1][3] , \products[1][2] , \products[1][1] , 
        \products[1][0] }) );
  bit_brick_77 \genblk1[2].BB  ( .x(input_forward[5:4]), .y(weight[5:4]), .sx(
        input_sign[0]), .sy(weight_sign[2]), .product({\products[2][5] , 
        \products[2][4] , \products[2][3] , \products[2][2] , \products[2][1] , 
        \products[2][0] }) );
  bit_brick_76 \genblk1[3].BB  ( .x(input_forward[7:6]), .y(weight[7:6]), .sx(
        input_sign[0]), .sy(weight_sign[3]), .product({\products[3][5] , 
        \products[3][4] , \products[3][3] , \products[3][2] , \products[3][1] , 
        \products[3][0] }) );
  bit_brick_75 \genblk1[4].BB  ( .x(input_forward[9:8]), .y(weight[9:8]), .sx(
        input_sign[1]), .sy(weight_sign[0]), .product({\products[4][5] , 
        \products[4][4] , \products[4][3] , \products[4][2] , \products[4][1] , 
        \products[4][0] }) );
  bit_brick_74 \genblk1[5].BB  ( .x(input_forward[11:10]), .y(weight[11:10]), 
        .sx(input_sign[1]), .sy(weight_sign[1]), .product({\products[5][5] , 
        \products[5][4] , \products[5][3] , \products[5][2] , \products[5][1] , 
        \products[5][0] }) );
  bit_brick_73 \genblk1[6].BB  ( .x(input_forward[13:12]), .y(weight[13:12]), 
        .sx(input_sign[1]), .sy(weight_sign[2]), .product({\products[6][5] , 
        \products[6][4] , \products[6][3] , \products[6][2] , \products[6][1] , 
        \products[6][0] }) );
  bit_brick_72 \genblk1[7].BB  ( .x(input_forward[15:14]), .y(weight[15:14]), 
        .sx(input_sign[1]), .sy(weight_sign[3]), .product({\products[7][5] , 
        \products[7][4] , \products[7][3] , \products[7][2] , \products[7][1] , 
        \products[7][0] }) );
  bit_brick_71 \genblk1[8].BB  ( .x(input_forward[17:16]), .y(weight[17:16]), 
        .sx(input_sign[2]), .sy(weight_sign[0]), .product({\products[8][5] , 
        \products[8][4] , \products[8][3] , \products[8][2] , \products[8][1] , 
        \products[8][0] }) );
  bit_brick_70 \genblk1[9].BB  ( .x(input_forward[19:18]), .y(weight[19:18]), 
        .sx(input_sign[2]), .sy(weight_sign[1]), .product({\products[9][5] , 
        \products[9][4] , \products[9][3] , \products[9][2] , \products[9][1] , 
        \products[9][0] }) );
  bit_brick_69 \genblk1[10].BB  ( .x(input_forward[21:20]), .y(weight[21:20]), 
        .sx(input_sign[2]), .sy(weight_sign[2]), .product({\products[10][5] , 
        \products[10][4] , \products[10][3] , \products[10][2] , 
        \products[10][1] , \products[10][0] }) );
  bit_brick_68 \genblk1[11].BB  ( .x(input_forward[23:22]), .y(weight[23:22]), 
        .sx(input_sign[2]), .sy(weight_sign[3]), .product({\products[11][5] , 
        \products[11][4] , \products[11][3] , \products[11][2] , 
        \products[11][1] , \products[11][0] }) );
  bit_brick_67 \genblk1[12].BB  ( .x(input_forward[25:24]), .y(weight[25:24]), 
        .sx(input_sign[3]), .sy(weight_sign[0]), .product({\products[12][5] , 
        \products[12][4] , \products[12][3] , \products[12][2] , 
        \products[12][1] , \products[12][0] }) );
  bit_brick_66 \genblk1[13].BB  ( .x(input_forward[27:26]), .y(weight[27:26]), 
        .sx(input_sign[3]), .sy(weight_sign[1]), .product({\products[13][5] , 
        \products[13][4] , \products[13][3] , \products[13][2] , 
        \products[13][1] , \products[13][0] }) );
  bit_brick_65 \genblk1[14].BB  ( .x(input_forward[29:28]), .y(weight[29:28]), 
        .sx(input_sign[3]), .sy(weight_sign[2]), .product({\products[14][5] , 
        \products[14][4] , \products[14][3] , \products[14][2] , 
        \products[14][1] , \products[14][0] }) );
  bit_brick_64 \genblk1[15].BB  ( .x(input_forward[31:30]), .y(weight[31:30]), 
        .sx(input_sign[3]), .sy(weight_sign[3]), .product({\products[15][5] , 
        \products[15][4] , \products[15][3] , \products[15][2] , 
        \products[15][1] , \products[15][0] }) );
  shift_add_4 shift_add ( .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .products({\products[15][5] , \products[15][4] , 
        \products[15][3] , \products[15][2] , \products[15][1] , 
        \products[15][0] , \products[14][5] , \products[14][4] , 
        \products[14][3] , \products[14][2] , \products[14][1] , 
        \products[14][0] , \products[13][5] , \products[13][4] , 
        \products[13][3] , \products[13][2] , \products[13][1] , 
        \products[13][0] , \products[12][5] , \products[12][4] , 
        \products[12][3] , \products[12][2] , \products[12][1] , 
        \products[12][0] , \products[11][5] , \products[11][4] , 
        \products[11][3] , \products[11][2] , \products[11][1] , 
        \products[11][0] , \products[10][5] , \products[10][4] , 
        \products[10][3] , \products[10][2] , \products[10][1] , 
        \products[10][0] , \products[9][5] , \products[9][4] , 
        \products[9][3] , \products[9][2] , \products[9][1] , \products[9][0] , 
        \products[8][5] , \products[8][4] , \products[8][3] , \products[8][2] , 
        \products[8][1] , \products[8][0] , \products[7][5] , \products[7][4] , 
        \products[7][3] , \products[7][2] , \products[7][1] , \products[7][0] , 
        \products[6][5] , \products[6][4] , \products[6][3] , \products[6][2] , 
        \products[6][1] , \products[6][0] , \products[5][5] , \products[5][4] , 
        \products[5][3] , \products[5][2] , \products[5][1] , \products[5][0] , 
        \products[4][5] , \products[4][4] , \products[4][3] , \products[4][2] , 
        \products[4][1] , \products[4][0] , \products[3][5] , \products[3][4] , 
        \products[3][3] , \products[3][2] , \products[3][1] , \products[3][0] , 
        \products[2][5] , \products[2][4] , \products[2][3] , \products[2][2] , 
        \products[2][1] , \products[2][0] , \products[1][5] , \products[1][4] , 
        \products[1][3] , \products[1][2] , \products[1][1] , \products[1][0] , 
        \products[0][5] , \products[0][4] , \products[0][3] , \products[0][2] , 
        \products[0][1] , \products[0][0] }), .shift_add_out(shift_add_out) );
  fusion_unit_4_DW01_add_0_DW01_add_8 add_53 ( .A(shift_add_out), .B(psum_in), 
        .CI(n2), .SUM(psum) );
  TIEL U1 ( .ZN(n2) );
endmodule


module WBUF_ARRAY_SIZE4_DATA_W32_3 ( clk, nRST, WBUF_wr_en, WBUF_data_in, 
        WBUF_data_out );
  input [31:0] WBUF_data_in;
  output [31:0] WBUF_data_out;
  input clk, nRST, WBUF_wr_en;
  wire   n1, n2, n3, n4, n5, n6;

  EDFCNQD1 \WBUF_data_out_reg[31]  ( .D(WBUF_data_in[31]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[31]) );
  EDFCNQD1 \WBUF_data_out_reg[30]  ( .D(WBUF_data_in[30]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[30]) );
  EDFCNQD1 \WBUF_data_out_reg[29]  ( .D(WBUF_data_in[29]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[29]) );
  EDFCNQD1 \WBUF_data_out_reg[28]  ( .D(WBUF_data_in[28]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[28]) );
  EDFCNQD1 \WBUF_data_out_reg[27]  ( .D(WBUF_data_in[27]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[27]) );
  EDFCNQD1 \WBUF_data_out_reg[26]  ( .D(WBUF_data_in[26]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[26]) );
  EDFCNQD1 \WBUF_data_out_reg[25]  ( .D(WBUF_data_in[25]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[25]) );
  EDFCNQD1 \WBUF_data_out_reg[24]  ( .D(WBUF_data_in[24]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[24]) );
  EDFCNQD1 \WBUF_data_out_reg[23]  ( .D(WBUF_data_in[23]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[23]) );
  EDFCNQD1 \WBUF_data_out_reg[22]  ( .D(WBUF_data_in[22]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[22]) );
  EDFCNQD1 \WBUF_data_out_reg[21]  ( .D(WBUF_data_in[21]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[21]) );
  EDFCNQD1 \WBUF_data_out_reg[20]  ( .D(WBUF_data_in[20]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[20]) );
  EDFCNQD1 \WBUF_data_out_reg[19]  ( .D(WBUF_data_in[19]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[19]) );
  EDFCNQD1 \WBUF_data_out_reg[18]  ( .D(WBUF_data_in[18]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[18]) );
  EDFCNQD1 \WBUF_data_out_reg[17]  ( .D(WBUF_data_in[17]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[17]) );
  EDFCNQD1 \WBUF_data_out_reg[16]  ( .D(WBUF_data_in[16]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[16]) );
  EDFCNQD1 \WBUF_data_out_reg[15]  ( .D(WBUF_data_in[15]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[15]) );
  EDFCNQD1 \WBUF_data_out_reg[14]  ( .D(WBUF_data_in[14]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[14]) );
  EDFCNQD1 \WBUF_data_out_reg[13]  ( .D(WBUF_data_in[13]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[13]) );
  EDFCNQD1 \WBUF_data_out_reg[12]  ( .D(WBUF_data_in[12]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[12]) );
  EDFCNQD1 \WBUF_data_out_reg[11]  ( .D(WBUF_data_in[11]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[11]) );
  EDFCNQD1 \WBUF_data_out_reg[10]  ( .D(WBUF_data_in[10]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[10]) );
  EDFCNQD1 \WBUF_data_out_reg[9]  ( .D(WBUF_data_in[9]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[9]) );
  EDFCNQD1 \WBUF_data_out_reg[8]  ( .D(WBUF_data_in[8]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[8]) );
  EDFCNQD1 \WBUF_data_out_reg[7]  ( .D(WBUF_data_in[7]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[7]) );
  EDFCNQD1 \WBUF_data_out_reg[6]  ( .D(WBUF_data_in[6]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[6]) );
  EDFCNQD1 \WBUF_data_out_reg[5]  ( .D(WBUF_data_in[5]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[5]) );
  EDFCNQD1 \WBUF_data_out_reg[4]  ( .D(WBUF_data_in[4]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[4]) );
  EDFCNQD1 \WBUF_data_out_reg[3]  ( .D(WBUF_data_in[3]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[3]) );
  EDFCNQD1 \WBUF_data_out_reg[2]  ( .D(WBUF_data_in[2]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[2]) );
  EDFCNQD1 \WBUF_data_out_reg[1]  ( .D(WBUF_data_in[1]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[1]) );
  EDFCNQD1 \WBUF_data_out_reg[0]  ( .D(WBUF_data_in[0]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[0]) );
  CKBD1 U2 ( .I(WBUF_wr_en), .Z(n5) );
  CKBD1 U3 ( .I(WBUF_wr_en), .Z(n4) );
  CKBD1 U4 ( .I(nRST), .Z(n1) );
  CKBD1 U5 ( .I(nRST), .Z(n2) );
  CKBD1 U6 ( .I(nRST), .Z(n3) );
  CKBD1 U7 ( .I(WBUF_wr_en), .Z(n6) );
endmodule


module w_mux_3 ( clk, nRST, input_bitwidth, rd_en, data_in, data_out );
  input [2:0] input_bitwidth;
  input [31:0] data_in;
  output [31:0] data_out;
  input clk, nRST, rd_en;
  wire   N40, N41, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129,
         n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140,
         n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151,
         n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162,
         n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173,
         n174, n175, n176, n177, n178;
  wire   [1:0] rd_ptr;
  wire   [31:0] next_data_out;

  EDFCNQD1 \rd_ptr_reg[0]  ( .D(N40), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[0]) );
  EDFCNQD1 \rd_ptr_reg[1]  ( .D(N41), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[1]) );
  DFCNQD1 \data_out_reg[31]  ( .D(next_data_out[31]), .CP(clk), .CDN(n1), .Q(
        data_out[31]) );
  DFCNQD1 \data_out_reg[30]  ( .D(next_data_out[30]), .CP(clk), .CDN(n3), .Q(
        data_out[30]) );
  DFCNQD1 \data_out_reg[29]  ( .D(next_data_out[29]), .CP(clk), .CDN(n3), .Q(
        data_out[29]) );
  DFCNQD1 \data_out_reg[28]  ( .D(next_data_out[28]), .CP(clk), .CDN(n3), .Q(
        data_out[28]) );
  DFCNQD1 \data_out_reg[27]  ( .D(next_data_out[27]), .CP(clk), .CDN(n3), .Q(
        data_out[27]) );
  DFCNQD1 \data_out_reg[26]  ( .D(next_data_out[26]), .CP(clk), .CDN(n3), .Q(
        data_out[26]) );
  DFCNQD1 \data_out_reg[25]  ( .D(next_data_out[25]), .CP(clk), .CDN(n2), .Q(
        data_out[25]) );
  DFCNQD1 \data_out_reg[24]  ( .D(next_data_out[24]), .CP(clk), .CDN(n2), .Q(
        data_out[24]) );
  DFCNQD1 \data_out_reg[23]  ( .D(next_data_out[23]), .CP(clk), .CDN(n3), .Q(
        data_out[23]) );
  DFCNQD1 \data_out_reg[22]  ( .D(next_data_out[22]), .CP(clk), .CDN(n2), .Q(
        data_out[22]) );
  DFCNQD1 \data_out_reg[21]  ( .D(next_data_out[21]), .CP(clk), .CDN(n2), .Q(
        data_out[21]) );
  DFCNQD1 \data_out_reg[20]  ( .D(next_data_out[20]), .CP(clk), .CDN(n2), .Q(
        data_out[20]) );
  DFCNQD1 \data_out_reg[19]  ( .D(next_data_out[19]), .CP(clk), .CDN(n2), .Q(
        data_out[19]) );
  DFCNQD1 \data_out_reg[18]  ( .D(next_data_out[18]), .CP(clk), .CDN(n2), .Q(
        data_out[18]) );
  DFCNQD1 \data_out_reg[17]  ( .D(next_data_out[17]), .CP(clk), .CDN(n2), .Q(
        data_out[17]) );
  DFCNQD1 \data_out_reg[16]  ( .D(next_data_out[16]), .CP(clk), .CDN(n2), .Q(
        data_out[16]) );
  DFCNQD1 \data_out_reg[15]  ( .D(next_data_out[15]), .CP(clk), .CDN(n2), .Q(
        data_out[15]) );
  DFCNQD1 \data_out_reg[14]  ( .D(next_data_out[14]), .CP(clk), .CDN(n2), .Q(
        data_out[14]) );
  DFCNQD1 \data_out_reg[13]  ( .D(next_data_out[13]), .CP(clk), .CDN(n2), .Q(
        data_out[13]) );
  DFCNQD1 \data_out_reg[12]  ( .D(next_data_out[12]), .CP(clk), .CDN(n1), .Q(
        data_out[12]) );
  DFCNQD1 \data_out_reg[11]  ( .D(next_data_out[11]), .CP(clk), .CDN(n1), .Q(
        data_out[11]) );
  DFCNQD1 \data_out_reg[10]  ( .D(next_data_out[10]), .CP(clk), .CDN(n1), .Q(
        data_out[10]) );
  DFCNQD1 \data_out_reg[9]  ( .D(next_data_out[9]), .CP(clk), .CDN(n1), .Q(
        data_out[9]) );
  DFCNQD1 \data_out_reg[8]  ( .D(next_data_out[8]), .CP(clk), .CDN(n1), .Q(
        data_out[8]) );
  DFCNQD1 \data_out_reg[7]  ( .D(next_data_out[7]), .CP(clk), .CDN(n1), .Q(
        data_out[7]) );
  DFCNQD1 \data_out_reg[6]  ( .D(next_data_out[6]), .CP(clk), .CDN(n1), .Q(
        data_out[6]) );
  DFCNQD1 \data_out_reg[5]  ( .D(next_data_out[5]), .CP(clk), .CDN(n1), .Q(
        data_out[5]) );
  DFCNQD1 \data_out_reg[4]  ( .D(next_data_out[4]), .CP(clk), .CDN(n1), .Q(
        data_out[4]) );
  DFCNQD1 \data_out_reg[3]  ( .D(next_data_out[3]), .CP(clk), .CDN(n1), .Q(
        data_out[3]) );
  DFCNQD1 \data_out_reg[2]  ( .D(next_data_out[2]), .CP(clk), .CDN(n1), .Q(
        data_out[2]) );
  DFCNQD1 \data_out_reg[1]  ( .D(next_data_out[1]), .CP(clk), .CDN(n1), .Q(
        data_out[1]) );
  DFCNQD1 \data_out_reg[0]  ( .D(next_data_out[0]), .CP(clk), .CDN(n2), .Q(
        data_out[0]) );
  OA21D1 U20 ( .A1(n161), .A2(n160), .B(n159), .Z(n170) );
  OA21D1 U23 ( .A1(n156), .A2(n160), .B(n155), .Z(n169) );
  OA21D1 U26 ( .A1(n154), .A2(n160), .B(n153), .Z(n167) );
  OA21D1 U29 ( .A1(n152), .A2(n160), .B(n151), .Z(n166) );
  OA21D1 U32 ( .A1(n150), .A2(n160), .B(n149), .Z(n177) );
  OA21D1 U35 ( .A1(n148), .A2(n160), .B(n147), .Z(n165) );
  OA21D1 U38 ( .A1(n146), .A2(n160), .B(n145), .Z(n164) );
  OA21D1 U41 ( .A1(n144), .A2(n160), .B(n149), .Z(n163) );
  OA21D1 U47 ( .A1(n139), .A2(n160), .B(n138), .Z(n162) );
  OA21D1 U50 ( .A1(n137), .A2(n160), .B(n159), .Z(n175) );
  OA21D1 U56 ( .A1(n134), .A2(n160), .B(n155), .Z(n174) );
  OA21D1 U62 ( .A1(n131), .A2(n160), .B(n153), .Z(n173) );
  OA21D1 U68 ( .A1(n128), .A2(n160), .B(n151), .Z(n172) );
  OA21D1 U74 ( .A1(n125), .A2(n160), .B(n147), .Z(n171) );
  OA21D1 U80 ( .A1(n122), .A2(n160), .B(n145), .Z(n168) );
  OA21D1 U86 ( .A1(n119), .A2(n160), .B(n138), .Z(n176) );
  AN2XD1 U90 ( .A1(rd_ptr[1]), .A2(rd_ptr[0]), .Z(n140) );
  AN4XD1 U91 ( .A1(input_bitwidth[2]), .A2(rd_en), .A3(n5), .A4(n7), .Z(n143)
         );
  MAOI22D1 U97 ( .A1(n115), .A2(n12), .B1(n115), .B2(n114), .ZN(n113) );
  NR2D1 U3 ( .A1(n13), .A2(rd_ptr[1]), .ZN(n158) );
  NR2D1 U4 ( .A1(rd_ptr[0]), .A2(rd_ptr[1]), .ZN(n157) );
  AOI21D1 U5 ( .A1(n12), .A2(n116), .B(n113), .ZN(N41) );
  OAI21D1 U6 ( .A1(n111), .A2(n10), .B(n177), .ZN(next_data_out[1]) );
  OAI21D1 U7 ( .A1(n37), .A2(n10), .B(n177), .ZN(next_data_out[9]) );
  OAI21D1 U8 ( .A1(n8), .A2(n112), .B(n176), .ZN(next_data_out[0]) );
  OAI21D1 U9 ( .A1(n9), .A2(n110), .B(n168), .ZN(next_data_out[2]) );
  OAI21D1 U10 ( .A1(n9), .A2(n109), .B(n171), .ZN(next_data_out[3]) );
  OAI21D1 U11 ( .A1(n9), .A2(n108), .B(n172), .ZN(next_data_out[4]) );
  OAI21D1 U12 ( .A1(n8), .A2(n36), .B(n168), .ZN(next_data_out[10]) );
  OAI21D1 U13 ( .A1(n8), .A2(n35), .B(n171), .ZN(next_data_out[11]) );
  OAI21D1 U14 ( .A1(n8), .A2(n34), .B(n172), .ZN(next_data_out[12]) );
  OAI21D1 U15 ( .A1(n9), .A2(n33), .B(n173), .ZN(next_data_out[13]) );
  OAI21D1 U16 ( .A1(n8), .A2(n32), .B(n174), .ZN(next_data_out[14]) );
  OAI21D1 U17 ( .A1(n8), .A2(n31), .B(n175), .ZN(next_data_out[15]) );
  OAI21D1 U18 ( .A1(n10), .A2(n107), .B(n173), .ZN(next_data_out[5]) );
  OAI21D1 U19 ( .A1(n10), .A2(n106), .B(n174), .ZN(next_data_out[6]) );
  OAI21D1 U21 ( .A1(n10), .A2(n105), .B(n175), .ZN(next_data_out[7]) );
  OAI21D1 U22 ( .A1(n10), .A2(n38), .B(n176), .ZN(next_data_out[8]) );
  CKBD1 U24 ( .I(n178), .Z(n8) );
  CKBD1 U25 ( .I(n178), .Z(n9) );
  CKBD1 U27 ( .I(n178), .Z(n10) );
  INVD1 U28 ( .I(n6), .ZN(n7) );
  INVD1 U30 ( .I(n4), .ZN(n5) );
  INVD1 U31 ( .I(n116), .ZN(n11) );
  INVD1 U33 ( .I(n157), .ZN(n14) );
  INVD1 U34 ( .I(n158), .ZN(n12) );
  ND2D1 U36 ( .A1(n114), .A2(rd_en), .ZN(n178) );
  NR3D0 U37 ( .A1(n4), .A2(input_bitwidth[2]), .A3(n7), .ZN(n115) );
  NR3D0 U39 ( .A1(n6), .A2(input_bitwidth[2]), .A3(n5), .ZN(n114) );
  ND2D1 U40 ( .A1(rd_en), .A2(n115), .ZN(n160) );
  ND2D1 U42 ( .A1(n143), .A2(n118), .ZN(n138) );
  OAI221D0 U43 ( .A1(n12), .A2(n38), .B1(n14), .B2(n112), .C(n117), .ZN(n118)
         );
  AOI22D1 U44 ( .A1(data_in[24]), .A2(n140), .B1(data_in[16]), .B2(n11), .ZN(
        n117) );
  ND2D1 U45 ( .A1(n143), .A2(n142), .ZN(n149) );
  OAI221D0 U46 ( .A1(n12), .A2(n37), .B1(n14), .B2(n111), .C(n141), .ZN(n142)
         );
  AOI22D1 U48 ( .A1(data_in[25]), .A2(n140), .B1(n11), .B2(data_in[17]), .ZN(
        n141) );
  ND2D1 U49 ( .A1(n143), .A2(n121), .ZN(n145) );
  OAI221D0 U51 ( .A1(n12), .A2(n36), .B1(n14), .B2(n110), .C(n120), .ZN(n121)
         );
  AOI22D1 U52 ( .A1(data_in[26]), .A2(n140), .B1(data_in[18]), .B2(n11), .ZN(
        n120) );
  ND2D1 U53 ( .A1(n143), .A2(n124), .ZN(n147) );
  OAI221D0 U54 ( .A1(n12), .A2(n35), .B1(n14), .B2(n109), .C(n123), .ZN(n124)
         );
  AOI22D1 U55 ( .A1(data_in[27]), .A2(n140), .B1(data_in[19]), .B2(n11), .ZN(
        n123) );
  ND2D1 U57 ( .A1(n143), .A2(n127), .ZN(n151) );
  OAI221D0 U58 ( .A1(n12), .A2(n34), .B1(n14), .B2(n108), .C(n126), .ZN(n127)
         );
  AOI22D1 U59 ( .A1(data_in[28]), .A2(n140), .B1(data_in[20]), .B2(n11), .ZN(
        n126) );
  ND2D1 U60 ( .A1(n143), .A2(n130), .ZN(n153) );
  OAI221D0 U61 ( .A1(n12), .A2(n33), .B1(n14), .B2(n107), .C(n129), .ZN(n130)
         );
  AOI22D1 U63 ( .A1(data_in[29]), .A2(n140), .B1(data_in[21]), .B2(n11), .ZN(
        n129) );
  ND2D1 U64 ( .A1(n143), .A2(n133), .ZN(n155) );
  OAI221D0 U65 ( .A1(n12), .A2(n32), .B1(n14), .B2(n106), .C(n132), .ZN(n133)
         );
  AOI22D1 U66 ( .A1(data_in[30]), .A2(n140), .B1(data_in[22]), .B2(n11), .ZN(
        n132) );
  ND2D1 U67 ( .A1(n143), .A2(n136), .ZN(n159) );
  OAI221D0 U69 ( .A1(n12), .A2(n31), .B1(n14), .B2(n105), .C(n135), .ZN(n136)
         );
  AOI22D1 U70 ( .A1(data_in[31]), .A2(n140), .B1(data_in[23]), .B2(n11), .ZN(
        n135) );
  AOI22D1 U71 ( .A1(data_in[16]), .A2(n158), .B1(data_in[0]), .B2(n157), .ZN(
        n119) );
  AOI22D1 U72 ( .A1(data_in[17]), .A2(n158), .B1(data_in[1]), .B2(n157), .ZN(
        n150) );
  AOI22D1 U73 ( .A1(data_in[18]), .A2(n158), .B1(data_in[2]), .B2(n157), .ZN(
        n122) );
  AOI22D1 U75 ( .A1(data_in[19]), .A2(n158), .B1(data_in[3]), .B2(n157), .ZN(
        n125) );
  AOI22D1 U76 ( .A1(data_in[20]), .A2(n158), .B1(data_in[4]), .B2(n157), .ZN(
        n128) );
  AOI22D1 U77 ( .A1(data_in[21]), .A2(n158), .B1(data_in[5]), .B2(n157), .ZN(
        n131) );
  AOI22D1 U78 ( .A1(data_in[22]), .A2(n158), .B1(data_in[6]), .B2(n157), .ZN(
        n134) );
  AOI22D1 U79 ( .A1(data_in[23]), .A2(n158), .B1(data_in[7]), .B2(n157), .ZN(
        n137) );
  AOI22D1 U81 ( .A1(data_in[24]), .A2(n158), .B1(data_in[8]), .B2(n157), .ZN(
        n139) );
  AOI22D1 U82 ( .A1(data_in[25]), .A2(n158), .B1(data_in[9]), .B2(n157), .ZN(
        n144) );
  AOI22D1 U83 ( .A1(data_in[26]), .A2(n158), .B1(data_in[10]), .B2(n157), .ZN(
        n146) );
  AOI22D1 U84 ( .A1(data_in[27]), .A2(n158), .B1(data_in[11]), .B2(n157), .ZN(
        n148) );
  AOI22D1 U85 ( .A1(data_in[28]), .A2(n158), .B1(data_in[12]), .B2(n157), .ZN(
        n152) );
  AOI22D1 U87 ( .A1(data_in[29]), .A2(n158), .B1(data_in[13]), .B2(n157), .ZN(
        n154) );
  AOI22D1 U88 ( .A1(data_in[30]), .A2(n158), .B1(data_in[14]), .B2(n157), .ZN(
        n156) );
  AOI22D1 U89 ( .A1(data_in[31]), .A2(n158), .B1(data_in[15]), .B2(n157), .ZN(
        n161) );
  NR2D1 U92 ( .A1(rd_ptr[0]), .A2(n114), .ZN(N40) );
  OAI21D1 U93 ( .A1(n29), .A2(n10), .B(n163), .ZN(next_data_out[17]) );
  INVD1 U94 ( .I(data_in[17]), .ZN(n29) );
  OAI21D1 U95 ( .A1(n8), .A2(n30), .B(n162), .ZN(next_data_out[16]) );
  INVD1 U96 ( .I(data_in[16]), .ZN(n30) );
  OAI21D1 U98 ( .A1(n8), .A2(n28), .B(n164), .ZN(next_data_out[18]) );
  INVD1 U99 ( .I(data_in[18]), .ZN(n28) );
  OAI21D1 U100 ( .A1(n8), .A2(n27), .B(n165), .ZN(next_data_out[19]) );
  INVD1 U101 ( .I(data_in[19]), .ZN(n27) );
  OAI21D1 U102 ( .A1(n8), .A2(n26), .B(n166), .ZN(next_data_out[20]) );
  INVD1 U103 ( .I(data_in[20]), .ZN(n26) );
  OAI21D1 U104 ( .A1(n8), .A2(n25), .B(n167), .ZN(next_data_out[21]) );
  INVD1 U105 ( .I(data_in[21]), .ZN(n25) );
  OAI21D1 U106 ( .A1(n8), .A2(n24), .B(n169), .ZN(next_data_out[22]) );
  INVD1 U107 ( .I(data_in[22]), .ZN(n24) );
  OAI21D1 U108 ( .A1(n9), .A2(n23), .B(n170), .ZN(next_data_out[23]) );
  INVD1 U109 ( .I(data_in[23]), .ZN(n23) );
  OAI21D1 U110 ( .A1(n9), .A2(n22), .B(n162), .ZN(next_data_out[24]) );
  INVD1 U111 ( .I(data_in[24]), .ZN(n22) );
  OAI21D1 U112 ( .A1(n9), .A2(n20), .B(n164), .ZN(next_data_out[26]) );
  INVD1 U113 ( .I(data_in[26]), .ZN(n20) );
  OAI21D1 U114 ( .A1(n9), .A2(n19), .B(n165), .ZN(next_data_out[27]) );
  INVD1 U115 ( .I(data_in[27]), .ZN(n19) );
  OAI21D1 U116 ( .A1(n9), .A2(n18), .B(n166), .ZN(next_data_out[28]) );
  INVD1 U117 ( .I(data_in[28]), .ZN(n18) );
  OAI21D1 U118 ( .A1(n9), .A2(n17), .B(n167), .ZN(next_data_out[29]) );
  INVD1 U119 ( .I(data_in[29]), .ZN(n17) );
  OAI21D1 U120 ( .A1(n9), .A2(n16), .B(n169), .ZN(next_data_out[30]) );
  INVD1 U121 ( .I(data_in[30]), .ZN(n16) );
  OAI21D1 U122 ( .A1(n9), .A2(n15), .B(n170), .ZN(next_data_out[31]) );
  INVD1 U123 ( .I(data_in[31]), .ZN(n15) );
  OAI21D1 U124 ( .A1(n21), .A2(n10), .B(n163), .ZN(next_data_out[25]) );
  INVD1 U125 ( .I(data_in[25]), .ZN(n21) );
  CKBD1 U126 ( .I(input_bitwidth[0]), .Z(n4) );
  CKBD1 U127 ( .I(input_bitwidth[1]), .Z(n6) );
  ND2D1 U128 ( .A1(rd_ptr[1]), .A2(n13), .ZN(n116) );
  INVD1 U129 ( .I(rd_ptr[0]), .ZN(n13) );
  INVD1 U130 ( .I(data_in[1]), .ZN(n111) );
  INVD1 U131 ( .I(data_in[9]), .ZN(n37) );
  INVD1 U132 ( .I(data_in[0]), .ZN(n112) );
  INVD1 U133 ( .I(data_in[2]), .ZN(n110) );
  INVD1 U134 ( .I(data_in[3]), .ZN(n109) );
  INVD1 U135 ( .I(data_in[4]), .ZN(n108) );
  INVD1 U136 ( .I(data_in[5]), .ZN(n107) );
  INVD1 U137 ( .I(data_in[6]), .ZN(n106) );
  INVD1 U138 ( .I(data_in[7]), .ZN(n105) );
  INVD1 U139 ( .I(data_in[8]), .ZN(n38) );
  INVD1 U140 ( .I(data_in[10]), .ZN(n36) );
  INVD1 U141 ( .I(data_in[11]), .ZN(n35) );
  INVD1 U142 ( .I(data_in[12]), .ZN(n34) );
  INVD1 U143 ( .I(data_in[13]), .ZN(n33) );
  INVD1 U144 ( .I(data_in[14]), .ZN(n32) );
  INVD1 U145 ( .I(data_in[15]), .ZN(n31) );
  CKBD1 U146 ( .I(nRST), .Z(n2) );
  CKBD1 U147 ( .I(nRST), .Z(n1) );
  CKBD1 U148 ( .I(nRST), .Z(n3) );
endmodule


module IBUF_ARRAY_SIZE4_DATA_W32_0 ( clk, nRST, IBUF_wr_en, IBUF_data_in, 
        IBUF_data_out );
  input [31:0] IBUF_data_in;
  output [31:0] IBUF_data_out;
  input clk, nRST, IBUF_wr_en;
  wire   n1, n2, n3, n4, n5, n6;

  EDFCNQD1 \IBUF_data_out_reg[31]  ( .D(IBUF_data_in[31]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[31]) );
  EDFCNQD1 \IBUF_data_out_reg[30]  ( .D(IBUF_data_in[30]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[30]) );
  EDFCNQD1 \IBUF_data_out_reg[29]  ( .D(IBUF_data_in[29]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[29]) );
  EDFCNQD1 \IBUF_data_out_reg[28]  ( .D(IBUF_data_in[28]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[28]) );
  EDFCNQD1 \IBUF_data_out_reg[27]  ( .D(IBUF_data_in[27]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[27]) );
  EDFCNQD1 \IBUF_data_out_reg[26]  ( .D(IBUF_data_in[26]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[26]) );
  EDFCNQD1 \IBUF_data_out_reg[25]  ( .D(IBUF_data_in[25]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[25]) );
  EDFCNQD1 \IBUF_data_out_reg[24]  ( .D(IBUF_data_in[24]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(IBUF_data_out[24]) );
  EDFCNQD1 \IBUF_data_out_reg[23]  ( .D(IBUF_data_in[23]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[23]) );
  EDFCNQD1 \IBUF_data_out_reg[22]  ( .D(IBUF_data_in[22]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[22]) );
  EDFCNQD1 \IBUF_data_out_reg[21]  ( .D(IBUF_data_in[21]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[21]) );
  EDFCNQD1 \IBUF_data_out_reg[20]  ( .D(IBUF_data_in[20]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[20]) );
  EDFCNQD1 \IBUF_data_out_reg[19]  ( .D(IBUF_data_in[19]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[19]) );
  EDFCNQD1 \IBUF_data_out_reg[18]  ( .D(IBUF_data_in[18]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[18]) );
  EDFCNQD1 \IBUF_data_out_reg[17]  ( .D(IBUF_data_in[17]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[17]) );
  EDFCNQD1 \IBUF_data_out_reg[16]  ( .D(IBUF_data_in[16]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[16]) );
  EDFCNQD1 \IBUF_data_out_reg[15]  ( .D(IBUF_data_in[15]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[15]) );
  EDFCNQD1 \IBUF_data_out_reg[14]  ( .D(IBUF_data_in[14]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[14]) );
  EDFCNQD1 \IBUF_data_out_reg[13]  ( .D(IBUF_data_in[13]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[13]) );
  EDFCNQD1 \IBUF_data_out_reg[12]  ( .D(IBUF_data_in[12]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(IBUF_data_out[12]) );
  EDFCNQD1 \IBUF_data_out_reg[11]  ( .D(IBUF_data_in[11]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[11]) );
  EDFCNQD1 \IBUF_data_out_reg[10]  ( .D(IBUF_data_in[10]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[10]) );
  EDFCNQD1 \IBUF_data_out_reg[9]  ( .D(IBUF_data_in[9]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[9]) );
  EDFCNQD1 \IBUF_data_out_reg[8]  ( .D(IBUF_data_in[8]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[8]) );
  EDFCNQD1 \IBUF_data_out_reg[7]  ( .D(IBUF_data_in[7]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[7]) );
  EDFCNQD1 \IBUF_data_out_reg[6]  ( .D(IBUF_data_in[6]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[6]) );
  EDFCNQD1 \IBUF_data_out_reg[5]  ( .D(IBUF_data_in[5]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[5]) );
  EDFCNQD1 \IBUF_data_out_reg[4]  ( .D(IBUF_data_in[4]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[4]) );
  EDFCNQD1 \IBUF_data_out_reg[3]  ( .D(IBUF_data_in[3]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[3]) );
  EDFCNQD1 \IBUF_data_out_reg[2]  ( .D(IBUF_data_in[2]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[2]) );
  EDFCNQD1 \IBUF_data_out_reg[1]  ( .D(IBUF_data_in[1]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[1]) );
  EDFCNQD1 \IBUF_data_out_reg[0]  ( .D(IBUF_data_in[0]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(IBUF_data_out[0]) );
  CKBD1 U2 ( .I(IBUF_wr_en), .Z(n5) );
  CKBD1 U3 ( .I(IBUF_wr_en), .Z(n4) );
  CKBD1 U4 ( .I(nRST), .Z(n1) );
  CKBD1 U5 ( .I(nRST), .Z(n2) );
  CKBD1 U6 ( .I(nRST), .Z(n3) );
  CKBD1 U7 ( .I(IBUF_wr_en), .Z(n6) );
endmodule


module in_mux_0 ( clk, nRST, weight_bitwidth, rd_en, data_in, data_out );
  input [2:0] weight_bitwidth;
  input [31:0] data_in;
  output [31:0] data_out;
  input clk, nRST, rd_en;
  wire   N40, N41, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129,
         n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140,
         n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151,
         n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162,
         n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173,
         n174, n175, n176, n177, n178;
  wire   [1:0] rd_ptr;
  wire   [31:0] next_data_out;

  EDFCNQD1 \rd_ptr_reg[0]  ( .D(N40), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[0]) );
  EDFCNQD1 \rd_ptr_reg[1]  ( .D(N41), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[1]) );
  DFCNQD1 \data_out_reg[31]  ( .D(next_data_out[31]), .CP(clk), .CDN(n1), .Q(
        data_out[31]) );
  DFCNQD1 \data_out_reg[30]  ( .D(next_data_out[30]), .CP(clk), .CDN(n3), .Q(
        data_out[30]) );
  DFCNQD1 \data_out_reg[29]  ( .D(next_data_out[29]), .CP(clk), .CDN(n3), .Q(
        data_out[29]) );
  DFCNQD1 \data_out_reg[28]  ( .D(next_data_out[28]), .CP(clk), .CDN(n3), .Q(
        data_out[28]) );
  DFCNQD1 \data_out_reg[27]  ( .D(next_data_out[27]), .CP(clk), .CDN(n3), .Q(
        data_out[27]) );
  DFCNQD1 \data_out_reg[26]  ( .D(next_data_out[26]), .CP(clk), .CDN(n3), .Q(
        data_out[26]) );
  DFCNQD1 \data_out_reg[25]  ( .D(next_data_out[25]), .CP(clk), .CDN(n3), .Q(
        data_out[25]) );
  DFCNQD1 \data_out_reg[24]  ( .D(next_data_out[24]), .CP(clk), .CDN(n2), .Q(
        data_out[24]) );
  DFCNQD1 \data_out_reg[23]  ( .D(next_data_out[23]), .CP(clk), .CDN(n2), .Q(
        data_out[23]) );
  DFCNQD1 \data_out_reg[22]  ( .D(next_data_out[22]), .CP(clk), .CDN(n2), .Q(
        data_out[22]) );
  DFCNQD1 \data_out_reg[21]  ( .D(next_data_out[21]), .CP(clk), .CDN(n2), .Q(
        data_out[21]) );
  DFCNQD1 \data_out_reg[20]  ( .D(next_data_out[20]), .CP(clk), .CDN(n2), .Q(
        data_out[20]) );
  DFCNQD1 \data_out_reg[19]  ( .D(next_data_out[19]), .CP(clk), .CDN(n2), .Q(
        data_out[19]) );
  DFCNQD1 \data_out_reg[18]  ( .D(next_data_out[18]), .CP(clk), .CDN(n2), .Q(
        data_out[18]) );
  DFCNQD1 \data_out_reg[17]  ( .D(next_data_out[17]), .CP(clk), .CDN(n2), .Q(
        data_out[17]) );
  DFCNQD1 \data_out_reg[16]  ( .D(next_data_out[16]), .CP(clk), .CDN(n2), .Q(
        data_out[16]) );
  DFCNQD1 \data_out_reg[15]  ( .D(next_data_out[15]), .CP(clk), .CDN(n2), .Q(
        data_out[15]) );
  DFCNQD1 \data_out_reg[14]  ( .D(next_data_out[14]), .CP(clk), .CDN(n2), .Q(
        data_out[14]) );
  DFCNQD1 \data_out_reg[13]  ( .D(next_data_out[13]), .CP(clk), .CDN(n2), .Q(
        data_out[13]) );
  DFCNQD1 \data_out_reg[12]  ( .D(next_data_out[12]), .CP(clk), .CDN(n1), .Q(
        data_out[12]) );
  DFCNQD1 \data_out_reg[11]  ( .D(next_data_out[11]), .CP(clk), .CDN(n1), .Q(
        data_out[11]) );
  DFCNQD1 \data_out_reg[10]  ( .D(next_data_out[10]), .CP(clk), .CDN(n1), .Q(
        data_out[10]) );
  DFCNQD1 \data_out_reg[9]  ( .D(next_data_out[9]), .CP(clk), .CDN(n1), .Q(
        data_out[9]) );
  DFCNQD1 \data_out_reg[8]  ( .D(next_data_out[8]), .CP(clk), .CDN(n1), .Q(
        data_out[8]) );
  DFCNQD1 \data_out_reg[7]  ( .D(next_data_out[7]), .CP(clk), .CDN(n1), .Q(
        data_out[7]) );
  DFCNQD1 \data_out_reg[6]  ( .D(next_data_out[6]), .CP(clk), .CDN(n1), .Q(
        data_out[6]) );
  DFCNQD1 \data_out_reg[5]  ( .D(next_data_out[5]), .CP(clk), .CDN(n1), .Q(
        data_out[5]) );
  DFCNQD1 \data_out_reg[4]  ( .D(next_data_out[4]), .CP(clk), .CDN(n1), .Q(
        data_out[4]) );
  DFCNQD1 \data_out_reg[3]  ( .D(next_data_out[3]), .CP(clk), .CDN(n1), .Q(
        data_out[3]) );
  DFCNQD1 \data_out_reg[2]  ( .D(next_data_out[2]), .CP(clk), .CDN(n1), .Q(
        data_out[2]) );
  DFCNQD1 \data_out_reg[1]  ( .D(next_data_out[1]), .CP(clk), .CDN(n1), .Q(
        data_out[1]) );
  DFCNQD1 \data_out_reg[0]  ( .D(next_data_out[0]), .CP(clk), .CDN(n2), .Q(
        data_out[0]) );
  OA21D1 U8 ( .A1(n173), .A2(n172), .B(n171), .Z(n175) );
  OA21D1 U11 ( .A1(n168), .A2(n172), .B(n167), .Z(n174) );
  OA21D1 U18 ( .A1(n162), .A2(n172), .B(n161), .Z(n165) );
  OA21D1 U21 ( .A1(n160), .A2(n172), .B(n159), .Z(n164) );
  OA21D1 U26 ( .A1(n156), .A2(n172), .B(n161), .Z(n158) );
  OA21D1 U32 ( .A1(n151), .A2(n172), .B(n159), .Z(n157) );
  OA21D1 U40 ( .A1(n146), .A2(n172), .B(n145), .Z(n148) );
  OA21D1 U43 ( .A1(n144), .A2(n172), .B(n143), .Z(n147) );
  OA21D1 U46 ( .A1(n142), .A2(n172), .B(n171), .Z(n166) );
  OA21D1 U54 ( .A1(n137), .A2(n172), .B(n145), .Z(n139) );
  OA21D1 U60 ( .A1(n134), .A2(n172), .B(n143), .Z(n138) );
  OA21D1 U68 ( .A1(n129), .A2(n172), .B(n128), .Z(n131) );
  OA21D1 U71 ( .A1(n127), .A2(n172), .B(n126), .Z(n130) );
  OA21D1 U74 ( .A1(n125), .A2(n172), .B(n128), .Z(n177) );
  OA21D1 U80 ( .A1(n122), .A2(n172), .B(n126), .Z(n176) );
  OA21D1 U86 ( .A1(n119), .A2(n172), .B(n167), .Z(n163) );
  AN2XD1 U90 ( .A1(rd_ptr[1]), .A2(rd_ptr[0]), .Z(n152) );
  AN4XD1 U91 ( .A1(weight_bitwidth[2]), .A2(rd_en), .A3(n5), .A4(n7), .Z(n155)
         );
  MAOI22D1 U97 ( .A1(n115), .A2(n12), .B1(n115), .B2(n114), .ZN(n113) );
  NR2D1 U3 ( .A1(n13), .A2(rd_ptr[1]), .ZN(n170) );
  NR2D1 U4 ( .A1(rd_ptr[0]), .A2(rd_ptr[1]), .ZN(n169) );
  AOI21D1 U5 ( .A1(n12), .A2(n116), .B(n113), .ZN(N41) );
  OAI21D1 U6 ( .A1(n109), .A2(n10), .B(n166), .ZN(next_data_out[3]) );
  OAI21D1 U7 ( .A1(n35), .A2(n10), .B(n177), .ZN(next_data_out[11]) );
  OAI21D1 U9 ( .A1(n9), .A2(n112), .B(n163), .ZN(next_data_out[0]) );
  OAI21D1 U10 ( .A1(n8), .A2(n111), .B(n166), .ZN(next_data_out[1]) );
  OAI21D1 U12 ( .A1(n9), .A2(n110), .B(n163), .ZN(next_data_out[2]) );
  OAI21D1 U13 ( .A1(n9), .A2(n106), .B(n174), .ZN(next_data_out[6]) );
  OAI21D1 U14 ( .A1(n8), .A2(n37), .B(n177), .ZN(next_data_out[9]) );
  OAI21D1 U15 ( .A1(n8), .A2(n36), .B(n176), .ZN(next_data_out[10]) );
  OAI21D1 U16 ( .A1(n8), .A2(n34), .B(n130), .ZN(next_data_out[12]) );
  OAI21D1 U17 ( .A1(n8), .A2(n33), .B(n131), .ZN(next_data_out[13]) );
  OAI21D1 U19 ( .A1(n8), .A2(n32), .B(n130), .ZN(next_data_out[14]) );
  OAI21D1 U20 ( .A1(n8), .A2(n31), .B(n131), .ZN(next_data_out[15]) );
  OAI21D1 U22 ( .A1(n10), .A2(n108), .B(n174), .ZN(next_data_out[4]) );
  OAI21D1 U23 ( .A1(n10), .A2(n107), .B(n175), .ZN(next_data_out[5]) );
  OAI21D1 U24 ( .A1(n10), .A2(n105), .B(n175), .ZN(next_data_out[7]) );
  OAI21D1 U25 ( .A1(n10), .A2(n38), .B(n176), .ZN(next_data_out[8]) );
  CKBD1 U27 ( .I(n178), .Z(n8) );
  CKBD1 U28 ( .I(n178), .Z(n9) );
  CKBD1 U29 ( .I(n178), .Z(n10) );
  INVD1 U30 ( .I(n6), .ZN(n7) );
  INVD1 U31 ( .I(n4), .ZN(n5) );
  INVD1 U33 ( .I(n116), .ZN(n11) );
  INVD1 U34 ( .I(n169), .ZN(n14) );
  INVD1 U35 ( .I(n170), .ZN(n12) );
  ND2D1 U36 ( .A1(n114), .A2(rd_en), .ZN(n178) );
  NR3D0 U37 ( .A1(n4), .A2(weight_bitwidth[2]), .A3(n7), .ZN(n115) );
  NR3D0 U38 ( .A1(n6), .A2(weight_bitwidth[2]), .A3(n5), .ZN(n114) );
  ND2D1 U39 ( .A1(rd_en), .A2(n115), .ZN(n172) );
  ND2D1 U41 ( .A1(n155), .A2(n118), .ZN(n167) );
  OAI221D0 U42 ( .A1(n12), .A2(n38), .B1(n14), .B2(n112), .C(n117), .ZN(n118)
         );
  AOI22D1 U44 ( .A1(data_in[24]), .A2(n152), .B1(data_in[16]), .B2(n11), .ZN(
        n117) );
  ND2D1 U45 ( .A1(n155), .A2(n141), .ZN(n171) );
  OAI221D0 U47 ( .A1(n12), .A2(n37), .B1(n14), .B2(n111), .C(n140), .ZN(n141)
         );
  AOI22D1 U48 ( .A1(data_in[25]), .A2(n152), .B1(data_in[17]), .B2(n11), .ZN(
        n140) );
  ND2D1 U49 ( .A1(n155), .A2(n121), .ZN(n126) );
  OAI221D0 U50 ( .A1(n12), .A2(n36), .B1(n14), .B2(n110), .C(n120), .ZN(n121)
         );
  AOI22D1 U51 ( .A1(data_in[26]), .A2(n152), .B1(data_in[18]), .B2(n11), .ZN(
        n120) );
  ND2D1 U52 ( .A1(n155), .A2(n124), .ZN(n128) );
  OAI221D0 U53 ( .A1(n12), .A2(n35), .B1(n14), .B2(n109), .C(n123), .ZN(n124)
         );
  AOI22D1 U55 ( .A1(data_in[27]), .A2(n152), .B1(n11), .B2(data_in[19]), .ZN(
        n123) );
  ND2D1 U56 ( .A1(n155), .A2(n133), .ZN(n143) );
  OAI221D0 U57 ( .A1(n12), .A2(n34), .B1(n14), .B2(n108), .C(n132), .ZN(n133)
         );
  AOI22D1 U58 ( .A1(data_in[28]), .A2(n152), .B1(data_in[20]), .B2(n11), .ZN(
        n132) );
  ND2D1 U59 ( .A1(n155), .A2(n136), .ZN(n145) );
  OAI221D0 U61 ( .A1(n12), .A2(n33), .B1(n14), .B2(n107), .C(n135), .ZN(n136)
         );
  AOI22D1 U62 ( .A1(data_in[29]), .A2(n152), .B1(data_in[21]), .B2(n11), .ZN(
        n135) );
  ND2D1 U63 ( .A1(n155), .A2(n150), .ZN(n159) );
  OAI221D0 U64 ( .A1(n12), .A2(n32), .B1(n14), .B2(n106), .C(n149), .ZN(n150)
         );
  AOI22D1 U65 ( .A1(data_in[30]), .A2(n152), .B1(data_in[22]), .B2(n11), .ZN(
        n149) );
  ND2D1 U66 ( .A1(n155), .A2(n154), .ZN(n161) );
  OAI221D0 U67 ( .A1(n12), .A2(n31), .B1(n14), .B2(n105), .C(n153), .ZN(n154)
         );
  AOI22D1 U69 ( .A1(data_in[31]), .A2(n152), .B1(data_in[23]), .B2(n11), .ZN(
        n153) );
  AOI22D1 U70 ( .A1(data_in[16]), .A2(n170), .B1(data_in[0]), .B2(n169), .ZN(
        n119) );
  AOI22D1 U72 ( .A1(data_in[17]), .A2(n170), .B1(data_in[1]), .B2(n169), .ZN(
        n142) );
  AOI22D1 U73 ( .A1(data_in[24]), .A2(n170), .B1(data_in[8]), .B2(n169), .ZN(
        n168) );
  AOI22D1 U75 ( .A1(data_in[25]), .A2(n170), .B1(data_in[9]), .B2(n169), .ZN(
        n173) );
  AOI22D1 U76 ( .A1(data_in[18]), .A2(n170), .B1(data_in[2]), .B2(n169), .ZN(
        n122) );
  AOI22D1 U77 ( .A1(data_in[19]), .A2(n170), .B1(data_in[3]), .B2(n169), .ZN(
        n125) );
  AOI22D1 U78 ( .A1(data_in[26]), .A2(n170), .B1(data_in[10]), .B2(n169), .ZN(
        n127) );
  AOI22D1 U79 ( .A1(data_in[27]), .A2(n170), .B1(data_in[11]), .B2(n169), .ZN(
        n129) );
  AOI22D1 U81 ( .A1(data_in[20]), .A2(n170), .B1(data_in[4]), .B2(n169), .ZN(
        n134) );
  AOI22D1 U82 ( .A1(data_in[21]), .A2(n170), .B1(data_in[5]), .B2(n169), .ZN(
        n137) );
  AOI22D1 U83 ( .A1(data_in[28]), .A2(n170), .B1(data_in[12]), .B2(n169), .ZN(
        n144) );
  AOI22D1 U84 ( .A1(data_in[29]), .A2(n170), .B1(data_in[13]), .B2(n169), .ZN(
        n146) );
  AOI22D1 U85 ( .A1(data_in[22]), .A2(n170), .B1(data_in[6]), .B2(n169), .ZN(
        n151) );
  AOI22D1 U87 ( .A1(data_in[23]), .A2(n170), .B1(data_in[7]), .B2(n169), .ZN(
        n156) );
  AOI22D1 U88 ( .A1(data_in[30]), .A2(n170), .B1(data_in[14]), .B2(n169), .ZN(
        n160) );
  AOI22D1 U89 ( .A1(data_in[31]), .A2(n170), .B1(data_in[15]), .B2(n169), .ZN(
        n162) );
  NR2D1 U92 ( .A1(rd_ptr[0]), .A2(n114), .ZN(N40) );
  OAI21D1 U93 ( .A1(n27), .A2(n10), .B(n139), .ZN(next_data_out[19]) );
  INVD1 U94 ( .I(data_in[19]), .ZN(n27) );
  OAI21D1 U95 ( .A1(n8), .A2(n30), .B(n138), .ZN(next_data_out[16]) );
  INVD1 U96 ( .I(data_in[16]), .ZN(n30) );
  OAI21D1 U98 ( .A1(n8), .A2(n29), .B(n139), .ZN(next_data_out[17]) );
  INVD1 U99 ( .I(data_in[17]), .ZN(n29) );
  OAI21D1 U100 ( .A1(n8), .A2(n28), .B(n138), .ZN(next_data_out[18]) );
  INVD1 U101 ( .I(data_in[18]), .ZN(n28) );
  OAI21D1 U102 ( .A1(n8), .A2(n26), .B(n147), .ZN(next_data_out[20]) );
  INVD1 U103 ( .I(data_in[20]), .ZN(n26) );
  OAI21D1 U104 ( .A1(n8), .A2(n25), .B(n148), .ZN(next_data_out[21]) );
  INVD1 U105 ( .I(data_in[21]), .ZN(n25) );
  OAI21D1 U106 ( .A1(n9), .A2(n24), .B(n147), .ZN(next_data_out[22]) );
  INVD1 U107 ( .I(data_in[22]), .ZN(n24) );
  OAI21D1 U108 ( .A1(n9), .A2(n23), .B(n148), .ZN(next_data_out[23]) );
  INVD1 U109 ( .I(data_in[23]), .ZN(n23) );
  OAI21D1 U110 ( .A1(n9), .A2(n22), .B(n157), .ZN(next_data_out[24]) );
  INVD1 U111 ( .I(data_in[24]), .ZN(n22) );
  OAI21D1 U112 ( .A1(n9), .A2(n21), .B(n158), .ZN(next_data_out[25]) );
  INVD1 U113 ( .I(data_in[25]), .ZN(n21) );
  OAI21D1 U114 ( .A1(n9), .A2(n20), .B(n157), .ZN(next_data_out[26]) );
  INVD1 U115 ( .I(data_in[26]), .ZN(n20) );
  OAI21D1 U116 ( .A1(n9), .A2(n18), .B(n164), .ZN(next_data_out[28]) );
  INVD1 U117 ( .I(data_in[28]), .ZN(n18) );
  OAI21D1 U118 ( .A1(n9), .A2(n17), .B(n165), .ZN(next_data_out[29]) );
  INVD1 U119 ( .I(data_in[29]), .ZN(n17) );
  OAI21D1 U120 ( .A1(n9), .A2(n16), .B(n164), .ZN(next_data_out[30]) );
  INVD1 U121 ( .I(data_in[30]), .ZN(n16) );
  OAI21D1 U122 ( .A1(n9), .A2(n15), .B(n165), .ZN(next_data_out[31]) );
  INVD1 U123 ( .I(data_in[31]), .ZN(n15) );
  OAI21D1 U124 ( .A1(n19), .A2(n10), .B(n158), .ZN(next_data_out[27]) );
  INVD1 U125 ( .I(data_in[27]), .ZN(n19) );
  CKBD1 U126 ( .I(weight_bitwidth[0]), .Z(n4) );
  CKBD1 U127 ( .I(weight_bitwidth[1]), .Z(n6) );
  ND2D1 U128 ( .A1(rd_ptr[1]), .A2(n13), .ZN(n116) );
  INVD1 U129 ( .I(rd_ptr[0]), .ZN(n13) );
  INVD1 U130 ( .I(data_in[3]), .ZN(n109) );
  INVD1 U131 ( .I(data_in[11]), .ZN(n35) );
  INVD1 U132 ( .I(data_in[0]), .ZN(n112) );
  INVD1 U133 ( .I(data_in[1]), .ZN(n111) );
  INVD1 U134 ( .I(data_in[2]), .ZN(n110) );
  INVD1 U135 ( .I(data_in[4]), .ZN(n108) );
  INVD1 U136 ( .I(data_in[5]), .ZN(n107) );
  INVD1 U137 ( .I(data_in[6]), .ZN(n106) );
  INVD1 U138 ( .I(data_in[7]), .ZN(n105) );
  INVD1 U139 ( .I(data_in[8]), .ZN(n38) );
  INVD1 U140 ( .I(data_in[9]), .ZN(n37) );
  INVD1 U141 ( .I(data_in[10]), .ZN(n36) );
  INVD1 U142 ( .I(data_in[12]), .ZN(n34) );
  INVD1 U143 ( .I(data_in[13]), .ZN(n33) );
  INVD1 U144 ( .I(data_in[14]), .ZN(n32) );
  INVD1 U145 ( .I(data_in[15]), .ZN(n31) );
  CKBD1 U146 ( .I(nRST), .Z(n2) );
  CKBD1 U147 ( .I(nRST), .Z(n1) );
  CKBD1 U148 ( .I(nRST), .Z(n3) );
endmodule


module bit_brick_63 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_62 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_61 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_60 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_59 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_58 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_57 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_56 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_55 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_54 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[0]), .ZN(n3) );
  INVD1 U6 ( .I(y[1]), .ZN(n4) );
  INVD1 U7 ( .I(x[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_53 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_52 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n6) );
  INVD1 U5 ( .I(y[1]), .ZN(n4) );
  INVD1 U6 ( .I(x[0]), .ZN(n5) );
  INVD1 U7 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_51 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_50 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_49 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module bit_brick_48 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n6), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n6) );
  INVD1 U8 ( .I(y[1]), .ZN(n4) );
  INVD1 U9 ( .I(x[0]), .ZN(n5) );
  INVD1 U10 ( .I(y[0]), .ZN(n3) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n6), .A2(n4), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n3), .A2(n6), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n5), .A2(n4), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n5), .A2(n3), .ZN(product[0]) );
endmodule


module shift_add_3_DW01_add_14_DW01_add_184 ( A, B, CI, SUM, CO );
  input [28:0] A;
  input [28:0] B;
  output [28:0] SUM;
  input CI;
  output CO;
  wire   n1, \SUM[18] , n3, n4, n5, n6, n7;
  wire   [28:1] carry;
  assign SUM[27] = \SUM[18] ;
  assign SUM[28] = \SUM[18] ;
  assign SUM[26] = \SUM[18] ;
  assign SUM[25] = \SUM[18] ;
  assign SUM[24] = \SUM[18] ;
  assign SUM[23] = \SUM[18] ;
  assign SUM[22] = \SUM[18] ;
  assign SUM[21] = \SUM[18] ;
  assign SUM[20] = \SUM[18] ;
  assign SUM[19] = \SUM[18] ;
  assign SUM[18] = \SUM[18] ;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  OAI222D1 U1 ( .A1(n5), .A2(n7), .B1(n5), .B2(n6), .C1(n7), .C2(n6), .ZN(n4)
         );
  AOI222D2 U2 ( .A1(carry[15]), .A2(A[27]), .B1(carry[15]), .B2(B[15]), .C1(
        B[15]), .C2(A[27]), .ZN(n5) );
  XNR3D2 U3 ( .A1(B[27]), .A2(n7), .A3(n3), .ZN(\SUM[18] ) );
  AN2XD1 U4 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D0 U5 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  AO222D1 U6 ( .A1(n4), .A2(A[27]), .B1(n4), .B2(B[27]), .C1(A[27]), .C2(B[27]), .Z(n3) );
  CKND0 U7 ( .I(A[27]), .ZN(n7) );
  CKND0 U8 ( .I(B[16]), .ZN(n6) );
  XNR3D0 U9 ( .A1(B[27]), .A2(n7), .A3(n4), .ZN(SUM[17]) );
  XNR3D0 U10 ( .A1(n6), .A2(n5), .A3(n7), .ZN(SUM[16]) );
  XNR3D0 U11 ( .A1(carry[15]), .A2(B[15]), .A3(n7), .ZN(SUM[15]) );
endmodule


module shift_add_3_DW01_add_6_DW01_add_176 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_3_DW01_add_5_DW01_add_175 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_3_DW01_add_4_DW01_add_174 ( A, B, CI, SUM, CO );
  input [30:0] A;
  input [30:0] B;
  output [30:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [30:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  XOR3D1 U1_30 ( .A1(A[30]), .A2(B[30]), .A3(carry[30]), .Z(SUM[30]) );
  FA1D2 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_3_DW01_add_3_DW01_add_173 ( A, B, CI, SUM, CO );
  input [29:0] A;
  input [29:0] B;
  output [29:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3;
  wire   [29:1] carry;
  assign SUM[29] = SUM[23];
  assign SUM[28] = SUM[23];
  assign SUM[27] = SUM[23];
  assign SUM[26] = SUM[23];
  assign SUM[25] = SUM[23];
  assign SUM[24] = SUM[23];

  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D1 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D1 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  XOR3D4 U1 ( .A1(B[22]), .A2(A[21]), .A3(n3), .Z(SUM[23]) );
  AN2XD1 U2 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U3 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  AO222D1 U4 ( .A1(n2), .A2(A[21]), .B1(n2), .B2(B[22]), .C1(A[21]), .C2(B[22]), .Z(n3) );
  AO222D1 U5 ( .A1(carry[21]), .A2(A[21]), .B1(B[21]), .B2(carry[21]), .C1(
        B[21]), .C2(A[21]), .Z(n2) );
  XOR3D0 U6 ( .A1(carry[21]), .A2(B[21]), .A3(A[21]), .Z(SUM[21]) );
  XOR3D0 U7 ( .A1(B[22]), .A2(A[21]), .A3(n2), .Z(SUM[22]) );
endmodule


module shift_add_3_DW01_add_2_DW01_add_172 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_3_DW01_add_1_DW01_add_171 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_3_DW01_add_0_DW01_add_170 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_3 ( input_bitwidth, weight_bitwidth, .products({
        \products[15][5] , \products[15][4] , \products[15][3] , 
        \products[15][2] , \products[15][1] , \products[15][0] , 
        \products[14][5] , \products[14][4] , \products[14][3] , 
        \products[14][2] , \products[14][1] , \products[14][0] , 
        \products[13][5] , \products[13][4] , \products[13][3] , 
        \products[13][2] , \products[13][1] , \products[13][0] , 
        \products[12][5] , \products[12][4] , \products[12][3] , 
        \products[12][2] , \products[12][1] , \products[12][0] , 
        \products[11][5] , \products[11][4] , \products[11][3] , 
        \products[11][2] , \products[11][1] , \products[11][0] , 
        \products[10][5] , \products[10][4] , \products[10][3] , 
        \products[10][2] , \products[10][1] , \products[10][0] , 
        \products[9][5] , \products[9][4] , \products[9][3] , \products[9][2] , 
        \products[9][1] , \products[9][0] , \products[8][5] , \products[8][4] , 
        \products[8][3] , \products[8][2] , \products[8][1] , \products[8][0] , 
        \products[7][5] , \products[7][4] , \products[7][3] , \products[7][2] , 
        \products[7][1] , \products[7][0] , \products[6][5] , \products[6][4] , 
        \products[6][3] , \products[6][2] , \products[6][1] , \products[6][0] , 
        \products[5][5] , \products[5][4] , \products[5][3] , \products[5][2] , 
        \products[5][1] , \products[5][0] , \products[4][5] , \products[4][4] , 
        \products[4][3] , \products[4][2] , \products[4][1] , \products[4][0] , 
        \products[3][5] , \products[3][4] , \products[3][3] , \products[3][2] , 
        \products[3][1] , \products[3][0] , \products[2][5] , \products[2][4] , 
        \products[2][3] , \products[2][2] , \products[2][1] , \products[2][0] , 
        \products[1][5] , \products[1][4] , \products[1][3] , \products[1][2] , 
        \products[1][1] , \products[1][0] , \products[0][5] , \products[0][4] , 
        \products[0][3] , \products[0][2] , \products[0][1] , \products[0][0] 
        }), shift_add_out );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  output [31:0] shift_add_out;
  input \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] ;
  wire   \shifted_products[15][16] , \shifted_products[15][15] ,
         \shifted_products[15][14] , \shifted_products[15][13] ,
         \shifted_products[15][12] , \shifted_products[15][11] ,
         \shifted_products[15][10] , \shifted_products[15][9] ,
         \shifted_products[15][8] , \shifted_products[15][7] ,
         \shifted_products[15][6] , \shifted_products[15][5] ,
         \shifted_products[15][4] , \shifted_products[15][3] ,
         \shifted_products[15][2] , \shifted_products[15][1] ,
         \shifted_products[15][0] , \shifted_products[14][14] ,
         \shifted_products[14][13] , \shifted_products[14][12] ,
         \shifted_products[14][11] , \shifted_products[14][10] ,
         \shifted_products[14][9] , \shifted_products[14][8] ,
         \shifted_products[14][7] , \shifted_products[14][6] ,
         \shifted_products[14][5] , \shifted_products[14][4] ,
         \shifted_products[14][3] , \shifted_products[14][2] ,
         \shifted_products[14][1] , \shifted_products[14][0] ,
         \shifted_products[13][12] , \shifted_products[13][11] ,
         \shifted_products[13][10] , \shifted_products[13][9] ,
         \shifted_products[13][8] , \shifted_products[13][7] ,
         \shifted_products[13][6] , \shifted_products[13][5] ,
         \shifted_products[13][4] , \shifted_products[13][3] ,
         \shifted_products[13][2] , \shifted_products[13][1] ,
         \shifted_products[13][0] , \shifted_products[12][10] ,
         \shifted_products[12][9] , \shifted_products[12][8] ,
         \shifted_products[12][7] , \shifted_products[12][6] ,
         \shifted_products[12][5] , \shifted_products[12][4] ,
         \shifted_products[12][3] , \shifted_products[12][2] ,
         \shifted_products[12][1] , \shifted_products[12][0] ,
         \shifted_products[11][13] , \shifted_products[11][12] ,
         \shifted_products[11][11] , \shifted_products[11][10] ,
         \shifted_products[11][9] , \shifted_products[11][8] ,
         \shifted_products[11][7] , \shifted_products[11][6] ,
         \shifted_products[11][5] , \shifted_products[11][4] ,
         \shifted_products[11][3] , \shifted_products[11][2] ,
         \shifted_products[11][1] , \shifted_products[11][0] ,
         \shifted_products[10][12] , \shifted_products[10][11] ,
         \shifted_products[10][10] , \shifted_products[10][9] ,
         \shifted_products[10][8] , \shifted_products[10][7] ,
         \shifted_products[10][6] , \shifted_products[10][5] ,
         \shifted_products[10][4] , \shifted_products[10][3] ,
         \shifted_products[10][2] , \shifted_products[10][1] ,
         \shifted_products[10][0] , \shifted_products[9][10] ,
         \shifted_products[9][9] , \shifted_products[9][8] ,
         \shifted_products[9][7] , \shifted_products[9][6] ,
         \shifted_products[9][5] , \shifted_products[9][4] ,
         \shifted_products[9][3] , \shifted_products[9][2] ,
         \shifted_products[9][1] , \shifted_products[9][0] ,
         \shifted_products[8][8] , \shifted_products[8][7] ,
         \shifted_products[8][6] , \shifted_products[8][5] ,
         \shifted_products[8][4] , \shifted_products[8][3] ,
         \shifted_products[8][2] , \shifted_products[8][1] ,
         \shifted_products[8][0] , \shifted_products[7][11] ,
         \shifted_products[7][10] , \shifted_products[7][9] ,
         \shifted_products[7][8] , \shifted_products[7][7] ,
         \shifted_products[7][6] , \shifted_products[7][5] ,
         \shifted_products[7][4] , \shifted_products[7][3] ,
         \shifted_products[7][2] , \shifted_products[7][1] ,
         \shifted_products[7][0] , \shifted_products[6][10] ,
         \shifted_products[6][9] , \shifted_products[6][8] ,
         \shifted_products[6][7] , \shifted_products[6][6] ,
         \shifted_products[6][5] , \shifted_products[6][4] ,
         \shifted_products[6][3] , \shifted_products[6][2] ,
         \shifted_products[6][1] , \shifted_products[6][0] ,
         \shifted_products[5][8] , \shifted_products[5][7] ,
         \shifted_products[5][6] , \shifted_products[5][5] ,
         \shifted_products[5][4] , \shifted_products[5][3] ,
         \shifted_products[5][2] , \shifted_products[5][1] ,
         \shifted_products[5][0] , \shifted_products[4][6] ,
         \shifted_products[4][5] , \shifted_products[4][4] ,
         \shifted_products[4][3] , \shifted_products[4][2] ,
         \shifted_products[4][1] , \shifted_products[4][0] ,
         \shifted_products[3][9] , \shifted_products[3][8] ,
         \shifted_products[3][7] , \shifted_products[3][6] ,
         \shifted_products[3][5] , \shifted_products[3][4] ,
         \shifted_products[3][3] , \shifted_products[3][2] ,
         \shifted_products[3][1] , \shifted_products[3][0] ,
         \shifted_products[2][8] , \shifted_products[2][7] ,
         \shifted_products[2][6] , \shifted_products[2][5] ,
         \shifted_products[2][4] , \shifted_products[2][3] ,
         \shifted_products[2][2] , \shifted_products[2][1] ,
         \shifted_products[2][0] , \shifted_products[1][6] ,
         \shifted_products[1][5] , \shifted_products[1][4] ,
         \shifted_products[1][3] , \shifted_products[1][2] ,
         \shifted_products[1][1] , \shifted_products[1][0] ,
         \shifted_products[0][9] , N99, N87, N86, N85, N84, N83, N82, N81, N80,
         N79, N78, N77, N76, N61, N60, N59, N58, N57, N56, N55, N54, N446,
         N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435,
         N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424,
         N423, N422, N421, N420, N419, N418, N417, N416, N415, N414, N413,
         N412, N411, N410, N409, N408, N407, N406, N405, N404, N403, N402,
         N401, N400, N399, N398, N397, N396, N395, N394, N393, N392, N391,
         N390, N389, N388, N387, N386, N385, N384, N383, N382, N381, N380,
         N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369,
         N368, N367, N366, N365, N364, N363, N362, N361, N360, N359, N358,
         N357, N356, N355, N354, N353, N352, N351, N350, N349, N348, N347,
         N346, N345, N344, N343, N342, N341, N340, N339, N338, N337, N336,
         N335, N334, N333, N332, N331, N330, N329, N328, N327, N326, N325,
         N324, N323, N322, N321, N320, N319, N318, N317, N316, N315, N314,
         N313, N312, N311, N310, N309, N308, N307, N306, N305, N304, N303,
         N302, N301, N300, N299, N298, N297, N296, N295, N294, N293, N292,
         N291, N290, N289, N288, N287, N286, N285, N284, N283, N282, N281,
         N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270,
         N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259,
         N258, N257, N256, N255, N254, N253, N252, N251, N250, N249, N248,
         N247, N246, N245, N244, N243, N242, N241, N240, N239, N238, N237,
         N236, N235, N234, N233, N232, N231, N230, N229, N214, N213, N212,
         N211, N210, N209, N208, N207, N206, N205, N204, N203, N202, N201,
         N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, N179,
         N178, N177, N176, N175, N174, N159, N158, N157, N156, N155, N154,
         N153, N152, N151, N150, N149, N148, N136, N135, N134, N133, N132,
         N131, N130, N129, N128, N127, N126, N125, N124, N123, N108, N107,
         N106, N105, N104, N103, N102, N101, N100,
         \add_14_root_add_199_I16/carry[6] ,
         \add_14_root_add_199_I16/carry[5] ,
         \add_14_root_add_199_I16/carry[4] ,
         \add_14_root_add_199_I16/carry[3] ,
         \add_14_root_add_199_I16/carry[2] ,
         \add_14_root_add_199_I16/carry[1] ,
         \add_13_root_add_199_I16/carry[9] ,
         \add_13_root_add_199_I16/carry[8] ,
         \add_13_root_add_199_I16/carry[7] ,
         \add_13_root_add_199_I16/carry[6] ,
         \add_13_root_add_199_I16/carry[5] ,
         \add_13_root_add_199_I16/carry[4] ,
         \add_13_root_add_199_I16/carry[3] ,
         \add_13_root_add_199_I16/carry[2] ,
         \add_13_root_add_199_I16/carry[1] ,
         \add_12_root_add_199_I16/carry[7] ,
         \add_12_root_add_199_I16/carry[6] ,
         \add_12_root_add_199_I16/carry[5] ,
         \add_12_root_add_199_I16/carry[4] ,
         \add_12_root_add_199_I16/carry[3] ,
         \add_12_root_add_199_I16/carry[2] ,
         \add_12_root_add_199_I16/carry[1] ,
         \add_11_root_add_199_I16/carry[11] ,
         \add_11_root_add_199_I16/carry[10] ,
         \add_11_root_add_199_I16/carry[9] ,
         \add_11_root_add_199_I16/carry[8] ,
         \add_11_root_add_199_I16/carry[7] ,
         \add_11_root_add_199_I16/carry[6] ,
         \add_11_root_add_199_I16/carry[5] ,
         \add_11_root_add_199_I16/carry[4] ,
         \add_11_root_add_199_I16/carry[3] ,
         \add_11_root_add_199_I16/carry[2] ,
         \add_11_root_add_199_I16/carry[1] ,
         \add_10_root_add_199_I16/carry[9] ,
         \add_10_root_add_199_I16/carry[8] ,
         \add_10_root_add_199_I16/carry[7] ,
         \add_10_root_add_199_I16/carry[6] ,
         \add_10_root_add_199_I16/carry[5] ,
         \add_10_root_add_199_I16/carry[4] ,
         \add_10_root_add_199_I16/carry[3] ,
         \add_10_root_add_199_I16/carry[2] ,
         \add_10_root_add_199_I16/carry[1] ,
         \add_9_root_add_199_I16/carry[13] ,
         \add_9_root_add_199_I16/carry[12] ,
         \add_9_root_add_199_I16/carry[11] ,
         \add_9_root_add_199_I16/carry[10] , \add_9_root_add_199_I16/carry[9] ,
         \add_9_root_add_199_I16/carry[8] , \add_9_root_add_199_I16/carry[7] ,
         \add_9_root_add_199_I16/carry[6] , \add_9_root_add_199_I16/carry[5] ,
         \add_9_root_add_199_I16/carry[4] , \add_9_root_add_199_I16/carry[3] ,
         \add_9_root_add_199_I16/carry[2] , \add_9_root_add_199_I16/carry[1] ,
         \add_8_root_add_199_I16/carry[11] ,
         \add_8_root_add_199_I16/carry[10] , \add_8_root_add_199_I16/carry[9] ,
         \add_8_root_add_199_I16/carry[8] , \add_8_root_add_199_I16/carry[7] ,
         \add_8_root_add_199_I16/carry[6] , \add_8_root_add_199_I16/carry[5] ,
         \add_8_root_add_199_I16/carry[4] , \add_8_root_add_199_I16/carry[3] ,
         \add_8_root_add_199_I16/carry[2] , \add_8_root_add_199_I16/carry[1] ,
         n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72,
         n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86,
         n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100,
         n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, n111,
         n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122,
         n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133,
         n134, n135, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246,
         n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257,
         n258, n259, n260, n261, n262, n263, n264, n265, n266, n267, n268,
         n269, n270, n271, n272, n273, n274, n275, n276, n277, n278, n279,
         n280, n281, n282, n283, n284, n285, n286, n287, n288, n289, n290,
         n291, n292, n293, n294, n295, n296, n297, n298, n299, n300, n301,
         n302, n303, n304, n305, n306, n307, n308, n309, n310, n311, n312,
         n313, n314, n315, n316, n317, n318, n319, n320, n321;

  MAOI22D1 U26 ( .A1(\products[7][0] ), .A2(n309), .B1(n106), .B2(n312), .ZN(
        n310) );
  AN2XD1 U74 ( .A1(n315), .A2(n284), .Z(n285) );
  MAOI22D1 U112 ( .A1(\products[15][2] ), .A2(n272), .B1(n58), .B2(n301), .ZN(
        n273) );
  OA21D1 U130 ( .A1(n239), .A2(n57), .B(n275), .Z(n266) );
  AN2XD1 U134 ( .A1(n302), .A2(n292), .Z(n276) );
  AN2XD1 U191 ( .A1(n312), .A2(n307), .Z(n289) );
  AN2XD1 U239 ( .A1(n292), .A2(n312), .Z(n278) );
  shift_add_3_DW01_add_14_DW01_add_184 add_7_root_add_199_I16 ( .A({
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \shifted_products[14][14] , 
        \shifted_products[14][13] , \shifted_products[14][12] , 
        \shifted_products[14][11] , \shifted_products[14][10] , 
        \shifted_products[14][9] , \shifted_products[14][8] , 
        \shifted_products[14][7] , \shifted_products[14][6] , 
        \shifted_products[14][5] , \shifted_products[14][4] , 
        \shifted_products[14][3] , \shifted_products[14][2] , 
        \shifted_products[14][1] , \shifted_products[14][0] }), .B({
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \shifted_products[15][16] , \shifted_products[15][15] , 
        \shifted_products[15][14] , \shifted_products[15][13] , 
        \shifted_products[15][12] , \shifted_products[15][11] , 
        \shifted_products[15][10] , \shifted_products[15][9] , 
        \shifted_products[15][8] , \shifted_products[15][7] , 
        \shifted_products[15][6] , \shifted_products[15][5] , 
        \shifted_products[15][4] , \shifted_products[15][3] , 
        \shifted_products[15][2] , \shifted_products[15][1] , 
        \shifted_products[15][0] }), .CI(n241), .SUM({N257, N256, N255, N254, 
        N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, N243, N242, 
        N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, N231, N230, 
        N229}) );
  shift_add_3_DW01_add_6_DW01_add_176 add_4_root_add_0_root_add_199_I16 ( .A({
        n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, 
        n19, n19, n19, n19, N214, N213, N212, N211, N210, N209, N208, N207, 
        N206, N205, N204, N203, N202, N201}), .B({N257, N257, N257, N257, N256, 
        N255, N254, N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, 
        N243, N242, N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, 
        N231, N230, N229}), .CI(n241), .SUM({N382, N381, N380, N379, N378, 
        N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, N367, N366, 
        N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, N355, N354, 
        N353, N352, N351}) );
  shift_add_3_DW01_add_5_DW01_add_175 add_3_root_add_0_root_add_199_I16 ( .A({
        n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, 
        n20, n20, N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, 
        N179, N178, N177, N176, N175, N174}), .B({n17, n17, n17, n17, n17, n17, 
        n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, 
        N159, N158, N157, N156, N155, N154, N153, N152, N151, N150, N149, N148}), .CI(n241), .SUM({N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, 
        N340, N339, N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, 
        N328, N327, N326, N325, N324, N323, N322, N321, N320, N319}) );
  shift_add_3_DW01_add_4_DW01_add_174 add_5_root_add_199_I16 ( .A({n18, n18, 
        n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, 
        n18, n18, n18, n18, n18, N108, N107, N106, N105, N104, N103, N102, 
        N101, N100, N99}), .B({n23, n23, n23, n23, n23, n23, n23, n23, n23, 
        n23, n23, n23, n23, n23, n23, n23, n23, N136, N135, N134, N133, N132, 
        N131, N130, N129, N128, N127, N126, N125, N124, N123}), .CI(n241), 
        .SUM({N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}) );
  shift_add_3_DW01_add_3_DW01_add_173 add_6_root_add_199_I16 ( .A({n15, n15, 
        n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, 
        n15, n15, n15, n15, n15, n15, N61, N60, N59, N58, N57, N56, N55, N54}), 
        .B({n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, 
        n21, n21, n21, n21, n21, N87, N86, N85, N84, N83, N82, N81, N80, N79, 
        N78, N77, N76}), .CI(n241), .SUM({N287, N286, N285, N284, N283, N282, 
        N281, N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270, 
        N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259, N258}) );
  shift_add_3_DW01_add_2_DW01_add_172 add_2_root_add_0_root_add_199_I16 ( .A({
        N318, N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}), .B({N382, N381, N380, 
        N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, 
        N367, N366, N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, 
        N355, N354, N353, N352, N351}), .CI(n241), .SUM({N446, N445, N444, 
        N443, N442, N441, N440, N439, N438, N437, N436, N435, N434, N433, N432, 
        N431, N430, N429, N428, N427, N426, N425, N424, N423, N422, N421, N420, 
        N419, N418, N417, N416, N415}) );
  shift_add_3_DW01_add_1_DW01_add_171 add_1_root_add_0_root_add_199_I16 ( .A({
        N446, N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435, 
        N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424, N423, 
        N422, N421, N420, N419, N418, N417, N416, N415}), .B({N287, N287, N287, 
        N286, N285, N284, N283, N282, N281, N280, N279, N278, N277, N276, N275, 
        N274, N273, N272, N271, N270, N269, N268, N267, N266, N265, N264, N263, 
        N262, N261, N260, N259, N258}), .CI(n241), .SUM({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}) );
  shift_add_3_DW01_add_0_DW01_add_170 add_0_root_add_0_root_add_199_I16 ( .A({
        N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, N340, N339, 
        N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, N328, N327, 
        N326, N325, N324, N323, N322, N321, N320, N319}), .B({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}), .CI(n241), .SUM(shift_add_out) );
  OAI222D2 U2 ( .A1(n53), .A2(n52), .B1(n53), .B2(n26), .C1(n52), .C2(n26), 
        .ZN(n54) );
  FA1D1 U3 ( .A(\shifted_products[6][10] ), .B(\shifted_products[7][10] ), 
        .CI(\add_11_root_add_199_I16/carry[10] ), .CO(
        \add_11_root_add_199_I16/carry[11] ), .S(N133) );
  OR2D0 U4 ( .A1(n46), .A2(n109), .Z(n6) );
  OR2D0 U5 ( .A1(n46), .A2(n27), .Z(n7) );
  AOI222D1 U6 ( .A1(n43), .A2(\products[8][5] ), .B1(n43), .B2(
        \products[9][5] ), .C1(\products[8][5] ), .C2(\products[9][5] ), .ZN(
        n44) );
  AOI222D2 U7 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(\products[12][5] ), .B1(\add_8_root_add_199_I16/carry[11] ), .B2(\shifted_products[13][11] ), 
        .C1(\shifted_products[13][11] ), .C2(\products[12][5] ), .ZN(n34) );
  FA1D1 U8 ( .A(\shifted_products[12][10] ), .B(\shifted_products[13][10] ), 
        .CI(\add_8_root_add_199_I16/carry[10] ), .CO(
        \add_8_root_add_199_I16/carry[11] ), .S(N211) );
  AOI222D2 U9 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(\products[4][5] ), 
        .B1(\add_12_root_add_199_I16/carry[7] ), .B2(\shifted_products[5][7] ), 
        .C1(\shifted_products[5][7] ), .C2(\products[4][5] ), .ZN(n48) );
  FA1D1 U10 ( .A(\shifted_products[4][6] ), .B(\shifted_products[5][6] ), .CI(
        \add_12_root_add_199_I16/carry[6] ), .CO(
        \add_12_root_add_199_I16/carry[7] ), .S(N105) );
  CKBD1 U11 ( .I(n308), .Z(n1) );
  BUFFD1 U12 ( .I(n308), .Z(n2) );
  INR2D0 U13 ( .A1(n319), .B1(n238), .ZN(n308) );
  AOI222XD4 U14 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \products[2][5] ), .B1(\add_13_root_add_199_I16/carry[9] ), .B2(
        \shifted_products[3][9] ), .C1(\shifted_products[3][9] ), .C2(
        \products[2][5] ), .ZN(n53) );
  FA1D2 U15 ( .A(\shifted_products[2][8] ), .B(\shifted_products[3][8] ), .CI(
        \add_13_root_add_199_I16/carry[8] ), .CO(
        \add_13_root_add_199_I16/carry[9] ), .S(N84) );
  XNR3D4 U16 ( .A1(\products[7][5] ), .A2(n109), .A3(n24), .ZN(n23) );
  INR2D1 U17 ( .A1(n269), .B1(n238), .ZN(n300) );
  AN2XD1 U18 ( .A1(n307), .A2(n33), .Z(n5) );
  ND2D1 U19 ( .A1(n300), .A2(n277), .ZN(n306) );
  AOI222D0 U20 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \products[6][5] ), .B1(\add_11_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[7][11] ), .C1(\shifted_products[7][11] ), .C2(
        \products[6][5] ), .ZN(n46) );
  NR2D1 U21 ( .A1(n316), .A2(n317), .ZN(n277) );
  FA1D0 U22 ( .A(\shifted_products[2][6] ), .B(\shifted_products[3][6] ), .CI(
        \add_13_root_add_199_I16/carry[6] ), .CO(
        \add_13_root_add_199_I16/carry[7] ), .S(N82) );
  ND2D1 U23 ( .A1(n278), .A2(n4), .ZN(n317) );
  ND2D1 U24 ( .A1(n243), .A2(n242), .ZN(n320) );
  AN2XD1 U25 ( .A1(n301), .A2(n307), .Z(n4) );
  AOI222D1 U27 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[0][9] ), .B1(\add_14_root_add_199_I16/carry[6] ), 
        .B2(\shifted_products[1][6] ), .C1(\shifted_products[1][6] ), .C2(
        \shifted_products[0][9] ), .ZN(n56) );
  NR3D1 U28 ( .A1(n9), .A2(n10), .A3(n11), .ZN(n36) );
  AN2XD1 U29 ( .A1(n35), .A2(\products[13][5] ), .Z(n10) );
  CKXOR2D1 U30 ( .A1(n218), .A2(n55), .Z(n3) );
  ND2D1 U31 ( .A1(n295), .A2(n226), .ZN(n294) );
  INR2D1 U32 ( .A1(n302), .B1(n238), .ZN(n295) );
  CKND2D1 U33 ( .A1(n247), .A2(n246), .ZN(n307) );
  CKAN2D1 U34 ( .A1(n307), .A2(n33), .Z(n298) );
  OR2D1 U35 ( .A1(n109), .A2(n27), .Z(n8) );
  ND3D2 U36 ( .A1(n6), .A2(n7), .A3(n8), .ZN(n47) );
  AN2D1 U37 ( .A1(n35), .A2(\products[12][5] ), .Z(n9) );
  AN2D1 U38 ( .A1(\products[12][5] ), .A2(\products[13][5] ), .Z(n11) );
  OAI222D1 U39 ( .A1(n34), .A2(n75), .B1(n34), .B2(n37), .C1(n75), .C2(n37), 
        .ZN(n35) );
  AN2XD1 U40 ( .A1(n49), .A2(\products[5][5] ), .Z(n13) );
  OAI222D1 U41 ( .A1(n48), .A2(n121), .B1(n48), .B2(n51), .C1(n121), .C2(n51), 
        .ZN(n49) );
  NR3D1 U42 ( .A1(n12), .A2(n13), .A3(n14), .ZN(n50) );
  CKND2D1 U43 ( .A1(n247), .A2(n245), .ZN(n301) );
  NR2D1 U44 ( .A1(n32), .A2(n74), .ZN(\shifted_products[13][0] ) );
  AN2D1 U45 ( .A1(n49), .A2(\products[4][5] ), .Z(n12) );
  AN2XD1 U46 ( .A1(\products[4][5] ), .A2(\products[5][5] ), .Z(n14) );
  CKAN2D0 U47 ( .A1(n295), .A2(n278), .Z(n249) );
  CKND2D0 U48 ( .A1(n230), .A2(n295), .ZN(n296) );
  XNR2D2 U49 ( .A1(n3), .A2(n16), .ZN(n15) );
  OAI22D0 U50 ( .A1(n2), .A2(n218), .B1(n277), .B2(n220), .ZN(
        \shifted_products[1][5] ) );
  AN2D4 U51 ( .A1(n269), .A2(n33), .Z(n319) );
  INR2D1 U52 ( .A1(n312), .B1(n265), .ZN(n264) );
  CKND2D0 U53 ( .A1(n245), .A2(n244), .ZN(n292) );
  CKND2D0 U54 ( .A1(n247), .A2(n243), .ZN(n302) );
  CKND2D0 U55 ( .A1(n244), .A2(n243), .ZN(n293) );
  CKND2D0 U56 ( .A1(n245), .A2(n242), .ZN(n269) );
  OA222D0 U57 ( .A1(n56), .A2(n55), .B1(n56), .B2(n218), .C1(n55), .C2(n218), 
        .Z(n16) );
  AOI222D0 U58 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \products[10][5] ), .B1(\add_9_root_add_199_I16/carry[13] ), .B2(
        \shifted_products[11][13] ), .C1(\shifted_products[11][13] ), .C2(
        \products[10][5] ), .ZN(n39) );
  CKAN2D0 U59 ( .A1(n295), .A2(n30), .Z(n315) );
  OAI22D0 U60 ( .A1(n5), .A2(n111), .B1(n229), .B2(n113), .ZN(
        \shifted_products[6][3] ) );
  INR2D1 U61 ( .A1(n312), .B1(n294), .ZN(n299) );
  CKND2 U62 ( .I(n265), .ZN(n226) );
  XOR3D4 U63 ( .A1(\products[9][5] ), .A2(n44), .A3(n42), .Z(n17) );
  AOI222D1 U64 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(\products[8][5] ), .B1(\add_10_root_add_199_I16/carry[9] ), .B2(\shifted_products[9][9] ), .C1(
        \shifted_products[9][9] ), .C2(\products[8][5] ), .ZN(n41) );
  XOR3D2 U65 ( .A1(\products[5][5] ), .A2(n50), .A3(n121), .Z(n18) );
  XOR3D2 U66 ( .A1(\products[13][5] ), .A2(n36), .A3(n75), .Z(n19) );
  XOR3D1 U67 ( .A1(\products[11][5] ), .A2(n38), .A3(n25), .Z(n20) );
  AN2D2 U68 ( .A1(n289), .A2(n33), .Z(n286) );
  OAI22D0 U69 ( .A1(n2), .A2(n218), .B1(n277), .B2(n219), .ZN(
        \shifted_products[1][6] ) );
  NR2D0 U70 ( .A1(n313), .A2(n238), .ZN(n321) );
  CKAN2D0 U71 ( .A1(n278), .A2(n30), .Z(n283) );
  OAI21D0 U72 ( .A1(n59), .A2(n30), .B(n268), .ZN(\shifted_products[15][15] )
         );
  NR2D0 U73 ( .A1(n32), .A2(n62), .ZN(\shifted_products[15][0] ) );
  CKND2D0 U75 ( .A1(n295), .A2(n225), .ZN(n267) );
  CKND2D0 U76 ( .A1(n226), .A2(n278), .ZN(n313) );
  CKND1 U77 ( .I(\products[13][5] ), .ZN(n69) );
  NR2D0 U78 ( .A1(n108), .A2(n32), .ZN(\shifted_products[7][0] ) );
  CKND2D0 U79 ( .A1(\products[12][5] ), .A2(n313), .ZN(n255) );
  CKND2D0 U80 ( .A1(\products[8][5] ), .A2(n313), .ZN(n314) );
  CKND1 U81 ( .I(\products[7][5] ), .ZN(n103) );
  CKND2D0 U82 ( .A1(\products[3][5] ), .A2(n294), .ZN(n282) );
  NR2D0 U83 ( .A1(n265), .A2(n238), .ZN(n254) );
  CKND2D0 U84 ( .A1(\products[2][5] ), .A2(n294), .ZN(n279) );
  CKND2D0 U85 ( .A1(\products[10][5] ), .A2(n265), .ZN(n248) );
  CKND1 U86 ( .I(\products[6][5] ), .ZN(n109) );
  CKND1 U87 ( .I(\products[14][5] ), .ZN(n63) );
  CKND2D0 U88 ( .A1(\products[15][5] ), .A2(n265), .ZN(n275) );
  CKAN2D0 U89 ( .A1(n289), .A2(n300), .Z(n288) );
  CKND1 U90 ( .I(\products[5][5] ), .ZN(n115) );
  CKAN2D0 U91 ( .A1(n289), .A2(n2), .Z(n290) );
  OAI22D0 U92 ( .A1(n286), .A2(n121), .B1(n285), .B2(n123), .ZN(
        \shifted_products[4][5] ) );
  OAI22D0 U93 ( .A1(n286), .A2(n75), .B1(n284), .B2(n77), .ZN(
        \shifted_products[12][5] ) );
  OAI22D0 U94 ( .A1(n32), .A2(n117), .B1(n288), .B2(n119), .ZN(
        \shifted_products[5][3] ) );
  OAI22D0 U95 ( .A1(n286), .A2(n123), .B1(n285), .B2(n125), .ZN(
        \shifted_products[4][3] ) );
  OAI22D0 U96 ( .A1(n32), .A2(n59), .B1(n231), .B2(n61), .ZN(
        \shifted_products[15][3] ) );
  OAI22D0 U97 ( .A1(n5), .A2(n65), .B1(n230), .B2(n67), .ZN(
        \shifted_products[14][3] ) );
  OAI22D0 U98 ( .A1(n319), .A2(n83), .B1(n4), .B2(n85), .ZN(
        \shifted_products[11][3] ) );
  NR2D0 U99 ( .A1(n226), .A2(n88), .ZN(\shifted_products[10][3] ) );
  OAI22D0 U100 ( .A1(n2), .A2(n127), .B1(n281), .B2(n129), .ZN(
        \shifted_products[3][5] ) );
  OAI21D0 U101 ( .A1(n283), .A2(n216), .B(n279), .ZN(\shifted_products[2][5] )
         );
  OAI22D0 U102 ( .A1(n2), .A2(n129), .B1(n281), .B2(n131), .ZN(
        \shifted_products[3][3] ) );
  NR2D0 U103 ( .A1(n224), .A2(n134), .ZN(\shifted_products[2][3] ) );
  NR2D0 U104 ( .A1(n225), .A2(n99), .ZN(\shifted_products[8][3] ) );
  OAI22D0 U105 ( .A1(n31), .A2(n71), .B1(n228), .B2(n73), .ZN(
        \shifted_products[13][3] ) );
  OAI22D0 U106 ( .A1(n286), .A2(n77), .B1(n284), .B2(n79), .ZN(
        \shifted_products[12][3] ) );
  OAI22D0 U107 ( .A1(n105), .A2(n31), .B1(n227), .B2(n107), .ZN(
        \shifted_products[7][3] ) );
  OAI21D0 U108 ( .A1(n61), .A2(n30), .B(n268), .ZN(\shifted_products[15][13] )
         );
  NR2D0 U109 ( .A1(n2), .A2(n131), .ZN(\shifted_products[3][1] ) );
  NR2D0 U110 ( .A1(n32), .A2(n119), .ZN(\shifted_products[5][1] ) );
  NR2D0 U111 ( .A1(n286), .A2(n79), .ZN(\shifted_products[12][1] ) );
  NR2D0 U113 ( .A1(n32), .A2(n73), .ZN(\shifted_products[13][1] ) );
  NR2D0 U114 ( .A1(n107), .A2(n32), .ZN(\shifted_products[7][1] ) );
  NR2D0 U115 ( .A1(n226), .A2(n90), .ZN(\shifted_products[10][1] ) );
  NR2D0 U116 ( .A1(n32), .A2(n61), .ZN(\shifted_products[15][1] ) );
  OA21D0 U117 ( .A1(n283), .A2(n128), .B(n282), .Z(n26) );
  CKND1 U118 ( .I(\products[4][5] ), .ZN(n121) );
  CKAN2D0 U119 ( .A1(\products[0][5] ), .A2(n32), .Z(\shifted_products[0][9] )
         );
  XNR3D4 U120 ( .A1(\products[3][5] ), .A2(n52), .A3(n22), .ZN(n21) );
  AO222D1 U121 ( .A1(n54), .A2(\products[2][5] ), .B1(n54), .B2(
        \products[3][5] ), .C1(\products[2][5] ), .C2(\products[3][5] ), .Z(
        n22) );
  AO222D1 U122 ( .A1(n47), .A2(\products[6][5] ), .B1(n47), .B2(
        \products[7][5] ), .C1(\products[6][5] ), .C2(\products[7][5] ), .Z(
        n24) );
  CKAN2D0 U123 ( .A1(n289), .A2(n319), .Z(n259) );
  OAI21D0 U124 ( .A1(n58), .A2(n30), .B(n268), .ZN(\shifted_products[15][16] )
         );
  INR2XD0 U125 ( .A1(n269), .B1(n287), .ZN(n284) );
  INR2D0 U126 ( .A1(n302), .B1(n280), .ZN(n281) );
  NR2D0 U127 ( .A1(n2), .A2(n132), .ZN(\shifted_products[3][0] ) );
  ND2D2 U128 ( .A1(n30), .A2(n302), .ZN(n316) );
  CKND2D0 U129 ( .A1(n30), .A2(n292), .ZN(n309) );
  CKND2D0 U131 ( .A1(n295), .A2(n292), .ZN(n262) );
  AOI22D0 U132 ( .A1(\products[14][0] ), .A2(n262), .B1(\products[14][4] ), 
        .B2(n261), .ZN(n263) );
  NR2D0 U133 ( .A1(n286), .A2(n126), .ZN(\shifted_products[4][0] ) );
  NR2D0 U135 ( .A1(n286), .A2(n80), .ZN(\shifted_products[12][0] ) );
  AOI22D0 U136 ( .A1(\products[6][4] ), .A2(n296), .B1(\products[6][0] ), .B2(
        n309), .ZN(n297) );
  NR2D0 U137 ( .A1(n226), .A2(n91), .ZN(\shifted_products[10][0] ) );
  NR2D0 U138 ( .A1(n225), .A2(n102), .ZN(\shifted_products[8][0] ) );
  CKND1 U139 ( .I(\products[15][4] ), .ZN(n58) );
  CKND1 U140 ( .I(\products[14][3] ), .ZN(n65) );
  OAI21D0 U141 ( .A1(n283), .A2(n133), .B(n279), .ZN(\shifted_products[2][8] )
         );
  OAI21D0 U142 ( .A1(n283), .A2(n130), .B(n282), .ZN(\shifted_products[3][8] )
         );
  NR2D0 U143 ( .A1(n224), .A2(n217), .ZN(\shifted_products[2][0] ) );
  CKND1 U144 ( .I(\products[13][3] ), .ZN(n71) );
  CKND1 U145 ( .I(\products[7][3] ), .ZN(n105) );
  CKND2D0 U146 ( .A1(n300), .A2(n307), .ZN(n303) );
  CKND2D0 U147 ( .A1(n289), .A2(n269), .ZN(n256) );
  CKND1 U148 ( .I(\products[6][3] ), .ZN(n111) );
  CKND1 U149 ( .I(\products[14][4] ), .ZN(n64) );
  CKND1 U150 ( .I(\products[7][4] ), .ZN(n104) );
  CKND1 U151 ( .I(\products[12][3] ), .ZN(n77) );
  CKND1 U152 ( .I(\products[13][4] ), .ZN(n70) );
  CKND1 U153 ( .I(\products[5][3] ), .ZN(n117) );
  OAI21D0 U154 ( .A1(n315), .A2(n99), .B(n314), .ZN(\shifted_products[8][7] )
         );
  CKND1 U155 ( .I(\products[6][4] ), .ZN(n110) );
  OAI21D0 U156 ( .A1(n315), .A2(n77), .B(n255), .ZN(\shifted_products[12][9] )
         );
  OAI22D0 U157 ( .A1(n225), .A2(n98), .B1(n315), .B2(n102), .ZN(
        \shifted_products[8][4] ) );
  OAI21D0 U158 ( .A1(n315), .A2(n101), .B(n314), .ZN(\shifted_products[8][5] )
         );
  OAI21D0 U159 ( .A1(n315), .A2(n79), .B(n255), .ZN(\shifted_products[12][7] )
         );
  OAI22D0 U160 ( .A1(n226), .A2(n87), .B1(n249), .B2(n91), .ZN(
        \shifted_products[10][4] ) );
  OAI21D0 U161 ( .A1(n283), .A2(n135), .B(n279), .ZN(\shifted_products[2][6] )
         );
  OAI22D0 U162 ( .A1(n286), .A2(n122), .B1(n285), .B2(n124), .ZN(
        \shifted_products[4][4] ) );
  OAI22D0 U163 ( .A1(n286), .A2(n76), .B1(n284), .B2(n78), .ZN(
        \shifted_products[12][4] ) );
  OAI21D0 U164 ( .A1(n315), .A2(n100), .B(n314), .ZN(\shifted_products[8][6] )
         );
  AOI22D0 U165 ( .A1(\products[9][4] ), .A2(n317), .B1(\products[9][0] ), .B2(
        n316), .ZN(n318) );
  AOI22D0 U166 ( .A1(\products[15][4] ), .A2(n270), .B1(\products[15][0] ), 
        .B2(n272), .ZN(n271) );
  AOI22D0 U167 ( .A1(\products[11][0] ), .A2(n252), .B1(\products[11][4] ), 
        .B2(n280), .ZN(n253) );
  OAI22D0 U168 ( .A1(n235), .A2(n65), .B1(n264), .B2(n63), .ZN(
        \shifted_products[14][9] ) );
  OAI22D0 U169 ( .A1(n32), .A2(n118), .B1(n288), .B2(n120), .ZN(
        \shifted_products[5][2] ) );
  OAI22D0 U170 ( .A1(n286), .A2(n124), .B1(n285), .B2(n126), .ZN(
        \shifted_products[4][2] ) );
  OAI22D0 U171 ( .A1(n32), .A2(n72), .B1(n228), .B2(n74), .ZN(
        \shifted_products[13][2] ) );
  OAI22D0 U172 ( .A1(n286), .A2(n78), .B1(n284), .B2(n80), .ZN(
        \shifted_products[12][2] ) );
  OAI22D0 U173 ( .A1(n32), .A2(n60), .B1(n231), .B2(n62), .ZN(
        \shifted_products[15][2] ) );
  OAI22D0 U174 ( .A1(n5), .A2(n66), .B1(n230), .B2(n68), .ZN(
        \shifted_products[14][2] ) );
  OAI22D0 U175 ( .A1(n2), .A2(n219), .B1(n277), .B2(n221), .ZN(
        \shifted_products[1][4] ) );
  OAI22D0 U176 ( .A1(n2), .A2(n220), .B1(n277), .B2(n222), .ZN(
        \shifted_products[1][3] ) );
  OAI22D0 U177 ( .A1(n319), .A2(n84), .B1(n4), .B2(n86), .ZN(
        \shifted_products[11][2] ) );
  NR2D0 U178 ( .A1(n226), .A2(n89), .ZN(\shifted_products[10][2] ) );
  OAI22D0 U179 ( .A1(n2), .A2(n128), .B1(n281), .B2(n130), .ZN(
        \shifted_products[3][4] ) );
  OAI22D0 U180 ( .A1(n224), .A2(n133), .B1(n283), .B2(n217), .ZN(
        \shifted_products[2][4] ) );
  OAI22D0 U181 ( .A1(n2), .A2(n130), .B1(n281), .B2(n132), .ZN(
        \shifted_products[3][2] ) );
  NR2D0 U182 ( .A1(n224), .A2(n135), .ZN(\shifted_products[2][2] ) );
  OAI22D0 U183 ( .A1(n319), .A2(n95), .B1(n232), .B2(n97), .ZN(
        \shifted_products[9][2] ) );
  NR2D0 U184 ( .A1(n225), .A2(n100), .ZN(\shifted_products[8][2] ) );
  OAI22D0 U185 ( .A1(n5), .A2(n112), .B1(n229), .B2(n114), .ZN(
        \shifted_products[6][2] ) );
  NR2D0 U186 ( .A1(n1), .A2(n222), .ZN(\shifted_products[1][1] ) );
  CKAN2D0 U187 ( .A1(n2), .A2(n307), .Z(n311) );
  CKND1 U188 ( .I(\products[5][4] ), .ZN(n116) );
  CKND1 U189 ( .I(\products[4][4] ), .ZN(n122) );
  CKND1 U190 ( .I(\products[4][3] ), .ZN(n123) );
  CKAN2D0 U192 ( .A1(n319), .A2(n307), .Z(n274) );
  CKND2D0 U193 ( .A1(n278), .A2(n302), .ZN(n252) );
  CKND2D2 U194 ( .A1(n244), .A2(n246), .ZN(n312) );
  CKND1 U195 ( .I(\products[6][2] ), .ZN(n112) );
  CKND1 U196 ( .I(\products[12][2] ), .ZN(n78) );
  AOI22D0 U197 ( .A1(\products[7][2] ), .A2(n304), .B1(\products[7][4] ), .B2(
        n303), .ZN(n305) );
  AOI22D0 U198 ( .A1(\products[13][4] ), .A2(n256), .B1(\products[13][2] ), 
        .B2(n287), .ZN(n257) );
  OAI21D0 U199 ( .A1(n315), .A2(n78), .B(n255), .ZN(\shifted_products[12][8] )
         );
  AOI22D0 U200 ( .A1(\products[13][4] ), .A2(n287), .B1(\products[13][2] ), 
        .B2(n238), .ZN(n258) );
  OAI22D0 U201 ( .A1(n2), .A2(n221), .B1(n277), .B2(n223), .ZN(
        \shifted_products[1][2] ) );
  CKND1 U202 ( .I(\products[5][2] ), .ZN(n118) );
  CKND1 U203 ( .I(\products[4][2] ), .ZN(n124) );
  INVD1 U204 ( .I(n313), .ZN(n225) );
  INVD1 U205 ( .I(n294), .ZN(n224) );
  INVD1 U206 ( .I(n296), .ZN(n229) );
  CKBD1 U207 ( .I(n306), .Z(n32) );
  CKBD1 U208 ( .I(n306), .Z(n31) );
  CKBD1 U209 ( .I(n306), .Z(n33) );
  INVD1 U210 ( .I(n317), .ZN(n232) );
  NR2D1 U211 ( .A1(n287), .A2(n316), .ZN(n291) );
  OAI22D1 U212 ( .A1(n291), .A2(n117), .B1(n290), .B2(n115), .ZN(
        \shifted_products[5][7] ) );
  ND2D1 U213 ( .A1(n319), .A2(n4), .ZN(n265) );
  INVD1 U214 ( .I(\products[15][5] ), .ZN(n57) );
  INVD1 U215 ( .I(n256), .ZN(n228) );
  NR2D1 U216 ( .A1(n5), .A2(n68), .ZN(\shifted_products[14][0] ) );
  INVD1 U217 ( .I(n303), .ZN(n227) );
  AOI222D0 U218 ( .A1(n40), .A2(\products[10][5] ), .B1(n40), .B2(
        \products[11][5] ), .C1(\products[10][5] ), .C2(\products[11][5] ), 
        .ZN(n25) );
  FA1D0 U219 ( .A(\shifted_products[12][5] ), .B(\shifted_products[13][5] ), 
        .CI(\add_8_root_add_199_I16/carry[5] ), .CO(
        \add_8_root_add_199_I16/carry[6] ), .S(N206) );
  OAI222D0 U220 ( .A1(n234), .A2(n73), .B1(n228), .B2(n71), .C1(n31), .C2(n69), 
        .ZN(\shifted_products[13][5] ) );
  FA1D0 U221 ( .A(\shifted_products[4][5] ), .B(\shifted_products[5][5] ), 
        .CI(\add_12_root_add_199_I16/carry[5] ), .CO(
        \add_12_root_add_199_I16/carry[6] ), .S(N104) );
  OAI222D0 U222 ( .A1(n288), .A2(n117), .B1(n291), .B2(n119), .C1(n31), .C2(
        n115), .ZN(\shifted_products[5][5] ) );
  FA1D0 U223 ( .A(\shifted_products[10][3] ), .B(\shifted_products[11][3] ), 
        .CI(\add_9_root_add_199_I16/carry[3] ), .CO(
        \add_9_root_add_199_I16/carry[4] ), .S(N177) );
  FA1D0 U224 ( .A(\shifted_products[4][3] ), .B(\shifted_products[5][3] ), 
        .CI(\add_12_root_add_199_I16/carry[3] ), .CO(
        \add_12_root_add_199_I16/carry[4] ), .S(N102) );
  FA1D0 U225 ( .A(\shifted_products[2][3] ), .B(\shifted_products[3][3] ), 
        .CI(\add_13_root_add_199_I16/carry[3] ), .CO(
        \add_13_root_add_199_I16/carry[4] ), .S(N79) );
  FA1D0 U226 ( .A(\shifted_products[2][5] ), .B(\shifted_products[3][5] ), 
        .CI(\add_13_root_add_199_I16/carry[5] ), .CO(
        \add_13_root_add_199_I16/carry[6] ), .S(N81) );
  FA1D0 U227 ( .A(\shifted_products[10][9] ), .B(\shifted_products[11][9] ), 
        .CI(\add_9_root_add_199_I16/carry[9] ), .CO(
        \add_9_root_add_199_I16/carry[10] ), .S(N183) );
  OAI22D1 U228 ( .A1(n233), .A2(n83), .B1(n254), .B2(n81), .ZN(
        \shifted_products[11][9] ) );
  OAI21D1 U229 ( .A1(n29), .A2(n90), .B(n250), .ZN(\shifted_products[10][9] )
         );
  FA1D0 U230 ( .A(\shifted_products[6][3] ), .B(\shifted_products[7][3] ), 
        .CI(\add_11_root_add_199_I16/carry[3] ), .CO(
        \add_11_root_add_199_I16/carry[4] ), .S(N126) );
  FA1D0 U231 ( .A(\shifted_products[12][3] ), .B(\shifted_products[13][3] ), 
        .CI(\add_8_root_add_199_I16/carry[3] ), .CO(
        \add_8_root_add_199_I16/carry[4] ), .S(N204) );
  FA1D0 U232 ( .A(\shifted_products[8][3] ), .B(\shifted_products[9][3] ), 
        .CI(\add_10_root_add_199_I16/carry[3] ), .CO(
        \add_10_root_add_199_I16/carry[4] ), .S(N151) );
  OAI22D1 U233 ( .A1(n319), .A2(n94), .B1(n232), .B2(n96), .ZN(
        \shifted_products[9][3] ) );
  OAI21D1 U234 ( .A1(n276), .A2(n59), .B(n266), .ZN(\shifted_products[15][11] ) );
  OAI21D1 U235 ( .A1(n29), .A2(n67), .B(n260), .ZN(\shifted_products[14][11] )
         );
  OAI21D1 U236 ( .A1(n29), .A2(n65), .B(n260), .ZN(\shifted_products[14][13] )
         );
  FA1D0 U237 ( .A(\shifted_products[10][11] ), .B(\shifted_products[11][11] ), 
        .CI(\add_9_root_add_199_I16/carry[11] ), .CO(
        \add_9_root_add_199_I16/carry[12] ), .S(N185) );
  OAI21D1 U238 ( .A1(n29), .A2(n85), .B(n251), .ZN(\shifted_products[11][11] )
         );
  OAI21D1 U240 ( .A1(n29), .A2(n88), .B(n250), .ZN(\shifted_products[10][11] )
         );
  FA1D0 U241 ( .A(\shifted_products[2][1] ), .B(\shifted_products[3][1] ), 
        .CI(\add_13_root_add_199_I16/carry[1] ), .CO(
        \add_13_root_add_199_I16/carry[2] ), .S(N77) );
  NR2D1 U242 ( .A1(n224), .A2(n216), .ZN(\shifted_products[2][1] ) );
  FA1D0 U243 ( .A(\shifted_products[6][1] ), .B(\shifted_products[7][1] ), 
        .CI(\add_11_root_add_199_I16/carry[1] ), .CO(
        \add_11_root_add_199_I16/carry[2] ), .S(N124) );
  NR2D1 U244 ( .A1(n298), .A2(n113), .ZN(\shifted_products[6][1] ) );
  FA1D0 U245 ( .A(\shifted_products[8][1] ), .B(\shifted_products[9][1] ), 
        .CI(\add_10_root_add_199_I16/carry[1] ), .CO(
        \add_10_root_add_199_I16/carry[2] ), .S(N149) );
  NR2D1 U246 ( .A1(n319), .A2(n96), .ZN(\shifted_products[9][1] ) );
  NR2D1 U247 ( .A1(n225), .A2(n101), .ZN(\shifted_products[8][1] ) );
  FA1D0 U248 ( .A(\shifted_products[10][1] ), .B(\shifted_products[11][1] ), 
        .CI(\add_9_root_add_199_I16/carry[1] ), .CO(
        \add_9_root_add_199_I16/carry[2] ), .S(N175) );
  NR2D1 U249 ( .A1(n319), .A2(n85), .ZN(\shifted_products[11][1] ) );
  NR2D1 U250 ( .A1(n298), .A2(n67), .ZN(\shifted_products[14][1] ) );
  FA1D0 U251 ( .A(\shifted_products[4][1] ), .B(\shifted_products[5][1] ), 
        .CI(\add_12_root_add_199_I16/carry[1] ), .CO(
        \add_12_root_add_199_I16/carry[2] ), .S(N100) );
  NR2D1 U252 ( .A1(n286), .A2(n125), .ZN(\shifted_products[4][1] ) );
  FA1D0 U253 ( .A(\shifted_products[12][1] ), .B(\shifted_products[13][1] ), 
        .CI(\add_8_root_add_199_I16/carry[1] ), .CO(
        \add_8_root_add_199_I16/carry[2] ), .S(N202) );
  NR2D1 U254 ( .A1(n319), .A2(n97), .ZN(\shifted_products[9][0] ) );
  FA1D0 U255 ( .A(\products[0][5] ), .B(\shifted_products[1][5] ), .CI(
        \add_14_root_add_199_I16/carry[5] ), .CO(
        \add_14_root_add_199_I16/carry[6] ), .S(N59) );
  NR2D1 U256 ( .A1(n298), .A2(n114), .ZN(\shifted_products[6][0] ) );
  INVD1 U257 ( .I(\products[12][5] ), .ZN(n75) );
  FA1D0 U258 ( .A(\shifted_products[2][7] ), .B(\shifted_products[3][7] ), 
        .CI(\add_13_root_add_199_I16/carry[7] ), .CO(
        \add_13_root_add_199_I16/carry[8] ), .S(N83) );
  OAI21D1 U259 ( .A1(n283), .A2(n131), .B(n282), .ZN(\shifted_products[3][7] )
         );
  OAI21D1 U260 ( .A1(n283), .A2(n134), .B(n279), .ZN(\shifted_products[2][7] )
         );
  INVD1 U261 ( .I(\products[1][5] ), .ZN(n218) );
  INVD1 U262 ( .I(n309), .ZN(n236) );
  OAI21D1 U263 ( .A1(n283), .A2(n129), .B(n282), .ZN(\shifted_products[3][9] )
         );
  OAI22D1 U264 ( .A1(n240), .A2(n71), .B1(n321), .B2(n69), .ZN(
        \shifted_products[13][11] ) );
  OAI22D1 U265 ( .A1(n240), .A2(n94), .B1(n321), .B2(n92), .ZN(
        \shifted_products[9][9] ) );
  OAI22D1 U266 ( .A1(n236), .A2(n105), .B1(n299), .B2(n103), .ZN(
        \shifted_products[7][11] ) );
  INVD1 U267 ( .I(\products[9][5] ), .ZN(n92) );
  INVD1 U268 ( .I(\products[11][5] ), .ZN(n81) );
  OAI21D1 U269 ( .A1(n29), .A2(n83), .B(n251), .ZN(\shifted_products[11][13] )
         );
  OAI22D1 U270 ( .A1(n240), .A2(n70), .B1(n321), .B2(n69), .ZN(
        \shifted_products[13][12] ) );
  OAI22D1 U271 ( .A1(n240), .A2(n93), .B1(n321), .B2(n92), .ZN(
        \shifted_products[9][10] ) );
  ND2D1 U272 ( .A1(\products[14][5] ), .A2(n267), .ZN(n260) );
  ND2D1 U273 ( .A1(\products[10][5] ), .A2(n267), .ZN(n250) );
  ND2D1 U274 ( .A1(\products[15][5] ), .A2(n267), .ZN(n268) );
  ND2D1 U275 ( .A1(\products[11][5] ), .A2(n267), .ZN(n251) );
  INVD1 U276 ( .I(n261), .ZN(n230) );
  INVD1 U277 ( .I(n316), .ZN(n240) );
  OAI22D1 U278 ( .A1(n291), .A2(n116), .B1(n290), .B2(n115), .ZN(
        \shifted_products[5][8] ) );
  INVD1 U279 ( .I(n262), .ZN(n235) );
  INVD1 U280 ( .I(n252), .ZN(n233) );
  OA22D0 U281 ( .A1(n236), .A2(n104), .B1(n299), .B2(n103), .Z(n27) );
  INVD1 U282 ( .I(n270), .ZN(n231) );
  INVD1 U283 ( .I(n304), .ZN(n237) );
  INVD1 U284 ( .I(n272), .ZN(n239) );
  INVD1 U285 ( .I(n287), .ZN(n234) );
  NR2D1 U286 ( .A1(n319), .A2(n86), .ZN(\shifted_products[11][0] ) );
  INVD1 U287 ( .I(\products[3][5] ), .ZN(n127) );
  OA21D1 U288 ( .A1(n29), .A2(n82), .B(n251), .Z(n28) );
  INVD1 U289 ( .I(n320), .ZN(n238) );
  ND2D1 U290 ( .A1(n292), .A2(n301), .ZN(n287) );
  INVD1 U291 ( .I(\products[15][3] ), .ZN(n59) );
  ND2D1 U292 ( .A1(n301), .A2(n307), .ZN(n280) );
  NR2D1 U293 ( .A1(n1), .A2(n223), .ZN(\shifted_products[1][0] ) );
  INVD1 U294 ( .I(\products[3][3] ), .ZN(n129) );
  FA1D0 U295 ( .A(\shifted_products[6][7] ), .B(\shifted_products[7][7] ), 
        .CI(\add_11_root_add_199_I16/carry[7] ), .CO(
        \add_11_root_add_199_I16/carry[8] ), .S(N130) );
  OAI222D0 U296 ( .A1(n224), .A2(n109), .B1(n236), .B2(n113), .C1(n312), .C2(
        n111), .ZN(\shifted_products[6][7] ) );
  OAI222D0 U297 ( .A1(n237), .A2(n105), .B1(n311), .B2(n103), .C1(n107), .C2(
        n312), .ZN(\shifted_products[7][7] ) );
  FA1D0 U298 ( .A(\shifted_products[8][7] ), .B(\shifted_products[9][7] ), 
        .CI(\add_10_root_add_199_I16/carry[7] ), .CO(
        \add_10_root_add_199_I16/carry[8] ), .S(N155) );
  OAI222D0 U299 ( .A1(n240), .A2(n96), .B1(n225), .B2(n92), .C1(n94), .C2(n320), .ZN(\shifted_products[9][7] ) );
  OAI222D0 U300 ( .A1(n31), .A2(n58), .B1(n231), .B2(n60), .C1(n62), .C2(n301), 
        .ZN(\shifted_products[15][4] ) );
  OAI222D0 U301 ( .A1(n5), .A2(n64), .B1(n230), .B2(n66), .C1(n312), .C2(n68), 
        .ZN(\shifted_products[14][4] ) );
  OAI222D0 U302 ( .A1(n31), .A2(n57), .B1(n231), .B2(n59), .C1(n61), .C2(n301), 
        .ZN(\shifted_products[15][5] ) );
  OAI222D0 U303 ( .A1(n5), .A2(n63), .B1(n230), .B2(n65), .C1(n312), .C2(n67), 
        .ZN(\shifted_products[14][5] ) );
  OAI222D0 U304 ( .A1(n226), .A2(n63), .B1(n235), .B2(n67), .C1(n312), .C2(n65), .ZN(\shifted_products[14][7] ) );
  OAI222D0 U305 ( .A1(n239), .A2(n61), .B1(n274), .B2(n57), .C1(n59), .C2(n301), .ZN(\shifted_products[15][7] ) );
  FA1D0 U306 ( .A(\shifted_products[8][4] ), .B(\shifted_products[9][4] ), 
        .CI(\add_10_root_add_199_I16/carry[4] ), .CO(
        \add_10_root_add_199_I16/carry[5] ), .S(N152) );
  OAI222D0 U307 ( .A1(n319), .A2(n93), .B1(n232), .B2(n95), .C1(n320), .C2(n97), .ZN(\shifted_products[9][4] ) );
  FA1D0 U308 ( .A(\shifted_products[10][4] ), .B(\shifted_products[11][4] ), 
        .CI(\add_9_root_add_199_I16/carry[4] ), .CO(
        \add_9_root_add_199_I16/carry[5] ), .S(N178) );
  OAI222D0 U309 ( .A1(n319), .A2(n82), .B1(n4), .B2(n84), .C1(n320), .C2(n86), 
        .ZN(\shifted_products[11][4] ) );
  FA1D0 U310 ( .A(\shifted_products[12][7] ), .B(\shifted_products[13][7] ), 
        .CI(\add_8_root_add_199_I16/carry[7] ), .CO(
        \add_8_root_add_199_I16/carry[8] ), .S(N208) );
  OAI222D0 U311 ( .A1(n234), .A2(n71), .B1(n259), .B2(n69), .C1(n320), .C2(n73), .ZN(\shifted_products[13][7] ) );
  FA1D0 U312 ( .A(\shifted_products[8][5] ), .B(\shifted_products[9][5] ), 
        .CI(\add_10_root_add_199_I16/carry[5] ), .CO(
        \add_10_root_add_199_I16/carry[6] ), .S(N153) );
  OAI222D0 U313 ( .A1(n319), .A2(n92), .B1(n232), .B2(n94), .C1(n320), .C2(n96), .ZN(\shifted_products[9][5] ) );
  FA1D0 U314 ( .A(\shifted_products[10][5] ), .B(\shifted_products[11][5] ), 
        .CI(\add_9_root_add_199_I16/carry[5] ), .CO(
        \add_9_root_add_199_I16/carry[6] ), .S(N179) );
  OAI222D0 U315 ( .A1(n319), .A2(n81), .B1(n4), .B2(n83), .C1(n320), .C2(n85), 
        .ZN(\shifted_products[11][5] ) );
  OAI21D1 U316 ( .A1(n249), .A2(n90), .B(n248), .ZN(\shifted_products[10][5] )
         );
  FA1D0 U317 ( .A(\shifted_products[6][9] ), .B(\shifted_products[7][9] ), 
        .CI(\add_11_root_add_199_I16/carry[9] ), .CO(
        \add_11_root_add_199_I16/carry[10] ), .S(N132) );
  OAI222D0 U318 ( .A1(n224), .A2(n103), .B1(n236), .B2(n107), .C1(n312), .C2(
        n105), .ZN(\shifted_products[7][9] ) );
  OAI22D1 U319 ( .A1(n236), .A2(n111), .B1(n299), .B2(n109), .ZN(
        \shifted_products[6][9] ) );
  FA1D0 U320 ( .A(\shifted_products[12][9] ), .B(\shifted_products[13][9] ), 
        .CI(\add_8_root_add_199_I16/carry[9] ), .CO(
        \add_8_root_add_199_I16/carry[10] ), .S(N210) );
  OAI222D0 U321 ( .A1(n240), .A2(n73), .B1(n225), .B2(n69), .C1(n320), .C2(n71), .ZN(\shifted_products[13][9] ) );
  FA1D0 U322 ( .A(\shifted_products[10][7] ), .B(\shifted_products[11][7] ), 
        .CI(\add_9_root_add_199_I16/carry[7] ), .CO(
        \add_9_root_add_199_I16/carry[8] ), .S(N181) );
  OAI222D0 U323 ( .A1(n226), .A2(n81), .B1(n233), .B2(n85), .C1(n320), .C2(n83), .ZN(\shifted_products[11][7] ) );
  OAI21D1 U324 ( .A1(n249), .A2(n88), .B(n248), .ZN(\shifted_products[10][7] )
         );
  FA1D0 U325 ( .A(\shifted_products[10][8] ), .B(\shifted_products[11][8] ), 
        .CI(\add_9_root_add_199_I16/carry[8] ), .CO(
        \add_9_root_add_199_I16/carry[9] ), .S(N182) );
  OAI222D0 U326 ( .A1(n226), .A2(n81), .B1(n233), .B2(n84), .C1(n320), .C2(n82), .ZN(\shifted_products[11][8] ) );
  OAI221D0 U327 ( .A1(n249), .A2(n87), .B1(n30), .B2(n91), .C(n248), .ZN(
        \shifted_products[10][8] ) );
  FA1D0 U328 ( .A(\shifted_products[10][10] ), .B(\shifted_products[11][10] ), 
        .CI(\add_9_root_add_199_I16/carry[10] ), .CO(
        \add_9_root_add_199_I16/carry[11] ), .S(N184) );
  OAI222D0 U329 ( .A1(n233), .A2(n82), .B1(n254), .B2(n81), .C1(n29), .C2(n86), 
        .ZN(\shifted_products[11][10] ) );
  OAI21D1 U330 ( .A1(n29), .A2(n89), .B(n250), .ZN(\shifted_products[10][10] )
         );
  FA1D0 U331 ( .A(\shifted_products[12][4] ), .B(\shifted_products[13][4] ), 
        .CI(\add_8_root_add_199_I16/carry[4] ), .CO(
        \add_8_root_add_199_I16/carry[5] ), .S(N205) );
  OAI222D0 U332 ( .A1(n234), .A2(n74), .B1(n228), .B2(n72), .C1(n31), .C2(n70), 
        .ZN(\shifted_products[13][4] ) );
  FA1D0 U333 ( .A(\shifted_products[6][5] ), .B(\shifted_products[7][5] ), 
        .CI(\add_11_root_add_199_I16/carry[5] ), .CO(
        \add_11_root_add_199_I16/carry[6] ), .S(N128) );
  OAI222D0 U334 ( .A1(n5), .A2(n109), .B1(n229), .B2(n111), .C1(n312), .C2(
        n113), .ZN(\shifted_products[6][5] ) );
  OAI222D0 U335 ( .A1(n227), .A2(n105), .B1(n237), .B2(n107), .C1(n103), .C2(
        n32), .ZN(\shifted_products[7][5] ) );
  OAI222D0 U336 ( .A1(n283), .A2(n132), .B1(n281), .B2(n128), .C1(n2), .C2(
        n127), .ZN(\shifted_products[3][6] ) );
  FA1D0 U337 ( .A(\shifted_products[4][4] ), .B(\shifted_products[5][4] ), 
        .CI(\add_12_root_add_199_I16/carry[4] ), .CO(
        \add_12_root_add_199_I16/carry[5] ), .S(N103) );
  OAI222D0 U338 ( .A1(n288), .A2(n118), .B1(n291), .B2(n120), .C1(n31), .C2(
        n116), .ZN(\shifted_products[5][4] ) );
  FA1D0 U339 ( .A(\shifted_products[6][4] ), .B(\shifted_products[7][4] ), 
        .CI(\add_11_root_add_199_I16/carry[4] ), .CO(
        \add_11_root_add_199_I16/carry[5] ), .S(N127) );
  OAI222D0 U340 ( .A1(n5), .A2(n110), .B1(n229), .B2(n112), .C1(n312), .C2(
        n114), .ZN(\shifted_products[6][4] ) );
  OAI222D0 U341 ( .A1(n227), .A2(n106), .B1(n237), .B2(n108), .C1(n104), .C2(
        n32), .ZN(\shifted_products[7][4] ) );
  FA1D0 U342 ( .A(\shifted_products[8][6] ), .B(\shifted_products[9][6] ), 
        .CI(\add_10_root_add_199_I16/carry[6] ), .CO(
        \add_10_root_add_199_I16/carry[7] ), .S(N154) );
  OAI221D0 U343 ( .A1(n319), .A2(n92), .B1(n95), .B2(n320), .C(n318), .ZN(
        \shifted_products[9][6] ) );
  OAI221D0 U344 ( .A1(n31), .A2(n57), .B1(n60), .B2(n301), .C(n271), .ZN(
        \shifted_products[15][6] ) );
  OAI221D0 U345 ( .A1(n5), .A2(n63), .B1(n312), .B2(n66), .C(n263), .ZN(
        \shifted_products[14][6] ) );
  FA1D0 U346 ( .A(\shifted_products[10][6] ), .B(\shifted_products[11][6] ), 
        .CI(\add_9_root_add_199_I16/carry[6] ), .CO(
        \add_9_root_add_199_I16/carry[7] ), .S(N180) );
  OAI221D0 U347 ( .A1(n319), .A2(n81), .B1(n320), .B2(n84), .C(n253), .ZN(
        \shifted_products[11][6] ) );
  OAI21D1 U348 ( .A1(n249), .A2(n89), .B(n248), .ZN(\shifted_products[10][6] )
         );
  OAI221D0 U349 ( .A1(n276), .A2(n61), .B1(n239), .B2(n59), .C(n275), .ZN(
        \shifted_products[15][9] ) );
  OAI221D0 U350 ( .A1(n276), .A2(n60), .B1(n239), .B2(n58), .C(n275), .ZN(
        \shifted_products[15][10] ) );
  OAI222D0 U351 ( .A1(n235), .A2(n64), .B1(n264), .B2(n63), .C1(n29), .C2(n68), 
        .ZN(\shifted_products[14][10] ) );
  FA1D0 U352 ( .A(\shifted_products[6][8] ), .B(\shifted_products[7][8] ), 
        .CI(\add_11_root_add_199_I16/carry[8] ), .CO(
        \add_11_root_add_199_I16/carry[9] ), .S(N131) );
  OAI221D0 U353 ( .A1(n311), .A2(n103), .B1(n237), .B2(n104), .C(n310), .ZN(
        \shifted_products[7][8] ) );
  OAI222D0 U354 ( .A1(n224), .A2(n109), .B1(n236), .B2(n112), .C1(n312), .C2(
        n110), .ZN(\shifted_products[6][8] ) );
  OAI221D0 U355 ( .A1(n276), .A2(n58), .B1(n62), .B2(n30), .C(n266), .ZN(
        \shifted_products[15][12] ) );
  OAI21D1 U356 ( .A1(n29), .A2(n66), .B(n260), .ZN(\shifted_products[14][12] )
         );
  FA1D0 U357 ( .A(\shifted_products[10][2] ), .B(\shifted_products[11][2] ), 
        .CI(\add_9_root_add_199_I16/carry[2] ), .CO(
        \add_9_root_add_199_I16/carry[3] ), .S(N176) );
  FA1D0 U358 ( .A(\shifted_products[4][2] ), .B(\shifted_products[5][2] ), 
        .CI(\add_12_root_add_199_I16/carry[2] ), .CO(
        \add_12_root_add_199_I16/carry[3] ), .S(N101) );
  FA1D0 U359 ( .A(\shifted_products[2][2] ), .B(\shifted_products[3][2] ), 
        .CI(\add_13_root_add_199_I16/carry[2] ), .CO(
        \add_13_root_add_199_I16/carry[3] ), .S(N78) );
  FA1D0 U360 ( .A(\shifted_products[2][4] ), .B(\shifted_products[3][4] ), 
        .CI(\add_13_root_add_199_I16/carry[4] ), .CO(
        \add_13_root_add_199_I16/carry[5] ), .S(N80) );
  FA1D0 U361 ( .A(\shifted_products[6][2] ), .B(\shifted_products[7][2] ), 
        .CI(\add_11_root_add_199_I16/carry[2] ), .CO(
        \add_11_root_add_199_I16/carry[3] ), .S(N125) );
  OAI22D1 U362 ( .A1(n106), .A2(n31), .B1(n227), .B2(n108), .ZN(
        \shifted_products[7][2] ) );
  FA1D0 U363 ( .A(\shifted_products[12][2] ), .B(\shifted_products[13][2] ), 
        .CI(\add_8_root_add_199_I16/carry[2] ), .CO(
        \add_8_root_add_199_I16/carry[3] ), .S(N203) );
  FA1D0 U364 ( .A(\shifted_products[8][2] ), .B(\shifted_products[9][2] ), 
        .CI(\add_10_root_add_199_I16/carry[2] ), .CO(
        \add_10_root_add_199_I16/carry[3] ), .S(N150) );
  FA1D0 U365 ( .A(\products[0][3] ), .B(\shifted_products[1][3] ), .CI(
        \add_14_root_add_199_I16/carry[3] ), .CO(
        \add_14_root_add_199_I16/carry[4] ), .S(N57) );
  FA1D0 U366 ( .A(\products[0][4] ), .B(\shifted_products[1][4] ), .CI(
        \add_14_root_add_199_I16/carry[4] ), .CO(
        \add_14_root_add_199_I16/carry[5] ), .S(N58) );
  FA1D0 U367 ( .A(\products[0][1] ), .B(\shifted_products[1][1] ), .CI(
        \add_14_root_add_199_I16/carry[1] ), .CO(
        \add_14_root_add_199_I16/carry[2] ), .S(N55) );
  INVD1 U368 ( .I(\products[12][4] ), .ZN(n76) );
  INVD1 U369 ( .I(\products[3][4] ), .ZN(n128) );
  OAI222D0 U370 ( .A1(n224), .A2(n103), .B1(n236), .B2(n106), .C1(n312), .C2(
        n104), .ZN(\shifted_products[7][10] ) );
  OAI22D1 U371 ( .A1(n236), .A2(n110), .B1(n299), .B2(n109), .ZN(
        \shifted_products[6][10] ) );
  OAI21D1 U372 ( .A1(n60), .A2(n30), .B(n268), .ZN(\shifted_products[15][14] )
         );
  OAI21D1 U373 ( .A1(n30), .A2(n64), .B(n260), .ZN(\shifted_products[14][14] )
         );
  FA1D0 U374 ( .A(\shifted_products[10][12] ), .B(\shifted_products[11][12] ), 
        .CI(\add_9_root_add_199_I16/carry[12] ), .CO(
        \add_9_root_add_199_I16/carry[13] ), .S(N186) );
  OAI21D1 U375 ( .A1(n29), .A2(n84), .B(n251), .ZN(\shifted_products[11][12] )
         );
  OAI21D1 U376 ( .A1(n29), .A2(n87), .B(n250), .ZN(\shifted_products[10][12] )
         );
  OAI21D1 U377 ( .A1(n315), .A2(n76), .B(n255), .ZN(\shifted_products[12][10] ) );
  OAI222D0 U378 ( .A1(n240), .A2(n72), .B1(n225), .B2(n69), .C1(n320), .C2(n70), .ZN(\shifted_products[13][10] ) );
  FA1D0 U379 ( .A(\shifted_products[8][8] ), .B(\shifted_products[9][8] ), 
        .CI(\add_10_root_add_199_I16/carry[8] ), .CO(
        \add_10_root_add_199_I16/carry[9] ), .S(N156) );
  OAI21D1 U380 ( .A1(n315), .A2(n98), .B(n314), .ZN(\shifted_products[8][8] )
         );
  OAI222D0 U381 ( .A1(n240), .A2(n95), .B1(n225), .B2(n92), .C1(n320), .C2(n93), .ZN(\shifted_products[9][8] ) );
  OAI22D1 U382 ( .A1(n286), .A2(n121), .B1(n285), .B2(n122), .ZN(
        \shifted_products[4][6] ) );
  OAI222D0 U383 ( .A1(n288), .A2(n116), .B1(n291), .B2(n118), .C1(n31), .C2(
        n115), .ZN(\shifted_products[5][6] ) );
  NR2D1 U384 ( .A1(n32), .A2(n120), .ZN(\shifted_products[5][0] ) );
  INVD1 U385 ( .I(\products[1][4] ), .ZN(n219) );
  INVD1 U386 ( .I(\products[1][3] ), .ZN(n220) );
  INVD1 U387 ( .I(\products[2][4] ), .ZN(n133) );
  CKBD1 U388 ( .I(n293), .Z(n30) );
  ND2D1 U389 ( .A1(n320), .A2(n312), .ZN(n272) );
  INVD1 U390 ( .I(\products[11][3] ), .ZN(n83) );
  INVD1 U391 ( .I(\products[9][3] ), .ZN(n94) );
  INVD1 U392 ( .I(\products[11][4] ), .ZN(n82) );
  ND2D1 U393 ( .A1(n301), .A2(n269), .ZN(n261) );
  ND2D1 U394 ( .A1(n269), .A2(n307), .ZN(n270) );
  ND2D1 U395 ( .A1(n302), .A2(n301), .ZN(n304) );
  INVD1 U396 ( .I(\products[9][4] ), .ZN(n93) );
  INVD1 U397 ( .I(\products[10][4] ), .ZN(n87) );
  INVD1 U398 ( .I(\products[10][3] ), .ZN(n88) );
  INVD1 U399 ( .I(\products[8][4] ), .ZN(n98) );
  INVD1 U400 ( .I(\products[2][3] ), .ZN(n134) );
  INVD1 U401 ( .I(\products[8][3] ), .ZN(n99) );
  CKBD1 U402 ( .I(n293), .Z(n29) );
  INVD1 U403 ( .I(\products[15][1] ), .ZN(n61) );
  INVD1 U404 ( .I(\products[7][1] ), .ZN(n107) );
  INVD1 U405 ( .I(\products[14][1] ), .ZN(n67) );
  INVD1 U406 ( .I(\products[13][1] ), .ZN(n73) );
  INVD1 U407 ( .I(\products[6][1] ), .ZN(n113) );
  INVD1 U408 ( .I(\products[5][1] ), .ZN(n119) );
  INVD1 U409 ( .I(\products[12][1] ), .ZN(n79) );
  INVD1 U410 ( .I(\products[3][1] ), .ZN(n131) );
  INVD1 U411 ( .I(\products[4][1] ), .ZN(n125) );
  INVD1 U412 ( .I(\products[1][1] ), .ZN(n222) );
  INVD1 U413 ( .I(\products[2][1] ), .ZN(n216) );
  INVD1 U414 ( .I(\products[15][0] ), .ZN(n62) );
  INVD1 U415 ( .I(\products[14][0] ), .ZN(n68) );
  INVD1 U416 ( .I(\products[11][0] ), .ZN(n86) );
  INVD1 U417 ( .I(\products[7][0] ), .ZN(n108) );
  INVD1 U418 ( .I(\products[6][0] ), .ZN(n114) );
  INVD1 U419 ( .I(\products[9][0] ), .ZN(n97) );
  INVD1 U420 ( .I(\products[11][1] ), .ZN(n85) );
  INVD1 U421 ( .I(\products[9][1] ), .ZN(n96) );
  INVD1 U422 ( .I(\products[10][1] ), .ZN(n90) );
  INVD1 U423 ( .I(\products[8][1] ), .ZN(n101) );
  INVD1 U424 ( .I(\products[15][2] ), .ZN(n60) );
  INVD1 U425 ( .I(\products[14][2] ), .ZN(n66) );
  INVD1 U426 ( .I(\products[13][2] ), .ZN(n72) );
  INVD1 U427 ( .I(\products[7][2] ), .ZN(n106) );
  FA1D0 U428 ( .A(\shifted_products[6][6] ), .B(\shifted_products[7][6] ), 
        .CI(\add_11_root_add_199_I16/carry[6] ), .CO(
        \add_11_root_add_199_I16/carry[7] ), .S(N129) );
  OAI221D0 U429 ( .A1(n103), .A2(n31), .B1(n312), .B2(n108), .C(n305), .ZN(
        \shifted_products[7][6] ) );
  OAI221D0 U430 ( .A1(n5), .A2(n109), .B1(n312), .B2(n112), .C(n297), .ZN(
        \shifted_products[6][6] ) );
  FA1D0 U431 ( .A(\shifted_products[12][6] ), .B(\shifted_products[13][6] ), 
        .CI(\add_8_root_add_199_I16/carry[6] ), .CO(
        \add_8_root_add_199_I16/carry[7] ), .S(N207) );
  OAI222D0 U432 ( .A1(n286), .A2(n75), .B1(n284), .B2(n76), .C1(n315), .C2(n80), .ZN(\shifted_products[12][6] ) );
  OAI221D0 U433 ( .A1(n31), .A2(n69), .B1(n320), .B2(n74), .C(n257), .ZN(
        \shifted_products[13][6] ) );
  OAI222D0 U434 ( .A1(n226), .A2(n63), .B1(n235), .B2(n66), .C1(n312), .C2(n64), .ZN(\shifted_products[14][8] ) );
  OAI221D0 U435 ( .A1(n274), .A2(n57), .B1(n276), .B2(n62), .C(n273), .ZN(
        \shifted_products[15][8] ) );
  FA1D0 U436 ( .A(\shifted_products[12][8] ), .B(\shifted_products[13][8] ), 
        .CI(\add_8_root_add_199_I16/carry[8] ), .CO(
        \add_8_root_add_199_I16/carry[9] ), .S(N209) );
  OAI221D0 U437 ( .A1(n259), .A2(n69), .B1(n240), .B2(n74), .C(n258), .ZN(
        \shifted_products[13][8] ) );
  FA1D0 U438 ( .A(\products[0][2] ), .B(\shifted_products[1][2] ), .CI(
        \add_14_root_add_199_I16/carry[2] ), .CO(
        \add_14_root_add_199_I16/carry[3] ), .S(N56) );
  INVD1 U439 ( .I(\products[1][2] ), .ZN(n221) );
  INVD1 U440 ( .I(\products[11][2] ), .ZN(n84) );
  INVD1 U441 ( .I(\products[9][2] ), .ZN(n95) );
  INVD1 U442 ( .I(\products[3][2] ), .ZN(n130) );
  INVD1 U443 ( .I(\products[10][2] ), .ZN(n89) );
  INVD1 U444 ( .I(\products[2][2] ), .ZN(n135) );
  INVD1 U445 ( .I(\products[8][2] ), .ZN(n100) );
  INVD1 U446 ( .I(\products[13][0] ), .ZN(n74) );
  INVD1 U447 ( .I(\products[5][0] ), .ZN(n120) );
  INVD1 U448 ( .I(\products[12][0] ), .ZN(n80) );
  INVD1 U449 ( .I(\products[1][0] ), .ZN(n223) );
  INVD1 U450 ( .I(\products[4][0] ), .ZN(n126) );
  INVD1 U451 ( .I(\products[10][0] ), .ZN(n91) );
  INVD1 U452 ( .I(\products[3][0] ), .ZN(n132) );
  INVD1 U453 ( .I(\products[2][0] ), .ZN(n217) );
  INVD1 U454 ( .I(\products[8][0] ), .ZN(n102) );
  INR3D0 U455 ( .A1(input_bitwidth[2]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[1]), .ZN(n243) );
  INR3D0 U456 ( .A1(weight_bitwidth[0]), .B1(weight_bitwidth[1]), .B2(
        weight_bitwidth[2]), .ZN(n242) );
  INR3D0 U457 ( .A1(input_bitwidth[0]), .B1(input_bitwidth[1]), .B2(
        input_bitwidth[2]), .ZN(n246) );
  INR3D0 U458 ( .A1(input_bitwidth[1]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[2]), .ZN(n245) );
  INR3D0 U459 ( .A1(weight_bitwidth[1]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[2]), .ZN(n247) );
  INR3D0 U460 ( .A1(weight_bitwidth[2]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[1]), .ZN(n244) );
  TIEL U461 ( .ZN(n241) );
  AN2D0 U462 ( .A1(\shifted_products[2][0] ), .A2(\shifted_products[3][0] ), 
        .Z(\add_13_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U463 ( .A1(\shifted_products[3][0] ), .A2(\shifted_products[2][0] ), 
        .Z(N76) );
  AN2D0 U464 ( .A1(\products[0][0] ), .A2(\shifted_products[1][0] ), .Z(
        \add_14_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U465 ( .A1(\shifted_products[1][0] ), .A2(\products[0][0] ), .Z(N54) );
  AN2D0 U466 ( .A1(\shifted_products[12][0] ), .A2(\shifted_products[13][0] ), 
        .Z(\add_8_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U467 ( .A1(\shifted_products[13][0] ), .A2(
        \shifted_products[12][0] ), .Z(N201) );
  AN2D0 U468 ( .A1(\shifted_products[6][0] ), .A2(\shifted_products[7][0] ), 
        .Z(\add_11_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U469 ( .A1(\shifted_products[7][0] ), .A2(\shifted_products[6][0] ), 
        .Z(N123) );
  AN2D0 U470 ( .A1(\shifted_products[4][0] ), .A2(\shifted_products[5][0] ), 
        .Z(\add_12_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U471 ( .A1(\shifted_products[5][0] ), .A2(\shifted_products[4][0] ), 
        .Z(N99) );
  AN2D0 U472 ( .A1(\shifted_products[8][0] ), .A2(\shifted_products[9][0] ), 
        .Z(\add_10_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U473 ( .A1(\shifted_products[9][0] ), .A2(\shifted_products[8][0] ), 
        .Z(N148) );
  AN2D0 U474 ( .A1(\shifted_products[10][0] ), .A2(\shifted_products[11][0] ), 
        .Z(\add_9_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U475 ( .A1(\shifted_products[11][0] ), .A2(
        \shifted_products[10][0] ), .Z(N174) );
  XOR3D0 U476 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[13][11] ), .A3(\products[12][5] ), .Z(N212) );
  XOR3D0 U477 ( .A1(\shifted_products[13][12] ), .A2(n34), .A3(n75), .Z(N213)
         );
  XOR3D0 U478 ( .A1(\products[13][5] ), .A2(\products[12][5] ), .A3(n35), .Z(
        N214) );
  CKND0 U479 ( .I(\shifted_products[13][12] ), .ZN(n37) );
  XNR3D0 U480 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \shifted_products[11][13] ), .A3(n38), .ZN(N187) );
  XNR3D0 U481 ( .A1(n28), .A2(n39), .A3(n38), .ZN(N188) );
  XNR3D0 U482 ( .A1(\products[11][5] ), .A2(n38), .A3(n40), .ZN(N189) );
  OAI222D0 U483 ( .A1(n39), .A2(n38), .B1(n39), .B2(n28), .C1(n38), .C2(n28), 
        .ZN(n40) );
  CKND0 U484 ( .I(\products[10][5] ), .ZN(n38) );
  XOR3D0 U485 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[9][9] ), .A3(\products[8][5] ), .Z(N157) );
  XOR3D0 U486 ( .A1(\shifted_products[9][10] ), .A2(n41), .A3(n42), .Z(N158)
         );
  XOR3D0 U487 ( .A1(\products[9][5] ), .A2(\products[8][5] ), .A3(n43), .Z(
        N159) );
  OAI222D0 U488 ( .A1(n41), .A2(n42), .B1(n41), .B2(n45), .C1(n42), .C2(n45), 
        .ZN(n43) );
  CKND0 U489 ( .I(\shifted_products[9][10] ), .ZN(n45) );
  CKND0 U490 ( .I(\products[8][5] ), .ZN(n42) );
  XNR3D0 U491 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[7][11] ), .A3(n109), .ZN(N134) );
  XNR3D0 U492 ( .A1(n27), .A2(n46), .A3(n109), .ZN(N135) );
  XNR3D0 U493 ( .A1(\products[7][5] ), .A2(n109), .A3(n47), .ZN(N136) );
  XOR3D0 U494 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(
        \shifted_products[5][7] ), .A3(\products[4][5] ), .Z(N106) );
  XOR3D0 U495 ( .A1(\shifted_products[5][8] ), .A2(n48), .A3(n121), .Z(N107)
         );
  XOR3D0 U496 ( .A1(\products[5][5] ), .A2(\products[4][5] ), .A3(n49), .Z(
        N108) );
  CKND0 U497 ( .I(\shifted_products[5][8] ), .ZN(n51) );
  XNR3D0 U498 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .A3(n52), .ZN(N85) );
  XNR3D0 U499 ( .A1(n26), .A2(n53), .A3(n52), .ZN(N86) );
  XNR3D0 U500 ( .A1(\products[3][5] ), .A2(n52), .A3(n54), .ZN(N87) );
  CKND0 U501 ( .I(\products[2][5] ), .ZN(n52) );
  XNR3D0 U502 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[1][6] ), .A3(n55), .ZN(N60) );
  XNR3D0 U503 ( .A1(n218), .A2(n56), .A3(n55), .ZN(N61) );
  CKND0 U504 ( .I(\shifted_products[0][9] ), .ZN(n55) );
endmodule


module fusion_unit_3_DW01_add_0_DW01_add_7 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module fusion_unit_3 ( clk, nRST, input_bitwidth, weight_bitwidth, input_sign, 
        weight_sign, input_forward, weight, psum_in, psum, input_to_right );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  input [3:0] input_sign;
  input [3:0] weight_sign;
  input [31:0] input_forward;
  input [31:0] weight;
  input [31:0] psum_in;
  output [31:0] psum;
  output [31:0] input_to_right;
  input clk, nRST;
  wire   \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] , n2;
  wire   [31:0] shift_add_out;
  assign input_to_right[31] = input_forward[31];
  assign input_to_right[30] = input_forward[30];
  assign input_to_right[29] = input_forward[29];
  assign input_to_right[28] = input_forward[28];
  assign input_to_right[27] = input_forward[27];
  assign input_to_right[26] = input_forward[26];
  assign input_to_right[25] = input_forward[25];
  assign input_to_right[24] = input_forward[24];
  assign input_to_right[23] = input_forward[23];
  assign input_to_right[22] = input_forward[22];
  assign input_to_right[21] = input_forward[21];
  assign input_to_right[20] = input_forward[20];
  assign input_to_right[19] = input_forward[19];
  assign input_to_right[18] = input_forward[18];
  assign input_to_right[17] = input_forward[17];
  assign input_to_right[16] = input_forward[16];
  assign input_to_right[15] = input_forward[15];
  assign input_to_right[14] = input_forward[14];
  assign input_to_right[13] = input_forward[13];
  assign input_to_right[12] = input_forward[12];
  assign input_to_right[11] = input_forward[11];
  assign input_to_right[10] = input_forward[10];
  assign input_to_right[9] = input_forward[9];
  assign input_to_right[8] = input_forward[8];
  assign input_to_right[7] = input_forward[7];
  assign input_to_right[6] = input_forward[6];
  assign input_to_right[5] = input_forward[5];
  assign input_to_right[4] = input_forward[4];
  assign input_to_right[3] = input_forward[3];
  assign input_to_right[2] = input_forward[2];
  assign input_to_right[1] = input_forward[1];
  assign input_to_right[0] = input_forward[0];

  bit_brick_63 \genblk1[0].BB  ( .x(input_forward[1:0]), .y(weight[1:0]), .sx(
        input_sign[0]), .sy(weight_sign[0]), .product({\products[0][5] , 
        \products[0][4] , \products[0][3] , \products[0][2] , \products[0][1] , 
        \products[0][0] }) );
  bit_brick_62 \genblk1[1].BB  ( .x(input_forward[3:2]), .y(weight[3:2]), .sx(
        input_sign[0]), .sy(weight_sign[1]), .product({\products[1][5] , 
        \products[1][4] , \products[1][3] , \products[1][2] , \products[1][1] , 
        \products[1][0] }) );
  bit_brick_61 \genblk1[2].BB  ( .x(input_forward[5:4]), .y(weight[5:4]), .sx(
        input_sign[0]), .sy(weight_sign[2]), .product({\products[2][5] , 
        \products[2][4] , \products[2][3] , \products[2][2] , \products[2][1] , 
        \products[2][0] }) );
  bit_brick_60 \genblk1[3].BB  ( .x(input_forward[7:6]), .y(weight[7:6]), .sx(
        input_sign[0]), .sy(weight_sign[3]), .product({\products[3][5] , 
        \products[3][4] , \products[3][3] , \products[3][2] , \products[3][1] , 
        \products[3][0] }) );
  bit_brick_59 \genblk1[4].BB  ( .x(input_forward[9:8]), .y(weight[9:8]), .sx(
        input_sign[1]), .sy(weight_sign[0]), .product({\products[4][5] , 
        \products[4][4] , \products[4][3] , \products[4][2] , \products[4][1] , 
        \products[4][0] }) );
  bit_brick_58 \genblk1[5].BB  ( .x(input_forward[11:10]), .y(weight[11:10]), 
        .sx(input_sign[1]), .sy(weight_sign[1]), .product({\products[5][5] , 
        \products[5][4] , \products[5][3] , \products[5][2] , \products[5][1] , 
        \products[5][0] }) );
  bit_brick_57 \genblk1[6].BB  ( .x(input_forward[13:12]), .y(weight[13:12]), 
        .sx(input_sign[1]), .sy(weight_sign[2]), .product({\products[6][5] , 
        \products[6][4] , \products[6][3] , \products[6][2] , \products[6][1] , 
        \products[6][0] }) );
  bit_brick_56 \genblk1[7].BB  ( .x(input_forward[15:14]), .y(weight[15:14]), 
        .sx(input_sign[1]), .sy(weight_sign[3]), .product({\products[7][5] , 
        \products[7][4] , \products[7][3] , \products[7][2] , \products[7][1] , 
        \products[7][0] }) );
  bit_brick_55 \genblk1[8].BB  ( .x(input_forward[17:16]), .y(weight[17:16]), 
        .sx(input_sign[2]), .sy(weight_sign[0]), .product({\products[8][5] , 
        \products[8][4] , \products[8][3] , \products[8][2] , \products[8][1] , 
        \products[8][0] }) );
  bit_brick_54 \genblk1[9].BB  ( .x(input_forward[19:18]), .y(weight[19:18]), 
        .sx(input_sign[2]), .sy(weight_sign[1]), .product({\products[9][5] , 
        \products[9][4] , \products[9][3] , \products[9][2] , \products[9][1] , 
        \products[9][0] }) );
  bit_brick_53 \genblk1[10].BB  ( .x(input_forward[21:20]), .y(weight[21:20]), 
        .sx(input_sign[2]), .sy(weight_sign[2]), .product({\products[10][5] , 
        \products[10][4] , \products[10][3] , \products[10][2] , 
        \products[10][1] , \products[10][0] }) );
  bit_brick_52 \genblk1[11].BB  ( .x(input_forward[23:22]), .y(weight[23:22]), 
        .sx(input_sign[2]), .sy(weight_sign[3]), .product({\products[11][5] , 
        \products[11][4] , \products[11][3] , \products[11][2] , 
        \products[11][1] , \products[11][0] }) );
  bit_brick_51 \genblk1[12].BB  ( .x(input_forward[25:24]), .y(weight[25:24]), 
        .sx(input_sign[3]), .sy(weight_sign[0]), .product({\products[12][5] , 
        \products[12][4] , \products[12][3] , \products[12][2] , 
        \products[12][1] , \products[12][0] }) );
  bit_brick_50 \genblk1[13].BB  ( .x(input_forward[27:26]), .y(weight[27:26]), 
        .sx(input_sign[3]), .sy(weight_sign[1]), .product({\products[13][5] , 
        \products[13][4] , \products[13][3] , \products[13][2] , 
        \products[13][1] , \products[13][0] }) );
  bit_brick_49 \genblk1[14].BB  ( .x(input_forward[29:28]), .y(weight[29:28]), 
        .sx(input_sign[3]), .sy(weight_sign[2]), .product({\products[14][5] , 
        \products[14][4] , \products[14][3] , \products[14][2] , 
        \products[14][1] , \products[14][0] }) );
  bit_brick_48 \genblk1[15].BB  ( .x(input_forward[31:30]), .y(weight[31:30]), 
        .sx(input_sign[3]), .sy(weight_sign[3]), .product({\products[15][5] , 
        \products[15][4] , \products[15][3] , \products[15][2] , 
        \products[15][1] , \products[15][0] }) );
  shift_add_3 shift_add ( .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .products({\products[15][5] , \products[15][4] , 
        \products[15][3] , \products[15][2] , \products[15][1] , 
        \products[15][0] , \products[14][5] , \products[14][4] , 
        \products[14][3] , \products[14][2] , \products[14][1] , 
        \products[14][0] , \products[13][5] , \products[13][4] , 
        \products[13][3] , \products[13][2] , \products[13][1] , 
        \products[13][0] , \products[12][5] , \products[12][4] , 
        \products[12][3] , \products[12][2] , \products[12][1] , 
        \products[12][0] , \products[11][5] , \products[11][4] , 
        \products[11][3] , \products[11][2] , \products[11][1] , 
        \products[11][0] , \products[10][5] , \products[10][4] , 
        \products[10][3] , \products[10][2] , \products[10][1] , 
        \products[10][0] , \products[9][5] , \products[9][4] , 
        \products[9][3] , \products[9][2] , \products[9][1] , \products[9][0] , 
        \products[8][5] , \products[8][4] , \products[8][3] , \products[8][2] , 
        \products[8][1] , \products[8][0] , \products[7][5] , \products[7][4] , 
        \products[7][3] , \products[7][2] , \products[7][1] , \products[7][0] , 
        \products[6][5] , \products[6][4] , \products[6][3] , \products[6][2] , 
        \products[6][1] , \products[6][0] , \products[5][5] , \products[5][4] , 
        \products[5][3] , \products[5][2] , \products[5][1] , \products[5][0] , 
        \products[4][5] , \products[4][4] , \products[4][3] , \products[4][2] , 
        \products[4][1] , \products[4][0] , \products[3][5] , \products[3][4] , 
        \products[3][3] , \products[3][2] , \products[3][1] , \products[3][0] , 
        \products[2][5] , \products[2][4] , \products[2][3] , \products[2][2] , 
        \products[2][1] , \products[2][0] , \products[1][5] , \products[1][4] , 
        \products[1][3] , \products[1][2] , \products[1][1] , \products[1][0] , 
        \products[0][5] , \products[0][4] , \products[0][3] , \products[0][2] , 
        \products[0][1] , \products[0][0] }), .shift_add_out(shift_add_out) );
  fusion_unit_3_DW01_add_0_DW01_add_7 add_53 ( .A(shift_add_out), .B(psum_in), 
        .CI(n2), .SUM(psum) );
  TIEL U1 ( .ZN(n2) );
endmodule


module WBUF_ARRAY_SIZE4_DATA_W32_2 ( clk, nRST, WBUF_wr_en, WBUF_data_in, 
        WBUF_data_out );
  input [31:0] WBUF_data_in;
  output [31:0] WBUF_data_out;
  input clk, nRST, WBUF_wr_en;
  wire   n1, n2, n3, n4, n5, n6;

  EDFCNQD1 \WBUF_data_out_reg[31]  ( .D(WBUF_data_in[31]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[31]) );
  EDFCNQD1 \WBUF_data_out_reg[30]  ( .D(WBUF_data_in[30]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[30]) );
  EDFCNQD1 \WBUF_data_out_reg[29]  ( .D(WBUF_data_in[29]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[29]) );
  EDFCNQD1 \WBUF_data_out_reg[28]  ( .D(WBUF_data_in[28]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[28]) );
  EDFCNQD1 \WBUF_data_out_reg[27]  ( .D(WBUF_data_in[27]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[27]) );
  EDFCNQD1 \WBUF_data_out_reg[26]  ( .D(WBUF_data_in[26]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[26]) );
  EDFCNQD1 \WBUF_data_out_reg[25]  ( .D(WBUF_data_in[25]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[25]) );
  EDFCNQD1 \WBUF_data_out_reg[24]  ( .D(WBUF_data_in[24]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[24]) );
  EDFCNQD1 \WBUF_data_out_reg[23]  ( .D(WBUF_data_in[23]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[23]) );
  EDFCNQD1 \WBUF_data_out_reg[22]  ( .D(WBUF_data_in[22]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[22]) );
  EDFCNQD1 \WBUF_data_out_reg[21]  ( .D(WBUF_data_in[21]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[21]) );
  EDFCNQD1 \WBUF_data_out_reg[20]  ( .D(WBUF_data_in[20]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[20]) );
  EDFCNQD1 \WBUF_data_out_reg[19]  ( .D(WBUF_data_in[19]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[19]) );
  EDFCNQD1 \WBUF_data_out_reg[18]  ( .D(WBUF_data_in[18]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[18]) );
  EDFCNQD1 \WBUF_data_out_reg[17]  ( .D(WBUF_data_in[17]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[17]) );
  EDFCNQD1 \WBUF_data_out_reg[16]  ( .D(WBUF_data_in[16]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[16]) );
  EDFCNQD1 \WBUF_data_out_reg[15]  ( .D(WBUF_data_in[15]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[15]) );
  EDFCNQD1 \WBUF_data_out_reg[14]  ( .D(WBUF_data_in[14]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[14]) );
  EDFCNQD1 \WBUF_data_out_reg[13]  ( .D(WBUF_data_in[13]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[13]) );
  EDFCNQD1 \WBUF_data_out_reg[12]  ( .D(WBUF_data_in[12]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[12]) );
  EDFCNQD1 \WBUF_data_out_reg[11]  ( .D(WBUF_data_in[11]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[11]) );
  EDFCNQD1 \WBUF_data_out_reg[10]  ( .D(WBUF_data_in[10]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[10]) );
  EDFCNQD1 \WBUF_data_out_reg[9]  ( .D(WBUF_data_in[9]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[9]) );
  EDFCNQD1 \WBUF_data_out_reg[8]  ( .D(WBUF_data_in[8]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[8]) );
  EDFCNQD1 \WBUF_data_out_reg[7]  ( .D(WBUF_data_in[7]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[7]) );
  EDFCNQD1 \WBUF_data_out_reg[6]  ( .D(WBUF_data_in[6]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[6]) );
  EDFCNQD1 \WBUF_data_out_reg[5]  ( .D(WBUF_data_in[5]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[5]) );
  EDFCNQD1 \WBUF_data_out_reg[4]  ( .D(WBUF_data_in[4]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[4]) );
  EDFCNQD1 \WBUF_data_out_reg[3]  ( .D(WBUF_data_in[3]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[3]) );
  EDFCNQD1 \WBUF_data_out_reg[2]  ( .D(WBUF_data_in[2]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[2]) );
  EDFCNQD1 \WBUF_data_out_reg[1]  ( .D(WBUF_data_in[1]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[1]) );
  EDFCNQD1 \WBUF_data_out_reg[0]  ( .D(WBUF_data_in[0]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[0]) );
  CKBD1 U2 ( .I(WBUF_wr_en), .Z(n5) );
  CKBD1 U3 ( .I(WBUF_wr_en), .Z(n4) );
  CKBD1 U4 ( .I(nRST), .Z(n1) );
  CKBD1 U5 ( .I(nRST), .Z(n2) );
  CKBD1 U6 ( .I(nRST), .Z(n3) );
  CKBD1 U7 ( .I(WBUF_wr_en), .Z(n6) );
endmodule


module w_mux_2 ( clk, nRST, input_bitwidth, rd_en, data_in, data_out );
  input [2:0] input_bitwidth;
  input [31:0] data_in;
  output [31:0] data_out;
  input clk, nRST, rd_en;
  wire   N40, N41, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129,
         n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140,
         n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151,
         n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162,
         n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173,
         n174, n175, n176, n177, n178;
  wire   [1:0] rd_ptr;
  wire   [31:0] next_data_out;

  EDFCNQD1 \rd_ptr_reg[0]  ( .D(N40), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[0]) );
  EDFCNQD1 \rd_ptr_reg[1]  ( .D(N41), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[1]) );
  DFCNQD1 \data_out_reg[31]  ( .D(next_data_out[31]), .CP(clk), .CDN(n1), .Q(
        data_out[31]) );
  DFCNQD1 \data_out_reg[30]  ( .D(next_data_out[30]), .CP(clk), .CDN(n3), .Q(
        data_out[30]) );
  DFCNQD1 \data_out_reg[29]  ( .D(next_data_out[29]), .CP(clk), .CDN(n3), .Q(
        data_out[29]) );
  DFCNQD1 \data_out_reg[28]  ( .D(next_data_out[28]), .CP(clk), .CDN(n3), .Q(
        data_out[28]) );
  DFCNQD1 \data_out_reg[27]  ( .D(next_data_out[27]), .CP(clk), .CDN(n3), .Q(
        data_out[27]) );
  DFCNQD1 \data_out_reg[26]  ( .D(next_data_out[26]), .CP(clk), .CDN(n3), .Q(
        data_out[26]) );
  DFCNQD1 \data_out_reg[25]  ( .D(next_data_out[25]), .CP(clk), .CDN(n2), .Q(
        data_out[25]) );
  DFCNQD1 \data_out_reg[24]  ( .D(next_data_out[24]), .CP(clk), .CDN(n2), .Q(
        data_out[24]) );
  DFCNQD1 \data_out_reg[23]  ( .D(next_data_out[23]), .CP(clk), .CDN(n3), .Q(
        data_out[23]) );
  DFCNQD1 \data_out_reg[22]  ( .D(next_data_out[22]), .CP(clk), .CDN(n2), .Q(
        data_out[22]) );
  DFCNQD1 \data_out_reg[21]  ( .D(next_data_out[21]), .CP(clk), .CDN(n2), .Q(
        data_out[21]) );
  DFCNQD1 \data_out_reg[20]  ( .D(next_data_out[20]), .CP(clk), .CDN(n2), .Q(
        data_out[20]) );
  DFCNQD1 \data_out_reg[19]  ( .D(next_data_out[19]), .CP(clk), .CDN(n2), .Q(
        data_out[19]) );
  DFCNQD1 \data_out_reg[18]  ( .D(next_data_out[18]), .CP(clk), .CDN(n2), .Q(
        data_out[18]) );
  DFCNQD1 \data_out_reg[17]  ( .D(next_data_out[17]), .CP(clk), .CDN(n2), .Q(
        data_out[17]) );
  DFCNQD1 \data_out_reg[16]  ( .D(next_data_out[16]), .CP(clk), .CDN(n2), .Q(
        data_out[16]) );
  DFCNQD1 \data_out_reg[15]  ( .D(next_data_out[15]), .CP(clk), .CDN(n2), .Q(
        data_out[15]) );
  DFCNQD1 \data_out_reg[14]  ( .D(next_data_out[14]), .CP(clk), .CDN(n2), .Q(
        data_out[14]) );
  DFCNQD1 \data_out_reg[13]  ( .D(next_data_out[13]), .CP(clk), .CDN(n2), .Q(
        data_out[13]) );
  DFCNQD1 \data_out_reg[12]  ( .D(next_data_out[12]), .CP(clk), .CDN(n1), .Q(
        data_out[12]) );
  DFCNQD1 \data_out_reg[11]  ( .D(next_data_out[11]), .CP(clk), .CDN(n1), .Q(
        data_out[11]) );
  DFCNQD1 \data_out_reg[10]  ( .D(next_data_out[10]), .CP(clk), .CDN(n1), .Q(
        data_out[10]) );
  DFCNQD1 \data_out_reg[9]  ( .D(next_data_out[9]), .CP(clk), .CDN(n1), .Q(
        data_out[9]) );
  DFCNQD1 \data_out_reg[8]  ( .D(next_data_out[8]), .CP(clk), .CDN(n1), .Q(
        data_out[8]) );
  DFCNQD1 \data_out_reg[7]  ( .D(next_data_out[7]), .CP(clk), .CDN(n1), .Q(
        data_out[7]) );
  DFCNQD1 \data_out_reg[6]  ( .D(next_data_out[6]), .CP(clk), .CDN(n1), .Q(
        data_out[6]) );
  DFCNQD1 \data_out_reg[5]  ( .D(next_data_out[5]), .CP(clk), .CDN(n1), .Q(
        data_out[5]) );
  DFCNQD1 \data_out_reg[4]  ( .D(next_data_out[4]), .CP(clk), .CDN(n1), .Q(
        data_out[4]) );
  DFCNQD1 \data_out_reg[3]  ( .D(next_data_out[3]), .CP(clk), .CDN(n1), .Q(
        data_out[3]) );
  DFCNQD1 \data_out_reg[2]  ( .D(next_data_out[2]), .CP(clk), .CDN(n1), .Q(
        data_out[2]) );
  DFCNQD1 \data_out_reg[1]  ( .D(next_data_out[1]), .CP(clk), .CDN(n1), .Q(
        data_out[1]) );
  DFCNQD1 \data_out_reg[0]  ( .D(next_data_out[0]), .CP(clk), .CDN(n2), .Q(
        data_out[0]) );
  OA21D1 U20 ( .A1(n161), .A2(n160), .B(n159), .Z(n170) );
  OA21D1 U23 ( .A1(n156), .A2(n160), .B(n155), .Z(n169) );
  OA21D1 U26 ( .A1(n154), .A2(n160), .B(n153), .Z(n167) );
  OA21D1 U29 ( .A1(n152), .A2(n160), .B(n151), .Z(n166) );
  OA21D1 U32 ( .A1(n150), .A2(n160), .B(n149), .Z(n177) );
  OA21D1 U35 ( .A1(n148), .A2(n160), .B(n147), .Z(n165) );
  OA21D1 U38 ( .A1(n146), .A2(n160), .B(n145), .Z(n164) );
  OA21D1 U41 ( .A1(n144), .A2(n160), .B(n149), .Z(n163) );
  OA21D1 U47 ( .A1(n139), .A2(n160), .B(n138), .Z(n162) );
  OA21D1 U50 ( .A1(n137), .A2(n160), .B(n159), .Z(n175) );
  OA21D1 U56 ( .A1(n134), .A2(n160), .B(n155), .Z(n174) );
  OA21D1 U62 ( .A1(n131), .A2(n160), .B(n153), .Z(n173) );
  OA21D1 U68 ( .A1(n128), .A2(n160), .B(n151), .Z(n172) );
  OA21D1 U74 ( .A1(n125), .A2(n160), .B(n147), .Z(n171) );
  OA21D1 U80 ( .A1(n122), .A2(n160), .B(n145), .Z(n168) );
  OA21D1 U86 ( .A1(n119), .A2(n160), .B(n138), .Z(n176) );
  AN2XD1 U90 ( .A1(rd_ptr[1]), .A2(rd_ptr[0]), .Z(n140) );
  AN4XD1 U91 ( .A1(input_bitwidth[2]), .A2(rd_en), .A3(n5), .A4(n7), .Z(n143)
         );
  MAOI22D1 U97 ( .A1(n115), .A2(n12), .B1(n115), .B2(n114), .ZN(n113) );
  NR2D1 U3 ( .A1(n13), .A2(rd_ptr[1]), .ZN(n158) );
  NR2D1 U4 ( .A1(rd_ptr[0]), .A2(rd_ptr[1]), .ZN(n157) );
  AOI21D1 U5 ( .A1(n12), .A2(n116), .B(n113), .ZN(N41) );
  OAI21D1 U6 ( .A1(n111), .A2(n10), .B(n177), .ZN(next_data_out[1]) );
  OAI21D1 U7 ( .A1(n37), .A2(n10), .B(n177), .ZN(next_data_out[9]) );
  OAI21D1 U8 ( .A1(n8), .A2(n112), .B(n176), .ZN(next_data_out[0]) );
  OAI21D1 U9 ( .A1(n9), .A2(n110), .B(n168), .ZN(next_data_out[2]) );
  OAI21D1 U10 ( .A1(n9), .A2(n109), .B(n171), .ZN(next_data_out[3]) );
  OAI21D1 U11 ( .A1(n9), .A2(n108), .B(n172), .ZN(next_data_out[4]) );
  OAI21D1 U12 ( .A1(n8), .A2(n36), .B(n168), .ZN(next_data_out[10]) );
  OAI21D1 U13 ( .A1(n8), .A2(n35), .B(n171), .ZN(next_data_out[11]) );
  OAI21D1 U14 ( .A1(n8), .A2(n34), .B(n172), .ZN(next_data_out[12]) );
  OAI21D1 U15 ( .A1(n9), .A2(n33), .B(n173), .ZN(next_data_out[13]) );
  OAI21D1 U16 ( .A1(n8), .A2(n32), .B(n174), .ZN(next_data_out[14]) );
  OAI21D1 U17 ( .A1(n8), .A2(n31), .B(n175), .ZN(next_data_out[15]) );
  OAI21D1 U18 ( .A1(n10), .A2(n107), .B(n173), .ZN(next_data_out[5]) );
  OAI21D1 U19 ( .A1(n10), .A2(n106), .B(n174), .ZN(next_data_out[6]) );
  OAI21D1 U21 ( .A1(n10), .A2(n105), .B(n175), .ZN(next_data_out[7]) );
  OAI21D1 U22 ( .A1(n10), .A2(n38), .B(n176), .ZN(next_data_out[8]) );
  CKBD1 U24 ( .I(n178), .Z(n8) );
  CKBD1 U25 ( .I(n178), .Z(n9) );
  CKBD1 U27 ( .I(n178), .Z(n10) );
  INVD1 U28 ( .I(n6), .ZN(n7) );
  INVD1 U30 ( .I(n4), .ZN(n5) );
  INVD1 U31 ( .I(n116), .ZN(n11) );
  INVD1 U33 ( .I(n157), .ZN(n14) );
  INVD1 U34 ( .I(n158), .ZN(n12) );
  ND2D1 U36 ( .A1(n114), .A2(rd_en), .ZN(n178) );
  NR3D0 U37 ( .A1(n4), .A2(input_bitwidth[2]), .A3(n7), .ZN(n115) );
  NR3D0 U39 ( .A1(n6), .A2(input_bitwidth[2]), .A3(n5), .ZN(n114) );
  ND2D1 U40 ( .A1(rd_en), .A2(n115), .ZN(n160) );
  ND2D1 U42 ( .A1(n143), .A2(n118), .ZN(n138) );
  OAI221D0 U43 ( .A1(n12), .A2(n38), .B1(n14), .B2(n112), .C(n117), .ZN(n118)
         );
  AOI22D1 U44 ( .A1(data_in[24]), .A2(n140), .B1(data_in[16]), .B2(n11), .ZN(
        n117) );
  ND2D1 U45 ( .A1(n143), .A2(n142), .ZN(n149) );
  OAI221D0 U46 ( .A1(n12), .A2(n37), .B1(n14), .B2(n111), .C(n141), .ZN(n142)
         );
  AOI22D1 U48 ( .A1(data_in[25]), .A2(n140), .B1(n11), .B2(data_in[17]), .ZN(
        n141) );
  ND2D1 U49 ( .A1(n143), .A2(n121), .ZN(n145) );
  OAI221D0 U51 ( .A1(n12), .A2(n36), .B1(n14), .B2(n110), .C(n120), .ZN(n121)
         );
  AOI22D1 U52 ( .A1(data_in[26]), .A2(n140), .B1(data_in[18]), .B2(n11), .ZN(
        n120) );
  ND2D1 U53 ( .A1(n143), .A2(n124), .ZN(n147) );
  OAI221D0 U54 ( .A1(n12), .A2(n35), .B1(n14), .B2(n109), .C(n123), .ZN(n124)
         );
  AOI22D1 U55 ( .A1(data_in[27]), .A2(n140), .B1(data_in[19]), .B2(n11), .ZN(
        n123) );
  ND2D1 U57 ( .A1(n143), .A2(n127), .ZN(n151) );
  OAI221D0 U58 ( .A1(n12), .A2(n34), .B1(n14), .B2(n108), .C(n126), .ZN(n127)
         );
  AOI22D1 U59 ( .A1(data_in[28]), .A2(n140), .B1(data_in[20]), .B2(n11), .ZN(
        n126) );
  ND2D1 U60 ( .A1(n143), .A2(n130), .ZN(n153) );
  OAI221D0 U61 ( .A1(n12), .A2(n33), .B1(n14), .B2(n107), .C(n129), .ZN(n130)
         );
  AOI22D1 U63 ( .A1(data_in[29]), .A2(n140), .B1(data_in[21]), .B2(n11), .ZN(
        n129) );
  ND2D1 U64 ( .A1(n143), .A2(n133), .ZN(n155) );
  OAI221D0 U65 ( .A1(n12), .A2(n32), .B1(n14), .B2(n106), .C(n132), .ZN(n133)
         );
  AOI22D1 U66 ( .A1(data_in[30]), .A2(n140), .B1(data_in[22]), .B2(n11), .ZN(
        n132) );
  ND2D1 U67 ( .A1(n143), .A2(n136), .ZN(n159) );
  OAI221D0 U69 ( .A1(n12), .A2(n31), .B1(n14), .B2(n105), .C(n135), .ZN(n136)
         );
  AOI22D1 U70 ( .A1(data_in[31]), .A2(n140), .B1(data_in[23]), .B2(n11), .ZN(
        n135) );
  AOI22D1 U71 ( .A1(data_in[16]), .A2(n158), .B1(data_in[0]), .B2(n157), .ZN(
        n119) );
  AOI22D1 U72 ( .A1(data_in[17]), .A2(n158), .B1(data_in[1]), .B2(n157), .ZN(
        n150) );
  AOI22D1 U73 ( .A1(data_in[18]), .A2(n158), .B1(data_in[2]), .B2(n157), .ZN(
        n122) );
  AOI22D1 U75 ( .A1(data_in[19]), .A2(n158), .B1(data_in[3]), .B2(n157), .ZN(
        n125) );
  AOI22D1 U76 ( .A1(data_in[20]), .A2(n158), .B1(data_in[4]), .B2(n157), .ZN(
        n128) );
  AOI22D1 U77 ( .A1(data_in[21]), .A2(n158), .B1(data_in[5]), .B2(n157), .ZN(
        n131) );
  AOI22D1 U78 ( .A1(data_in[22]), .A2(n158), .B1(data_in[6]), .B2(n157), .ZN(
        n134) );
  AOI22D1 U79 ( .A1(data_in[23]), .A2(n158), .B1(data_in[7]), .B2(n157), .ZN(
        n137) );
  AOI22D1 U81 ( .A1(data_in[24]), .A2(n158), .B1(data_in[8]), .B2(n157), .ZN(
        n139) );
  AOI22D1 U82 ( .A1(data_in[25]), .A2(n158), .B1(data_in[9]), .B2(n157), .ZN(
        n144) );
  AOI22D1 U83 ( .A1(data_in[26]), .A2(n158), .B1(data_in[10]), .B2(n157), .ZN(
        n146) );
  AOI22D1 U84 ( .A1(data_in[27]), .A2(n158), .B1(data_in[11]), .B2(n157), .ZN(
        n148) );
  AOI22D1 U85 ( .A1(data_in[28]), .A2(n158), .B1(data_in[12]), .B2(n157), .ZN(
        n152) );
  AOI22D1 U87 ( .A1(data_in[29]), .A2(n158), .B1(data_in[13]), .B2(n157), .ZN(
        n154) );
  AOI22D1 U88 ( .A1(data_in[30]), .A2(n158), .B1(data_in[14]), .B2(n157), .ZN(
        n156) );
  AOI22D1 U89 ( .A1(data_in[31]), .A2(n158), .B1(data_in[15]), .B2(n157), .ZN(
        n161) );
  NR2D1 U92 ( .A1(rd_ptr[0]), .A2(n114), .ZN(N40) );
  OAI21D1 U93 ( .A1(n29), .A2(n10), .B(n163), .ZN(next_data_out[17]) );
  INVD1 U94 ( .I(data_in[17]), .ZN(n29) );
  OAI21D1 U95 ( .A1(n8), .A2(n30), .B(n162), .ZN(next_data_out[16]) );
  INVD1 U96 ( .I(data_in[16]), .ZN(n30) );
  OAI21D1 U98 ( .A1(n8), .A2(n28), .B(n164), .ZN(next_data_out[18]) );
  INVD1 U99 ( .I(data_in[18]), .ZN(n28) );
  OAI21D1 U100 ( .A1(n8), .A2(n27), .B(n165), .ZN(next_data_out[19]) );
  INVD1 U101 ( .I(data_in[19]), .ZN(n27) );
  OAI21D1 U102 ( .A1(n8), .A2(n26), .B(n166), .ZN(next_data_out[20]) );
  INVD1 U103 ( .I(data_in[20]), .ZN(n26) );
  OAI21D1 U104 ( .A1(n8), .A2(n25), .B(n167), .ZN(next_data_out[21]) );
  INVD1 U105 ( .I(data_in[21]), .ZN(n25) );
  OAI21D1 U106 ( .A1(n8), .A2(n24), .B(n169), .ZN(next_data_out[22]) );
  INVD1 U107 ( .I(data_in[22]), .ZN(n24) );
  OAI21D1 U108 ( .A1(n9), .A2(n23), .B(n170), .ZN(next_data_out[23]) );
  INVD1 U109 ( .I(data_in[23]), .ZN(n23) );
  OAI21D1 U110 ( .A1(n9), .A2(n22), .B(n162), .ZN(next_data_out[24]) );
  INVD1 U111 ( .I(data_in[24]), .ZN(n22) );
  OAI21D1 U112 ( .A1(n9), .A2(n20), .B(n164), .ZN(next_data_out[26]) );
  INVD1 U113 ( .I(data_in[26]), .ZN(n20) );
  OAI21D1 U114 ( .A1(n9), .A2(n19), .B(n165), .ZN(next_data_out[27]) );
  INVD1 U115 ( .I(data_in[27]), .ZN(n19) );
  OAI21D1 U116 ( .A1(n9), .A2(n18), .B(n166), .ZN(next_data_out[28]) );
  INVD1 U117 ( .I(data_in[28]), .ZN(n18) );
  OAI21D1 U118 ( .A1(n9), .A2(n17), .B(n167), .ZN(next_data_out[29]) );
  INVD1 U119 ( .I(data_in[29]), .ZN(n17) );
  OAI21D1 U120 ( .A1(n9), .A2(n16), .B(n169), .ZN(next_data_out[30]) );
  INVD1 U121 ( .I(data_in[30]), .ZN(n16) );
  OAI21D1 U122 ( .A1(n9), .A2(n15), .B(n170), .ZN(next_data_out[31]) );
  INVD1 U123 ( .I(data_in[31]), .ZN(n15) );
  OAI21D1 U124 ( .A1(n21), .A2(n10), .B(n163), .ZN(next_data_out[25]) );
  INVD1 U125 ( .I(data_in[25]), .ZN(n21) );
  CKBD1 U126 ( .I(input_bitwidth[0]), .Z(n4) );
  CKBD1 U127 ( .I(input_bitwidth[1]), .Z(n6) );
  ND2D1 U128 ( .A1(rd_ptr[1]), .A2(n13), .ZN(n116) );
  INVD1 U129 ( .I(rd_ptr[0]), .ZN(n13) );
  INVD1 U130 ( .I(data_in[1]), .ZN(n111) );
  INVD1 U131 ( .I(data_in[9]), .ZN(n37) );
  INVD1 U132 ( .I(data_in[0]), .ZN(n112) );
  INVD1 U133 ( .I(data_in[2]), .ZN(n110) );
  INVD1 U134 ( .I(data_in[3]), .ZN(n109) );
  INVD1 U135 ( .I(data_in[4]), .ZN(n108) );
  INVD1 U136 ( .I(data_in[5]), .ZN(n107) );
  INVD1 U137 ( .I(data_in[6]), .ZN(n106) );
  INVD1 U138 ( .I(data_in[7]), .ZN(n105) );
  INVD1 U139 ( .I(data_in[8]), .ZN(n38) );
  INVD1 U140 ( .I(data_in[10]), .ZN(n36) );
  INVD1 U141 ( .I(data_in[11]), .ZN(n35) );
  INVD1 U142 ( .I(data_in[12]), .ZN(n34) );
  INVD1 U143 ( .I(data_in[13]), .ZN(n33) );
  INVD1 U144 ( .I(data_in[14]), .ZN(n32) );
  INVD1 U145 ( .I(data_in[15]), .ZN(n31) );
  CKBD1 U146 ( .I(nRST), .Z(n2) );
  CKBD1 U147 ( .I(nRST), .Z(n1) );
  CKBD1 U148 ( .I(nRST), .Z(n3) );
endmodule


module bit_brick_47 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_46 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_45 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_44 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_43 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_42 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_41 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_40 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_39 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_38 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_37 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_36 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_35 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_34 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_33 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_32 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module shift_add_2_DW01_add_14_DW01_add_199 ( A, B, CI, SUM, CO );
  input [28:0] A;
  input [28:0] B;
  output [28:0] SUM;
  input CI;
  output CO;
  wire   n1, \SUM[18] , n3, n4, n5, n6, n7;
  wire   [28:1] carry;
  assign SUM[27] = \SUM[18] ;
  assign SUM[28] = \SUM[18] ;
  assign SUM[26] = \SUM[18] ;
  assign SUM[25] = \SUM[18] ;
  assign SUM[24] = \SUM[18] ;
  assign SUM[23] = \SUM[18] ;
  assign SUM[22] = \SUM[18] ;
  assign SUM[21] = \SUM[18] ;
  assign SUM[20] = \SUM[18] ;
  assign SUM[19] = \SUM[18] ;
  assign SUM[18] = \SUM[18] ;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D0 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  AOI222D1 U3 ( .A1(carry[15]), .A2(A[27]), .B1(carry[15]), .B2(B[15]), .C1(
        B[15]), .C2(A[27]), .ZN(n5) );
  XNR3D4 U4 ( .A1(B[27]), .A2(n7), .A3(n3), .ZN(\SUM[18] ) );
  AO222D1 U5 ( .A1(n4), .A2(A[27]), .B1(n4), .B2(B[27]), .C1(A[27]), .C2(B[27]), .Z(n3) );
  CKND0 U6 ( .I(A[27]), .ZN(n7) );
  CKND0 U7 ( .I(B[16]), .ZN(n6) );
  OAI222D0 U8 ( .A1(n5), .A2(n7), .B1(n5), .B2(n6), .C1(n7), .C2(n6), .ZN(n4)
         );
  XNR3D0 U9 ( .A1(B[27]), .A2(n7), .A3(n4), .ZN(SUM[17]) );
  XNR3D0 U10 ( .A1(n6), .A2(n5), .A3(n7), .ZN(SUM[16]) );
  XNR3D0 U11 ( .A1(carry[15]), .A2(B[15]), .A3(n7), .ZN(SUM[15]) );
endmodule


module shift_add_2_DW01_add_6_DW01_add_191 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_2_DW01_add_5_DW01_add_190 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_2_DW01_add_4_DW01_add_189 ( A, B, CI, SUM, CO );
  input [30:0] A;
  input [30:0] B;
  output [30:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [30:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  XOR3D1 U1_30 ( .A1(A[30]), .A2(B[30]), .A3(carry[30]), .Z(SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_2_DW01_add_3_DW01_add_188 ( A, B, CI, SUM, CO );
  input [29:0] A;
  input [29:0] B;
  output [29:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3;
  wire   [29:1] carry;
  assign SUM[29] = SUM[23];
  assign SUM[28] = SUM[23];
  assign SUM[27] = SUM[23];
  assign SUM[26] = SUM[23];
  assign SUM[25] = SUM[23];
  assign SUM[24] = SUM[23];

  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D1 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  XNR3D2 U1 ( .A1(B[22]), .A2(A[21]), .A3(n2), .ZN(SUM[23]) );
  AN2XD1 U2 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  AOI222D1 U3 ( .A1(n3), .A2(A[21]), .B1(n3), .B2(B[22]), .C1(A[21]), .C2(
        B[22]), .ZN(n2) );
  CKXOR2D1 U4 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  XOR3D0 U5 ( .A1(carry[21]), .A2(B[21]), .A3(A[21]), .Z(SUM[21]) );
  AO222D0 U6 ( .A1(carry[21]), .A2(A[21]), .B1(B[21]), .B2(carry[21]), .C1(
        B[21]), .C2(A[21]), .Z(n3) );
  XOR3D0 U7 ( .A1(B[22]), .A2(A[21]), .A3(n3), .Z(SUM[22]) );
endmodule


module shift_add_2_DW01_add_2_DW01_add_187 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_2_DW01_add_1_DW01_add_186 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D1 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D1 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_2_DW01_add_0_DW01_add_185 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_2 ( input_bitwidth, weight_bitwidth, .products({
        \products[15][5] , \products[15][4] , \products[15][3] , 
        \products[15][2] , \products[15][1] , \products[15][0] , 
        \products[14][5] , \products[14][4] , \products[14][3] , 
        \products[14][2] , \products[14][1] , \products[14][0] , 
        \products[13][5] , \products[13][4] , \products[13][3] , 
        \products[13][2] , \products[13][1] , \products[13][0] , 
        \products[12][5] , \products[12][4] , \products[12][3] , 
        \products[12][2] , \products[12][1] , \products[12][0] , 
        \products[11][5] , \products[11][4] , \products[11][3] , 
        \products[11][2] , \products[11][1] , \products[11][0] , 
        \products[10][5] , \products[10][4] , \products[10][3] , 
        \products[10][2] , \products[10][1] , \products[10][0] , 
        \products[9][5] , \products[9][4] , \products[9][3] , \products[9][2] , 
        \products[9][1] , \products[9][0] , \products[8][5] , \products[8][4] , 
        \products[8][3] , \products[8][2] , \products[8][1] , \products[8][0] , 
        \products[7][5] , \products[7][4] , \products[7][3] , \products[7][2] , 
        \products[7][1] , \products[7][0] , \products[6][5] , \products[6][4] , 
        \products[6][3] , \products[6][2] , \products[6][1] , \products[6][0] , 
        \products[5][5] , \products[5][4] , \products[5][3] , \products[5][2] , 
        \products[5][1] , \products[5][0] , \products[4][5] , \products[4][4] , 
        \products[4][3] , \products[4][2] , \products[4][1] , \products[4][0] , 
        \products[3][5] , \products[3][4] , \products[3][3] , \products[3][2] , 
        \products[3][1] , \products[3][0] , \products[2][5] , \products[2][4] , 
        \products[2][3] , \products[2][2] , \products[2][1] , \products[2][0] , 
        \products[1][5] , \products[1][4] , \products[1][3] , \products[1][2] , 
        \products[1][1] , \products[1][0] , \products[0][5] , \products[0][4] , 
        \products[0][3] , \products[0][2] , \products[0][1] , \products[0][0] 
        }), shift_add_out );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  output [31:0] shift_add_out;
  input \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] ;
  wire   \shifted_products[15][16] , \shifted_products[15][15] ,
         \shifted_products[15][14] , \shifted_products[15][13] ,
         \shifted_products[15][12] , \shifted_products[15][11] ,
         \shifted_products[15][10] , \shifted_products[15][9] ,
         \shifted_products[15][8] , \shifted_products[15][7] ,
         \shifted_products[15][6] , \shifted_products[15][5] ,
         \shifted_products[15][4] , \shifted_products[15][3] ,
         \shifted_products[15][2] , \shifted_products[15][1] ,
         \shifted_products[15][0] , \shifted_products[14][14] ,
         \shifted_products[14][13] , \shifted_products[14][12] ,
         \shifted_products[14][11] , \shifted_products[14][10] ,
         \shifted_products[14][9] , \shifted_products[14][8] ,
         \shifted_products[14][7] , \shifted_products[14][6] ,
         \shifted_products[14][5] , \shifted_products[14][4] ,
         \shifted_products[14][3] , \shifted_products[14][2] ,
         \shifted_products[14][1] , \shifted_products[14][0] ,
         \shifted_products[13][12] , \shifted_products[13][11] ,
         \shifted_products[13][10] , \shifted_products[13][9] ,
         \shifted_products[13][8] , \shifted_products[13][7] ,
         \shifted_products[13][6] , \shifted_products[13][5] ,
         \shifted_products[13][4] , \shifted_products[13][3] ,
         \shifted_products[13][2] , \shifted_products[13][1] ,
         \shifted_products[13][0] , \shifted_products[12][10] ,
         \shifted_products[12][9] , \shifted_products[12][8] ,
         \shifted_products[12][7] , \shifted_products[12][6] ,
         \shifted_products[12][5] , \shifted_products[12][4] ,
         \shifted_products[12][3] , \shifted_products[12][2] ,
         \shifted_products[12][1] , \shifted_products[12][0] ,
         \shifted_products[11][13] , \shifted_products[11][12] ,
         \shifted_products[11][11] , \shifted_products[11][10] ,
         \shifted_products[11][9] , \shifted_products[11][8] ,
         \shifted_products[11][7] , \shifted_products[11][6] ,
         \shifted_products[11][5] , \shifted_products[11][4] ,
         \shifted_products[11][3] , \shifted_products[11][2] ,
         \shifted_products[11][1] , \shifted_products[11][0] ,
         \shifted_products[10][12] , \shifted_products[10][11] ,
         \shifted_products[10][10] , \shifted_products[10][9] ,
         \shifted_products[10][8] , \shifted_products[10][7] ,
         \shifted_products[10][6] , \shifted_products[10][5] ,
         \shifted_products[10][4] , \shifted_products[10][3] ,
         \shifted_products[10][2] , \shifted_products[10][1] ,
         \shifted_products[10][0] , \shifted_products[9][10] ,
         \shifted_products[9][9] , \shifted_products[9][8] ,
         \shifted_products[9][7] , \shifted_products[9][6] ,
         \shifted_products[9][5] , \shifted_products[9][4] ,
         \shifted_products[9][3] , \shifted_products[9][2] ,
         \shifted_products[9][1] , \shifted_products[9][0] ,
         \shifted_products[8][8] , \shifted_products[8][7] ,
         \shifted_products[8][6] , \shifted_products[8][5] ,
         \shifted_products[8][4] , \shifted_products[8][3] ,
         \shifted_products[8][2] , \shifted_products[8][1] ,
         \shifted_products[8][0] , \shifted_products[7][11] ,
         \shifted_products[7][10] , \shifted_products[7][9] ,
         \shifted_products[7][8] , \shifted_products[7][7] ,
         \shifted_products[7][6] , \shifted_products[7][5] ,
         \shifted_products[7][4] , \shifted_products[7][3] ,
         \shifted_products[7][2] , \shifted_products[7][1] ,
         \shifted_products[7][0] , \shifted_products[6][10] ,
         \shifted_products[6][9] , \shifted_products[6][8] ,
         \shifted_products[6][7] , \shifted_products[6][6] ,
         \shifted_products[6][5] , \shifted_products[6][4] ,
         \shifted_products[6][3] , \shifted_products[6][2] ,
         \shifted_products[6][1] , \shifted_products[6][0] ,
         \shifted_products[5][8] , \shifted_products[5][7] ,
         \shifted_products[5][6] , \shifted_products[5][5] ,
         \shifted_products[5][4] , \shifted_products[5][3] ,
         \shifted_products[5][2] , \shifted_products[5][1] ,
         \shifted_products[5][0] , \shifted_products[4][6] ,
         \shifted_products[4][5] , \shifted_products[4][4] ,
         \shifted_products[4][3] , \shifted_products[4][2] ,
         \shifted_products[4][1] , \shifted_products[4][0] ,
         \shifted_products[3][9] , \shifted_products[3][8] ,
         \shifted_products[3][7] , \shifted_products[3][6] ,
         \shifted_products[3][5] , \shifted_products[3][4] ,
         \shifted_products[3][3] , \shifted_products[3][2] ,
         \shifted_products[3][1] , \shifted_products[3][0] ,
         \shifted_products[2][8] , \shifted_products[2][7] ,
         \shifted_products[2][6] , \shifted_products[2][5] ,
         \shifted_products[2][4] , \shifted_products[2][3] ,
         \shifted_products[2][2] , \shifted_products[2][1] ,
         \shifted_products[2][0] , \shifted_products[1][6] ,
         \shifted_products[1][5] , \shifted_products[1][4] ,
         \shifted_products[1][3] , \shifted_products[1][2] ,
         \shifted_products[1][1] , \shifted_products[1][0] ,
         \shifted_products[0][9] , N99, N87, N86, N85, N84, N83, N82, N81, N80,
         N79, N78, N77, N76, N61, N60, N59, N58, N57, N56, N55, N54, N446,
         N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435,
         N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424,
         N423, N422, N421, N420, N419, N418, N417, N416, N415, N414, N413,
         N412, N411, N410, N409, N408, N407, N406, N405, N404, N403, N402,
         N401, N400, N399, N398, N397, N396, N395, N394, N393, N392, N391,
         N390, N389, N388, N387, N386, N385, N384, N383, N382, N381, N380,
         N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369,
         N368, N367, N366, N365, N364, N363, N362, N361, N360, N359, N358,
         N357, N356, N355, N354, N353, N352, N351, N350, N349, N348, N347,
         N346, N345, N344, N343, N342, N341, N340, N339, N338, N337, N336,
         N335, N334, N333, N332, N331, N330, N329, N328, N327, N326, N325,
         N324, N323, N322, N321, N320, N319, N318, N317, N316, N315, N314,
         N313, N312, N311, N310, N309, N308, N307, N306, N305, N304, N303,
         N302, N301, N300, N299, N298, N297, N296, N295, N294, N293, N292,
         N291, N290, N289, N288, N287, N286, N285, N284, N283, N282, N281,
         N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270,
         N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259,
         N258, N257, N256, N255, N254, N253, N252, N251, N250, N249, N248,
         N247, N246, N245, N244, N243, N242, N241, N240, N239, N238, N237,
         N236, N235, N234, N233, N232, N231, N230, N229, N214, N213, N212,
         N211, N210, N209, N208, N207, N206, N205, N204, N203, N202, N201,
         N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, N179,
         N178, N177, N176, N175, N174, N159, N158, N157, N156, N155, N154,
         N153, N152, N151, N150, N149, N148, N136, N135, N134, N133, N132,
         N131, N130, N129, N128, N127, N126, N125, N124, N123, N108, N107,
         N106, N105, N104, N103, N102, N101, N100,
         \add_14_root_add_199_I16/carry[6] ,
         \add_14_root_add_199_I16/carry[5] ,
         \add_14_root_add_199_I16/carry[4] ,
         \add_14_root_add_199_I16/carry[3] ,
         \add_14_root_add_199_I16/carry[2] ,
         \add_14_root_add_199_I16/carry[1] ,
         \add_13_root_add_199_I16/carry[9] ,
         \add_13_root_add_199_I16/carry[8] ,
         \add_13_root_add_199_I16/carry[7] ,
         \add_13_root_add_199_I16/carry[6] ,
         \add_13_root_add_199_I16/carry[5] ,
         \add_13_root_add_199_I16/carry[4] ,
         \add_13_root_add_199_I16/carry[3] ,
         \add_13_root_add_199_I16/carry[2] ,
         \add_13_root_add_199_I16/carry[1] ,
         \add_12_root_add_199_I16/carry[7] ,
         \add_12_root_add_199_I16/carry[6] ,
         \add_12_root_add_199_I16/carry[5] ,
         \add_12_root_add_199_I16/carry[4] ,
         \add_12_root_add_199_I16/carry[3] ,
         \add_12_root_add_199_I16/carry[2] ,
         \add_12_root_add_199_I16/carry[1] ,
         \add_11_root_add_199_I16/carry[11] ,
         \add_11_root_add_199_I16/carry[10] ,
         \add_11_root_add_199_I16/carry[9] ,
         \add_11_root_add_199_I16/carry[8] ,
         \add_11_root_add_199_I16/carry[7] ,
         \add_11_root_add_199_I16/carry[6] ,
         \add_11_root_add_199_I16/carry[5] ,
         \add_11_root_add_199_I16/carry[4] ,
         \add_11_root_add_199_I16/carry[3] ,
         \add_11_root_add_199_I16/carry[2] ,
         \add_11_root_add_199_I16/carry[1] ,
         \add_10_root_add_199_I16/carry[9] ,
         \add_10_root_add_199_I16/carry[8] ,
         \add_10_root_add_199_I16/carry[7] ,
         \add_10_root_add_199_I16/carry[6] ,
         \add_10_root_add_199_I16/carry[5] ,
         \add_10_root_add_199_I16/carry[4] ,
         \add_10_root_add_199_I16/carry[3] ,
         \add_10_root_add_199_I16/carry[2] ,
         \add_10_root_add_199_I16/carry[1] ,
         \add_9_root_add_199_I16/carry[13] ,
         \add_9_root_add_199_I16/carry[12] ,
         \add_9_root_add_199_I16/carry[11] ,
         \add_9_root_add_199_I16/carry[10] , \add_9_root_add_199_I16/carry[9] ,
         \add_9_root_add_199_I16/carry[8] , \add_9_root_add_199_I16/carry[7] ,
         \add_9_root_add_199_I16/carry[6] , \add_9_root_add_199_I16/carry[5] ,
         \add_9_root_add_199_I16/carry[4] , \add_9_root_add_199_I16/carry[3] ,
         \add_9_root_add_199_I16/carry[2] , \add_9_root_add_199_I16/carry[1] ,
         \add_8_root_add_199_I16/carry[11] ,
         \add_8_root_add_199_I16/carry[10] , \add_8_root_add_199_I16/carry[9] ,
         \add_8_root_add_199_I16/carry[8] , \add_8_root_add_199_I16/carry[7] ,
         \add_8_root_add_199_I16/carry[6] , \add_8_root_add_199_I16/carry[5] ,
         \add_8_root_add_199_I16/carry[4] , \add_8_root_add_199_I16/carry[3] ,
         \add_8_root_add_199_I16/carry[2] , \add_8_root_add_199_I16/carry[1] ,
         n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72,
         n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86,
         n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100,
         n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, n111,
         n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122,
         n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133,
         n134, n135, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246,
         n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257,
         n258, n259, n260, n261, n262, n263, n264, n265, n266, n267, n268,
         n269, n270, n271, n272, n273, n274, n275, n276, n277, n278, n279,
         n280, n281, n282, n283, n284, n285, n286, n287, n288, n289, n290,
         n291, n292, n293, n294, n295, n296, n297, n298, n299, n300, n301,
         n302, n303, n304, n305, n306, n307, n308, n309, n310, n311, n312,
         n313, n314, n315, n316, n317, n318, n319, n320, n321, n322, n323,
         n324, n325, n326, n327, n328, n329, n330, n331, n332, n333, n334,
         n335, n336, n337, n338, n339, n340, n341, n342;

  MAOI22D1 U26 ( .A1(\products[7][0] ), .A2(n330), .B1(n126), .B2(n333), .ZN(
        n331) );
  AN2XD1 U66 ( .A1(n310), .A2(n321), .Z(n309) );
  AN2XD1 U74 ( .A1(n336), .A2(n305), .Z(n306) );
  MAOI22D1 U112 ( .A1(\products[15][2] ), .A2(n293), .B1(n78), .B2(n322), .ZN(
        n294) );
  OA21D1 U130 ( .A1(n260), .A2(n77), .B(n296), .Z(n287) );
  AN2XD1 U134 ( .A1(n323), .A2(n313), .Z(n297) );
  AN2XD1 U161 ( .A1(n310), .A2(n340), .Z(n280) );
  AN2XD1 U239 ( .A1(n313), .A2(n333), .Z(n299) );
  shift_add_2_DW01_add_14_DW01_add_199 add_7_root_add_199_I16 ( .A({
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \shifted_products[14][14] , 
        \shifted_products[14][13] , \shifted_products[14][12] , 
        \shifted_products[14][11] , \shifted_products[14][10] , 
        \shifted_products[14][9] , \shifted_products[14][8] , 
        \shifted_products[14][7] , \shifted_products[14][6] , 
        \shifted_products[14][5] , \shifted_products[14][4] , 
        \shifted_products[14][3] , \shifted_products[14][2] , 
        \shifted_products[14][1] , \shifted_products[14][0] }), .B({
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \shifted_products[15][16] , \shifted_products[15][15] , 
        \shifted_products[15][14] , \shifted_products[15][13] , 
        \shifted_products[15][12] , \shifted_products[15][11] , 
        \shifted_products[15][10] , \shifted_products[15][9] , 
        \shifted_products[15][8] , \shifted_products[15][7] , 
        \shifted_products[15][6] , \shifted_products[15][5] , 
        \shifted_products[15][4] , \shifted_products[15][3] , 
        \shifted_products[15][2] , \shifted_products[15][1] , 
        \shifted_products[15][0] }), .CI(n262), .SUM({N257, N256, N255, N254, 
        N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, N243, N242, 
        N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, N231, N230, 
        N229}) );
  shift_add_2_DW01_add_6_DW01_add_191 add_4_root_add_0_root_add_199_I16 ( .A({
        n37, n37, n37, n37, n37, n37, n37, n37, n37, n37, n37, n37, n37, n37, 
        n37, n37, n37, n37, N214, N213, N212, N211, N210, N209, N208, N207, 
        N206, N205, N204, N203, N202, N201}), .B({N257, N257, N257, N257, N256, 
        N255, N254, N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, 
        N243, N242, N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, 
        N231, N230, N229}), .CI(n262), .SUM({N382, N381, N380, N379, N378, 
        N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, N367, N366, 
        N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, N355, N354, 
        N353, N352, N351}) );
  shift_add_2_DW01_add_5_DW01_add_190 add_3_root_add_0_root_add_199_I16 ( .A({
        n38, n38, n38, n38, n38, n38, n38, n38, n38, n38, n38, n38, n38, n38, 
        n38, n38, N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, 
        N179, N178, N177, N176, N175, N174}), .B({n12, n11, n10, n9, n8, n7, 
        n6, n5, n16, n15, n14, n13, n12, n11, n10, n9, n8, n7, n6, n5, N159, 
        N158, N157, N156, N155, N154, N153, N152, N151, N150, N149, N148}), 
        .CI(n262), .SUM({N350, N349, N348, N347, N346, N345, N344, N343, N342, 
        N341, N340, N339, N338, N337, N336, N335, N334, N333, N332, N331, N330, 
        N329, N328, N327, N326, N325, N324, N323, N322, N321, N320, N319}) );
  shift_add_2_DW01_add_4_DW01_add_189 add_5_root_add_199_I16 ( .A({n36, n36, 
        n36, n36, n36, n36, n36, n36, n36, n36, n36, n36, n36, n36, n36, n36, 
        n36, n36, n36, n36, n36, N108, N107, N106, N105, N104, N103, N102, 
        N101, N100, N99}), .B({n39, n39, n39, n39, n39, n39, n39, n39, n39, 
        n39, n39, n39, n39, n39, n39, n39, n39, N136, N135, N134, N133, N132, 
        N131, N130, N129, N128, N127, N126, N125, N124, N123}), .CI(n262), 
        .SUM({N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}) );
  shift_add_2_DW01_add_3_DW01_add_188 add_6_root_add_199_I16 ( .A({n33, n33, 
        n33, n33, n33, n33, n33, n33, n33, n33, n33, n33, n33, n33, n33, n33, 
        n33, n33, n33, n33, n33, n33, N61, N60, N59, N58, N57, N56, N55, N54}), 
        .B({n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, 
        n17, n17, n17, n17, n17, N87, N86, N85, N84, N83, N82, N81, N80, N79, 
        N78, N77, N76}), .CI(n262), .SUM({N287, N286, N285, N284, N283, N282, 
        N281, N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270, 
        N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259, N258}) );
  shift_add_2_DW01_add_2_DW01_add_187 add_2_root_add_0_root_add_199_I16 ( .A({
        N318, N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}), .B({N382, N381, N380, 
        N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, 
        N367, N366, N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, 
        N355, N354, N353, N352, N351}), .CI(n262), .SUM({N446, N445, N444, 
        N443, N442, N441, N440, N439, N438, N437, N436, N435, N434, N433, N432, 
        N431, N430, N429, N428, N427, N426, N425, N424, N423, N422, N421, N420, 
        N419, N418, N417, N416, N415}) );
  shift_add_2_DW01_add_1_DW01_add_186 add_1_root_add_0_root_add_199_I16 ( .A({
        N446, N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435, 
        N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424, N423, 
        N422, N421, N420, N419, N418, N417, N416, N415}), .B({N287, N287, N287, 
        N286, N285, N284, N283, N282, N281, N280, N279, N278, N277, N276, N275, 
        N274, N273, N272, N271, N270, N269, N268, N267, N266, N265, N264, N263, 
        N262, N261, N260, N259, N258}), .CI(n262), .SUM({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}) );
  shift_add_2_DW01_add_0_DW01_add_185 add_0_root_add_0_root_add_199_I16 ( .A({
        N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, N340, N339, 
        N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, N328, N327, 
        N326, N325, N324, N323, N322, N321, N320, N319}), .B({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}), .CI(n262), .SUM(shift_add_out) );
  CKAN2D1 U2 ( .A1(n340), .A2(n341), .Z(n329) );
  AOI222D2 U3 ( .A1(n74), .A2(\products[2][5] ), .B1(n74), .B2(
        \products[3][5] ), .C1(\products[2][5] ), .C2(\products[3][5] ), .ZN(
        n45) );
  BUFFD2 U4 ( .I(n66), .Z(n1) );
  AOI222D1 U5 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(\products[6][5] ), .B1(\add_11_root_add_199_I16/carry[11] ), .B2(\shifted_products[7][11] ), 
        .C1(\shifted_products[7][11] ), .C2(\products[6][5] ), .ZN(n66) );
  INVD2 U6 ( .I(n35), .ZN(n2) );
  CKND0 U7 ( .I(n35), .ZN(n3) );
  CKND0 U8 ( .I(n35), .ZN(n4) );
  CKND2 U9 ( .I(n2), .ZN(n5) );
  CKND0 U10 ( .I(n2), .ZN(n6) );
  CKND0 U11 ( .I(n2), .ZN(n7) );
  CKND0 U12 ( .I(n2), .ZN(n8) );
  CKND1 U13 ( .I(n3), .ZN(n9) );
  CKND1 U14 ( .I(n3), .ZN(n10) );
  CKND1 U15 ( .I(n3), .ZN(n11) );
  CKND1 U16 ( .I(n3), .ZN(n12) );
  CKND1 U17 ( .I(n4), .ZN(n13) );
  CKND1 U18 ( .I(n4), .ZN(n14) );
  CKND1 U19 ( .I(n4), .ZN(n15) );
  CKND1 U20 ( .I(n4), .ZN(n16) );
  XOR3D1 U21 ( .A1(\products[9][5] ), .A2(n64), .A3(n62), .Z(n35) );
  XOR3D4 U22 ( .A1(\products[3][5] ), .A2(n72), .A3(n45), .Z(n17) );
  NR3D2 U23 ( .A1(n41), .A2(n42), .A3(n43), .ZN(n73) );
  OA21D1 U24 ( .A1(n304), .A2(n228), .B(n303), .Z(n46) );
  NR2D1 U25 ( .A1(n337), .A2(n338), .ZN(n298) );
  ND2D1 U27 ( .A1(n299), .A2(n257), .ZN(n338) );
  ND2D1 U28 ( .A1(n340), .A2(n257), .ZN(n286) );
  FA1D0 U29 ( .A(\shifted_products[2][8] ), .B(\shifted_products[3][8] ), .CI(
        \add_13_root_add_199_I16/carry[8] ), .CO(
        \add_13_root_add_199_I16/carry[9] ), .S(N84) );
  FA1D0 U30 ( .A(\shifted_products[2][6] ), .B(\shifted_products[3][6] ), .CI(
        \add_13_root_add_199_I16/carry[6] ), .CO(
        \add_13_root_add_199_I16/carry[7] ), .S(N82) );
  INVD1 U31 ( .I(n286), .ZN(n246) );
  ND3D1 U32 ( .A1(n24), .A2(n25), .A3(n26), .ZN(n74) );
  INVD1 U33 ( .I(\products[2][5] ), .ZN(n72) );
  NR3D1 U34 ( .A1(n30), .A2(n31), .A3(n32), .ZN(n70) );
  AN2XD1 U35 ( .A1(n69), .A2(\products[5][5] ), .Z(n31) );
  XNR3D2 U36 ( .A1(\products[7][5] ), .A2(n129), .A3(n40), .ZN(n39) );
  NR3D1 U37 ( .A1(n27), .A2(n28), .A3(n29), .ZN(n56) );
  AN2XD1 U38 ( .A1(n55), .A2(\products[13][5] ), .Z(n28) );
  INVD1 U39 ( .I(n341), .ZN(n259) );
  ND2D1 U40 ( .A1(n264), .A2(n263), .ZN(n341) );
  CKND2D0 U41 ( .A1(n299), .A2(n257), .ZN(n18) );
  INVD2 U42 ( .I(n301), .ZN(n257) );
  CKAN2D0 U43 ( .A1(n328), .A2(n53), .Z(n19) );
  CKND2D1 U44 ( .A1(n268), .A2(n267), .ZN(n328) );
  OR2XD1 U45 ( .A1(n1), .A2(n129), .Z(n20) );
  OR2XD1 U46 ( .A1(n1), .A2(n47), .Z(n21) );
  OR2D1 U47 ( .A1(n129), .A2(n47), .Z(n22) );
  ND3D2 U48 ( .A1(n20), .A2(n21), .A3(n22), .ZN(n67) );
  NR2D0 U49 ( .A1(n337), .A2(n18), .ZN(n23) );
  OR2XD1 U50 ( .A1(n73), .A2(n72), .Z(n24) );
  OR2XD1 U51 ( .A1(n73), .A2(n46), .Z(n25) );
  OR2XD1 U52 ( .A1(n72), .A2(n46), .Z(n26) );
  AN2D1 U53 ( .A1(n55), .A2(\products[12][5] ), .Z(n27) );
  AN2D1 U54 ( .A1(\products[12][5] ), .A2(\products[13][5] ), .Z(n29) );
  OAI222D1 U55 ( .A1(n54), .A2(n95), .B1(n54), .B2(n57), .C1(n95), .C2(n57), 
        .ZN(n55) );
  AN2D1 U56 ( .A1(n69), .A2(\products[4][5] ), .Z(n30) );
  AN2XD1 U57 ( .A1(\products[4][5] ), .A2(\products[5][5] ), .Z(n32) );
  OAI222D1 U58 ( .A1(n68), .A2(n221), .B1(n68), .B2(n71), .C1(n221), .C2(n71), 
        .ZN(n69) );
  NR2D0 U59 ( .A1(n52), .A2(n94), .ZN(\shifted_products[13][0] ) );
  CKND2D2 U60 ( .A1(n265), .A2(n267), .ZN(n333) );
  AN2D1 U61 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(\products[2][5] ), 
        .Z(n41) );
  AN2D2 U62 ( .A1(n310), .A2(n53), .Z(n307) );
  INR2D2 U63 ( .A1(n290), .B1(n259), .ZN(n321) );
  NR2D0 U64 ( .A1(n329), .A2(n232), .ZN(\shifted_products[3][0] ) );
  AOI222D0 U65 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \products[10][5] ), .B1(\add_9_root_add_199_I16/carry[13] ), .B2(
        \shifted_products[11][13] ), .C1(\shifted_products[11][13] ), .C2(
        \products[10][5] ), .ZN(n59) );
  CKAN2D0 U67 ( .A1(n316), .A2(n50), .Z(n336) );
  AN2XD1 U68 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .Z(n42) );
  CKND2D3 U69 ( .A1(n316), .A2(n246), .ZN(n315) );
  OAI22D0 U70 ( .A1(n19), .A2(n131), .B1(n249), .B2(n133), .ZN(
        \shifted_products[6][3] ) );
  OAI22D0 U71 ( .A1(n340), .A2(n114), .B1(n252), .B2(n116), .ZN(
        \shifted_products[9][3] ) );
  NR2D0 U72 ( .A1(n340), .A2(n105), .ZN(\shifted_products[11][1] ) );
  INR2D1 U73 ( .A1(n323), .B1(n259), .ZN(n316) );
  CKND2D1 U75 ( .A1(n268), .A2(n266), .ZN(n322) );
  AOI222D2 U76 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[0][9] ), .B1(\add_14_root_add_199_I16/carry[6] ), 
        .B2(\shifted_products[1][6] ), .C1(\shifted_products[1][6] ), .C2(
        \shifted_products[0][9] ), .ZN(n76) );
  XNR3D4 U77 ( .A1(n238), .A2(n34), .A3(n75), .ZN(n33) );
  OA222D1 U78 ( .A1(n76), .A2(n75), .B1(n76), .B2(n238), .C1(n75), .C2(n238), 
        .Z(n34) );
  XNR3D1 U79 ( .A1(n46), .A2(n73), .A3(n72), .ZN(N86) );
  ND2D2 U80 ( .A1(n321), .A2(n298), .ZN(n327) );
  OAI22D0 U81 ( .A1(n329), .A2(n227), .B1(n302), .B2(n229), .ZN(
        \shifted_products[3][5] ) );
  OAI22D0 U82 ( .A1(n329), .A2(n229), .B1(n302), .B2(n231), .ZN(
        \shifted_products[3][3] ) );
  NR2D0 U83 ( .A1(n244), .A2(n234), .ZN(\shifted_products[2][3] ) );
  FA1D1 U84 ( .A(\shifted_products[2][7] ), .B(\shifted_products[3][7] ), .CI(
        \add_13_root_add_199_I16/carry[7] ), .CO(
        \add_13_root_add_199_I16/carry[8] ), .S(N83) );
  NR2D0 U85 ( .A1(n329), .A2(n231), .ZN(\shifted_products[3][1] ) );
  AOI222D1 U86 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(\products[4][5] ), .B1(\add_12_root_add_199_I16/carry[7] ), .B2(\shifted_products[5][7] ), .C1(
        \shifted_products[5][7] ), .C2(\products[4][5] ), .ZN(n68) );
  AOI222D1 U87 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(\products[8][5] ), .B1(\add_10_root_add_199_I16/carry[9] ), .B2(\shifted_products[9][9] ), .C1(
        \shifted_products[9][9] ), .C2(\products[8][5] ), .ZN(n61) );
  AOI222D1 U88 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \products[12][5] ), .B1(\add_8_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[13][11] ), .C1(\shifted_products[13][11] ), .C2(
        \products[12][5] ), .ZN(n54) );
  XOR3D2 U89 ( .A1(\products[5][5] ), .A2(n70), .A3(n221), .Z(n36) );
  XOR3D2 U90 ( .A1(\products[13][5] ), .A2(n56), .A3(n95), .Z(n37) );
  XOR3D1 U91 ( .A1(\products[11][5] ), .A2(n58), .A3(n44), .Z(n38) );
  OAI22D0 U92 ( .A1(n329), .A2(n238), .B1(n23), .B2(n239), .ZN(
        \shifted_products[1][6] ) );
  OAI22D0 U93 ( .A1(n256), .A2(n125), .B1(n320), .B2(n123), .ZN(
        \shifted_products[7][11] ) );
  NR2D0 U94 ( .A1(n334), .A2(n259), .ZN(n342) );
  CKAN2D0 U95 ( .A1(n299), .A2(n50), .Z(n304) );
  OAI21D0 U96 ( .A1(n79), .A2(n50), .B(n289), .ZN(\shifted_products[15][15] )
         );
  NR2D0 U97 ( .A1(n52), .A2(n82), .ZN(\shifted_products[15][0] ) );
  CKND2D0 U98 ( .A1(n316), .A2(n245), .ZN(n288) );
  CKND2D0 U99 ( .A1(n246), .A2(n299), .ZN(n334) );
  CKND1 U100 ( .I(\products[13][5] ), .ZN(n89) );
  NR2D0 U101 ( .A1(n128), .A2(n52), .ZN(\shifted_products[7][0] ) );
  CKND2D0 U102 ( .A1(\products[12][5] ), .A2(n334), .ZN(n276) );
  CKND2D0 U103 ( .A1(\products[8][5] ), .A2(n334), .ZN(n335) );
  CKND1 U104 ( .I(\products[7][5] ), .ZN(n123) );
  CKND2D0 U105 ( .A1(\products[3][5] ), .A2(n315), .ZN(n303) );
  NR2D0 U106 ( .A1(n286), .A2(n259), .ZN(n275) );
  CKND2D0 U107 ( .A1(\products[2][5] ), .A2(n315), .ZN(n300) );
  CKND2D0 U108 ( .A1(\products[10][5] ), .A2(n286), .ZN(n269) );
  CKND1 U109 ( .I(\products[6][5] ), .ZN(n129) );
  CKND1 U110 ( .I(\products[14][5] ), .ZN(n83) );
  CKAN2D0 U111 ( .A1(n316), .A2(n299), .Z(n270) );
  CKND2D0 U113 ( .A1(\products[15][5] ), .A2(n286), .ZN(n296) );
  CKND2D1 U114 ( .A1(n250), .A2(n316), .ZN(n317) );
  CKND1 U115 ( .I(\products[5][5] ), .ZN(n135) );
  CKAN2D0 U116 ( .A1(n310), .A2(n329), .Z(n311) );
  OAI22D0 U117 ( .A1(n307), .A2(n221), .B1(n306), .B2(n223), .ZN(
        \shifted_products[4][5] ) );
  OAI22D0 U118 ( .A1(n307), .A2(n95), .B1(n305), .B2(n97), .ZN(
        \shifted_products[12][5] ) );
  OAI22D0 U119 ( .A1(n52), .A2(n217), .B1(n309), .B2(n219), .ZN(
        \shifted_products[5][3] ) );
  OAI22D0 U120 ( .A1(n307), .A2(n223), .B1(n306), .B2(n225), .ZN(
        \shifted_products[4][3] ) );
  OAI22D0 U121 ( .A1(n52), .A2(n79), .B1(n251), .B2(n81), .ZN(
        \shifted_products[15][3] ) );
  OAI22D0 U122 ( .A1(n19), .A2(n85), .B1(n250), .B2(n87), .ZN(
        \shifted_products[14][3] ) );
  OAI22D0 U123 ( .A1(n340), .A2(n103), .B1(n257), .B2(n105), .ZN(
        \shifted_products[11][3] ) );
  NR2D0 U124 ( .A1(n246), .A2(n108), .ZN(\shifted_products[10][3] ) );
  NR2D0 U125 ( .A1(n245), .A2(n119), .ZN(\shifted_products[8][3] ) );
  OAI22D0 U126 ( .A1(n51), .A2(n91), .B1(n248), .B2(n93), .ZN(
        \shifted_products[13][3] ) );
  OAI22D0 U127 ( .A1(n307), .A2(n97), .B1(n305), .B2(n99), .ZN(
        \shifted_products[12][3] ) );
  OAI22D0 U128 ( .A1(n125), .A2(n51), .B1(n247), .B2(n127), .ZN(
        \shifted_products[7][3] ) );
  OAI21D0 U129 ( .A1(n81), .A2(n50), .B(n289), .ZN(\shifted_products[15][13] )
         );
  NR2D0 U131 ( .A1(n52), .A2(n219), .ZN(\shifted_products[5][1] ) );
  NR2D0 U132 ( .A1(n307), .A2(n99), .ZN(\shifted_products[12][1] ) );
  NR2D0 U133 ( .A1(n52), .A2(n93), .ZN(\shifted_products[13][1] ) );
  NR2D0 U135 ( .A1(n127), .A2(n52), .ZN(\shifted_products[7][1] ) );
  NR2D0 U136 ( .A1(n246), .A2(n110), .ZN(\shifted_products[10][1] ) );
  NR2D0 U137 ( .A1(n52), .A2(n81), .ZN(\shifted_products[15][1] ) );
  CKND1 U138 ( .I(\products[4][5] ), .ZN(n221) );
  CKAN2D0 U139 ( .A1(\products[0][5] ), .A2(n52), .Z(\shifted_products[0][9] )
         );
  AO222D1 U140 ( .A1(n67), .A2(\products[6][5] ), .B1(n67), .B2(
        \products[7][5] ), .C1(\products[6][5] ), .C2(\products[7][5] ), .Z(
        n40) );
  OAI21D0 U141 ( .A1(n78), .A2(n50), .B(n289), .ZN(\shifted_products[15][16] )
         );
  OAI21D0 U142 ( .A1(n304), .A2(n229), .B(n303), .ZN(\shifted_products[3][9] )
         );
  AN2D4 U143 ( .A1(n290), .A2(n53), .Z(n340) );
  NR2D0 U144 ( .A1(n244), .A2(n237), .ZN(\shifted_products[2][0] ) );
  OAI21D0 U145 ( .A1(n304), .A2(n235), .B(n300), .ZN(\shifted_products[2][6] )
         );
  OAI22D0 U146 ( .A1(n329), .A2(n239), .B1(n23), .B2(n241), .ZN(
        \shifted_products[1][4] ) );
  OAI22D0 U147 ( .A1(n329), .A2(n240), .B1(n23), .B2(n242), .ZN(
        \shifted_products[1][3] ) );
  OAI22D0 U148 ( .A1(n329), .A2(n228), .B1(n302), .B2(n230), .ZN(
        \shifted_products[3][4] ) );
  OAI22D0 U149 ( .A1(n244), .A2(n233), .B1(n304), .B2(n237), .ZN(
        \shifted_products[2][4] ) );
  OAI22D0 U150 ( .A1(n329), .A2(n230), .B1(n302), .B2(n232), .ZN(
        \shifted_products[3][2] ) );
  NR2D0 U151 ( .A1(n244), .A2(n235), .ZN(\shifted_products[2][2] ) );
  NR2D0 U152 ( .A1(n329), .A2(n242), .ZN(\shifted_products[1][1] ) );
  INR2XD0 U153 ( .A1(n290), .B1(n308), .ZN(n305) );
  CKAN2D0 U154 ( .A1(n328), .A2(n53), .Z(n319) );
  INR2D0 U155 ( .A1(n323), .B1(n301), .ZN(n302) );
  CKND2D0 U156 ( .A1(n341), .A2(n333), .ZN(n293) );
  ND2D2 U157 ( .A1(n50), .A2(n323), .ZN(n337) );
  CKND2D0 U158 ( .A1(n50), .A2(n313), .ZN(n330) );
  CKAN2D0 U159 ( .A1(n333), .A2(n328), .Z(n310) );
  CKND2D0 U160 ( .A1(n316), .A2(n313), .ZN(n283) );
  AOI22D0 U162 ( .A1(\products[14][0] ), .A2(n283), .B1(\products[14][4] ), 
        .B2(n282), .ZN(n284) );
  NR2D0 U163 ( .A1(n307), .A2(n226), .ZN(\shifted_products[4][0] ) );
  NR2D0 U164 ( .A1(n307), .A2(n100), .ZN(\shifted_products[12][0] ) );
  AOI22D0 U165 ( .A1(\products[6][4] ), .A2(n317), .B1(\products[6][0] ), .B2(
        n330), .ZN(n318) );
  NR2D0 U166 ( .A1(n246), .A2(n111), .ZN(\shifted_products[10][0] ) );
  NR2D0 U167 ( .A1(n245), .A2(n122), .ZN(\shifted_products[8][0] ) );
  CKND1 U168 ( .I(\products[15][4] ), .ZN(n78) );
  CKND1 U169 ( .I(\products[14][3] ), .ZN(n85) );
  OAI21D0 U170 ( .A1(n304), .A2(n230), .B(n303), .ZN(\shifted_products[3][8] )
         );
  OAI21D0 U171 ( .A1(n304), .A2(n233), .B(n300), .ZN(\shifted_products[2][8] )
         );
  CKND1 U172 ( .I(\products[13][3] ), .ZN(n91) );
  CKND1 U173 ( .I(\products[7][3] ), .ZN(n125) );
  CKND2D0 U174 ( .A1(n321), .A2(n328), .ZN(n324) );
  CKND2D0 U175 ( .A1(n310), .A2(n290), .ZN(n277) );
  CKND1 U176 ( .I(\products[6][3] ), .ZN(n131) );
  CKND1 U177 ( .I(\products[14][4] ), .ZN(n84) );
  CKND1 U178 ( .I(\products[7][4] ), .ZN(n124) );
  CKND1 U179 ( .I(\products[12][3] ), .ZN(n97) );
  CKND1 U180 ( .I(\products[13][4] ), .ZN(n90) );
  CKND1 U181 ( .I(\products[5][3] ), .ZN(n217) );
  OAI21D0 U182 ( .A1(n336), .A2(n119), .B(n335), .ZN(\shifted_products[8][7] )
         );
  CKND1 U183 ( .I(\products[6][4] ), .ZN(n130) );
  OAI21D0 U184 ( .A1(n336), .A2(n97), .B(n276), .ZN(\shifted_products[12][9] )
         );
  OAI22D0 U185 ( .A1(n245), .A2(n118), .B1(n336), .B2(n122), .ZN(
        \shifted_products[8][4] ) );
  OAI21D0 U186 ( .A1(n336), .A2(n121), .B(n335), .ZN(\shifted_products[8][5] )
         );
  OAI21D0 U187 ( .A1(n336), .A2(n99), .B(n276), .ZN(\shifted_products[12][7] )
         );
  OAI22D0 U188 ( .A1(n246), .A2(n107), .B1(n270), .B2(n111), .ZN(
        \shifted_products[10][4] ) );
  OAI22D0 U189 ( .A1(n307), .A2(n222), .B1(n306), .B2(n224), .ZN(
        \shifted_products[4][4] ) );
  OAI22D0 U190 ( .A1(n307), .A2(n96), .B1(n305), .B2(n98), .ZN(
        \shifted_products[12][4] ) );
  OAI21D0 U191 ( .A1(n336), .A2(n120), .B(n335), .ZN(\shifted_products[8][6] )
         );
  AOI22D0 U192 ( .A1(\products[9][4] ), .A2(n18), .B1(\products[9][0] ), .B2(
        n337), .ZN(n339) );
  AOI22D0 U193 ( .A1(\products[15][4] ), .A2(n291), .B1(\products[15][0] ), 
        .B2(n293), .ZN(n292) );
  AOI22D0 U194 ( .A1(\products[11][0] ), .A2(n273), .B1(\products[11][4] ), 
        .B2(n301), .ZN(n274) );
  OAI22D0 U195 ( .A1(n255), .A2(n85), .B1(n285), .B2(n83), .ZN(
        \shifted_products[14][9] ) );
  OAI22D0 U196 ( .A1(n52), .A2(n218), .B1(n309), .B2(n220), .ZN(
        \shifted_products[5][2] ) );
  OAI22D0 U197 ( .A1(n307), .A2(n224), .B1(n306), .B2(n226), .ZN(
        \shifted_products[4][2] ) );
  OAI22D0 U198 ( .A1(n52), .A2(n92), .B1(n248), .B2(n94), .ZN(
        \shifted_products[13][2] ) );
  OAI22D0 U199 ( .A1(n307), .A2(n98), .B1(n305), .B2(n100), .ZN(
        \shifted_products[12][2] ) );
  OAI22D0 U200 ( .A1(n52), .A2(n80), .B1(n251), .B2(n82), .ZN(
        \shifted_products[15][2] ) );
  OAI22D0 U201 ( .A1(n19), .A2(n86), .B1(n250), .B2(n88), .ZN(
        \shifted_products[14][2] ) );
  OAI22D0 U202 ( .A1(n340), .A2(n104), .B1(n257), .B2(n106), .ZN(
        \shifted_products[11][2] ) );
  NR2D0 U203 ( .A1(n246), .A2(n109), .ZN(\shifted_products[10][2] ) );
  OAI22D0 U204 ( .A1(n340), .A2(n115), .B1(n252), .B2(n117), .ZN(
        \shifted_products[9][2] ) );
  NR2D0 U205 ( .A1(n245), .A2(n120), .ZN(\shifted_products[8][2] ) );
  OAI22D0 U206 ( .A1(n19), .A2(n132), .B1(n249), .B2(n134), .ZN(
        \shifted_products[6][2] ) );
  CKAN2D0 U207 ( .A1(n329), .A2(n328), .Z(n332) );
  CKND1 U208 ( .I(\products[5][4] ), .ZN(n216) );
  CKND1 U209 ( .I(\products[4][4] ), .ZN(n222) );
  CKND1 U210 ( .I(\products[4][3] ), .ZN(n223) );
  CKAN2D0 U211 ( .A1(n340), .A2(n328), .Z(n295) );
  CKND2D0 U212 ( .A1(n299), .A2(n323), .ZN(n273) );
  OAI22D0 U213 ( .A1(n329), .A2(n241), .B1(n23), .B2(n243), .ZN(
        \shifted_products[1][2] ) );
  CKND2D0 U214 ( .A1(n266), .A2(n263), .ZN(n290) );
  CKND2D0 U215 ( .A1(n268), .A2(n264), .ZN(n323) );
  CKND2D0 U216 ( .A1(n266), .A2(n265), .ZN(n313) );
  CKND2D0 U217 ( .A1(n265), .A2(n264), .ZN(n314) );
  CKND1 U218 ( .I(\products[6][2] ), .ZN(n132) );
  CKND1 U219 ( .I(\products[12][2] ), .ZN(n98) );
  AOI22D0 U220 ( .A1(\products[7][2] ), .A2(n325), .B1(\products[7][4] ), .B2(
        n324), .ZN(n326) );
  AOI22D0 U221 ( .A1(\products[13][4] ), .A2(n277), .B1(\products[13][2] ), 
        .B2(n308), .ZN(n278) );
  OAI21D0 U222 ( .A1(n336), .A2(n98), .B(n276), .ZN(\shifted_products[12][8] )
         );
  AOI22D0 U223 ( .A1(\products[13][4] ), .A2(n308), .B1(\products[13][2] ), 
        .B2(n259), .ZN(n279) );
  CKND1 U224 ( .I(\products[5][2] ), .ZN(n218) );
  CKND1 U225 ( .I(\products[4][2] ), .ZN(n224) );
  AN2D1 U226 ( .A1(\shifted_products[3][9] ), .A2(\products[2][5] ), .Z(n43)
         );
  INVD1 U227 ( .I(n334), .ZN(n245) );
  INVD1 U228 ( .I(n317), .ZN(n249) );
  INVD1 U229 ( .I(n315), .ZN(n244) );
  CKBD1 U230 ( .I(n327), .Z(n52) );
  CKBD1 U231 ( .I(n327), .Z(n51) );
  CKBD1 U232 ( .I(n327), .Z(n53) );
  INVD1 U233 ( .I(n18), .ZN(n252) );
  OAI22D1 U234 ( .A1(n312), .A2(n217), .B1(n311), .B2(n135), .ZN(
        \shifted_products[5][7] ) );
  INVD1 U235 ( .I(\products[15][5] ), .ZN(n77) );
  INVD1 U236 ( .I(n277), .ZN(n248) );
  NR2D1 U237 ( .A1(n19), .A2(n88), .ZN(\shifted_products[14][0] ) );
  INVD1 U238 ( .I(n324), .ZN(n247) );
  AOI222D0 U240 ( .A1(n60), .A2(\products[10][5] ), .B1(n60), .B2(
        \products[11][5] ), .C1(\products[10][5] ), .C2(\products[11][5] ), 
        .ZN(n44) );
  FA1D0 U241 ( .A(\shifted_products[10][1] ), .B(\shifted_products[11][1] ), 
        .CI(\add_9_root_add_199_I16/carry[1] ), .CO(
        \add_9_root_add_199_I16/carry[2] ), .S(N175) );
  FA1D0 U242 ( .A(\shifted_products[12][5] ), .B(\shifted_products[13][5] ), 
        .CI(\add_8_root_add_199_I16/carry[5] ), .CO(
        \add_8_root_add_199_I16/carry[6] ), .S(N206) );
  OAI222D0 U243 ( .A1(n254), .A2(n93), .B1(n248), .B2(n91), .C1(n51), .C2(n89), 
        .ZN(\shifted_products[13][5] ) );
  FA1D0 U244 ( .A(\shifted_products[4][5] ), .B(\shifted_products[5][5] ), 
        .CI(\add_12_root_add_199_I16/carry[5] ), .CO(
        \add_12_root_add_199_I16/carry[6] ), .S(N104) );
  OAI222D0 U245 ( .A1(n309), .A2(n217), .B1(n312), .B2(n219), .C1(n51), .C2(
        n135), .ZN(\shifted_products[5][5] ) );
  FA1D0 U246 ( .A(\shifted_products[4][3] ), .B(\shifted_products[5][3] ), 
        .CI(\add_12_root_add_199_I16/carry[3] ), .CO(
        \add_12_root_add_199_I16/carry[4] ), .S(N102) );
  FA1D0 U247 ( .A(\shifted_products[2][3] ), .B(\shifted_products[3][3] ), 
        .CI(\add_13_root_add_199_I16/carry[3] ), .CO(
        \add_13_root_add_199_I16/carry[4] ), .S(N79) );
  FA1D0 U248 ( .A(\shifted_products[10][3] ), .B(\shifted_products[11][3] ), 
        .CI(\add_9_root_add_199_I16/carry[3] ), .CO(
        \add_9_root_add_199_I16/carry[4] ), .S(N177) );
  FA1D0 U249 ( .A(\shifted_products[2][5] ), .B(\shifted_products[3][5] ), 
        .CI(\add_13_root_add_199_I16/carry[5] ), .CO(
        \add_13_root_add_199_I16/carry[6] ), .S(N81) );
  OAI21D1 U250 ( .A1(n304), .A2(n236), .B(n300), .ZN(\shifted_products[2][5] )
         );
  FA1D0 U251 ( .A(\shifted_products[10][9] ), .B(\shifted_products[11][9] ), 
        .CI(\add_9_root_add_199_I16/carry[9] ), .CO(
        \add_9_root_add_199_I16/carry[10] ), .S(N183) );
  OAI22D1 U252 ( .A1(n253), .A2(n103), .B1(n275), .B2(n101), .ZN(
        \shifted_products[11][9] ) );
  OAI21D1 U253 ( .A1(n49), .A2(n110), .B(n271), .ZN(\shifted_products[10][9] )
         );
  FA1D0 U254 ( .A(\shifted_products[6][3] ), .B(\shifted_products[7][3] ), 
        .CI(\add_11_root_add_199_I16/carry[3] ), .CO(
        \add_11_root_add_199_I16/carry[4] ), .S(N126) );
  FA1D0 U255 ( .A(\shifted_products[12][3] ), .B(\shifted_products[13][3] ), 
        .CI(\add_8_root_add_199_I16/carry[3] ), .CO(
        \add_8_root_add_199_I16/carry[4] ), .S(N204) );
  FA1D0 U256 ( .A(\shifted_products[8][3] ), .B(\shifted_products[9][3] ), 
        .CI(\add_10_root_add_199_I16/carry[3] ), .CO(
        \add_10_root_add_199_I16/carry[4] ), .S(N151) );
  OAI21D1 U257 ( .A1(n297), .A2(n79), .B(n287), .ZN(\shifted_products[15][11] ) );
  OAI21D1 U258 ( .A1(n49), .A2(n87), .B(n281), .ZN(\shifted_products[14][11] )
         );
  OAI21D1 U259 ( .A1(n49), .A2(n85), .B(n281), .ZN(\shifted_products[14][13] )
         );
  OAI21D1 U260 ( .A1(n304), .A2(n231), .B(n303), .ZN(\shifted_products[3][7] )
         );
  OAI21D1 U261 ( .A1(n304), .A2(n234), .B(n300), .ZN(\shifted_products[2][7] )
         );
  FA1D0 U262 ( .A(\shifted_products[10][11] ), .B(\shifted_products[11][11] ), 
        .CI(\add_9_root_add_199_I16/carry[11] ), .CO(
        \add_9_root_add_199_I16/carry[12] ), .S(N185) );
  OAI21D1 U263 ( .A1(n49), .A2(n105), .B(n272), .ZN(\shifted_products[11][11] ) );
  OAI21D1 U264 ( .A1(n49), .A2(n108), .B(n271), .ZN(\shifted_products[10][11] ) );
  FA1D0 U265 ( .A(\shifted_products[2][1] ), .B(\shifted_products[3][1] ), 
        .CI(\add_13_root_add_199_I16/carry[1] ), .CO(
        \add_13_root_add_199_I16/carry[2] ), .S(N77) );
  NR2D1 U266 ( .A1(n244), .A2(n236), .ZN(\shifted_products[2][1] ) );
  FA1D0 U267 ( .A(\shifted_products[6][1] ), .B(\shifted_products[7][1] ), 
        .CI(\add_11_root_add_199_I16/carry[1] ), .CO(
        \add_11_root_add_199_I16/carry[2] ), .S(N124) );
  NR2D1 U268 ( .A1(n319), .A2(n133), .ZN(\shifted_products[6][1] ) );
  FA1D0 U269 ( .A(\shifted_products[8][1] ), .B(\shifted_products[9][1] ), 
        .CI(\add_10_root_add_199_I16/carry[1] ), .CO(
        \add_10_root_add_199_I16/carry[2] ), .S(N149) );
  NR2D1 U270 ( .A1(n340), .A2(n116), .ZN(\shifted_products[9][1] ) );
  NR2D1 U271 ( .A1(n245), .A2(n121), .ZN(\shifted_products[8][1] ) );
  NR2D1 U272 ( .A1(n319), .A2(n87), .ZN(\shifted_products[14][1] ) );
  FA1D0 U273 ( .A(\shifted_products[4][1] ), .B(\shifted_products[5][1] ), 
        .CI(\add_12_root_add_199_I16/carry[1] ), .CO(
        \add_12_root_add_199_I16/carry[2] ), .S(N100) );
  NR2D1 U274 ( .A1(n307), .A2(n225), .ZN(\shifted_products[4][1] ) );
  FA1D0 U275 ( .A(\shifted_products[12][1] ), .B(\shifted_products[13][1] ), 
        .CI(\add_8_root_add_199_I16/carry[1] ), .CO(
        \add_8_root_add_199_I16/carry[2] ), .S(N202) );
  FA1D0 U276 ( .A(\products[0][5] ), .B(\shifted_products[1][5] ), .CI(
        \add_14_root_add_199_I16/carry[5] ), .CO(
        \add_14_root_add_199_I16/carry[6] ), .S(N59) );
  OAI22D1 U277 ( .A1(n329), .A2(n238), .B1(n23), .B2(n240), .ZN(
        \shifted_products[1][5] ) );
  NR2D1 U278 ( .A1(n319), .A2(n134), .ZN(\shifted_products[6][0] ) );
  INVD1 U279 ( .I(\products[12][5] ), .ZN(n95) );
  INVD1 U280 ( .I(\products[1][5] ), .ZN(n238) );
  NR2D1 U281 ( .A1(n308), .A2(n337), .ZN(n312) );
  INVD1 U282 ( .I(n330), .ZN(n256) );
  OAI22D1 U283 ( .A1(n261), .A2(n91), .B1(n342), .B2(n89), .ZN(
        \shifted_products[13][11] ) );
  OAI22D1 U284 ( .A1(n261), .A2(n114), .B1(n342), .B2(n112), .ZN(
        \shifted_products[9][9] ) );
  INVD1 U285 ( .I(\products[9][5] ), .ZN(n112) );
  INVD1 U286 ( .I(\products[11][5] ), .ZN(n101) );
  OAI21D1 U287 ( .A1(n49), .A2(n103), .B(n272), .ZN(\shifted_products[11][13] ) );
  OAI22D1 U288 ( .A1(n261), .A2(n90), .B1(n342), .B2(n89), .ZN(
        \shifted_products[13][12] ) );
  OAI22D1 U289 ( .A1(n261), .A2(n113), .B1(n342), .B2(n112), .ZN(
        \shifted_products[9][10] ) );
  ND2D1 U290 ( .A1(\products[14][5] ), .A2(n288), .ZN(n281) );
  ND2D1 U291 ( .A1(\products[10][5] ), .A2(n288), .ZN(n271) );
  ND2D1 U292 ( .A1(\products[15][5] ), .A2(n288), .ZN(n289) );
  ND2D1 U293 ( .A1(\products[11][5] ), .A2(n288), .ZN(n272) );
  INVD1 U294 ( .I(n282), .ZN(n250) );
  INVD1 U295 ( .I(n337), .ZN(n261) );
  OAI22D1 U296 ( .A1(n312), .A2(n216), .B1(n311), .B2(n135), .ZN(
        \shifted_products[5][8] ) );
  INVD1 U297 ( .I(n283), .ZN(n255) );
  INVD1 U298 ( .I(n273), .ZN(n253) );
  OA22D0 U299 ( .A1(n256), .A2(n124), .B1(n320), .B2(n123), .Z(n47) );
  INVD1 U300 ( .I(n291), .ZN(n251) );
  INVD1 U301 ( .I(n325), .ZN(n258) );
  INVD1 U302 ( .I(n293), .ZN(n260) );
  INVD1 U303 ( .I(n308), .ZN(n254) );
  NR2D1 U304 ( .A1(n340), .A2(n117), .ZN(\shifted_products[9][0] ) );
  NR2D1 U305 ( .A1(n340), .A2(n106), .ZN(\shifted_products[11][0] ) );
  INVD1 U306 ( .I(\products[3][5] ), .ZN(n227) );
  OA21D1 U307 ( .A1(n49), .A2(n102), .B(n272), .Z(n48) );
  ND2D1 U308 ( .A1(n313), .A2(n322), .ZN(n308) );
  INVD1 U309 ( .I(\products[15][3] ), .ZN(n79) );
  ND2D1 U310 ( .A1(n322), .A2(n328), .ZN(n301) );
  NR2D1 U311 ( .A1(n329), .A2(n243), .ZN(\shifted_products[1][0] ) );
  FA1D0 U312 ( .A(\shifted_products[6][7] ), .B(\shifted_products[7][7] ), 
        .CI(\add_11_root_add_199_I16/carry[7] ), .CO(
        \add_11_root_add_199_I16/carry[8] ), .S(N130) );
  OAI222D0 U313 ( .A1(n258), .A2(n125), .B1(n332), .B2(n123), .C1(n127), .C2(
        n333), .ZN(\shifted_products[7][7] ) );
  OAI222D0 U314 ( .A1(n244), .A2(n129), .B1(n256), .B2(n133), .C1(n333), .C2(
        n131), .ZN(\shifted_products[6][7] ) );
  FA1D0 U315 ( .A(\shifted_products[8][7] ), .B(\shifted_products[9][7] ), 
        .CI(\add_10_root_add_199_I16/carry[7] ), .CO(
        \add_10_root_add_199_I16/carry[8] ), .S(N155) );
  OAI222D0 U316 ( .A1(n261), .A2(n116), .B1(n245), .B2(n112), .C1(n114), .C2(
        n341), .ZN(\shifted_products[9][7] ) );
  OAI222D0 U317 ( .A1(n51), .A2(n78), .B1(n251), .B2(n80), .C1(n82), .C2(n322), 
        .ZN(\shifted_products[15][4] ) );
  OAI222D0 U318 ( .A1(n19), .A2(n84), .B1(n250), .B2(n86), .C1(n333), .C2(n88), 
        .ZN(\shifted_products[14][4] ) );
  OAI222D0 U319 ( .A1(n51), .A2(n77), .B1(n251), .B2(n79), .C1(n81), .C2(n322), 
        .ZN(\shifted_products[15][5] ) );
  OAI222D0 U320 ( .A1(n19), .A2(n83), .B1(n250), .B2(n85), .C1(n333), .C2(n87), 
        .ZN(\shifted_products[14][5] ) );
  OAI222D0 U321 ( .A1(n260), .A2(n81), .B1(n295), .B2(n77), .C1(n79), .C2(n322), .ZN(\shifted_products[15][7] ) );
  OAI222D0 U322 ( .A1(n246), .A2(n83), .B1(n255), .B2(n87), .C1(n333), .C2(n85), .ZN(\shifted_products[14][7] ) );
  FA1D0 U323 ( .A(\shifted_products[8][4] ), .B(\shifted_products[9][4] ), 
        .CI(\add_10_root_add_199_I16/carry[4] ), .CO(
        \add_10_root_add_199_I16/carry[5] ), .S(N152) );
  OAI222D0 U324 ( .A1(n340), .A2(n113), .B1(n252), .B2(n115), .C1(n341), .C2(
        n117), .ZN(\shifted_products[9][4] ) );
  FA1D0 U325 ( .A(\shifted_products[10][4] ), .B(\shifted_products[11][4] ), 
        .CI(\add_9_root_add_199_I16/carry[4] ), .CO(
        \add_9_root_add_199_I16/carry[5] ), .S(N178) );
  OAI222D0 U326 ( .A1(n340), .A2(n102), .B1(n257), .B2(n104), .C1(n341), .C2(
        n106), .ZN(\shifted_products[11][4] ) );
  FA1D0 U327 ( .A(\shifted_products[12][7] ), .B(\shifted_products[13][7] ), 
        .CI(\add_8_root_add_199_I16/carry[7] ), .CO(
        \add_8_root_add_199_I16/carry[8] ), .S(N208) );
  OAI222D0 U328 ( .A1(n254), .A2(n91), .B1(n280), .B2(n89), .C1(n341), .C2(n93), .ZN(\shifted_products[13][7] ) );
  FA1D0 U329 ( .A(\shifted_products[8][5] ), .B(\shifted_products[9][5] ), 
        .CI(\add_10_root_add_199_I16/carry[5] ), .CO(
        \add_10_root_add_199_I16/carry[6] ), .S(N153) );
  OAI222D0 U330 ( .A1(n340), .A2(n112), .B1(n252), .B2(n114), .C1(n341), .C2(
        n116), .ZN(\shifted_products[9][5] ) );
  FA1D0 U331 ( .A(\shifted_products[10][5] ), .B(\shifted_products[11][5] ), 
        .CI(\add_9_root_add_199_I16/carry[5] ), .CO(
        \add_9_root_add_199_I16/carry[6] ), .S(N179) );
  OAI222D0 U332 ( .A1(n340), .A2(n101), .B1(n257), .B2(n103), .C1(n341), .C2(
        n105), .ZN(\shifted_products[11][5] ) );
  OAI21D1 U333 ( .A1(n270), .A2(n110), .B(n269), .ZN(\shifted_products[10][5] ) );
  FA1D0 U334 ( .A(\shifted_products[6][9] ), .B(\shifted_products[7][9] ), 
        .CI(\add_11_root_add_199_I16/carry[9] ), .CO(
        \add_11_root_add_199_I16/carry[10] ), .S(N132) );
  OAI222D0 U335 ( .A1(n244), .A2(n123), .B1(n256), .B2(n127), .C1(n333), .C2(
        n125), .ZN(\shifted_products[7][9] ) );
  OAI22D1 U336 ( .A1(n256), .A2(n131), .B1(n320), .B2(n129), .ZN(
        \shifted_products[6][9] ) );
  FA1D0 U337 ( .A(\shifted_products[12][9] ), .B(\shifted_products[13][9] ), 
        .CI(\add_8_root_add_199_I16/carry[9] ), .CO(
        \add_8_root_add_199_I16/carry[10] ), .S(N210) );
  OAI222D0 U338 ( .A1(n261), .A2(n93), .B1(n245), .B2(n89), .C1(n341), .C2(n91), .ZN(\shifted_products[13][9] ) );
  FA1D0 U339 ( .A(\shifted_products[10][7] ), .B(\shifted_products[11][7] ), 
        .CI(\add_9_root_add_199_I16/carry[7] ), .CO(
        \add_9_root_add_199_I16/carry[8] ), .S(N181) );
  OAI21D1 U340 ( .A1(n270), .A2(n108), .B(n269), .ZN(\shifted_products[10][7] ) );
  OAI222D0 U341 ( .A1(n246), .A2(n101), .B1(n253), .B2(n105), .C1(n341), .C2(
        n103), .ZN(\shifted_products[11][7] ) );
  FA1D0 U342 ( .A(\shifted_products[10][8] ), .B(\shifted_products[11][8] ), 
        .CI(\add_9_root_add_199_I16/carry[8] ), .CO(
        \add_9_root_add_199_I16/carry[9] ), .S(N182) );
  OAI222D0 U343 ( .A1(n246), .A2(n101), .B1(n253), .B2(n104), .C1(n341), .C2(
        n102), .ZN(\shifted_products[11][8] ) );
  OAI221D0 U344 ( .A1(n270), .A2(n107), .B1(n50), .B2(n111), .C(n269), .ZN(
        \shifted_products[10][8] ) );
  FA1D0 U345 ( .A(\shifted_products[10][10] ), .B(\shifted_products[11][10] ), 
        .CI(\add_9_root_add_199_I16/carry[10] ), .CO(
        \add_9_root_add_199_I16/carry[11] ), .S(N184) );
  OAI222D0 U346 ( .A1(n253), .A2(n102), .B1(n275), .B2(n101), .C1(n49), .C2(
        n106), .ZN(\shifted_products[11][10] ) );
  OAI21D1 U347 ( .A1(n49), .A2(n109), .B(n271), .ZN(\shifted_products[10][10] ) );
  FA1D0 U348 ( .A(\shifted_products[12][4] ), .B(\shifted_products[13][4] ), 
        .CI(\add_8_root_add_199_I16/carry[4] ), .CO(
        \add_8_root_add_199_I16/carry[5] ), .S(N205) );
  OAI222D0 U349 ( .A1(n254), .A2(n94), .B1(n248), .B2(n92), .C1(n51), .C2(n90), 
        .ZN(\shifted_products[13][4] ) );
  FA1D0 U350 ( .A(\shifted_products[6][5] ), .B(\shifted_products[7][5] ), 
        .CI(\add_11_root_add_199_I16/carry[5] ), .CO(
        \add_11_root_add_199_I16/carry[6] ), .S(N128) );
  OAI222D0 U351 ( .A1(n19), .A2(n129), .B1(n249), .B2(n131), .C1(n333), .C2(
        n133), .ZN(\shifted_products[6][5] ) );
  OAI222D0 U352 ( .A1(n247), .A2(n125), .B1(n258), .B2(n127), .C1(n123), .C2(
        n52), .ZN(\shifted_products[7][5] ) );
  OAI222D0 U353 ( .A1(n304), .A2(n232), .B1(n302), .B2(n228), .C1(n329), .C2(
        n227), .ZN(\shifted_products[3][6] ) );
  FA1D0 U354 ( .A(\shifted_products[4][4] ), .B(\shifted_products[5][4] ), 
        .CI(\add_12_root_add_199_I16/carry[4] ), .CO(
        \add_12_root_add_199_I16/carry[5] ), .S(N103) );
  OAI222D0 U355 ( .A1(n309), .A2(n218), .B1(n312), .B2(n220), .C1(n51), .C2(
        n216), .ZN(\shifted_products[5][4] ) );
  FA1D0 U356 ( .A(\shifted_products[6][4] ), .B(\shifted_products[7][4] ), 
        .CI(\add_11_root_add_199_I16/carry[4] ), .CO(
        \add_11_root_add_199_I16/carry[5] ), .S(N127) );
  OAI222D0 U357 ( .A1(n19), .A2(n130), .B1(n249), .B2(n132), .C1(n333), .C2(
        n134), .ZN(\shifted_products[6][4] ) );
  OAI222D0 U358 ( .A1(n247), .A2(n126), .B1(n258), .B2(n128), .C1(n124), .C2(
        n52), .ZN(\shifted_products[7][4] ) );
  FA1D0 U359 ( .A(\shifted_products[8][6] ), .B(\shifted_products[9][6] ), 
        .CI(\add_10_root_add_199_I16/carry[6] ), .CO(
        \add_10_root_add_199_I16/carry[7] ), .S(N154) );
  OAI221D0 U360 ( .A1(n340), .A2(n112), .B1(n115), .B2(n341), .C(n339), .ZN(
        \shifted_products[9][6] ) );
  OAI221D0 U361 ( .A1(n51), .A2(n77), .B1(n80), .B2(n322), .C(n292), .ZN(
        \shifted_products[15][6] ) );
  OAI221D0 U362 ( .A1(n19), .A2(n83), .B1(n333), .B2(n86), .C(n284), .ZN(
        \shifted_products[14][6] ) );
  FA1D0 U363 ( .A(\shifted_products[10][6] ), .B(\shifted_products[11][6] ), 
        .CI(\add_9_root_add_199_I16/carry[6] ), .CO(
        \add_9_root_add_199_I16/carry[7] ), .S(N180) );
  OAI221D0 U364 ( .A1(n340), .A2(n101), .B1(n341), .B2(n104), .C(n274), .ZN(
        \shifted_products[11][6] ) );
  OAI21D1 U365 ( .A1(n270), .A2(n109), .B(n269), .ZN(\shifted_products[10][6] ) );
  OAI221D0 U366 ( .A1(n297), .A2(n81), .B1(n260), .B2(n79), .C(n296), .ZN(
        \shifted_products[15][9] ) );
  OAI221D0 U367 ( .A1(n297), .A2(n80), .B1(n260), .B2(n78), .C(n296), .ZN(
        \shifted_products[15][10] ) );
  OAI222D0 U368 ( .A1(n255), .A2(n84), .B1(n285), .B2(n83), .C1(n49), .C2(n88), 
        .ZN(\shifted_products[14][10] ) );
  FA1D0 U369 ( .A(\shifted_products[6][8] ), .B(\shifted_products[7][8] ), 
        .CI(\add_11_root_add_199_I16/carry[8] ), .CO(
        \add_11_root_add_199_I16/carry[9] ), .S(N131) );
  OAI221D0 U370 ( .A1(n332), .A2(n123), .B1(n258), .B2(n124), .C(n331), .ZN(
        \shifted_products[7][8] ) );
  OAI222D0 U371 ( .A1(n244), .A2(n129), .B1(n256), .B2(n132), .C1(n333), .C2(
        n130), .ZN(\shifted_products[6][8] ) );
  OAI221D0 U372 ( .A1(n297), .A2(n78), .B1(n82), .B2(n50), .C(n287), .ZN(
        \shifted_products[15][12] ) );
  OAI21D1 U373 ( .A1(n49), .A2(n86), .B(n281), .ZN(\shifted_products[14][12] )
         );
  FA1D0 U374 ( .A(\shifted_products[4][2] ), .B(\shifted_products[5][2] ), 
        .CI(\add_12_root_add_199_I16/carry[2] ), .CO(
        \add_12_root_add_199_I16/carry[3] ), .S(N101) );
  FA1D0 U375 ( .A(\shifted_products[2][2] ), .B(\shifted_products[3][2] ), 
        .CI(\add_13_root_add_199_I16/carry[2] ), .CO(
        \add_13_root_add_199_I16/carry[3] ), .S(N78) );
  FA1D0 U376 ( .A(\shifted_products[10][2] ), .B(\shifted_products[11][2] ), 
        .CI(\add_9_root_add_199_I16/carry[2] ), .CO(
        \add_9_root_add_199_I16/carry[3] ), .S(N176) );
  FA1D0 U377 ( .A(\shifted_products[2][4] ), .B(\shifted_products[3][4] ), 
        .CI(\add_13_root_add_199_I16/carry[4] ), .CO(
        \add_13_root_add_199_I16/carry[5] ), .S(N80) );
  FA1D0 U378 ( .A(\shifted_products[6][2] ), .B(\shifted_products[7][2] ), 
        .CI(\add_11_root_add_199_I16/carry[2] ), .CO(
        \add_11_root_add_199_I16/carry[3] ), .S(N125) );
  OAI22D1 U379 ( .A1(n126), .A2(n51), .B1(n247), .B2(n128), .ZN(
        \shifted_products[7][2] ) );
  FA1D0 U380 ( .A(\shifted_products[12][2] ), .B(\shifted_products[13][2] ), 
        .CI(\add_8_root_add_199_I16/carry[2] ), .CO(
        \add_8_root_add_199_I16/carry[3] ), .S(N203) );
  FA1D0 U381 ( .A(\shifted_products[8][2] ), .B(\shifted_products[9][2] ), 
        .CI(\add_10_root_add_199_I16/carry[2] ), .CO(
        \add_10_root_add_199_I16/carry[3] ), .S(N150) );
  FA1D0 U382 ( .A(\products[0][3] ), .B(\shifted_products[1][3] ), .CI(
        \add_14_root_add_199_I16/carry[3] ), .CO(
        \add_14_root_add_199_I16/carry[4] ), .S(N57) );
  FA1D0 U383 ( .A(\products[0][4] ), .B(\shifted_products[1][4] ), .CI(
        \add_14_root_add_199_I16/carry[4] ), .CO(
        \add_14_root_add_199_I16/carry[5] ), .S(N58) );
  FA1D0 U384 ( .A(\products[0][1] ), .B(\shifted_products[1][1] ), .CI(
        \add_14_root_add_199_I16/carry[1] ), .CO(
        \add_14_root_add_199_I16/carry[2] ), .S(N55) );
  INVD1 U385 ( .I(\products[12][4] ), .ZN(n96) );
  FA1D0 U386 ( .A(\shifted_products[6][10] ), .B(\shifted_products[7][10] ), 
        .CI(\add_11_root_add_199_I16/carry[10] ), .CO(
        \add_11_root_add_199_I16/carry[11] ), .S(N133) );
  OAI222D0 U387 ( .A1(n244), .A2(n123), .B1(n256), .B2(n126), .C1(n333), .C2(
        n124), .ZN(\shifted_products[7][10] ) );
  OAI22D1 U388 ( .A1(n256), .A2(n130), .B1(n320), .B2(n129), .ZN(
        \shifted_products[6][10] ) );
  OAI21D1 U389 ( .A1(n80), .A2(n50), .B(n289), .ZN(\shifted_products[15][14] )
         );
  OAI21D1 U390 ( .A1(n50), .A2(n84), .B(n281), .ZN(\shifted_products[14][14] )
         );
  FA1D0 U391 ( .A(\shifted_products[10][12] ), .B(\shifted_products[11][12] ), 
        .CI(\add_9_root_add_199_I16/carry[12] ), .CO(
        \add_9_root_add_199_I16/carry[13] ), .S(N186) );
  OAI21D1 U392 ( .A1(n49), .A2(n104), .B(n272), .ZN(\shifted_products[11][12] ) );
  OAI21D1 U393 ( .A1(n49), .A2(n107), .B(n271), .ZN(\shifted_products[10][12] ) );
  FA1D0 U394 ( .A(\shifted_products[12][10] ), .B(\shifted_products[13][10] ), 
        .CI(\add_8_root_add_199_I16/carry[10] ), .CO(
        \add_8_root_add_199_I16/carry[11] ), .S(N211) );
  OAI21D1 U395 ( .A1(n336), .A2(n96), .B(n276), .ZN(\shifted_products[12][10] ) );
  OAI222D0 U396 ( .A1(n261), .A2(n92), .B1(n245), .B2(n89), .C1(n341), .C2(n90), .ZN(\shifted_products[13][10] ) );
  FA1D0 U397 ( .A(\shifted_products[8][8] ), .B(\shifted_products[9][8] ), 
        .CI(\add_10_root_add_199_I16/carry[8] ), .CO(
        \add_10_root_add_199_I16/carry[9] ), .S(N156) );
  OAI21D1 U398 ( .A1(n336), .A2(n118), .B(n335), .ZN(\shifted_products[8][8] )
         );
  OAI222D0 U399 ( .A1(n261), .A2(n115), .B1(n245), .B2(n112), .C1(n341), .C2(
        n113), .ZN(\shifted_products[9][8] ) );
  FA1D0 U400 ( .A(\shifted_products[4][6] ), .B(\shifted_products[5][6] ), 
        .CI(\add_12_root_add_199_I16/carry[6] ), .CO(
        \add_12_root_add_199_I16/carry[7] ), .S(N105) );
  OAI22D1 U401 ( .A1(n307), .A2(n221), .B1(n306), .B2(n222), .ZN(
        \shifted_products[4][6] ) );
  OAI222D0 U402 ( .A1(n309), .A2(n216), .B1(n312), .B2(n218), .C1(n51), .C2(
        n135), .ZN(\shifted_products[5][6] ) );
  NR2D1 U403 ( .A1(n52), .A2(n220), .ZN(\shifted_products[5][0] ) );
  INVD1 U404 ( .I(\products[1][4] ), .ZN(n239) );
  INVD1 U405 ( .I(\products[1][3] ), .ZN(n240) );
  CKBD1 U406 ( .I(n314), .Z(n50) );
  INR2D1 U407 ( .A1(n333), .B1(n315), .ZN(n320) );
  INR2D1 U408 ( .A1(n333), .B1(n286), .ZN(n285) );
  INVD1 U409 ( .I(\products[11][3] ), .ZN(n103) );
  INVD1 U410 ( .I(\products[9][3] ), .ZN(n114) );
  INVD1 U411 ( .I(\products[11][4] ), .ZN(n102) );
  ND2D1 U412 ( .A1(n322), .A2(n290), .ZN(n282) );
  ND2D1 U413 ( .A1(n290), .A2(n328), .ZN(n291) );
  ND2D1 U414 ( .A1(n323), .A2(n322), .ZN(n325) );
  INVD1 U415 ( .I(\products[9][4] ), .ZN(n113) );
  INVD1 U416 ( .I(\products[3][3] ), .ZN(n229) );
  INVD1 U417 ( .I(\products[3][4] ), .ZN(n228) );
  INVD1 U418 ( .I(\products[10][4] ), .ZN(n107) );
  INVD1 U419 ( .I(\products[10][3] ), .ZN(n108) );
  INVD1 U420 ( .I(\products[2][4] ), .ZN(n233) );
  INVD1 U421 ( .I(\products[8][4] ), .ZN(n118) );
  INVD1 U422 ( .I(\products[2][3] ), .ZN(n234) );
  INVD1 U423 ( .I(\products[8][3] ), .ZN(n119) );
  CKBD1 U424 ( .I(n314), .Z(n49) );
  INVD1 U425 ( .I(\products[15][1] ), .ZN(n81) );
  INVD1 U426 ( .I(\products[7][1] ), .ZN(n127) );
  INVD1 U427 ( .I(\products[14][1] ), .ZN(n87) );
  INVD1 U428 ( .I(\products[13][1] ), .ZN(n93) );
  INVD1 U429 ( .I(\products[6][1] ), .ZN(n133) );
  INVD1 U430 ( .I(\products[5][1] ), .ZN(n219) );
  INVD1 U431 ( .I(\products[12][1] ), .ZN(n99) );
  INVD1 U432 ( .I(\products[3][1] ), .ZN(n231) );
  INVD1 U433 ( .I(\products[4][1] ), .ZN(n225) );
  INVD1 U434 ( .I(\products[1][1] ), .ZN(n242) );
  INVD1 U435 ( .I(\products[2][1] ), .ZN(n236) );
  INVD1 U436 ( .I(\products[15][0] ), .ZN(n82) );
  INVD1 U437 ( .I(\products[14][0] ), .ZN(n88) );
  INVD1 U438 ( .I(\products[11][0] ), .ZN(n106) );
  INVD1 U439 ( .I(\products[7][0] ), .ZN(n128) );
  INVD1 U440 ( .I(\products[6][0] ), .ZN(n134) );
  INVD1 U441 ( .I(\products[9][0] ), .ZN(n117) );
  INVD1 U442 ( .I(\products[11][1] ), .ZN(n105) );
  INVD1 U443 ( .I(\products[9][1] ), .ZN(n116) );
  INVD1 U444 ( .I(\products[10][1] ), .ZN(n110) );
  INVD1 U445 ( .I(\products[8][1] ), .ZN(n121) );
  INVD1 U446 ( .I(\products[13][2] ), .ZN(n92) );
  FA1D0 U447 ( .A(\shifted_products[6][6] ), .B(\shifted_products[7][6] ), 
        .CI(\add_11_root_add_199_I16/carry[6] ), .CO(
        \add_11_root_add_199_I16/carry[7] ), .S(N129) );
  OAI221D0 U448 ( .A1(n123), .A2(n51), .B1(n333), .B2(n128), .C(n326), .ZN(
        \shifted_products[7][6] ) );
  OAI221D0 U449 ( .A1(n19), .A2(n129), .B1(n333), .B2(n132), .C(n318), .ZN(
        \shifted_products[6][6] ) );
  FA1D0 U450 ( .A(\shifted_products[12][6] ), .B(\shifted_products[13][6] ), 
        .CI(\add_8_root_add_199_I16/carry[6] ), .CO(
        \add_8_root_add_199_I16/carry[7] ), .S(N207) );
  OAI222D0 U451 ( .A1(n307), .A2(n95), .B1(n305), .B2(n96), .C1(n336), .C2(
        n100), .ZN(\shifted_products[12][6] ) );
  OAI221D0 U452 ( .A1(n51), .A2(n89), .B1(n341), .B2(n94), .C(n278), .ZN(
        \shifted_products[13][6] ) );
  OAI221D0 U453 ( .A1(n295), .A2(n77), .B1(n297), .B2(n82), .C(n294), .ZN(
        \shifted_products[15][8] ) );
  OAI222D0 U454 ( .A1(n246), .A2(n83), .B1(n255), .B2(n86), .C1(n333), .C2(n84), .ZN(\shifted_products[14][8] ) );
  FA1D0 U455 ( .A(\shifted_products[12][8] ), .B(\shifted_products[13][8] ), 
        .CI(\add_8_root_add_199_I16/carry[8] ), .CO(
        \add_8_root_add_199_I16/carry[9] ), .S(N209) );
  OAI221D0 U456 ( .A1(n280), .A2(n89), .B1(n261), .B2(n94), .C(n279), .ZN(
        \shifted_products[13][8] ) );
  FA1D0 U457 ( .A(\products[0][2] ), .B(\shifted_products[1][2] ), .CI(
        \add_14_root_add_199_I16/carry[2] ), .CO(
        \add_14_root_add_199_I16/carry[3] ), .S(N56) );
  INVD1 U458 ( .I(\products[1][2] ), .ZN(n241) );
  INVD1 U459 ( .I(\products[15][2] ), .ZN(n80) );
  INVD1 U460 ( .I(\products[14][2] ), .ZN(n86) );
  INVD1 U461 ( .I(\products[11][2] ), .ZN(n104) );
  INVD1 U462 ( .I(\products[9][2] ), .ZN(n115) );
  INVD1 U463 ( .I(\products[7][2] ), .ZN(n126) );
  INVD1 U464 ( .I(\products[3][2] ), .ZN(n230) );
  INVD1 U465 ( .I(\products[10][2] ), .ZN(n109) );
  INVD1 U466 ( .I(\products[2][2] ), .ZN(n235) );
  INVD1 U467 ( .I(\products[8][2] ), .ZN(n120) );
  INVD1 U468 ( .I(\products[13][0] ), .ZN(n94) );
  INVD1 U469 ( .I(\products[5][0] ), .ZN(n220) );
  INVD1 U470 ( .I(\products[12][0] ), .ZN(n100) );
  INVD1 U471 ( .I(\products[4][0] ), .ZN(n226) );
  INVD1 U472 ( .I(\products[10][0] ), .ZN(n111) );
  INVD1 U473 ( .I(\products[3][0] ), .ZN(n232) );
  INVD1 U474 ( .I(\products[1][0] ), .ZN(n243) );
  INVD1 U475 ( .I(\products[2][0] ), .ZN(n237) );
  INVD1 U476 ( .I(\products[8][0] ), .ZN(n122) );
  INR3D0 U477 ( .A1(input_bitwidth[2]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[1]), .ZN(n264) );
  INR3D0 U478 ( .A1(weight_bitwidth[0]), .B1(weight_bitwidth[1]), .B2(
        weight_bitwidth[2]), .ZN(n263) );
  INR3D0 U479 ( .A1(input_bitwidth[0]), .B1(input_bitwidth[1]), .B2(
        input_bitwidth[2]), .ZN(n267) );
  INR3D0 U480 ( .A1(input_bitwidth[1]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[2]), .ZN(n266) );
  INR3D0 U481 ( .A1(weight_bitwidth[1]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[2]), .ZN(n268) );
  INR3D0 U482 ( .A1(weight_bitwidth[2]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[1]), .ZN(n265) );
  TIEL U483 ( .ZN(n262) );
  AN2D0 U484 ( .A1(\shifted_products[2][0] ), .A2(\shifted_products[3][0] ), 
        .Z(\add_13_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U485 ( .A1(\shifted_products[3][0] ), .A2(\shifted_products[2][0] ), 
        .Z(N76) );
  AN2D0 U486 ( .A1(\products[0][0] ), .A2(\shifted_products[1][0] ), .Z(
        \add_14_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U487 ( .A1(\shifted_products[1][0] ), .A2(\products[0][0] ), .Z(N54) );
  AN2D0 U488 ( .A1(\shifted_products[12][0] ), .A2(\shifted_products[13][0] ), 
        .Z(\add_8_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U489 ( .A1(\shifted_products[13][0] ), .A2(
        \shifted_products[12][0] ), .Z(N201) );
  AN2D0 U490 ( .A1(\shifted_products[6][0] ), .A2(\shifted_products[7][0] ), 
        .Z(\add_11_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U491 ( .A1(\shifted_products[7][0] ), .A2(\shifted_products[6][0] ), 
        .Z(N123) );
  AN2D0 U492 ( .A1(\shifted_products[4][0] ), .A2(\shifted_products[5][0] ), 
        .Z(\add_12_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U493 ( .A1(\shifted_products[5][0] ), .A2(\shifted_products[4][0] ), 
        .Z(N99) );
  AN2D0 U494 ( .A1(\shifted_products[8][0] ), .A2(\shifted_products[9][0] ), 
        .Z(\add_10_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U495 ( .A1(\shifted_products[9][0] ), .A2(\shifted_products[8][0] ), 
        .Z(N148) );
  AN2D0 U496 ( .A1(\shifted_products[10][0] ), .A2(\shifted_products[11][0] ), 
        .Z(\add_9_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U497 ( .A1(\shifted_products[11][0] ), .A2(
        \shifted_products[10][0] ), .Z(N174) );
  XOR3D0 U498 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[13][11] ), .A3(\products[12][5] ), .Z(N212) );
  XOR3D0 U499 ( .A1(\shifted_products[13][12] ), .A2(n54), .A3(n95), .Z(N213)
         );
  XOR3D0 U500 ( .A1(\products[13][5] ), .A2(\products[12][5] ), .A3(n55), .Z(
        N214) );
  CKND0 U501 ( .I(\shifted_products[13][12] ), .ZN(n57) );
  XNR3D0 U502 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \shifted_products[11][13] ), .A3(n58), .ZN(N187) );
  XNR3D0 U503 ( .A1(n48), .A2(n59), .A3(n58), .ZN(N188) );
  XNR3D0 U504 ( .A1(\products[11][5] ), .A2(n58), .A3(n60), .ZN(N189) );
  OAI222D0 U505 ( .A1(n59), .A2(n58), .B1(n59), .B2(n48), .C1(n58), .C2(n48), 
        .ZN(n60) );
  CKND0 U506 ( .I(\products[10][5] ), .ZN(n58) );
  XOR3D0 U507 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[9][9] ), .A3(\products[8][5] ), .Z(N157) );
  XOR3D0 U508 ( .A1(\shifted_products[9][10] ), .A2(n61), .A3(n62), .Z(N158)
         );
  XOR3D0 U509 ( .A1(\products[9][5] ), .A2(\products[8][5] ), .A3(n63), .Z(
        N159) );
  AOI222D0 U510 ( .A1(n63), .A2(\products[8][5] ), .B1(n63), .B2(
        \products[9][5] ), .C1(\products[8][5] ), .C2(\products[9][5] ), .ZN(
        n64) );
  OAI222D0 U511 ( .A1(n61), .A2(n62), .B1(n61), .B2(n65), .C1(n62), .C2(n65), 
        .ZN(n63) );
  CKND0 U512 ( .I(\shifted_products[9][10] ), .ZN(n65) );
  CKND0 U513 ( .I(\products[8][5] ), .ZN(n62) );
  XNR3D0 U514 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[7][11] ), .A3(n129), .ZN(N134) );
  XNR3D0 U515 ( .A1(n47), .A2(n1), .A3(n129), .ZN(N135) );
  XNR3D0 U516 ( .A1(\products[7][5] ), .A2(n129), .A3(n67), .ZN(N136) );
  XOR3D0 U517 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(
        \shifted_products[5][7] ), .A3(\products[4][5] ), .Z(N106) );
  XOR3D0 U518 ( .A1(\shifted_products[5][8] ), .A2(n68), .A3(n221), .Z(N107)
         );
  XOR3D0 U519 ( .A1(\products[5][5] ), .A2(\products[4][5] ), .A3(n69), .Z(
        N108) );
  CKND0 U520 ( .I(\shifted_products[5][8] ), .ZN(n71) );
  XNR3D0 U521 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .A3(n72), .ZN(N85) );
  XNR3D0 U522 ( .A1(\products[3][5] ), .A2(n72), .A3(n74), .ZN(N87) );
  XNR3D0 U523 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[1][6] ), .A3(n75), .ZN(N60) );
  XNR3D0 U524 ( .A1(n238), .A2(n76), .A3(n75), .ZN(N61) );
  CKND0 U525 ( .I(\shifted_products[0][9] ), .ZN(n75) );
endmodule


module fusion_unit_2_DW01_add_0_DW01_add_6 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module fusion_unit_2 ( clk, nRST, input_bitwidth, weight_bitwidth, input_sign, 
        weight_sign, input_forward, weight, psum_in, psum, input_to_right );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  input [3:0] input_sign;
  input [3:0] weight_sign;
  input [31:0] input_forward;
  input [31:0] weight;
  input [31:0] psum_in;
  output [31:0] psum;
  output [31:0] input_to_right;
  input clk, nRST;
  wire   \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] , n2;
  wire   [31:0] shift_add_out;
  assign input_to_right[31] = input_forward[31];
  assign input_to_right[30] = input_forward[30];
  assign input_to_right[29] = input_forward[29];
  assign input_to_right[28] = input_forward[28];
  assign input_to_right[27] = input_forward[27];
  assign input_to_right[26] = input_forward[26];
  assign input_to_right[25] = input_forward[25];
  assign input_to_right[24] = input_forward[24];
  assign input_to_right[23] = input_forward[23];
  assign input_to_right[22] = input_forward[22];
  assign input_to_right[21] = input_forward[21];
  assign input_to_right[20] = input_forward[20];
  assign input_to_right[19] = input_forward[19];
  assign input_to_right[18] = input_forward[18];
  assign input_to_right[17] = input_forward[17];
  assign input_to_right[16] = input_forward[16];
  assign input_to_right[15] = input_forward[15];
  assign input_to_right[14] = input_forward[14];
  assign input_to_right[13] = input_forward[13];
  assign input_to_right[12] = input_forward[12];
  assign input_to_right[11] = input_forward[11];
  assign input_to_right[10] = input_forward[10];
  assign input_to_right[9] = input_forward[9];
  assign input_to_right[8] = input_forward[8];
  assign input_to_right[7] = input_forward[7];
  assign input_to_right[6] = input_forward[6];
  assign input_to_right[5] = input_forward[5];
  assign input_to_right[4] = input_forward[4];
  assign input_to_right[3] = input_forward[3];
  assign input_to_right[2] = input_forward[2];
  assign input_to_right[1] = input_forward[1];
  assign input_to_right[0] = input_forward[0];

  bit_brick_47 \genblk1[0].BB  ( .x(input_forward[1:0]), .y(weight[1:0]), .sx(
        input_sign[0]), .sy(weight_sign[0]), .product({\products[0][5] , 
        \products[0][4] , \products[0][3] , \products[0][2] , \products[0][1] , 
        \products[0][0] }) );
  bit_brick_46 \genblk1[1].BB  ( .x(input_forward[3:2]), .y(weight[3:2]), .sx(
        input_sign[0]), .sy(weight_sign[1]), .product({\products[1][5] , 
        \products[1][4] , \products[1][3] , \products[1][2] , \products[1][1] , 
        \products[1][0] }) );
  bit_brick_45 \genblk1[2].BB  ( .x(input_forward[5:4]), .y(weight[5:4]), .sx(
        input_sign[0]), .sy(weight_sign[2]), .product({\products[2][5] , 
        \products[2][4] , \products[2][3] , \products[2][2] , \products[2][1] , 
        \products[2][0] }) );
  bit_brick_44 \genblk1[3].BB  ( .x(input_forward[7:6]), .y(weight[7:6]), .sx(
        input_sign[0]), .sy(weight_sign[3]), .product({\products[3][5] , 
        \products[3][4] , \products[3][3] , \products[3][2] , \products[3][1] , 
        \products[3][0] }) );
  bit_brick_43 \genblk1[4].BB  ( .x(input_forward[9:8]), .y(weight[9:8]), .sx(
        input_sign[1]), .sy(weight_sign[0]), .product({\products[4][5] , 
        \products[4][4] , \products[4][3] , \products[4][2] , \products[4][1] , 
        \products[4][0] }) );
  bit_brick_42 \genblk1[5].BB  ( .x(input_forward[11:10]), .y(weight[11:10]), 
        .sx(input_sign[1]), .sy(weight_sign[1]), .product({\products[5][5] , 
        \products[5][4] , \products[5][3] , \products[5][2] , \products[5][1] , 
        \products[5][0] }) );
  bit_brick_41 \genblk1[6].BB  ( .x(input_forward[13:12]), .y(weight[13:12]), 
        .sx(input_sign[1]), .sy(weight_sign[2]), .product({\products[6][5] , 
        \products[6][4] , \products[6][3] , \products[6][2] , \products[6][1] , 
        \products[6][0] }) );
  bit_brick_40 \genblk1[7].BB  ( .x(input_forward[15:14]), .y(weight[15:14]), 
        .sx(input_sign[1]), .sy(weight_sign[3]), .product({\products[7][5] , 
        \products[7][4] , \products[7][3] , \products[7][2] , \products[7][1] , 
        \products[7][0] }) );
  bit_brick_39 \genblk1[8].BB  ( .x(input_forward[17:16]), .y(weight[17:16]), 
        .sx(input_sign[2]), .sy(weight_sign[0]), .product({\products[8][5] , 
        \products[8][4] , \products[8][3] , \products[8][2] , \products[8][1] , 
        \products[8][0] }) );
  bit_brick_38 \genblk1[9].BB  ( .x(input_forward[19:18]), .y(weight[19:18]), 
        .sx(input_sign[2]), .sy(weight_sign[1]), .product({\products[9][5] , 
        \products[9][4] , \products[9][3] , \products[9][2] , \products[9][1] , 
        \products[9][0] }) );
  bit_brick_37 \genblk1[10].BB  ( .x(input_forward[21:20]), .y(weight[21:20]), 
        .sx(input_sign[2]), .sy(weight_sign[2]), .product({\products[10][5] , 
        \products[10][4] , \products[10][3] , \products[10][2] , 
        \products[10][1] , \products[10][0] }) );
  bit_brick_36 \genblk1[11].BB  ( .x(input_forward[23:22]), .y(weight[23:22]), 
        .sx(input_sign[2]), .sy(weight_sign[3]), .product({\products[11][5] , 
        \products[11][4] , \products[11][3] , \products[11][2] , 
        \products[11][1] , \products[11][0] }) );
  bit_brick_35 \genblk1[12].BB  ( .x(input_forward[25:24]), .y(weight[25:24]), 
        .sx(input_sign[3]), .sy(weight_sign[0]), .product({\products[12][5] , 
        \products[12][4] , \products[12][3] , \products[12][2] , 
        \products[12][1] , \products[12][0] }) );
  bit_brick_34 \genblk1[13].BB  ( .x(input_forward[27:26]), .y(weight[27:26]), 
        .sx(input_sign[3]), .sy(weight_sign[1]), .product({\products[13][5] , 
        \products[13][4] , \products[13][3] , \products[13][2] , 
        \products[13][1] , \products[13][0] }) );
  bit_brick_33 \genblk1[14].BB  ( .x(input_forward[29:28]), .y(weight[29:28]), 
        .sx(input_sign[3]), .sy(weight_sign[2]), .product({\products[14][5] , 
        \products[14][4] , \products[14][3] , \products[14][2] , 
        \products[14][1] , \products[14][0] }) );
  bit_brick_32 \genblk1[15].BB  ( .x(input_forward[31:30]), .y(weight[31:30]), 
        .sx(input_sign[3]), .sy(weight_sign[3]), .product({\products[15][5] , 
        \products[15][4] , \products[15][3] , \products[15][2] , 
        \products[15][1] , \products[15][0] }) );
  shift_add_2 shift_add ( .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .products({\products[15][5] , \products[15][4] , 
        \products[15][3] , \products[15][2] , \products[15][1] , 
        \products[15][0] , \products[14][5] , \products[14][4] , 
        \products[14][3] , \products[14][2] , \products[14][1] , 
        \products[14][0] , \products[13][5] , \products[13][4] , 
        \products[13][3] , \products[13][2] , \products[13][1] , 
        \products[13][0] , \products[12][5] , \products[12][4] , 
        \products[12][3] , \products[12][2] , \products[12][1] , 
        \products[12][0] , \products[11][5] , \products[11][4] , 
        \products[11][3] , \products[11][2] , \products[11][1] , 
        \products[11][0] , \products[10][5] , \products[10][4] , 
        \products[10][3] , \products[10][2] , \products[10][1] , 
        \products[10][0] , \products[9][5] , \products[9][4] , 
        \products[9][3] , \products[9][2] , \products[9][1] , \products[9][0] , 
        \products[8][5] , \products[8][4] , \products[8][3] , \products[8][2] , 
        \products[8][1] , \products[8][0] , \products[7][5] , \products[7][4] , 
        \products[7][3] , \products[7][2] , \products[7][1] , \products[7][0] , 
        \products[6][5] , \products[6][4] , \products[6][3] , \products[6][2] , 
        \products[6][1] , \products[6][0] , \products[5][5] , \products[5][4] , 
        \products[5][3] , \products[5][2] , \products[5][1] , \products[5][0] , 
        \products[4][5] , \products[4][4] , \products[4][3] , \products[4][2] , 
        \products[4][1] , \products[4][0] , \products[3][5] , \products[3][4] , 
        \products[3][3] , \products[3][2] , \products[3][1] , \products[3][0] , 
        \products[2][5] , \products[2][4] , \products[2][3] , \products[2][2] , 
        \products[2][1] , \products[2][0] , \products[1][5] , \products[1][4] , 
        \products[1][3] , \products[1][2] , \products[1][1] , \products[1][0] , 
        \products[0][5] , \products[0][4] , \products[0][3] , \products[0][2] , 
        \products[0][1] , \products[0][0] }), .shift_add_out(shift_add_out) );
  fusion_unit_2_DW01_add_0_DW01_add_6 add_53 ( .A(shift_add_out), .B(psum_in), 
        .CI(n2), .SUM(psum) );
  TIEL U1 ( .ZN(n2) );
endmodule


module WBUF_ARRAY_SIZE4_DATA_W32_1 ( clk, nRST, WBUF_wr_en, WBUF_data_in, 
        WBUF_data_out );
  input [31:0] WBUF_data_in;
  output [31:0] WBUF_data_out;
  input clk, nRST, WBUF_wr_en;
  wire   n1, n2, n3, n4, n5, n6;

  EDFCNQD1 \WBUF_data_out_reg[31]  ( .D(WBUF_data_in[31]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[31]) );
  EDFCNQD1 \WBUF_data_out_reg[30]  ( .D(WBUF_data_in[30]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[30]) );
  EDFCNQD1 \WBUF_data_out_reg[29]  ( .D(WBUF_data_in[29]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[29]) );
  EDFCNQD1 \WBUF_data_out_reg[28]  ( .D(WBUF_data_in[28]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[28]) );
  EDFCNQD1 \WBUF_data_out_reg[27]  ( .D(WBUF_data_in[27]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[27]) );
  EDFCNQD1 \WBUF_data_out_reg[26]  ( .D(WBUF_data_in[26]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[26]) );
  EDFCNQD1 \WBUF_data_out_reg[25]  ( .D(WBUF_data_in[25]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[25]) );
  EDFCNQD1 \WBUF_data_out_reg[24]  ( .D(WBUF_data_in[24]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[24]) );
  EDFCNQD1 \WBUF_data_out_reg[23]  ( .D(WBUF_data_in[23]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[23]) );
  EDFCNQD1 \WBUF_data_out_reg[22]  ( .D(WBUF_data_in[22]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[22]) );
  EDFCNQD1 \WBUF_data_out_reg[21]  ( .D(WBUF_data_in[21]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[21]) );
  EDFCNQD1 \WBUF_data_out_reg[20]  ( .D(WBUF_data_in[20]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[20]) );
  EDFCNQD1 \WBUF_data_out_reg[19]  ( .D(WBUF_data_in[19]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[19]) );
  EDFCNQD1 \WBUF_data_out_reg[18]  ( .D(WBUF_data_in[18]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[18]) );
  EDFCNQD1 \WBUF_data_out_reg[17]  ( .D(WBUF_data_in[17]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[17]) );
  EDFCNQD1 \WBUF_data_out_reg[16]  ( .D(WBUF_data_in[16]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[16]) );
  EDFCNQD1 \WBUF_data_out_reg[15]  ( .D(WBUF_data_in[15]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[15]) );
  EDFCNQD1 \WBUF_data_out_reg[14]  ( .D(WBUF_data_in[14]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[14]) );
  EDFCNQD1 \WBUF_data_out_reg[13]  ( .D(WBUF_data_in[13]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[13]) );
  EDFCNQD1 \WBUF_data_out_reg[12]  ( .D(WBUF_data_in[12]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[12]) );
  EDFCNQD1 \WBUF_data_out_reg[11]  ( .D(WBUF_data_in[11]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[11]) );
  EDFCNQD1 \WBUF_data_out_reg[10]  ( .D(WBUF_data_in[10]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[10]) );
  EDFCNQD1 \WBUF_data_out_reg[9]  ( .D(WBUF_data_in[9]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[9]) );
  EDFCNQD1 \WBUF_data_out_reg[8]  ( .D(WBUF_data_in[8]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[8]) );
  EDFCNQD1 \WBUF_data_out_reg[7]  ( .D(WBUF_data_in[7]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[7]) );
  EDFCNQD1 \WBUF_data_out_reg[6]  ( .D(WBUF_data_in[6]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[6]) );
  EDFCNQD1 \WBUF_data_out_reg[5]  ( .D(WBUF_data_in[5]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[5]) );
  EDFCNQD1 \WBUF_data_out_reg[4]  ( .D(WBUF_data_in[4]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[4]) );
  EDFCNQD1 \WBUF_data_out_reg[3]  ( .D(WBUF_data_in[3]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[3]) );
  EDFCNQD1 \WBUF_data_out_reg[2]  ( .D(WBUF_data_in[2]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[2]) );
  EDFCNQD1 \WBUF_data_out_reg[1]  ( .D(WBUF_data_in[1]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[1]) );
  EDFCNQD1 \WBUF_data_out_reg[0]  ( .D(WBUF_data_in[0]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[0]) );
  CKBD1 U2 ( .I(WBUF_wr_en), .Z(n5) );
  CKBD1 U3 ( .I(WBUF_wr_en), .Z(n4) );
  CKBD1 U4 ( .I(nRST), .Z(n1) );
  CKBD1 U5 ( .I(nRST), .Z(n2) );
  CKBD1 U6 ( .I(nRST), .Z(n3) );
  CKBD1 U7 ( .I(WBUF_wr_en), .Z(n6) );
endmodule


module w_mux_1 ( clk, nRST, input_bitwidth, rd_en, data_in, data_out );
  input [2:0] input_bitwidth;
  input [31:0] data_in;
  output [31:0] data_out;
  input clk, nRST, rd_en;
  wire   N40, N41, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129,
         n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140,
         n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151,
         n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162,
         n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173,
         n174, n175, n176, n177, n178;
  wire   [1:0] rd_ptr;
  wire   [31:0] next_data_out;

  EDFCNQD1 \rd_ptr_reg[0]  ( .D(N40), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[0]) );
  EDFCNQD1 \rd_ptr_reg[1]  ( .D(N41), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[1]) );
  DFCNQD1 \data_out_reg[31]  ( .D(next_data_out[31]), .CP(clk), .CDN(n1), .Q(
        data_out[31]) );
  DFCNQD1 \data_out_reg[30]  ( .D(next_data_out[30]), .CP(clk), .CDN(n3), .Q(
        data_out[30]) );
  DFCNQD1 \data_out_reg[29]  ( .D(next_data_out[29]), .CP(clk), .CDN(n3), .Q(
        data_out[29]) );
  DFCNQD1 \data_out_reg[28]  ( .D(next_data_out[28]), .CP(clk), .CDN(n3), .Q(
        data_out[28]) );
  DFCNQD1 \data_out_reg[27]  ( .D(next_data_out[27]), .CP(clk), .CDN(n3), .Q(
        data_out[27]) );
  DFCNQD1 \data_out_reg[26]  ( .D(next_data_out[26]), .CP(clk), .CDN(n3), .Q(
        data_out[26]) );
  DFCNQD1 \data_out_reg[25]  ( .D(next_data_out[25]), .CP(clk), .CDN(n2), .Q(
        data_out[25]) );
  DFCNQD1 \data_out_reg[24]  ( .D(next_data_out[24]), .CP(clk), .CDN(n2), .Q(
        data_out[24]) );
  DFCNQD1 \data_out_reg[23]  ( .D(next_data_out[23]), .CP(clk), .CDN(n3), .Q(
        data_out[23]) );
  DFCNQD1 \data_out_reg[22]  ( .D(next_data_out[22]), .CP(clk), .CDN(n2), .Q(
        data_out[22]) );
  DFCNQD1 \data_out_reg[21]  ( .D(next_data_out[21]), .CP(clk), .CDN(n2), .Q(
        data_out[21]) );
  DFCNQD1 \data_out_reg[20]  ( .D(next_data_out[20]), .CP(clk), .CDN(n2), .Q(
        data_out[20]) );
  DFCNQD1 \data_out_reg[19]  ( .D(next_data_out[19]), .CP(clk), .CDN(n2), .Q(
        data_out[19]) );
  DFCNQD1 \data_out_reg[18]  ( .D(next_data_out[18]), .CP(clk), .CDN(n2), .Q(
        data_out[18]) );
  DFCNQD1 \data_out_reg[17]  ( .D(next_data_out[17]), .CP(clk), .CDN(n2), .Q(
        data_out[17]) );
  DFCNQD1 \data_out_reg[16]  ( .D(next_data_out[16]), .CP(clk), .CDN(n2), .Q(
        data_out[16]) );
  DFCNQD1 \data_out_reg[15]  ( .D(next_data_out[15]), .CP(clk), .CDN(n2), .Q(
        data_out[15]) );
  DFCNQD1 \data_out_reg[14]  ( .D(next_data_out[14]), .CP(clk), .CDN(n2), .Q(
        data_out[14]) );
  DFCNQD1 \data_out_reg[13]  ( .D(next_data_out[13]), .CP(clk), .CDN(n2), .Q(
        data_out[13]) );
  DFCNQD1 \data_out_reg[12]  ( .D(next_data_out[12]), .CP(clk), .CDN(n1), .Q(
        data_out[12]) );
  DFCNQD1 \data_out_reg[11]  ( .D(next_data_out[11]), .CP(clk), .CDN(n1), .Q(
        data_out[11]) );
  DFCNQD1 \data_out_reg[10]  ( .D(next_data_out[10]), .CP(clk), .CDN(n1), .Q(
        data_out[10]) );
  DFCNQD1 \data_out_reg[9]  ( .D(next_data_out[9]), .CP(clk), .CDN(n1), .Q(
        data_out[9]) );
  DFCNQD1 \data_out_reg[8]  ( .D(next_data_out[8]), .CP(clk), .CDN(n1), .Q(
        data_out[8]) );
  DFCNQD1 \data_out_reg[7]  ( .D(next_data_out[7]), .CP(clk), .CDN(n1), .Q(
        data_out[7]) );
  DFCNQD1 \data_out_reg[6]  ( .D(next_data_out[6]), .CP(clk), .CDN(n1), .Q(
        data_out[6]) );
  DFCNQD1 \data_out_reg[5]  ( .D(next_data_out[5]), .CP(clk), .CDN(n1), .Q(
        data_out[5]) );
  DFCNQD1 \data_out_reg[4]  ( .D(next_data_out[4]), .CP(clk), .CDN(n1), .Q(
        data_out[4]) );
  DFCNQD1 \data_out_reg[3]  ( .D(next_data_out[3]), .CP(clk), .CDN(n1), .Q(
        data_out[3]) );
  DFCNQD1 \data_out_reg[2]  ( .D(next_data_out[2]), .CP(clk), .CDN(n1), .Q(
        data_out[2]) );
  DFCNQD1 \data_out_reg[1]  ( .D(next_data_out[1]), .CP(clk), .CDN(n1), .Q(
        data_out[1]) );
  DFCNQD1 \data_out_reg[0]  ( .D(next_data_out[0]), .CP(clk), .CDN(n2), .Q(
        data_out[0]) );
  OA21D1 U20 ( .A1(n161), .A2(n160), .B(n159), .Z(n170) );
  OA21D1 U23 ( .A1(n156), .A2(n160), .B(n155), .Z(n169) );
  OA21D1 U26 ( .A1(n154), .A2(n160), .B(n153), .Z(n167) );
  OA21D1 U29 ( .A1(n152), .A2(n160), .B(n151), .Z(n166) );
  OA21D1 U32 ( .A1(n150), .A2(n160), .B(n149), .Z(n177) );
  OA21D1 U35 ( .A1(n148), .A2(n160), .B(n147), .Z(n165) );
  OA21D1 U38 ( .A1(n146), .A2(n160), .B(n145), .Z(n164) );
  OA21D1 U41 ( .A1(n144), .A2(n160), .B(n149), .Z(n163) );
  OA21D1 U47 ( .A1(n139), .A2(n160), .B(n138), .Z(n162) );
  OA21D1 U50 ( .A1(n137), .A2(n160), .B(n159), .Z(n175) );
  OA21D1 U56 ( .A1(n134), .A2(n160), .B(n155), .Z(n174) );
  OA21D1 U62 ( .A1(n131), .A2(n160), .B(n153), .Z(n173) );
  OA21D1 U68 ( .A1(n128), .A2(n160), .B(n151), .Z(n172) );
  OA21D1 U74 ( .A1(n125), .A2(n160), .B(n147), .Z(n171) );
  OA21D1 U80 ( .A1(n122), .A2(n160), .B(n145), .Z(n168) );
  OA21D1 U86 ( .A1(n119), .A2(n160), .B(n138), .Z(n176) );
  AN2XD1 U90 ( .A1(rd_ptr[1]), .A2(rd_ptr[0]), .Z(n140) );
  AN4XD1 U91 ( .A1(input_bitwidth[2]), .A2(rd_en), .A3(n5), .A4(n7), .Z(n143)
         );
  MAOI22D1 U97 ( .A1(n115), .A2(n12), .B1(n115), .B2(n114), .ZN(n113) );
  NR2D1 U3 ( .A1(n13), .A2(rd_ptr[1]), .ZN(n158) );
  NR2D1 U4 ( .A1(rd_ptr[0]), .A2(rd_ptr[1]), .ZN(n157) );
  AOI21D1 U5 ( .A1(n12), .A2(n116), .B(n113), .ZN(N41) );
  OAI21D1 U6 ( .A1(n111), .A2(n10), .B(n177), .ZN(next_data_out[1]) );
  OAI21D1 U7 ( .A1(n37), .A2(n10), .B(n177), .ZN(next_data_out[9]) );
  OAI21D1 U8 ( .A1(n8), .A2(n112), .B(n176), .ZN(next_data_out[0]) );
  OAI21D1 U9 ( .A1(n9), .A2(n110), .B(n168), .ZN(next_data_out[2]) );
  OAI21D1 U10 ( .A1(n9), .A2(n109), .B(n171), .ZN(next_data_out[3]) );
  OAI21D1 U11 ( .A1(n9), .A2(n108), .B(n172), .ZN(next_data_out[4]) );
  OAI21D1 U12 ( .A1(n8), .A2(n36), .B(n168), .ZN(next_data_out[10]) );
  OAI21D1 U13 ( .A1(n8), .A2(n35), .B(n171), .ZN(next_data_out[11]) );
  OAI21D1 U14 ( .A1(n8), .A2(n34), .B(n172), .ZN(next_data_out[12]) );
  OAI21D1 U15 ( .A1(n9), .A2(n33), .B(n173), .ZN(next_data_out[13]) );
  OAI21D1 U16 ( .A1(n8), .A2(n32), .B(n174), .ZN(next_data_out[14]) );
  OAI21D1 U17 ( .A1(n8), .A2(n31), .B(n175), .ZN(next_data_out[15]) );
  OAI21D1 U18 ( .A1(n10), .A2(n107), .B(n173), .ZN(next_data_out[5]) );
  OAI21D1 U19 ( .A1(n10), .A2(n106), .B(n174), .ZN(next_data_out[6]) );
  OAI21D1 U21 ( .A1(n10), .A2(n105), .B(n175), .ZN(next_data_out[7]) );
  OAI21D1 U22 ( .A1(n10), .A2(n38), .B(n176), .ZN(next_data_out[8]) );
  CKBD1 U24 ( .I(n178), .Z(n8) );
  CKBD1 U25 ( .I(n178), .Z(n9) );
  CKBD1 U27 ( .I(n178), .Z(n10) );
  INVD1 U28 ( .I(n6), .ZN(n7) );
  INVD1 U30 ( .I(n4), .ZN(n5) );
  INVD1 U31 ( .I(n116), .ZN(n11) );
  INVD1 U33 ( .I(n157), .ZN(n14) );
  INVD1 U34 ( .I(n158), .ZN(n12) );
  ND2D1 U36 ( .A1(n114), .A2(rd_en), .ZN(n178) );
  NR3D0 U37 ( .A1(n4), .A2(input_bitwidth[2]), .A3(n7), .ZN(n115) );
  NR3D0 U39 ( .A1(n6), .A2(input_bitwidth[2]), .A3(n5), .ZN(n114) );
  ND2D1 U40 ( .A1(rd_en), .A2(n115), .ZN(n160) );
  ND2D1 U42 ( .A1(n143), .A2(n118), .ZN(n138) );
  OAI221D0 U43 ( .A1(n12), .A2(n38), .B1(n14), .B2(n112), .C(n117), .ZN(n118)
         );
  AOI22D1 U44 ( .A1(data_in[24]), .A2(n140), .B1(data_in[16]), .B2(n11), .ZN(
        n117) );
  ND2D1 U45 ( .A1(n143), .A2(n142), .ZN(n149) );
  OAI221D0 U46 ( .A1(n12), .A2(n37), .B1(n14), .B2(n111), .C(n141), .ZN(n142)
         );
  AOI22D1 U48 ( .A1(data_in[25]), .A2(n140), .B1(n11), .B2(data_in[17]), .ZN(
        n141) );
  ND2D1 U49 ( .A1(n143), .A2(n121), .ZN(n145) );
  OAI221D0 U51 ( .A1(n12), .A2(n36), .B1(n14), .B2(n110), .C(n120), .ZN(n121)
         );
  AOI22D1 U52 ( .A1(data_in[26]), .A2(n140), .B1(data_in[18]), .B2(n11), .ZN(
        n120) );
  ND2D1 U53 ( .A1(n143), .A2(n124), .ZN(n147) );
  OAI221D0 U54 ( .A1(n12), .A2(n35), .B1(n14), .B2(n109), .C(n123), .ZN(n124)
         );
  AOI22D1 U55 ( .A1(data_in[27]), .A2(n140), .B1(data_in[19]), .B2(n11), .ZN(
        n123) );
  ND2D1 U57 ( .A1(n143), .A2(n127), .ZN(n151) );
  OAI221D0 U58 ( .A1(n12), .A2(n34), .B1(n14), .B2(n108), .C(n126), .ZN(n127)
         );
  AOI22D1 U59 ( .A1(data_in[28]), .A2(n140), .B1(data_in[20]), .B2(n11), .ZN(
        n126) );
  ND2D1 U60 ( .A1(n143), .A2(n130), .ZN(n153) );
  OAI221D0 U61 ( .A1(n12), .A2(n33), .B1(n14), .B2(n107), .C(n129), .ZN(n130)
         );
  AOI22D1 U63 ( .A1(data_in[29]), .A2(n140), .B1(data_in[21]), .B2(n11), .ZN(
        n129) );
  ND2D1 U64 ( .A1(n143), .A2(n133), .ZN(n155) );
  OAI221D0 U65 ( .A1(n12), .A2(n32), .B1(n14), .B2(n106), .C(n132), .ZN(n133)
         );
  AOI22D1 U66 ( .A1(data_in[30]), .A2(n140), .B1(data_in[22]), .B2(n11), .ZN(
        n132) );
  ND2D1 U67 ( .A1(n143), .A2(n136), .ZN(n159) );
  OAI221D0 U69 ( .A1(n12), .A2(n31), .B1(n14), .B2(n105), .C(n135), .ZN(n136)
         );
  AOI22D1 U70 ( .A1(data_in[31]), .A2(n140), .B1(data_in[23]), .B2(n11), .ZN(
        n135) );
  AOI22D1 U71 ( .A1(data_in[16]), .A2(n158), .B1(data_in[0]), .B2(n157), .ZN(
        n119) );
  AOI22D1 U72 ( .A1(data_in[17]), .A2(n158), .B1(data_in[1]), .B2(n157), .ZN(
        n150) );
  AOI22D1 U73 ( .A1(data_in[18]), .A2(n158), .B1(data_in[2]), .B2(n157), .ZN(
        n122) );
  AOI22D1 U75 ( .A1(data_in[19]), .A2(n158), .B1(data_in[3]), .B2(n157), .ZN(
        n125) );
  AOI22D1 U76 ( .A1(data_in[20]), .A2(n158), .B1(data_in[4]), .B2(n157), .ZN(
        n128) );
  AOI22D1 U77 ( .A1(data_in[21]), .A2(n158), .B1(data_in[5]), .B2(n157), .ZN(
        n131) );
  AOI22D1 U78 ( .A1(data_in[22]), .A2(n158), .B1(data_in[6]), .B2(n157), .ZN(
        n134) );
  AOI22D1 U79 ( .A1(data_in[23]), .A2(n158), .B1(data_in[7]), .B2(n157), .ZN(
        n137) );
  AOI22D1 U81 ( .A1(data_in[24]), .A2(n158), .B1(data_in[8]), .B2(n157), .ZN(
        n139) );
  AOI22D1 U82 ( .A1(data_in[25]), .A2(n158), .B1(data_in[9]), .B2(n157), .ZN(
        n144) );
  AOI22D1 U83 ( .A1(data_in[26]), .A2(n158), .B1(data_in[10]), .B2(n157), .ZN(
        n146) );
  AOI22D1 U84 ( .A1(data_in[27]), .A2(n158), .B1(data_in[11]), .B2(n157), .ZN(
        n148) );
  AOI22D1 U85 ( .A1(data_in[28]), .A2(n158), .B1(data_in[12]), .B2(n157), .ZN(
        n152) );
  AOI22D1 U87 ( .A1(data_in[29]), .A2(n158), .B1(data_in[13]), .B2(n157), .ZN(
        n154) );
  AOI22D1 U88 ( .A1(data_in[30]), .A2(n158), .B1(data_in[14]), .B2(n157), .ZN(
        n156) );
  AOI22D1 U89 ( .A1(data_in[31]), .A2(n158), .B1(data_in[15]), .B2(n157), .ZN(
        n161) );
  NR2D1 U92 ( .A1(rd_ptr[0]), .A2(n114), .ZN(N40) );
  OAI21D1 U93 ( .A1(n29), .A2(n10), .B(n163), .ZN(next_data_out[17]) );
  INVD1 U94 ( .I(data_in[17]), .ZN(n29) );
  OAI21D1 U95 ( .A1(n8), .A2(n30), .B(n162), .ZN(next_data_out[16]) );
  INVD1 U96 ( .I(data_in[16]), .ZN(n30) );
  OAI21D1 U98 ( .A1(n8), .A2(n28), .B(n164), .ZN(next_data_out[18]) );
  INVD1 U99 ( .I(data_in[18]), .ZN(n28) );
  OAI21D1 U100 ( .A1(n8), .A2(n27), .B(n165), .ZN(next_data_out[19]) );
  INVD1 U101 ( .I(data_in[19]), .ZN(n27) );
  OAI21D1 U102 ( .A1(n8), .A2(n26), .B(n166), .ZN(next_data_out[20]) );
  INVD1 U103 ( .I(data_in[20]), .ZN(n26) );
  OAI21D1 U104 ( .A1(n8), .A2(n25), .B(n167), .ZN(next_data_out[21]) );
  INVD1 U105 ( .I(data_in[21]), .ZN(n25) );
  OAI21D1 U106 ( .A1(n8), .A2(n24), .B(n169), .ZN(next_data_out[22]) );
  INVD1 U107 ( .I(data_in[22]), .ZN(n24) );
  OAI21D1 U108 ( .A1(n9), .A2(n23), .B(n170), .ZN(next_data_out[23]) );
  INVD1 U109 ( .I(data_in[23]), .ZN(n23) );
  OAI21D1 U110 ( .A1(n9), .A2(n22), .B(n162), .ZN(next_data_out[24]) );
  INVD1 U111 ( .I(data_in[24]), .ZN(n22) );
  OAI21D1 U112 ( .A1(n9), .A2(n20), .B(n164), .ZN(next_data_out[26]) );
  INVD1 U113 ( .I(data_in[26]), .ZN(n20) );
  OAI21D1 U114 ( .A1(n9), .A2(n19), .B(n165), .ZN(next_data_out[27]) );
  INVD1 U115 ( .I(data_in[27]), .ZN(n19) );
  OAI21D1 U116 ( .A1(n9), .A2(n18), .B(n166), .ZN(next_data_out[28]) );
  INVD1 U117 ( .I(data_in[28]), .ZN(n18) );
  OAI21D1 U118 ( .A1(n9), .A2(n17), .B(n167), .ZN(next_data_out[29]) );
  INVD1 U119 ( .I(data_in[29]), .ZN(n17) );
  OAI21D1 U120 ( .A1(n9), .A2(n16), .B(n169), .ZN(next_data_out[30]) );
  INVD1 U121 ( .I(data_in[30]), .ZN(n16) );
  OAI21D1 U122 ( .A1(n9), .A2(n15), .B(n170), .ZN(next_data_out[31]) );
  INVD1 U123 ( .I(data_in[31]), .ZN(n15) );
  OAI21D1 U124 ( .A1(n21), .A2(n10), .B(n163), .ZN(next_data_out[25]) );
  INVD1 U125 ( .I(data_in[25]), .ZN(n21) );
  CKBD1 U126 ( .I(input_bitwidth[0]), .Z(n4) );
  CKBD1 U127 ( .I(input_bitwidth[1]), .Z(n6) );
  ND2D1 U128 ( .A1(rd_ptr[1]), .A2(n13), .ZN(n116) );
  INVD1 U129 ( .I(rd_ptr[0]), .ZN(n13) );
  INVD1 U130 ( .I(data_in[1]), .ZN(n111) );
  INVD1 U131 ( .I(data_in[9]), .ZN(n37) );
  INVD1 U132 ( .I(data_in[0]), .ZN(n112) );
  INVD1 U133 ( .I(data_in[2]), .ZN(n110) );
  INVD1 U134 ( .I(data_in[3]), .ZN(n109) );
  INVD1 U135 ( .I(data_in[4]), .ZN(n108) );
  INVD1 U136 ( .I(data_in[5]), .ZN(n107) );
  INVD1 U137 ( .I(data_in[6]), .ZN(n106) );
  INVD1 U138 ( .I(data_in[7]), .ZN(n105) );
  INVD1 U139 ( .I(data_in[8]), .ZN(n38) );
  INVD1 U140 ( .I(data_in[10]), .ZN(n36) );
  INVD1 U141 ( .I(data_in[11]), .ZN(n35) );
  INVD1 U142 ( .I(data_in[12]), .ZN(n34) );
  INVD1 U143 ( .I(data_in[13]), .ZN(n33) );
  INVD1 U144 ( .I(data_in[14]), .ZN(n32) );
  INVD1 U145 ( .I(data_in[15]), .ZN(n31) );
  CKBD1 U146 ( .I(nRST), .Z(n2) );
  CKBD1 U147 ( .I(nRST), .Z(n1) );
  CKBD1 U148 ( .I(nRST), .Z(n3) );
endmodule


module bit_brick_31 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_30 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_29 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_28 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_27 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_26 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_25 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_24 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_23 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_22 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[0]), .ZN(n5) );
  INVD1 U6 ( .I(y[1]), .ZN(n6) );
  INVD1 U7 ( .I(x[0]), .ZN(n4) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_21 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_20 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_19 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_18 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_17 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_16 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module shift_add_1_DW01_add_14_DW01_add_214 ( A, B, CI, SUM, CO );
  input [28:0] A;
  input [28:0] B;
  output [28:0] SUM;
  input CI;
  output CO;
  wire   n1, \SUM[18] , n3, n4, n5, n6, n7;
  wire   [28:1] carry;
  assign SUM[27] = \SUM[18] ;
  assign SUM[28] = \SUM[18] ;
  assign SUM[26] = \SUM[18] ;
  assign SUM[25] = \SUM[18] ;
  assign SUM[24] = \SUM[18] ;
  assign SUM[23] = \SUM[18] ;
  assign SUM[22] = \SUM[18] ;
  assign SUM[21] = \SUM[18] ;
  assign SUM[20] = \SUM[18] ;
  assign SUM[19] = \SUM[18] ;
  assign SUM[18] = \SUM[18] ;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  OAI222D1 U1 ( .A1(n5), .A2(n7), .B1(n5), .B2(n6), .C1(n7), .C2(n6), .ZN(n4)
         );
  XNR3D2 U2 ( .A1(B[27]), .A2(n7), .A3(n3), .ZN(\SUM[18] ) );
  AN2XD1 U3 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D0 U4 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  AOI222D1 U5 ( .A1(carry[15]), .A2(A[27]), .B1(carry[15]), .B2(B[15]), .C1(
        B[15]), .C2(A[27]), .ZN(n5) );
  AO222D1 U6 ( .A1(n4), .A2(A[27]), .B1(n4), .B2(B[27]), .C1(A[27]), .C2(B[27]), .Z(n3) );
  CKND0 U7 ( .I(A[27]), .ZN(n7) );
  CKND0 U8 ( .I(B[16]), .ZN(n6) );
  XNR3D0 U9 ( .A1(B[27]), .A2(n7), .A3(n4), .ZN(SUM[17]) );
  XNR3D0 U10 ( .A1(n6), .A2(n5), .A3(n7), .ZN(SUM[16]) );
  XNR3D0 U11 ( .A1(carry[15]), .A2(B[15]), .A3(n7), .ZN(SUM[15]) );
endmodule


module shift_add_1_DW01_add_6_DW01_add_206 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_1_DW01_add_5_DW01_add_205 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_1_DW01_add_4_DW01_add_204 ( A, B, CI, SUM, CO );
  input [30:0] A;
  input [30:0] B;
  output [30:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [30:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  XOR3D1 U1_30 ( .A1(A[30]), .A2(B[30]), .A3(carry[30]), .Z(SUM[30]) );
  FA1D2 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_1_DW01_add_3_DW01_add_203 ( A, B, CI, SUM, CO );
  input [29:0] A;
  input [29:0] B;
  output [29:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3;
  wire   [29:1] carry;
  assign SUM[29] = SUM[23];
  assign SUM[28] = SUM[23];
  assign SUM[27] = SUM[23];
  assign SUM[26] = SUM[23];
  assign SUM[25] = SUM[23];
  assign SUM[24] = SUM[23];

  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D1 U1_8 ( .A(B[8]), .B(A[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D1 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  XOR3D4 U1 ( .A1(B[22]), .A2(A[21]), .A3(n3), .Z(SUM[23]) );
  AN2XD1 U2 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U3 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  AO222D1 U4 ( .A1(n2), .A2(A[21]), .B1(n2), .B2(B[22]), .C1(A[21]), .C2(B[22]), .Z(n3) );
  AO222D1 U5 ( .A1(carry[21]), .A2(A[21]), .B1(B[21]), .B2(carry[21]), .C1(
        B[21]), .C2(A[21]), .Z(n2) );
  XOR3D0 U6 ( .A1(carry[21]), .A2(B[21]), .A3(A[21]), .Z(SUM[21]) );
  XOR3D0 U7 ( .A1(B[22]), .A2(A[21]), .A3(n2), .Z(SUM[22]) );
endmodule


module shift_add_1_DW01_add_2_DW01_add_202 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_1_DW01_add_1_DW01_add_201 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_1_DW01_add_0_DW01_add_200 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_1 ( input_bitwidth, weight_bitwidth, .products({
        \products[15][5] , \products[15][4] , \products[15][3] , 
        \products[15][2] , \products[15][1] , \products[15][0] , 
        \products[14][5] , \products[14][4] , \products[14][3] , 
        \products[14][2] , \products[14][1] , \products[14][0] , 
        \products[13][5] , \products[13][4] , \products[13][3] , 
        \products[13][2] , \products[13][1] , \products[13][0] , 
        \products[12][5] , \products[12][4] , \products[12][3] , 
        \products[12][2] , \products[12][1] , \products[12][0] , 
        \products[11][5] , \products[11][4] , \products[11][3] , 
        \products[11][2] , \products[11][1] , \products[11][0] , 
        \products[10][5] , \products[10][4] , \products[10][3] , 
        \products[10][2] , \products[10][1] , \products[10][0] , 
        \products[9][5] , \products[9][4] , \products[9][3] , \products[9][2] , 
        \products[9][1] , \products[9][0] , \products[8][5] , \products[8][4] , 
        \products[8][3] , \products[8][2] , \products[8][1] , \products[8][0] , 
        \products[7][5] , \products[7][4] , \products[7][3] , \products[7][2] , 
        \products[7][1] , \products[7][0] , \products[6][5] , \products[6][4] , 
        \products[6][3] , \products[6][2] , \products[6][1] , \products[6][0] , 
        \products[5][5] , \products[5][4] , \products[5][3] , \products[5][2] , 
        \products[5][1] , \products[5][0] , \products[4][5] , \products[4][4] , 
        \products[4][3] , \products[4][2] , \products[4][1] , \products[4][0] , 
        \products[3][5] , \products[3][4] , \products[3][3] , \products[3][2] , 
        \products[3][1] , \products[3][0] , \products[2][5] , \products[2][4] , 
        \products[2][3] , \products[2][2] , \products[2][1] , \products[2][0] , 
        \products[1][5] , \products[1][4] , \products[1][3] , \products[1][2] , 
        \products[1][1] , \products[1][0] , \products[0][5] , \products[0][4] , 
        \products[0][3] , \products[0][2] , \products[0][1] , \products[0][0] 
        }), shift_add_out );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  output [31:0] shift_add_out;
  input \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] ;
  wire   \shifted_products[15][16] , \shifted_products[15][15] ,
         \shifted_products[15][14] , \shifted_products[15][13] ,
         \shifted_products[15][12] , \shifted_products[15][11] ,
         \shifted_products[15][10] , \shifted_products[15][9] ,
         \shifted_products[15][8] , \shifted_products[15][7] ,
         \shifted_products[15][6] , \shifted_products[15][5] ,
         \shifted_products[15][4] , \shifted_products[15][3] ,
         \shifted_products[15][2] , \shifted_products[15][1] ,
         \shifted_products[15][0] , \shifted_products[14][14] ,
         \shifted_products[14][13] , \shifted_products[14][12] ,
         \shifted_products[14][11] , \shifted_products[14][10] ,
         \shifted_products[14][9] , \shifted_products[14][8] ,
         \shifted_products[14][7] , \shifted_products[14][6] ,
         \shifted_products[14][5] , \shifted_products[14][4] ,
         \shifted_products[14][3] , \shifted_products[14][2] ,
         \shifted_products[14][1] , \shifted_products[14][0] ,
         \shifted_products[13][12] , \shifted_products[13][11] ,
         \shifted_products[13][10] , \shifted_products[13][9] ,
         \shifted_products[13][8] , \shifted_products[13][7] ,
         \shifted_products[13][6] , \shifted_products[13][5] ,
         \shifted_products[13][4] , \shifted_products[13][3] ,
         \shifted_products[13][2] , \shifted_products[13][1] ,
         \shifted_products[13][0] , \shifted_products[12][10] ,
         \shifted_products[12][9] , \shifted_products[12][8] ,
         \shifted_products[12][7] , \shifted_products[12][6] ,
         \shifted_products[12][5] , \shifted_products[12][4] ,
         \shifted_products[12][3] , \shifted_products[12][2] ,
         \shifted_products[12][1] , \shifted_products[12][0] ,
         \shifted_products[11][13] , \shifted_products[11][12] ,
         \shifted_products[11][11] , \shifted_products[11][10] ,
         \shifted_products[11][9] , \shifted_products[11][8] ,
         \shifted_products[11][7] , \shifted_products[11][6] ,
         \shifted_products[11][5] , \shifted_products[11][4] ,
         \shifted_products[11][3] , \shifted_products[11][2] ,
         \shifted_products[11][1] , \shifted_products[11][0] ,
         \shifted_products[10][12] , \shifted_products[10][11] ,
         \shifted_products[10][10] , \shifted_products[10][9] ,
         \shifted_products[10][8] , \shifted_products[10][7] ,
         \shifted_products[10][6] , \shifted_products[10][5] ,
         \shifted_products[10][4] , \shifted_products[10][3] ,
         \shifted_products[10][2] , \shifted_products[10][1] ,
         \shifted_products[10][0] , \shifted_products[9][10] ,
         \shifted_products[9][9] , \shifted_products[9][8] ,
         \shifted_products[9][7] , \shifted_products[9][6] ,
         \shifted_products[9][5] , \shifted_products[9][4] ,
         \shifted_products[9][3] , \shifted_products[9][2] ,
         \shifted_products[9][1] , \shifted_products[9][0] ,
         \shifted_products[8][8] , \shifted_products[8][7] ,
         \shifted_products[8][6] , \shifted_products[8][5] ,
         \shifted_products[8][4] , \shifted_products[8][3] ,
         \shifted_products[8][2] , \shifted_products[8][1] ,
         \shifted_products[8][0] , \shifted_products[7][11] ,
         \shifted_products[7][10] , \shifted_products[7][9] ,
         \shifted_products[7][8] , \shifted_products[7][7] ,
         \shifted_products[7][6] , \shifted_products[7][5] ,
         \shifted_products[7][4] , \shifted_products[7][3] ,
         \shifted_products[7][2] , \shifted_products[7][1] ,
         \shifted_products[7][0] , \shifted_products[6][10] ,
         \shifted_products[6][9] , \shifted_products[6][8] ,
         \shifted_products[6][7] , \shifted_products[6][6] ,
         \shifted_products[6][5] , \shifted_products[6][4] ,
         \shifted_products[6][3] , \shifted_products[6][2] ,
         \shifted_products[6][1] , \shifted_products[6][0] ,
         \shifted_products[5][8] , \shifted_products[5][7] ,
         \shifted_products[5][6] , \shifted_products[5][5] ,
         \shifted_products[5][4] , \shifted_products[5][3] ,
         \shifted_products[5][2] , \shifted_products[5][1] ,
         \shifted_products[5][0] , \shifted_products[4][6] ,
         \shifted_products[4][5] , \shifted_products[4][4] ,
         \shifted_products[4][3] , \shifted_products[4][2] ,
         \shifted_products[4][1] , \shifted_products[4][0] ,
         \shifted_products[3][9] , \shifted_products[3][8] ,
         \shifted_products[3][7] , \shifted_products[3][6] ,
         \shifted_products[3][5] , \shifted_products[3][4] ,
         \shifted_products[3][3] , \shifted_products[3][2] ,
         \shifted_products[3][1] , \shifted_products[3][0] ,
         \shifted_products[2][8] , \shifted_products[2][7] ,
         \shifted_products[2][6] , \shifted_products[2][5] ,
         \shifted_products[2][4] , \shifted_products[2][3] ,
         \shifted_products[2][2] , \shifted_products[2][1] ,
         \shifted_products[2][0] , \shifted_products[1][6] ,
         \shifted_products[1][5] , \shifted_products[1][4] ,
         \shifted_products[1][3] , \shifted_products[1][2] ,
         \shifted_products[1][1] , \shifted_products[1][0] ,
         \shifted_products[0][9] , N99, N87, N86, N85, N84, N83, N82, N81, N80,
         N79, N78, N77, N76, N61, N60, N59, N58, N57, N56, N55, N54, N446,
         N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435,
         N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424,
         N423, N422, N421, N420, N419, N418, N417, N416, N415, N414, N413,
         N412, N411, N410, N409, N408, N407, N406, N405, N404, N403, N402,
         N401, N400, N399, N398, N397, N396, N395, N394, N393, N392, N391,
         N390, N389, N388, N387, N386, N385, N384, N383, N382, N381, N380,
         N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369,
         N368, N367, N366, N365, N364, N363, N362, N361, N360, N359, N358,
         N357, N356, N355, N354, N353, N352, N351, N350, N349, N348, N347,
         N346, N345, N344, N343, N342, N341, N340, N339, N338, N337, N336,
         N335, N334, N333, N332, N331, N330, N329, N328, N327, N326, N325,
         N324, N323, N322, N321, N320, N319, N318, N317, N316, N315, N314,
         N313, N312, N311, N310, N309, N308, N307, N306, N305, N304, N303,
         N302, N301, N300, N299, N298, N297, N296, N295, N294, N293, N292,
         N291, N290, N289, N288, N287, N286, N285, N284, N283, N282, N281,
         N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270,
         N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259,
         N258, N257, N256, N255, N254, N253, N252, N251, N250, N249, N248,
         N247, N246, N245, N244, N243, N242, N241, N240, N239, N238, N237,
         N236, N235, N234, N233, N232, N231, N230, N229, N214, N213, N212,
         N211, N210, N209, N208, N207, N206, N205, N204, N203, N202, N201,
         N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, N179,
         N178, N177, N176, N175, N174, N159, N158, N157, N156, N155, N154,
         N153, N152, N151, N150, N149, N148, N136, N135, N134, N133, N132,
         N131, N130, N129, N128, N127, N126, N125, N124, N123, N108, N107,
         N106, N105, N104, N103, N102, N101, N100,
         \add_14_root_add_199_I16/carry[6] ,
         \add_14_root_add_199_I16/carry[5] ,
         \add_14_root_add_199_I16/carry[4] ,
         \add_14_root_add_199_I16/carry[3] ,
         \add_14_root_add_199_I16/carry[2] ,
         \add_14_root_add_199_I16/carry[1] ,
         \add_13_root_add_199_I16/carry[9] ,
         \add_13_root_add_199_I16/carry[8] ,
         \add_13_root_add_199_I16/carry[7] ,
         \add_13_root_add_199_I16/carry[6] ,
         \add_13_root_add_199_I16/carry[5] ,
         \add_13_root_add_199_I16/carry[4] ,
         \add_13_root_add_199_I16/carry[3] ,
         \add_13_root_add_199_I16/carry[2] ,
         \add_13_root_add_199_I16/carry[1] ,
         \add_12_root_add_199_I16/carry[7] ,
         \add_12_root_add_199_I16/carry[6] ,
         \add_12_root_add_199_I16/carry[5] ,
         \add_12_root_add_199_I16/carry[4] ,
         \add_12_root_add_199_I16/carry[3] ,
         \add_12_root_add_199_I16/carry[2] ,
         \add_12_root_add_199_I16/carry[1] ,
         \add_11_root_add_199_I16/carry[11] ,
         \add_11_root_add_199_I16/carry[10] ,
         \add_11_root_add_199_I16/carry[9] ,
         \add_11_root_add_199_I16/carry[8] ,
         \add_11_root_add_199_I16/carry[7] ,
         \add_11_root_add_199_I16/carry[6] ,
         \add_11_root_add_199_I16/carry[5] ,
         \add_11_root_add_199_I16/carry[4] ,
         \add_11_root_add_199_I16/carry[3] ,
         \add_11_root_add_199_I16/carry[2] ,
         \add_11_root_add_199_I16/carry[1] ,
         \add_10_root_add_199_I16/carry[9] ,
         \add_10_root_add_199_I16/carry[8] ,
         \add_10_root_add_199_I16/carry[7] ,
         \add_10_root_add_199_I16/carry[6] ,
         \add_10_root_add_199_I16/carry[5] ,
         \add_10_root_add_199_I16/carry[4] ,
         \add_10_root_add_199_I16/carry[3] ,
         \add_10_root_add_199_I16/carry[2] ,
         \add_10_root_add_199_I16/carry[1] ,
         \add_9_root_add_199_I16/carry[13] ,
         \add_9_root_add_199_I16/carry[12] ,
         \add_9_root_add_199_I16/carry[11] ,
         \add_9_root_add_199_I16/carry[10] , \add_9_root_add_199_I16/carry[9] ,
         \add_9_root_add_199_I16/carry[8] , \add_9_root_add_199_I16/carry[7] ,
         \add_9_root_add_199_I16/carry[6] , \add_9_root_add_199_I16/carry[5] ,
         \add_9_root_add_199_I16/carry[4] , \add_9_root_add_199_I16/carry[3] ,
         \add_9_root_add_199_I16/carry[2] , \add_9_root_add_199_I16/carry[1] ,
         \add_8_root_add_199_I16/carry[11] ,
         \add_8_root_add_199_I16/carry[10] , \add_8_root_add_199_I16/carry[9] ,
         \add_8_root_add_199_I16/carry[8] , \add_8_root_add_199_I16/carry[7] ,
         \add_8_root_add_199_I16/carry[6] , \add_8_root_add_199_I16/carry[5] ,
         \add_8_root_add_199_I16/carry[4] , \add_8_root_add_199_I16/carry[3] ,
         \add_8_root_add_199_I16/carry[2] , \add_8_root_add_199_I16/carry[1] ,
         n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72,
         n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86,
         n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100,
         n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, n111,
         n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122,
         n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133,
         n134, n135, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246,
         n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257,
         n258, n259, n260, n261, n262, n263, n264, n265, n266, n267, n268,
         n269, n270, n271, n272, n273, n274, n275, n276, n277, n278, n279,
         n280, n281, n282, n283, n284, n285, n286, n287, n288, n289, n290,
         n291, n292, n293, n294, n295, n296, n297, n298, n299, n300, n301,
         n302, n303, n304, n305, n306, n307, n308, n309, n310, n311, n312,
         n313, n314, n315, n316, n317, n318, n319, n320, n321;

  MAOI22D1 U26 ( .A1(\products[7][0] ), .A2(n309), .B1(n106), .B2(n312), .ZN(
        n310) );
  AN2XD1 U74 ( .A1(n315), .A2(n284), .Z(n285) );
  MAOI22D1 U112 ( .A1(\products[15][2] ), .A2(n272), .B1(n58), .B2(n301), .ZN(
        n273) );
  OA21D1 U130 ( .A1(n239), .A2(n57), .B(n275), .Z(n266) );
  AN2XD1 U134 ( .A1(n302), .A2(n292), .Z(n276) );
  AN2XD1 U191 ( .A1(n312), .A2(n307), .Z(n289) );
  AN2XD1 U239 ( .A1(n292), .A2(n312), .Z(n278) );
  shift_add_1_DW01_add_14_DW01_add_214 add_7_root_add_199_I16 ( .A({
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \shifted_products[14][14] , 
        \shifted_products[14][13] , \shifted_products[14][12] , 
        \shifted_products[14][11] , \shifted_products[14][10] , 
        \shifted_products[14][9] , \shifted_products[14][8] , 
        \shifted_products[14][7] , \shifted_products[14][6] , 
        \shifted_products[14][5] , \shifted_products[14][4] , 
        \shifted_products[14][3] , \shifted_products[14][2] , 
        \shifted_products[14][1] , \shifted_products[14][0] }), .B({
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \shifted_products[15][16] , \shifted_products[15][15] , 
        \shifted_products[15][14] , \shifted_products[15][13] , 
        \shifted_products[15][12] , \shifted_products[15][11] , 
        \shifted_products[15][10] , \shifted_products[15][9] , 
        \shifted_products[15][8] , \shifted_products[15][7] , 
        \shifted_products[15][6] , \shifted_products[15][5] , 
        \shifted_products[15][4] , \shifted_products[15][3] , 
        \shifted_products[15][2] , \shifted_products[15][1] , 
        \shifted_products[15][0] }), .CI(n241), .SUM({N257, N256, N255, N254, 
        N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, N243, N242, 
        N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, N231, N230, 
        N229}) );
  shift_add_1_DW01_add_6_DW01_add_206 add_4_root_add_0_root_add_199_I16 ( .A({
        n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, n19, 
        n19, n19, n19, n19, N214, N213, N212, N211, N210, N209, N208, N207, 
        N206, N205, N204, N203, N202, N201}), .B({N257, N257, N257, N257, N256, 
        N255, N254, N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, 
        N243, N242, N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, 
        N231, N230, N229}), .CI(n241), .SUM({N382, N381, N380, N379, N378, 
        N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, N367, N366, 
        N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, N355, N354, 
        N353, N352, N351}) );
  shift_add_1_DW01_add_5_DW01_add_205 add_3_root_add_0_root_add_199_I16 ( .A({
        n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, n20, 
        n20, n20, N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, 
        N179, N178, N177, N176, N175, N174}), .B({n17, n17, n17, n17, n17, n17, 
        n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, 
        N159, N158, N157, N156, N155, N154, N153, N152, N151, N150, N149, N148}), .CI(n241), .SUM({N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, 
        N340, N339, N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, 
        N328, N327, N326, N325, N324, N323, N322, N321, N320, N319}) );
  shift_add_1_DW01_add_4_DW01_add_204 add_5_root_add_199_I16 ( .A({n18, n18, 
        n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, n18, 
        n18, n18, n18, n18, n18, N108, N107, N106, N105, N104, N103, N102, 
        N101, N100, N99}), .B({n23, n23, n23, n23, n23, n23, n23, n23, n23, 
        n23, n23, n23, n23, n23, n23, n23, n23, N136, N135, N134, N133, N132, 
        N131, N130, N129, N128, N127, N126, N125, N124, N123}), .CI(n241), 
        .SUM({N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}) );
  shift_add_1_DW01_add_3_DW01_add_203 add_6_root_add_199_I16 ( .A({n15, n15, 
        n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, n15, 
        n15, n15, n15, n15, n15, n15, N61, N60, N59, N58, N57, N56, N55, N54}), 
        .B({n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, n21, 
        n21, n21, n21, n21, n21, N87, N86, N85, N84, N83, N82, N81, N80, N79, 
        N78, N77, N76}), .CI(n241), .SUM({N287, N286, N285, N284, N283, N282, 
        N281, N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270, 
        N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259, N258}) );
  shift_add_1_DW01_add_2_DW01_add_202 add_2_root_add_0_root_add_199_I16 ( .A({
        N318, N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}), .B({N382, N381, N380, 
        N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, 
        N367, N366, N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, 
        N355, N354, N353, N352, N351}), .CI(n241), .SUM({N446, N445, N444, 
        N443, N442, N441, N440, N439, N438, N437, N436, N435, N434, N433, N432, 
        N431, N430, N429, N428, N427, N426, N425, N424, N423, N422, N421, N420, 
        N419, N418, N417, N416, N415}) );
  shift_add_1_DW01_add_1_DW01_add_201 add_1_root_add_0_root_add_199_I16 ( .A({
        N446, N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435, 
        N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424, N423, 
        N422, N421, N420, N419, N418, N417, N416, N415}), .B({N287, N287, N287, 
        N286, N285, N284, N283, N282, N281, N280, N279, N278, N277, N276, N275, 
        N274, N273, N272, N271, N270, N269, N268, N267, N266, N265, N264, N263, 
        N262, N261, N260, N259, N258}), .CI(n241), .SUM({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}) );
  shift_add_1_DW01_add_0_DW01_add_200 add_0_root_add_0_root_add_199_I16 ( .A({
        N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, N340, N339, 
        N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, N328, N327, 
        N326, N325, N324, N323, N322, N321, N320, N319}), .B({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}), .CI(n241), .SUM(shift_add_out) );
  AOI222D1 U2 ( .A1(n43), .A2(\products[8][5] ), .B1(n43), .B2(
        \products[9][5] ), .C1(\products[8][5] ), .C2(\products[9][5] ), .ZN(
        n44) );
  FA1D1 U3 ( .A(\shifted_products[12][10] ), .B(\shifted_products[13][10] ), 
        .CI(\add_8_root_add_199_I16/carry[10] ), .CO(
        \add_8_root_add_199_I16/carry[11] ), .S(N211) );
  FA1D1 U4 ( .A(\shifted_products[4][6] ), .B(\shifted_products[5][6] ), .CI(
        \add_12_root_add_199_I16/carry[6] ), .CO(
        \add_12_root_add_199_I16/carry[7] ), .S(N105) );
  AOI222D2 U5 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(\products[2][5] ), 
        .B1(\add_13_root_add_199_I16/carry[9] ), .B2(\shifted_products[3][9] ), 
        .C1(\shifted_products[3][9] ), .C2(\products[2][5] ), .ZN(n53) );
  FA1D1 U6 ( .A(\shifted_products[2][8] ), .B(\shifted_products[3][8] ), .CI(
        \add_13_root_add_199_I16/carry[8] ), .CO(
        \add_13_root_add_199_I16/carry[9] ), .S(N84) );
  XNR3D4 U7 ( .A1(\products[7][5] ), .A2(n109), .A3(n24), .ZN(n23) );
  AOI222D1 U8 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[0][9] ), .B1(\add_14_root_add_199_I16/carry[6] ), 
        .B2(\shifted_products[1][6] ), .C1(\shifted_products[1][6] ), .C2(
        \shifted_products[0][9] ), .ZN(n56) );
  INR2D1 U9 ( .A1(n269), .B1(n238), .ZN(n300) );
  AN2XD1 U10 ( .A1(n307), .A2(n33), .Z(n5) );
  CKND2D1 U11 ( .A1(n295), .A2(n226), .ZN(n294) );
  ND2D1 U12 ( .A1(n300), .A2(n277), .ZN(n306) );
  AOI222D0 U13 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \products[6][5] ), .B1(\add_11_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[7][11] ), .C1(\shifted_products[7][11] ), .C2(
        \products[6][5] ), .ZN(n46) );
  INR2D1 U14 ( .A1(n302), .B1(n238), .ZN(n295) );
  NR2D2 U15 ( .A1(n316), .A2(n317), .ZN(n277) );
  ND2D1 U16 ( .A1(n243), .A2(n242), .ZN(n320) );
  AN2XD1 U17 ( .A1(n301), .A2(n307), .Z(n4) );
  XNR2D1 U18 ( .A1(n1), .A2(n16), .ZN(n15) );
  NR3D1 U19 ( .A1(n9), .A2(n10), .A3(n11), .ZN(n36) );
  AN2XD1 U20 ( .A1(n35), .A2(\products[13][5] ), .Z(n10) );
  CKXOR2D1 U21 ( .A1(n218), .A2(n55), .Z(n1) );
  OAI222D1 U22 ( .A1(n53), .A2(n52), .B1(n53), .B2(n26), .C1(n52), .C2(n26), 
        .ZN(n54) );
  BUFFD1 U23 ( .I(n308), .Z(n2) );
  CKBD1 U24 ( .I(n308), .Z(n3) );
  INR2D1 U25 ( .A1(n319), .B1(n238), .ZN(n308) );
  CKND2D1 U27 ( .A1(n247), .A2(n246), .ZN(n307) );
  CKAN2D1 U28 ( .A1(n307), .A2(n33), .Z(n298) );
  OR2XD1 U29 ( .A1(n46), .A2(n109), .Z(n6) );
  OR2XD1 U30 ( .A1(n46), .A2(n27), .Z(n7) );
  OR2D1 U31 ( .A1(n109), .A2(n27), .Z(n8) );
  ND3D2 U32 ( .A1(n6), .A2(n7), .A3(n8), .ZN(n47) );
  AN2D1 U33 ( .A1(n35), .A2(\products[12][5] ), .Z(n9) );
  AN2D1 U34 ( .A1(\products[12][5] ), .A2(\products[13][5] ), .Z(n11) );
  OAI222D1 U35 ( .A1(n34), .A2(n75), .B1(n34), .B2(n37), .C1(n75), .C2(n37), 
        .ZN(n35) );
  AN2XD1 U36 ( .A1(n49), .A2(\products[5][5] ), .Z(n13) );
  OAI222D1 U37 ( .A1(n48), .A2(n121), .B1(n48), .B2(n51), .C1(n121), .C2(n51), 
        .ZN(n49) );
  NR3D1 U38 ( .A1(n12), .A2(n13), .A3(n14), .ZN(n50) );
  CKND2D1 U39 ( .A1(n247), .A2(n245), .ZN(n301) );
  NR2D1 U40 ( .A1(n32), .A2(n74), .ZN(\shifted_products[13][0] ) );
  AN2D1 U41 ( .A1(n49), .A2(\products[4][5] ), .Z(n12) );
  AN2XD1 U42 ( .A1(\products[4][5] ), .A2(\products[5][5] ), .Z(n14) );
  CKAN2D0 U43 ( .A1(n295), .A2(n278), .Z(n249) );
  CKND2D0 U44 ( .A1(n230), .A2(n295), .ZN(n296) );
  OAI22D0 U45 ( .A1(n3), .A2(n218), .B1(n277), .B2(n220), .ZN(
        \shifted_products[1][5] ) );
  AN2D4 U46 ( .A1(n269), .A2(n33), .Z(n319) );
  INR2D1 U47 ( .A1(n312), .B1(n265), .ZN(n264) );
  CKND2D0 U48 ( .A1(n245), .A2(n244), .ZN(n292) );
  CKND2D0 U49 ( .A1(n247), .A2(n243), .ZN(n302) );
  CKND2D0 U50 ( .A1(n244), .A2(n243), .ZN(n293) );
  CKND2D0 U51 ( .A1(n245), .A2(n242), .ZN(n269) );
  OA222D0 U52 ( .A1(n56), .A2(n55), .B1(n56), .B2(n218), .C1(n55), .C2(n218), 
        .Z(n16) );
  AOI222D0 U53 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \products[10][5] ), .B1(\add_9_root_add_199_I16/carry[13] ), .B2(
        \shifted_products[11][13] ), .C1(\shifted_products[11][13] ), .C2(
        \products[10][5] ), .ZN(n39) );
  CKAN2D0 U54 ( .A1(n295), .A2(n30), .Z(n315) );
  OAI22D0 U55 ( .A1(n5), .A2(n111), .B1(n229), .B2(n113), .ZN(
        \shifted_products[6][3] ) );
  INR2D1 U56 ( .A1(n312), .B1(n294), .ZN(n299) );
  CKND2 U57 ( .I(n265), .ZN(n226) );
  XOR3D4 U58 ( .A1(\products[9][5] ), .A2(n44), .A3(n42), .Z(n17) );
  AOI222D1 U59 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(\products[4][5] ), .B1(\add_12_root_add_199_I16/carry[7] ), .B2(\shifted_products[5][7] ), .C1(
        \shifted_products[5][7] ), .C2(\products[4][5] ), .ZN(n48) );
  AOI222D1 U60 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(\products[8][5] ), .B1(\add_10_root_add_199_I16/carry[9] ), .B2(\shifted_products[9][9] ), .C1(
        \shifted_products[9][9] ), .C2(\products[8][5] ), .ZN(n41) );
  AOI222D1 U61 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \products[12][5] ), .B1(\add_8_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[13][11] ), .C1(\shifted_products[13][11] ), .C2(
        \products[12][5] ), .ZN(n34) );
  XOR3D2 U62 ( .A1(\products[5][5] ), .A2(n50), .A3(n121), .Z(n18) );
  XOR3D2 U63 ( .A1(\products[13][5] ), .A2(n36), .A3(n75), .Z(n19) );
  XOR3D1 U64 ( .A1(\products[11][5] ), .A2(n38), .A3(n25), .Z(n20) );
  AN2D2 U65 ( .A1(n289), .A2(n33), .Z(n286) );
  OAI22D0 U66 ( .A1(n2), .A2(n218), .B1(n277), .B2(n219), .ZN(
        \shifted_products[1][6] ) );
  NR2D0 U67 ( .A1(n313), .A2(n238), .ZN(n321) );
  CKAN2D0 U68 ( .A1(n278), .A2(n30), .Z(n283) );
  OAI21D0 U69 ( .A1(n59), .A2(n30), .B(n268), .ZN(\shifted_products[15][15] )
         );
  NR2D0 U70 ( .A1(n32), .A2(n62), .ZN(\shifted_products[15][0] ) );
  CKND2D0 U71 ( .A1(n295), .A2(n225), .ZN(n267) );
  CKND2D0 U72 ( .A1(n226), .A2(n278), .ZN(n313) );
  CKND1 U73 ( .I(\products[13][5] ), .ZN(n69) );
  NR2D0 U75 ( .A1(n108), .A2(n32), .ZN(\shifted_products[7][0] ) );
  CKND2D0 U76 ( .A1(\products[12][5] ), .A2(n313), .ZN(n255) );
  CKND2D0 U77 ( .A1(\products[8][5] ), .A2(n313), .ZN(n314) );
  CKND1 U78 ( .I(\products[7][5] ), .ZN(n103) );
  CKND2D0 U79 ( .A1(\products[3][5] ), .A2(n294), .ZN(n282) );
  NR2D0 U80 ( .A1(n265), .A2(n238), .ZN(n254) );
  CKND2D0 U81 ( .A1(\products[2][5] ), .A2(n294), .ZN(n279) );
  CKND2D0 U82 ( .A1(\products[10][5] ), .A2(n265), .ZN(n248) );
  CKND1 U83 ( .I(\products[6][5] ), .ZN(n109) );
  CKND1 U84 ( .I(\products[14][5] ), .ZN(n63) );
  ND2D2 U85 ( .A1(n278), .A2(n4), .ZN(n317) );
  CKND2D0 U86 ( .A1(\products[15][5] ), .A2(n265), .ZN(n275) );
  CKAN2D0 U87 ( .A1(n289), .A2(n300), .Z(n288) );
  CKND1 U88 ( .I(\products[5][5] ), .ZN(n115) );
  CKAN2D0 U89 ( .A1(n289), .A2(n3), .Z(n290) );
  OAI22D0 U90 ( .A1(n286), .A2(n121), .B1(n285), .B2(n123), .ZN(
        \shifted_products[4][5] ) );
  OAI22D0 U91 ( .A1(n286), .A2(n75), .B1(n284), .B2(n77), .ZN(
        \shifted_products[12][5] ) );
  OAI22D0 U92 ( .A1(n32), .A2(n117), .B1(n288), .B2(n119), .ZN(
        \shifted_products[5][3] ) );
  OAI22D0 U93 ( .A1(n286), .A2(n123), .B1(n285), .B2(n125), .ZN(
        \shifted_products[4][3] ) );
  OAI22D0 U94 ( .A1(n32), .A2(n59), .B1(n231), .B2(n61), .ZN(
        \shifted_products[15][3] ) );
  OAI22D0 U95 ( .A1(n5), .A2(n65), .B1(n230), .B2(n67), .ZN(
        \shifted_products[14][3] ) );
  OAI22D0 U96 ( .A1(n319), .A2(n83), .B1(n4), .B2(n85), .ZN(
        \shifted_products[11][3] ) );
  NR2D0 U97 ( .A1(n226), .A2(n88), .ZN(\shifted_products[10][3] ) );
  OAI22D0 U98 ( .A1(n3), .A2(n127), .B1(n281), .B2(n129), .ZN(
        \shifted_products[3][5] ) );
  OAI21D0 U99 ( .A1(n283), .A2(n216), .B(n279), .ZN(\shifted_products[2][5] )
         );
  OAI22D0 U100 ( .A1(n2), .A2(n129), .B1(n281), .B2(n131), .ZN(
        \shifted_products[3][3] ) );
  NR2D0 U101 ( .A1(n224), .A2(n134), .ZN(\shifted_products[2][3] ) );
  NR2D0 U102 ( .A1(n225), .A2(n99), .ZN(\shifted_products[8][3] ) );
  OAI22D0 U103 ( .A1(n31), .A2(n71), .B1(n228), .B2(n73), .ZN(
        \shifted_products[13][3] ) );
  OAI22D0 U104 ( .A1(n286), .A2(n77), .B1(n284), .B2(n79), .ZN(
        \shifted_products[12][3] ) );
  OAI22D0 U105 ( .A1(n105), .A2(n31), .B1(n227), .B2(n107), .ZN(
        \shifted_products[7][3] ) );
  OAI21D0 U106 ( .A1(n61), .A2(n30), .B(n268), .ZN(\shifted_products[15][13] )
         );
  NR2D0 U107 ( .A1(n3), .A2(n131), .ZN(\shifted_products[3][1] ) );
  NR2D0 U108 ( .A1(n32), .A2(n119), .ZN(\shifted_products[5][1] ) );
  NR2D0 U109 ( .A1(n286), .A2(n79), .ZN(\shifted_products[12][1] ) );
  NR2D0 U110 ( .A1(n32), .A2(n73), .ZN(\shifted_products[13][1] ) );
  NR2D0 U111 ( .A1(n107), .A2(n32), .ZN(\shifted_products[7][1] ) );
  NR2D0 U113 ( .A1(n226), .A2(n90), .ZN(\shifted_products[10][1] ) );
  NR2D0 U114 ( .A1(n32), .A2(n61), .ZN(\shifted_products[15][1] ) );
  OA21D0 U115 ( .A1(n283), .A2(n128), .B(n282), .Z(n26) );
  CKND1 U116 ( .I(\products[4][5] ), .ZN(n121) );
  CKAN2D0 U117 ( .A1(\products[0][5] ), .A2(n32), .Z(\shifted_products[0][9] )
         );
  XNR3D4 U118 ( .A1(\products[3][5] ), .A2(n52), .A3(n22), .ZN(n21) );
  AO222D1 U119 ( .A1(n54), .A2(\products[2][5] ), .B1(n54), .B2(
        \products[3][5] ), .C1(\products[2][5] ), .C2(\products[3][5] ), .Z(
        n22) );
  AO222D1 U120 ( .A1(n47), .A2(\products[6][5] ), .B1(n47), .B2(
        \products[7][5] ), .C1(\products[6][5] ), .C2(\products[7][5] ), .Z(
        n24) );
  CKAN2D0 U121 ( .A1(n289), .A2(n319), .Z(n259) );
  OAI21D0 U122 ( .A1(n58), .A2(n30), .B(n268), .ZN(\shifted_products[15][16] )
         );
  INR2XD0 U123 ( .A1(n269), .B1(n287), .ZN(n284) );
  INR2D0 U124 ( .A1(n302), .B1(n280), .ZN(n281) );
  NR2D0 U125 ( .A1(n3), .A2(n132), .ZN(\shifted_products[3][0] ) );
  ND2D2 U126 ( .A1(n30), .A2(n302), .ZN(n316) );
  CKND2D0 U127 ( .A1(n30), .A2(n292), .ZN(n309) );
  CKND2D0 U128 ( .A1(n295), .A2(n292), .ZN(n262) );
  AOI22D0 U129 ( .A1(\products[14][0] ), .A2(n262), .B1(\products[14][4] ), 
        .B2(n261), .ZN(n263) );
  NR2D0 U131 ( .A1(n286), .A2(n126), .ZN(\shifted_products[4][0] ) );
  NR2D0 U132 ( .A1(n286), .A2(n80), .ZN(\shifted_products[12][0] ) );
  AOI22D0 U133 ( .A1(\products[6][4] ), .A2(n296), .B1(\products[6][0] ), .B2(
        n309), .ZN(n297) );
  NR2D0 U135 ( .A1(n226), .A2(n91), .ZN(\shifted_products[10][0] ) );
  NR2D0 U136 ( .A1(n225), .A2(n102), .ZN(\shifted_products[8][0] ) );
  CKND1 U137 ( .I(\products[15][4] ), .ZN(n58) );
  CKND1 U138 ( .I(\products[14][3] ), .ZN(n65) );
  OAI21D0 U139 ( .A1(n283), .A2(n133), .B(n279), .ZN(\shifted_products[2][8] )
         );
  OAI21D0 U140 ( .A1(n283), .A2(n130), .B(n282), .ZN(\shifted_products[3][8] )
         );
  NR2D0 U141 ( .A1(n224), .A2(n217), .ZN(\shifted_products[2][0] ) );
  CKND1 U142 ( .I(\products[13][3] ), .ZN(n71) );
  CKND1 U143 ( .I(\products[7][3] ), .ZN(n105) );
  CKND2D0 U144 ( .A1(n300), .A2(n307), .ZN(n303) );
  CKND2D0 U145 ( .A1(n289), .A2(n269), .ZN(n256) );
  CKND1 U146 ( .I(\products[6][3] ), .ZN(n111) );
  CKND1 U147 ( .I(\products[14][4] ), .ZN(n64) );
  CKND1 U148 ( .I(\products[7][4] ), .ZN(n104) );
  CKND1 U149 ( .I(\products[12][3] ), .ZN(n77) );
  CKND1 U150 ( .I(\products[13][4] ), .ZN(n70) );
  CKND1 U151 ( .I(\products[5][3] ), .ZN(n117) );
  OAI21D0 U152 ( .A1(n315), .A2(n99), .B(n314), .ZN(\shifted_products[8][7] )
         );
  CKND1 U153 ( .I(\products[6][4] ), .ZN(n110) );
  OAI21D0 U154 ( .A1(n315), .A2(n77), .B(n255), .ZN(\shifted_products[12][9] )
         );
  OAI22D0 U155 ( .A1(n225), .A2(n98), .B1(n315), .B2(n102), .ZN(
        \shifted_products[8][4] ) );
  OAI21D0 U156 ( .A1(n315), .A2(n101), .B(n314), .ZN(\shifted_products[8][5] )
         );
  OAI21D0 U157 ( .A1(n315), .A2(n79), .B(n255), .ZN(\shifted_products[12][7] )
         );
  OAI22D0 U158 ( .A1(n226), .A2(n87), .B1(n249), .B2(n91), .ZN(
        \shifted_products[10][4] ) );
  FA1D1 U159 ( .A(\shifted_products[2][6] ), .B(\shifted_products[3][6] ), 
        .CI(\add_13_root_add_199_I16/carry[6] ), .CO(
        \add_13_root_add_199_I16/carry[7] ), .S(N82) );
  OAI21D0 U160 ( .A1(n283), .A2(n135), .B(n279), .ZN(\shifted_products[2][6] )
         );
  OAI22D0 U161 ( .A1(n286), .A2(n122), .B1(n285), .B2(n124), .ZN(
        \shifted_products[4][4] ) );
  OAI22D0 U162 ( .A1(n286), .A2(n76), .B1(n284), .B2(n78), .ZN(
        \shifted_products[12][4] ) );
  OAI21D0 U163 ( .A1(n315), .A2(n100), .B(n314), .ZN(\shifted_products[8][6] )
         );
  AOI22D0 U164 ( .A1(\products[9][4] ), .A2(n317), .B1(\products[9][0] ), .B2(
        n316), .ZN(n318) );
  AOI22D0 U165 ( .A1(\products[15][4] ), .A2(n270), .B1(\products[15][0] ), 
        .B2(n272), .ZN(n271) );
  AOI22D0 U166 ( .A1(\products[11][0] ), .A2(n252), .B1(\products[11][4] ), 
        .B2(n280), .ZN(n253) );
  OAI22D0 U167 ( .A1(n235), .A2(n65), .B1(n264), .B2(n63), .ZN(
        \shifted_products[14][9] ) );
  OAI22D0 U168 ( .A1(n32), .A2(n118), .B1(n288), .B2(n120), .ZN(
        \shifted_products[5][2] ) );
  OAI22D0 U169 ( .A1(n286), .A2(n124), .B1(n285), .B2(n126), .ZN(
        \shifted_products[4][2] ) );
  OAI22D0 U170 ( .A1(n32), .A2(n72), .B1(n228), .B2(n74), .ZN(
        \shifted_products[13][2] ) );
  OAI22D0 U171 ( .A1(n286), .A2(n78), .B1(n284), .B2(n80), .ZN(
        \shifted_products[12][2] ) );
  OAI22D0 U172 ( .A1(n32), .A2(n60), .B1(n231), .B2(n62), .ZN(
        \shifted_products[15][2] ) );
  OAI22D0 U173 ( .A1(n5), .A2(n66), .B1(n230), .B2(n68), .ZN(
        \shifted_products[14][2] ) );
  OAI22D0 U174 ( .A1(n3), .A2(n219), .B1(n277), .B2(n221), .ZN(
        \shifted_products[1][4] ) );
  OAI22D0 U175 ( .A1(n3), .A2(n220), .B1(n277), .B2(n222), .ZN(
        \shifted_products[1][3] ) );
  OAI22D0 U176 ( .A1(n319), .A2(n84), .B1(n4), .B2(n86), .ZN(
        \shifted_products[11][2] ) );
  NR2D0 U177 ( .A1(n226), .A2(n89), .ZN(\shifted_products[10][2] ) );
  OAI22D0 U178 ( .A1(n2), .A2(n128), .B1(n281), .B2(n130), .ZN(
        \shifted_products[3][4] ) );
  OAI22D0 U179 ( .A1(n224), .A2(n133), .B1(n283), .B2(n217), .ZN(
        \shifted_products[2][4] ) );
  OAI22D0 U180 ( .A1(n2), .A2(n130), .B1(n281), .B2(n132), .ZN(
        \shifted_products[3][2] ) );
  NR2D0 U181 ( .A1(n224), .A2(n135), .ZN(\shifted_products[2][2] ) );
  OAI22D0 U182 ( .A1(n319), .A2(n95), .B1(n232), .B2(n97), .ZN(
        \shifted_products[9][2] ) );
  NR2D0 U183 ( .A1(n225), .A2(n100), .ZN(\shifted_products[8][2] ) );
  OAI22D0 U184 ( .A1(n5), .A2(n112), .B1(n229), .B2(n114), .ZN(
        \shifted_products[6][2] ) );
  NR2D0 U185 ( .A1(n3), .A2(n222), .ZN(\shifted_products[1][1] ) );
  CKAN2D0 U186 ( .A1(n2), .A2(n307), .Z(n311) );
  CKND1 U187 ( .I(\products[5][4] ), .ZN(n116) );
  CKND1 U188 ( .I(\products[4][4] ), .ZN(n122) );
  CKND1 U189 ( .I(\products[4][3] ), .ZN(n123) );
  CKAN2D0 U190 ( .A1(n319), .A2(n307), .Z(n274) );
  CKND2D0 U192 ( .A1(n278), .A2(n302), .ZN(n252) );
  CKND2D2 U193 ( .A1(n244), .A2(n246), .ZN(n312) );
  CKND1 U194 ( .I(\products[6][2] ), .ZN(n112) );
  CKND1 U195 ( .I(\products[12][2] ), .ZN(n78) );
  AOI22D0 U196 ( .A1(\products[7][2] ), .A2(n304), .B1(\products[7][4] ), .B2(
        n303), .ZN(n305) );
  AOI22D0 U197 ( .A1(\products[13][4] ), .A2(n256), .B1(\products[13][2] ), 
        .B2(n287), .ZN(n257) );
  OAI21D0 U198 ( .A1(n315), .A2(n78), .B(n255), .ZN(\shifted_products[12][8] )
         );
  AOI22D0 U199 ( .A1(\products[13][4] ), .A2(n287), .B1(\products[13][2] ), 
        .B2(n238), .ZN(n258) );
  OAI22D0 U200 ( .A1(n3), .A2(n221), .B1(n277), .B2(n223), .ZN(
        \shifted_products[1][2] ) );
  CKND1 U201 ( .I(\products[5][2] ), .ZN(n118) );
  CKND1 U202 ( .I(\products[4][2] ), .ZN(n124) );
  INVD1 U203 ( .I(n313), .ZN(n225) );
  INVD1 U204 ( .I(n294), .ZN(n224) );
  INVD1 U205 ( .I(n296), .ZN(n229) );
  CKBD1 U206 ( .I(n306), .Z(n32) );
  CKBD1 U207 ( .I(n306), .Z(n31) );
  CKBD1 U208 ( .I(n306), .Z(n33) );
  INVD1 U209 ( .I(n317), .ZN(n232) );
  NR2D1 U210 ( .A1(n287), .A2(n316), .ZN(n291) );
  OAI22D1 U211 ( .A1(n291), .A2(n117), .B1(n290), .B2(n115), .ZN(
        \shifted_products[5][7] ) );
  ND2D1 U212 ( .A1(n319), .A2(n4), .ZN(n265) );
  INVD1 U213 ( .I(\products[15][5] ), .ZN(n57) );
  INVD1 U214 ( .I(n256), .ZN(n228) );
  NR2D1 U215 ( .A1(n5), .A2(n68), .ZN(\shifted_products[14][0] ) );
  INVD1 U216 ( .I(n303), .ZN(n227) );
  AOI222D0 U217 ( .A1(n40), .A2(\products[10][5] ), .B1(n40), .B2(
        \products[11][5] ), .C1(\products[10][5] ), .C2(\products[11][5] ), 
        .ZN(n25) );
  FA1D0 U218 ( .A(\shifted_products[12][5] ), .B(\shifted_products[13][5] ), 
        .CI(\add_8_root_add_199_I16/carry[5] ), .CO(
        \add_8_root_add_199_I16/carry[6] ), .S(N206) );
  OAI222D0 U219 ( .A1(n234), .A2(n73), .B1(n228), .B2(n71), .C1(n31), .C2(n69), 
        .ZN(\shifted_products[13][5] ) );
  FA1D0 U220 ( .A(\shifted_products[4][5] ), .B(\shifted_products[5][5] ), 
        .CI(\add_12_root_add_199_I16/carry[5] ), .CO(
        \add_12_root_add_199_I16/carry[6] ), .S(N104) );
  OAI222D0 U221 ( .A1(n288), .A2(n117), .B1(n291), .B2(n119), .C1(n31), .C2(
        n115), .ZN(\shifted_products[5][5] ) );
  FA1D0 U222 ( .A(\shifted_products[10][3] ), .B(\shifted_products[11][3] ), 
        .CI(\add_9_root_add_199_I16/carry[3] ), .CO(
        \add_9_root_add_199_I16/carry[4] ), .S(N177) );
  FA1D0 U223 ( .A(\shifted_products[4][3] ), .B(\shifted_products[5][3] ), 
        .CI(\add_12_root_add_199_I16/carry[3] ), .CO(
        \add_12_root_add_199_I16/carry[4] ), .S(N102) );
  FA1D0 U224 ( .A(\shifted_products[2][3] ), .B(\shifted_products[3][3] ), 
        .CI(\add_13_root_add_199_I16/carry[3] ), .CO(
        \add_13_root_add_199_I16/carry[4] ), .S(N79) );
  FA1D0 U225 ( .A(\shifted_products[2][5] ), .B(\shifted_products[3][5] ), 
        .CI(\add_13_root_add_199_I16/carry[5] ), .CO(
        \add_13_root_add_199_I16/carry[6] ), .S(N81) );
  FA1D0 U226 ( .A(\shifted_products[10][9] ), .B(\shifted_products[11][9] ), 
        .CI(\add_9_root_add_199_I16/carry[9] ), .CO(
        \add_9_root_add_199_I16/carry[10] ), .S(N183) );
  OAI22D1 U227 ( .A1(n233), .A2(n83), .B1(n254), .B2(n81), .ZN(
        \shifted_products[11][9] ) );
  OAI21D1 U228 ( .A1(n29), .A2(n90), .B(n250), .ZN(\shifted_products[10][9] )
         );
  FA1D0 U229 ( .A(\shifted_products[6][3] ), .B(\shifted_products[7][3] ), 
        .CI(\add_11_root_add_199_I16/carry[3] ), .CO(
        \add_11_root_add_199_I16/carry[4] ), .S(N126) );
  FA1D0 U230 ( .A(\shifted_products[12][3] ), .B(\shifted_products[13][3] ), 
        .CI(\add_8_root_add_199_I16/carry[3] ), .CO(
        \add_8_root_add_199_I16/carry[4] ), .S(N204) );
  FA1D0 U231 ( .A(\shifted_products[8][3] ), .B(\shifted_products[9][3] ), 
        .CI(\add_10_root_add_199_I16/carry[3] ), .CO(
        \add_10_root_add_199_I16/carry[4] ), .S(N151) );
  OAI22D1 U232 ( .A1(n319), .A2(n94), .B1(n232), .B2(n96), .ZN(
        \shifted_products[9][3] ) );
  OAI21D1 U233 ( .A1(n276), .A2(n59), .B(n266), .ZN(\shifted_products[15][11] ) );
  OAI21D1 U234 ( .A1(n29), .A2(n67), .B(n260), .ZN(\shifted_products[14][11] )
         );
  OAI21D1 U235 ( .A1(n29), .A2(n65), .B(n260), .ZN(\shifted_products[14][13] )
         );
  FA1D0 U236 ( .A(\shifted_products[10][11] ), .B(\shifted_products[11][11] ), 
        .CI(\add_9_root_add_199_I16/carry[11] ), .CO(
        \add_9_root_add_199_I16/carry[12] ), .S(N185) );
  OAI21D1 U237 ( .A1(n29), .A2(n85), .B(n251), .ZN(\shifted_products[11][11] )
         );
  OAI21D1 U238 ( .A1(n29), .A2(n88), .B(n250), .ZN(\shifted_products[10][11] )
         );
  FA1D0 U240 ( .A(\shifted_products[2][1] ), .B(\shifted_products[3][1] ), 
        .CI(\add_13_root_add_199_I16/carry[1] ), .CO(
        \add_13_root_add_199_I16/carry[2] ), .S(N77) );
  NR2D1 U241 ( .A1(n224), .A2(n216), .ZN(\shifted_products[2][1] ) );
  FA1D0 U242 ( .A(\shifted_products[6][1] ), .B(\shifted_products[7][1] ), 
        .CI(\add_11_root_add_199_I16/carry[1] ), .CO(
        \add_11_root_add_199_I16/carry[2] ), .S(N124) );
  NR2D1 U243 ( .A1(n298), .A2(n113), .ZN(\shifted_products[6][1] ) );
  FA1D0 U244 ( .A(\shifted_products[8][1] ), .B(\shifted_products[9][1] ), 
        .CI(\add_10_root_add_199_I16/carry[1] ), .CO(
        \add_10_root_add_199_I16/carry[2] ), .S(N149) );
  NR2D1 U245 ( .A1(n319), .A2(n96), .ZN(\shifted_products[9][1] ) );
  NR2D1 U246 ( .A1(n225), .A2(n101), .ZN(\shifted_products[8][1] ) );
  FA1D0 U247 ( .A(\shifted_products[10][1] ), .B(\shifted_products[11][1] ), 
        .CI(\add_9_root_add_199_I16/carry[1] ), .CO(
        \add_9_root_add_199_I16/carry[2] ), .S(N175) );
  NR2D1 U248 ( .A1(n319), .A2(n85), .ZN(\shifted_products[11][1] ) );
  NR2D1 U249 ( .A1(n298), .A2(n67), .ZN(\shifted_products[14][1] ) );
  FA1D0 U250 ( .A(\shifted_products[4][1] ), .B(\shifted_products[5][1] ), 
        .CI(\add_12_root_add_199_I16/carry[1] ), .CO(
        \add_12_root_add_199_I16/carry[2] ), .S(N100) );
  NR2D1 U251 ( .A1(n286), .A2(n125), .ZN(\shifted_products[4][1] ) );
  FA1D0 U252 ( .A(\shifted_products[12][1] ), .B(\shifted_products[13][1] ), 
        .CI(\add_8_root_add_199_I16/carry[1] ), .CO(
        \add_8_root_add_199_I16/carry[2] ), .S(N202) );
  NR2D1 U253 ( .A1(n319), .A2(n97), .ZN(\shifted_products[9][0] ) );
  FA1D0 U254 ( .A(\products[0][5] ), .B(\shifted_products[1][5] ), .CI(
        \add_14_root_add_199_I16/carry[5] ), .CO(
        \add_14_root_add_199_I16/carry[6] ), .S(N59) );
  NR2D1 U255 ( .A1(n298), .A2(n114), .ZN(\shifted_products[6][0] ) );
  INVD1 U256 ( .I(\products[12][5] ), .ZN(n75) );
  FA1D0 U257 ( .A(\shifted_products[2][7] ), .B(\shifted_products[3][7] ), 
        .CI(\add_13_root_add_199_I16/carry[7] ), .CO(
        \add_13_root_add_199_I16/carry[8] ), .S(N83) );
  OAI21D1 U258 ( .A1(n283), .A2(n131), .B(n282), .ZN(\shifted_products[3][7] )
         );
  OAI21D1 U259 ( .A1(n283), .A2(n134), .B(n279), .ZN(\shifted_products[2][7] )
         );
  INVD1 U260 ( .I(\products[1][5] ), .ZN(n218) );
  INVD1 U261 ( .I(n309), .ZN(n236) );
  OAI21D1 U262 ( .A1(n283), .A2(n129), .B(n282), .ZN(\shifted_products[3][9] )
         );
  OAI22D1 U263 ( .A1(n240), .A2(n71), .B1(n321), .B2(n69), .ZN(
        \shifted_products[13][11] ) );
  OAI22D1 U264 ( .A1(n240), .A2(n94), .B1(n321), .B2(n92), .ZN(
        \shifted_products[9][9] ) );
  OAI22D1 U265 ( .A1(n236), .A2(n105), .B1(n299), .B2(n103), .ZN(
        \shifted_products[7][11] ) );
  INVD1 U266 ( .I(\products[9][5] ), .ZN(n92) );
  INVD1 U267 ( .I(\products[11][5] ), .ZN(n81) );
  OAI21D1 U268 ( .A1(n29), .A2(n83), .B(n251), .ZN(\shifted_products[11][13] )
         );
  OAI22D1 U269 ( .A1(n240), .A2(n70), .B1(n321), .B2(n69), .ZN(
        \shifted_products[13][12] ) );
  OAI22D1 U270 ( .A1(n240), .A2(n93), .B1(n321), .B2(n92), .ZN(
        \shifted_products[9][10] ) );
  ND2D1 U271 ( .A1(\products[14][5] ), .A2(n267), .ZN(n260) );
  ND2D1 U272 ( .A1(\products[10][5] ), .A2(n267), .ZN(n250) );
  ND2D1 U273 ( .A1(\products[15][5] ), .A2(n267), .ZN(n268) );
  ND2D1 U274 ( .A1(\products[11][5] ), .A2(n267), .ZN(n251) );
  INVD1 U275 ( .I(n261), .ZN(n230) );
  INVD1 U276 ( .I(n316), .ZN(n240) );
  OAI22D1 U277 ( .A1(n291), .A2(n116), .B1(n290), .B2(n115), .ZN(
        \shifted_products[5][8] ) );
  INVD1 U278 ( .I(n262), .ZN(n235) );
  INVD1 U279 ( .I(n252), .ZN(n233) );
  OA22D0 U280 ( .A1(n236), .A2(n104), .B1(n299), .B2(n103), .Z(n27) );
  INVD1 U281 ( .I(n270), .ZN(n231) );
  INVD1 U282 ( .I(n304), .ZN(n237) );
  INVD1 U283 ( .I(n272), .ZN(n239) );
  INVD1 U284 ( .I(n287), .ZN(n234) );
  NR2D1 U285 ( .A1(n319), .A2(n86), .ZN(\shifted_products[11][0] ) );
  INVD1 U286 ( .I(\products[3][5] ), .ZN(n127) );
  OA21D1 U287 ( .A1(n29), .A2(n82), .B(n251), .Z(n28) );
  INVD1 U288 ( .I(n320), .ZN(n238) );
  ND2D1 U289 ( .A1(n292), .A2(n301), .ZN(n287) );
  INVD1 U290 ( .I(\products[15][3] ), .ZN(n59) );
  ND2D1 U291 ( .A1(n301), .A2(n307), .ZN(n280) );
  NR2D1 U292 ( .A1(n2), .A2(n223), .ZN(\shifted_products[1][0] ) );
  INVD1 U293 ( .I(\products[3][3] ), .ZN(n129) );
  FA1D0 U294 ( .A(\shifted_products[6][7] ), .B(\shifted_products[7][7] ), 
        .CI(\add_11_root_add_199_I16/carry[7] ), .CO(
        \add_11_root_add_199_I16/carry[8] ), .S(N130) );
  OAI222D0 U295 ( .A1(n224), .A2(n109), .B1(n236), .B2(n113), .C1(n312), .C2(
        n111), .ZN(\shifted_products[6][7] ) );
  OAI222D0 U296 ( .A1(n237), .A2(n105), .B1(n311), .B2(n103), .C1(n107), .C2(
        n312), .ZN(\shifted_products[7][7] ) );
  FA1D0 U297 ( .A(\shifted_products[8][7] ), .B(\shifted_products[9][7] ), 
        .CI(\add_10_root_add_199_I16/carry[7] ), .CO(
        \add_10_root_add_199_I16/carry[8] ), .S(N155) );
  OAI222D0 U298 ( .A1(n240), .A2(n96), .B1(n225), .B2(n92), .C1(n94), .C2(n320), .ZN(\shifted_products[9][7] ) );
  OAI222D0 U299 ( .A1(n31), .A2(n58), .B1(n231), .B2(n60), .C1(n62), .C2(n301), 
        .ZN(\shifted_products[15][4] ) );
  OAI222D0 U300 ( .A1(n5), .A2(n64), .B1(n230), .B2(n66), .C1(n312), .C2(n68), 
        .ZN(\shifted_products[14][4] ) );
  OAI222D0 U301 ( .A1(n31), .A2(n57), .B1(n231), .B2(n59), .C1(n61), .C2(n301), 
        .ZN(\shifted_products[15][5] ) );
  OAI222D0 U302 ( .A1(n5), .A2(n63), .B1(n230), .B2(n65), .C1(n312), .C2(n67), 
        .ZN(\shifted_products[14][5] ) );
  OAI222D0 U303 ( .A1(n226), .A2(n63), .B1(n235), .B2(n67), .C1(n312), .C2(n65), .ZN(\shifted_products[14][7] ) );
  OAI222D0 U304 ( .A1(n239), .A2(n61), .B1(n274), .B2(n57), .C1(n59), .C2(n301), .ZN(\shifted_products[15][7] ) );
  FA1D0 U305 ( .A(\shifted_products[8][4] ), .B(\shifted_products[9][4] ), 
        .CI(\add_10_root_add_199_I16/carry[4] ), .CO(
        \add_10_root_add_199_I16/carry[5] ), .S(N152) );
  OAI222D0 U306 ( .A1(n319), .A2(n93), .B1(n232), .B2(n95), .C1(n320), .C2(n97), .ZN(\shifted_products[9][4] ) );
  FA1D0 U307 ( .A(\shifted_products[10][4] ), .B(\shifted_products[11][4] ), 
        .CI(\add_9_root_add_199_I16/carry[4] ), .CO(
        \add_9_root_add_199_I16/carry[5] ), .S(N178) );
  OAI222D0 U308 ( .A1(n319), .A2(n82), .B1(n4), .B2(n84), .C1(n320), .C2(n86), 
        .ZN(\shifted_products[11][4] ) );
  FA1D0 U309 ( .A(\shifted_products[12][7] ), .B(\shifted_products[13][7] ), 
        .CI(\add_8_root_add_199_I16/carry[7] ), .CO(
        \add_8_root_add_199_I16/carry[8] ), .S(N208) );
  OAI222D0 U310 ( .A1(n234), .A2(n71), .B1(n259), .B2(n69), .C1(n320), .C2(n73), .ZN(\shifted_products[13][7] ) );
  FA1D0 U311 ( .A(\shifted_products[8][5] ), .B(\shifted_products[9][5] ), 
        .CI(\add_10_root_add_199_I16/carry[5] ), .CO(
        \add_10_root_add_199_I16/carry[6] ), .S(N153) );
  OAI222D0 U312 ( .A1(n319), .A2(n92), .B1(n232), .B2(n94), .C1(n320), .C2(n96), .ZN(\shifted_products[9][5] ) );
  FA1D0 U313 ( .A(\shifted_products[10][5] ), .B(\shifted_products[11][5] ), 
        .CI(\add_9_root_add_199_I16/carry[5] ), .CO(
        \add_9_root_add_199_I16/carry[6] ), .S(N179) );
  OAI222D0 U314 ( .A1(n319), .A2(n81), .B1(n4), .B2(n83), .C1(n320), .C2(n85), 
        .ZN(\shifted_products[11][5] ) );
  OAI21D1 U315 ( .A1(n249), .A2(n90), .B(n248), .ZN(\shifted_products[10][5] )
         );
  FA1D0 U316 ( .A(\shifted_products[6][9] ), .B(\shifted_products[7][9] ), 
        .CI(\add_11_root_add_199_I16/carry[9] ), .CO(
        \add_11_root_add_199_I16/carry[10] ), .S(N132) );
  OAI222D0 U317 ( .A1(n224), .A2(n103), .B1(n236), .B2(n107), .C1(n312), .C2(
        n105), .ZN(\shifted_products[7][9] ) );
  OAI22D1 U318 ( .A1(n236), .A2(n111), .B1(n299), .B2(n109), .ZN(
        \shifted_products[6][9] ) );
  FA1D0 U319 ( .A(\shifted_products[12][9] ), .B(\shifted_products[13][9] ), 
        .CI(\add_8_root_add_199_I16/carry[9] ), .CO(
        \add_8_root_add_199_I16/carry[10] ), .S(N210) );
  OAI222D0 U320 ( .A1(n240), .A2(n73), .B1(n225), .B2(n69), .C1(n320), .C2(n71), .ZN(\shifted_products[13][9] ) );
  FA1D0 U321 ( .A(\shifted_products[10][7] ), .B(\shifted_products[11][7] ), 
        .CI(\add_9_root_add_199_I16/carry[7] ), .CO(
        \add_9_root_add_199_I16/carry[8] ), .S(N181) );
  OAI222D0 U322 ( .A1(n226), .A2(n81), .B1(n233), .B2(n85), .C1(n320), .C2(n83), .ZN(\shifted_products[11][7] ) );
  OAI21D1 U323 ( .A1(n249), .A2(n88), .B(n248), .ZN(\shifted_products[10][7] )
         );
  FA1D0 U324 ( .A(\shifted_products[10][8] ), .B(\shifted_products[11][8] ), 
        .CI(\add_9_root_add_199_I16/carry[8] ), .CO(
        \add_9_root_add_199_I16/carry[9] ), .S(N182) );
  OAI222D0 U325 ( .A1(n226), .A2(n81), .B1(n233), .B2(n84), .C1(n320), .C2(n82), .ZN(\shifted_products[11][8] ) );
  OAI221D0 U326 ( .A1(n249), .A2(n87), .B1(n30), .B2(n91), .C(n248), .ZN(
        \shifted_products[10][8] ) );
  FA1D0 U327 ( .A(\shifted_products[10][10] ), .B(\shifted_products[11][10] ), 
        .CI(\add_9_root_add_199_I16/carry[10] ), .CO(
        \add_9_root_add_199_I16/carry[11] ), .S(N184) );
  OAI222D0 U328 ( .A1(n233), .A2(n82), .B1(n254), .B2(n81), .C1(n29), .C2(n86), 
        .ZN(\shifted_products[11][10] ) );
  OAI21D1 U329 ( .A1(n29), .A2(n89), .B(n250), .ZN(\shifted_products[10][10] )
         );
  FA1D0 U330 ( .A(\shifted_products[12][4] ), .B(\shifted_products[13][4] ), 
        .CI(\add_8_root_add_199_I16/carry[4] ), .CO(
        \add_8_root_add_199_I16/carry[5] ), .S(N205) );
  OAI222D0 U331 ( .A1(n234), .A2(n74), .B1(n228), .B2(n72), .C1(n31), .C2(n70), 
        .ZN(\shifted_products[13][4] ) );
  FA1D0 U332 ( .A(\shifted_products[6][5] ), .B(\shifted_products[7][5] ), 
        .CI(\add_11_root_add_199_I16/carry[5] ), .CO(
        \add_11_root_add_199_I16/carry[6] ), .S(N128) );
  OAI222D0 U333 ( .A1(n5), .A2(n109), .B1(n229), .B2(n111), .C1(n312), .C2(
        n113), .ZN(\shifted_products[6][5] ) );
  OAI222D0 U334 ( .A1(n227), .A2(n105), .B1(n237), .B2(n107), .C1(n103), .C2(
        n32), .ZN(\shifted_products[7][5] ) );
  OAI222D0 U335 ( .A1(n283), .A2(n132), .B1(n281), .B2(n128), .C1(n2), .C2(
        n127), .ZN(\shifted_products[3][6] ) );
  FA1D0 U336 ( .A(\shifted_products[4][4] ), .B(\shifted_products[5][4] ), 
        .CI(\add_12_root_add_199_I16/carry[4] ), .CO(
        \add_12_root_add_199_I16/carry[5] ), .S(N103) );
  OAI222D0 U337 ( .A1(n288), .A2(n118), .B1(n291), .B2(n120), .C1(n31), .C2(
        n116), .ZN(\shifted_products[5][4] ) );
  FA1D0 U338 ( .A(\shifted_products[6][4] ), .B(\shifted_products[7][4] ), 
        .CI(\add_11_root_add_199_I16/carry[4] ), .CO(
        \add_11_root_add_199_I16/carry[5] ), .S(N127) );
  OAI222D0 U339 ( .A1(n5), .A2(n110), .B1(n229), .B2(n112), .C1(n312), .C2(
        n114), .ZN(\shifted_products[6][4] ) );
  OAI222D0 U340 ( .A1(n227), .A2(n106), .B1(n237), .B2(n108), .C1(n104), .C2(
        n32), .ZN(\shifted_products[7][4] ) );
  FA1D0 U341 ( .A(\shifted_products[8][6] ), .B(\shifted_products[9][6] ), 
        .CI(\add_10_root_add_199_I16/carry[6] ), .CO(
        \add_10_root_add_199_I16/carry[7] ), .S(N154) );
  OAI221D0 U342 ( .A1(n319), .A2(n92), .B1(n95), .B2(n320), .C(n318), .ZN(
        \shifted_products[9][6] ) );
  OAI221D0 U343 ( .A1(n31), .A2(n57), .B1(n60), .B2(n301), .C(n271), .ZN(
        \shifted_products[15][6] ) );
  OAI221D0 U344 ( .A1(n5), .A2(n63), .B1(n312), .B2(n66), .C(n263), .ZN(
        \shifted_products[14][6] ) );
  FA1D0 U345 ( .A(\shifted_products[10][6] ), .B(\shifted_products[11][6] ), 
        .CI(\add_9_root_add_199_I16/carry[6] ), .CO(
        \add_9_root_add_199_I16/carry[7] ), .S(N180) );
  OAI221D0 U346 ( .A1(n319), .A2(n81), .B1(n320), .B2(n84), .C(n253), .ZN(
        \shifted_products[11][6] ) );
  OAI21D1 U347 ( .A1(n249), .A2(n89), .B(n248), .ZN(\shifted_products[10][6] )
         );
  OAI221D0 U348 ( .A1(n276), .A2(n61), .B1(n239), .B2(n59), .C(n275), .ZN(
        \shifted_products[15][9] ) );
  OAI221D0 U349 ( .A1(n276), .A2(n60), .B1(n239), .B2(n58), .C(n275), .ZN(
        \shifted_products[15][10] ) );
  OAI222D0 U350 ( .A1(n235), .A2(n64), .B1(n264), .B2(n63), .C1(n29), .C2(n68), 
        .ZN(\shifted_products[14][10] ) );
  FA1D0 U351 ( .A(\shifted_products[6][8] ), .B(\shifted_products[7][8] ), 
        .CI(\add_11_root_add_199_I16/carry[8] ), .CO(
        \add_11_root_add_199_I16/carry[9] ), .S(N131) );
  OAI221D0 U352 ( .A1(n311), .A2(n103), .B1(n237), .B2(n104), .C(n310), .ZN(
        \shifted_products[7][8] ) );
  OAI222D0 U353 ( .A1(n224), .A2(n109), .B1(n236), .B2(n112), .C1(n312), .C2(
        n110), .ZN(\shifted_products[6][8] ) );
  OAI221D0 U354 ( .A1(n276), .A2(n58), .B1(n62), .B2(n30), .C(n266), .ZN(
        \shifted_products[15][12] ) );
  OAI21D1 U355 ( .A1(n29), .A2(n66), .B(n260), .ZN(\shifted_products[14][12] )
         );
  FA1D0 U356 ( .A(\shifted_products[10][2] ), .B(\shifted_products[11][2] ), 
        .CI(\add_9_root_add_199_I16/carry[2] ), .CO(
        \add_9_root_add_199_I16/carry[3] ), .S(N176) );
  FA1D0 U357 ( .A(\shifted_products[4][2] ), .B(\shifted_products[5][2] ), 
        .CI(\add_12_root_add_199_I16/carry[2] ), .CO(
        \add_12_root_add_199_I16/carry[3] ), .S(N101) );
  FA1D0 U358 ( .A(\shifted_products[2][2] ), .B(\shifted_products[3][2] ), 
        .CI(\add_13_root_add_199_I16/carry[2] ), .CO(
        \add_13_root_add_199_I16/carry[3] ), .S(N78) );
  FA1D0 U359 ( .A(\shifted_products[2][4] ), .B(\shifted_products[3][4] ), 
        .CI(\add_13_root_add_199_I16/carry[4] ), .CO(
        \add_13_root_add_199_I16/carry[5] ), .S(N80) );
  FA1D0 U360 ( .A(\shifted_products[6][2] ), .B(\shifted_products[7][2] ), 
        .CI(\add_11_root_add_199_I16/carry[2] ), .CO(
        \add_11_root_add_199_I16/carry[3] ), .S(N125) );
  OAI22D1 U361 ( .A1(n106), .A2(n31), .B1(n227), .B2(n108), .ZN(
        \shifted_products[7][2] ) );
  FA1D0 U362 ( .A(\shifted_products[12][2] ), .B(\shifted_products[13][2] ), 
        .CI(\add_8_root_add_199_I16/carry[2] ), .CO(
        \add_8_root_add_199_I16/carry[3] ), .S(N203) );
  FA1D0 U363 ( .A(\shifted_products[8][2] ), .B(\shifted_products[9][2] ), 
        .CI(\add_10_root_add_199_I16/carry[2] ), .CO(
        \add_10_root_add_199_I16/carry[3] ), .S(N150) );
  FA1D0 U364 ( .A(\products[0][3] ), .B(\shifted_products[1][3] ), .CI(
        \add_14_root_add_199_I16/carry[3] ), .CO(
        \add_14_root_add_199_I16/carry[4] ), .S(N57) );
  FA1D0 U365 ( .A(\products[0][4] ), .B(\shifted_products[1][4] ), .CI(
        \add_14_root_add_199_I16/carry[4] ), .CO(
        \add_14_root_add_199_I16/carry[5] ), .S(N58) );
  FA1D0 U366 ( .A(\products[0][1] ), .B(\shifted_products[1][1] ), .CI(
        \add_14_root_add_199_I16/carry[1] ), .CO(
        \add_14_root_add_199_I16/carry[2] ), .S(N55) );
  INVD1 U367 ( .I(\products[12][4] ), .ZN(n76) );
  INVD1 U368 ( .I(\products[3][4] ), .ZN(n128) );
  FA1D0 U369 ( .A(\shifted_products[6][10] ), .B(\shifted_products[7][10] ), 
        .CI(\add_11_root_add_199_I16/carry[10] ), .CO(
        \add_11_root_add_199_I16/carry[11] ), .S(N133) );
  OAI222D0 U370 ( .A1(n224), .A2(n103), .B1(n236), .B2(n106), .C1(n312), .C2(
        n104), .ZN(\shifted_products[7][10] ) );
  OAI22D1 U371 ( .A1(n236), .A2(n110), .B1(n299), .B2(n109), .ZN(
        \shifted_products[6][10] ) );
  OAI21D1 U372 ( .A1(n60), .A2(n30), .B(n268), .ZN(\shifted_products[15][14] )
         );
  OAI21D1 U373 ( .A1(n30), .A2(n64), .B(n260), .ZN(\shifted_products[14][14] )
         );
  FA1D0 U374 ( .A(\shifted_products[10][12] ), .B(\shifted_products[11][12] ), 
        .CI(\add_9_root_add_199_I16/carry[12] ), .CO(
        \add_9_root_add_199_I16/carry[13] ), .S(N186) );
  OAI21D1 U375 ( .A1(n29), .A2(n84), .B(n251), .ZN(\shifted_products[11][12] )
         );
  OAI21D1 U376 ( .A1(n29), .A2(n87), .B(n250), .ZN(\shifted_products[10][12] )
         );
  OAI21D1 U377 ( .A1(n315), .A2(n76), .B(n255), .ZN(\shifted_products[12][10] ) );
  OAI222D0 U378 ( .A1(n240), .A2(n72), .B1(n225), .B2(n69), .C1(n320), .C2(n70), .ZN(\shifted_products[13][10] ) );
  FA1D0 U379 ( .A(\shifted_products[8][8] ), .B(\shifted_products[9][8] ), 
        .CI(\add_10_root_add_199_I16/carry[8] ), .CO(
        \add_10_root_add_199_I16/carry[9] ), .S(N156) );
  OAI21D1 U380 ( .A1(n315), .A2(n98), .B(n314), .ZN(\shifted_products[8][8] )
         );
  OAI222D0 U381 ( .A1(n240), .A2(n95), .B1(n225), .B2(n92), .C1(n320), .C2(n93), .ZN(\shifted_products[9][8] ) );
  OAI22D1 U382 ( .A1(n286), .A2(n121), .B1(n285), .B2(n122), .ZN(
        \shifted_products[4][6] ) );
  OAI222D0 U383 ( .A1(n288), .A2(n116), .B1(n291), .B2(n118), .C1(n31), .C2(
        n115), .ZN(\shifted_products[5][6] ) );
  NR2D1 U384 ( .A1(n32), .A2(n120), .ZN(\shifted_products[5][0] ) );
  INVD1 U385 ( .I(\products[1][4] ), .ZN(n219) );
  INVD1 U386 ( .I(\products[1][3] ), .ZN(n220) );
  INVD1 U387 ( .I(\products[2][4] ), .ZN(n133) );
  CKBD1 U388 ( .I(n293), .Z(n30) );
  ND2D1 U389 ( .A1(n320), .A2(n312), .ZN(n272) );
  INVD1 U390 ( .I(\products[11][3] ), .ZN(n83) );
  INVD1 U391 ( .I(\products[9][3] ), .ZN(n94) );
  INVD1 U392 ( .I(\products[11][4] ), .ZN(n82) );
  ND2D1 U393 ( .A1(n301), .A2(n269), .ZN(n261) );
  ND2D1 U394 ( .A1(n269), .A2(n307), .ZN(n270) );
  ND2D1 U395 ( .A1(n302), .A2(n301), .ZN(n304) );
  INVD1 U396 ( .I(\products[9][4] ), .ZN(n93) );
  INVD1 U397 ( .I(\products[10][4] ), .ZN(n87) );
  INVD1 U398 ( .I(\products[10][3] ), .ZN(n88) );
  INVD1 U399 ( .I(\products[8][4] ), .ZN(n98) );
  INVD1 U400 ( .I(\products[2][3] ), .ZN(n134) );
  INVD1 U401 ( .I(\products[8][3] ), .ZN(n99) );
  CKBD1 U402 ( .I(n293), .Z(n29) );
  INVD1 U403 ( .I(\products[15][1] ), .ZN(n61) );
  INVD1 U404 ( .I(\products[7][1] ), .ZN(n107) );
  INVD1 U405 ( .I(\products[14][1] ), .ZN(n67) );
  INVD1 U406 ( .I(\products[13][1] ), .ZN(n73) );
  INVD1 U407 ( .I(\products[6][1] ), .ZN(n113) );
  INVD1 U408 ( .I(\products[5][1] ), .ZN(n119) );
  INVD1 U409 ( .I(\products[12][1] ), .ZN(n79) );
  INVD1 U410 ( .I(\products[3][1] ), .ZN(n131) );
  INVD1 U411 ( .I(\products[4][1] ), .ZN(n125) );
  INVD1 U412 ( .I(\products[1][1] ), .ZN(n222) );
  INVD1 U413 ( .I(\products[2][1] ), .ZN(n216) );
  INVD1 U414 ( .I(\products[15][0] ), .ZN(n62) );
  INVD1 U415 ( .I(\products[14][0] ), .ZN(n68) );
  INVD1 U416 ( .I(\products[11][0] ), .ZN(n86) );
  INVD1 U417 ( .I(\products[7][0] ), .ZN(n108) );
  INVD1 U418 ( .I(\products[6][0] ), .ZN(n114) );
  INVD1 U419 ( .I(\products[9][0] ), .ZN(n97) );
  INVD1 U420 ( .I(\products[11][1] ), .ZN(n85) );
  INVD1 U421 ( .I(\products[9][1] ), .ZN(n96) );
  INVD1 U422 ( .I(\products[10][1] ), .ZN(n90) );
  INVD1 U423 ( .I(\products[8][1] ), .ZN(n101) );
  INVD1 U424 ( .I(\products[15][2] ), .ZN(n60) );
  INVD1 U425 ( .I(\products[14][2] ), .ZN(n66) );
  INVD1 U426 ( .I(\products[13][2] ), .ZN(n72) );
  INVD1 U427 ( .I(\products[7][2] ), .ZN(n106) );
  FA1D0 U428 ( .A(\shifted_products[6][6] ), .B(\shifted_products[7][6] ), 
        .CI(\add_11_root_add_199_I16/carry[6] ), .CO(
        \add_11_root_add_199_I16/carry[7] ), .S(N129) );
  OAI221D0 U429 ( .A1(n103), .A2(n31), .B1(n312), .B2(n108), .C(n305), .ZN(
        \shifted_products[7][6] ) );
  OAI221D0 U430 ( .A1(n5), .A2(n109), .B1(n312), .B2(n112), .C(n297), .ZN(
        \shifted_products[6][6] ) );
  FA1D0 U431 ( .A(\shifted_products[12][6] ), .B(\shifted_products[13][6] ), 
        .CI(\add_8_root_add_199_I16/carry[6] ), .CO(
        \add_8_root_add_199_I16/carry[7] ), .S(N207) );
  OAI222D0 U432 ( .A1(n286), .A2(n75), .B1(n284), .B2(n76), .C1(n315), .C2(n80), .ZN(\shifted_products[12][6] ) );
  OAI221D0 U433 ( .A1(n31), .A2(n69), .B1(n320), .B2(n74), .C(n257), .ZN(
        \shifted_products[13][6] ) );
  OAI222D0 U434 ( .A1(n226), .A2(n63), .B1(n235), .B2(n66), .C1(n312), .C2(n64), .ZN(\shifted_products[14][8] ) );
  OAI221D0 U435 ( .A1(n274), .A2(n57), .B1(n276), .B2(n62), .C(n273), .ZN(
        \shifted_products[15][8] ) );
  FA1D0 U436 ( .A(\shifted_products[12][8] ), .B(\shifted_products[13][8] ), 
        .CI(\add_8_root_add_199_I16/carry[8] ), .CO(
        \add_8_root_add_199_I16/carry[9] ), .S(N209) );
  OAI221D0 U437 ( .A1(n259), .A2(n69), .B1(n240), .B2(n74), .C(n258), .ZN(
        \shifted_products[13][8] ) );
  FA1D0 U438 ( .A(\products[0][2] ), .B(\shifted_products[1][2] ), .CI(
        \add_14_root_add_199_I16/carry[2] ), .CO(
        \add_14_root_add_199_I16/carry[3] ), .S(N56) );
  INVD1 U439 ( .I(\products[1][2] ), .ZN(n221) );
  INVD1 U440 ( .I(\products[11][2] ), .ZN(n84) );
  INVD1 U441 ( .I(\products[9][2] ), .ZN(n95) );
  INVD1 U442 ( .I(\products[3][2] ), .ZN(n130) );
  INVD1 U443 ( .I(\products[10][2] ), .ZN(n89) );
  INVD1 U444 ( .I(\products[2][2] ), .ZN(n135) );
  INVD1 U445 ( .I(\products[8][2] ), .ZN(n100) );
  INVD1 U446 ( .I(\products[13][0] ), .ZN(n74) );
  INVD1 U447 ( .I(\products[5][0] ), .ZN(n120) );
  INVD1 U448 ( .I(\products[12][0] ), .ZN(n80) );
  INVD1 U449 ( .I(\products[1][0] ), .ZN(n223) );
  INVD1 U450 ( .I(\products[4][0] ), .ZN(n126) );
  INVD1 U451 ( .I(\products[10][0] ), .ZN(n91) );
  INVD1 U452 ( .I(\products[3][0] ), .ZN(n132) );
  INVD1 U453 ( .I(\products[2][0] ), .ZN(n217) );
  INVD1 U454 ( .I(\products[8][0] ), .ZN(n102) );
  INR3D0 U455 ( .A1(input_bitwidth[2]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[1]), .ZN(n243) );
  INR3D0 U456 ( .A1(weight_bitwidth[0]), .B1(weight_bitwidth[1]), .B2(
        weight_bitwidth[2]), .ZN(n242) );
  INR3D0 U457 ( .A1(input_bitwidth[0]), .B1(input_bitwidth[1]), .B2(
        input_bitwidth[2]), .ZN(n246) );
  INR3D0 U458 ( .A1(input_bitwidth[1]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[2]), .ZN(n245) );
  INR3D0 U459 ( .A1(weight_bitwidth[1]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[2]), .ZN(n247) );
  INR3D0 U460 ( .A1(weight_bitwidth[2]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[1]), .ZN(n244) );
  TIEL U461 ( .ZN(n241) );
  AN2D0 U462 ( .A1(\shifted_products[2][0] ), .A2(\shifted_products[3][0] ), 
        .Z(\add_13_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U463 ( .A1(\shifted_products[3][0] ), .A2(\shifted_products[2][0] ), 
        .Z(N76) );
  AN2D0 U464 ( .A1(\products[0][0] ), .A2(\shifted_products[1][0] ), .Z(
        \add_14_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U465 ( .A1(\shifted_products[1][0] ), .A2(\products[0][0] ), .Z(N54) );
  AN2D0 U466 ( .A1(\shifted_products[12][0] ), .A2(\shifted_products[13][0] ), 
        .Z(\add_8_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U467 ( .A1(\shifted_products[13][0] ), .A2(
        \shifted_products[12][0] ), .Z(N201) );
  AN2D0 U468 ( .A1(\shifted_products[6][0] ), .A2(\shifted_products[7][0] ), 
        .Z(\add_11_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U469 ( .A1(\shifted_products[7][0] ), .A2(\shifted_products[6][0] ), 
        .Z(N123) );
  AN2D0 U470 ( .A1(\shifted_products[4][0] ), .A2(\shifted_products[5][0] ), 
        .Z(\add_12_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U471 ( .A1(\shifted_products[5][0] ), .A2(\shifted_products[4][0] ), 
        .Z(N99) );
  AN2D0 U472 ( .A1(\shifted_products[8][0] ), .A2(\shifted_products[9][0] ), 
        .Z(\add_10_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U473 ( .A1(\shifted_products[9][0] ), .A2(\shifted_products[8][0] ), 
        .Z(N148) );
  AN2D0 U474 ( .A1(\shifted_products[10][0] ), .A2(\shifted_products[11][0] ), 
        .Z(\add_9_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U475 ( .A1(\shifted_products[11][0] ), .A2(
        \shifted_products[10][0] ), .Z(N174) );
  XOR3D0 U476 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[13][11] ), .A3(\products[12][5] ), .Z(N212) );
  XOR3D0 U477 ( .A1(\shifted_products[13][12] ), .A2(n34), .A3(n75), .Z(N213)
         );
  XOR3D0 U478 ( .A1(\products[13][5] ), .A2(\products[12][5] ), .A3(n35), .Z(
        N214) );
  CKND0 U479 ( .I(\shifted_products[13][12] ), .ZN(n37) );
  XNR3D0 U480 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \shifted_products[11][13] ), .A3(n38), .ZN(N187) );
  XNR3D0 U481 ( .A1(n28), .A2(n39), .A3(n38), .ZN(N188) );
  XNR3D0 U482 ( .A1(\products[11][5] ), .A2(n38), .A3(n40), .ZN(N189) );
  OAI222D0 U483 ( .A1(n39), .A2(n38), .B1(n39), .B2(n28), .C1(n38), .C2(n28), 
        .ZN(n40) );
  CKND0 U484 ( .I(\products[10][5] ), .ZN(n38) );
  XOR3D0 U485 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[9][9] ), .A3(\products[8][5] ), .Z(N157) );
  XOR3D0 U486 ( .A1(\shifted_products[9][10] ), .A2(n41), .A3(n42), .Z(N158)
         );
  XOR3D0 U487 ( .A1(\products[9][5] ), .A2(\products[8][5] ), .A3(n43), .Z(
        N159) );
  OAI222D0 U488 ( .A1(n41), .A2(n42), .B1(n41), .B2(n45), .C1(n42), .C2(n45), 
        .ZN(n43) );
  CKND0 U489 ( .I(\shifted_products[9][10] ), .ZN(n45) );
  CKND0 U490 ( .I(\products[8][5] ), .ZN(n42) );
  XNR3D0 U491 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[7][11] ), .A3(n109), .ZN(N134) );
  XNR3D0 U492 ( .A1(n27), .A2(n46), .A3(n109), .ZN(N135) );
  XNR3D0 U493 ( .A1(\products[7][5] ), .A2(n109), .A3(n47), .ZN(N136) );
  XOR3D0 U494 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(
        \shifted_products[5][7] ), .A3(\products[4][5] ), .Z(N106) );
  XOR3D0 U495 ( .A1(\shifted_products[5][8] ), .A2(n48), .A3(n121), .Z(N107)
         );
  XOR3D0 U496 ( .A1(\products[5][5] ), .A2(\products[4][5] ), .A3(n49), .Z(
        N108) );
  CKND0 U497 ( .I(\shifted_products[5][8] ), .ZN(n51) );
  XNR3D0 U498 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .A3(n52), .ZN(N85) );
  XNR3D0 U499 ( .A1(n26), .A2(n53), .A3(n52), .ZN(N86) );
  XNR3D0 U500 ( .A1(\products[3][5] ), .A2(n52), .A3(n54), .ZN(N87) );
  CKND0 U501 ( .I(\products[2][5] ), .ZN(n52) );
  XNR3D0 U502 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[1][6] ), .A3(n55), .ZN(N60) );
  XNR3D0 U503 ( .A1(n218), .A2(n56), .A3(n55), .ZN(N61) );
  CKND0 U504 ( .I(\shifted_products[0][9] ), .ZN(n55) );
endmodule


module fusion_unit_1_DW01_add_0_DW01_add_5 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module fusion_unit_1 ( clk, nRST, input_bitwidth, weight_bitwidth, input_sign, 
        weight_sign, input_forward, weight, psum_in, psum, input_to_right );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  input [3:0] input_sign;
  input [3:0] weight_sign;
  input [31:0] input_forward;
  input [31:0] weight;
  input [31:0] psum_in;
  output [31:0] psum;
  output [31:0] input_to_right;
  input clk, nRST;
  wire   \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] , n2;
  wire   [31:0] shift_add_out;
  assign input_to_right[31] = input_forward[31];
  assign input_to_right[30] = input_forward[30];
  assign input_to_right[29] = input_forward[29];
  assign input_to_right[28] = input_forward[28];
  assign input_to_right[27] = input_forward[27];
  assign input_to_right[26] = input_forward[26];
  assign input_to_right[25] = input_forward[25];
  assign input_to_right[24] = input_forward[24];
  assign input_to_right[23] = input_forward[23];
  assign input_to_right[22] = input_forward[22];
  assign input_to_right[21] = input_forward[21];
  assign input_to_right[20] = input_forward[20];
  assign input_to_right[19] = input_forward[19];
  assign input_to_right[18] = input_forward[18];
  assign input_to_right[17] = input_forward[17];
  assign input_to_right[16] = input_forward[16];
  assign input_to_right[15] = input_forward[15];
  assign input_to_right[14] = input_forward[14];
  assign input_to_right[13] = input_forward[13];
  assign input_to_right[12] = input_forward[12];
  assign input_to_right[11] = input_forward[11];
  assign input_to_right[10] = input_forward[10];
  assign input_to_right[9] = input_forward[9];
  assign input_to_right[8] = input_forward[8];
  assign input_to_right[7] = input_forward[7];
  assign input_to_right[6] = input_forward[6];
  assign input_to_right[5] = input_forward[5];
  assign input_to_right[4] = input_forward[4];
  assign input_to_right[3] = input_forward[3];
  assign input_to_right[2] = input_forward[2];
  assign input_to_right[1] = input_forward[1];
  assign input_to_right[0] = input_forward[0];

  bit_brick_31 \genblk1[0].BB  ( .x(input_forward[1:0]), .y(weight[1:0]), .sx(
        input_sign[0]), .sy(weight_sign[0]), .product({\products[0][5] , 
        \products[0][4] , \products[0][3] , \products[0][2] , \products[0][1] , 
        \products[0][0] }) );
  bit_brick_30 \genblk1[1].BB  ( .x(input_forward[3:2]), .y(weight[3:2]), .sx(
        input_sign[0]), .sy(weight_sign[1]), .product({\products[1][5] , 
        \products[1][4] , \products[1][3] , \products[1][2] , \products[1][1] , 
        \products[1][0] }) );
  bit_brick_29 \genblk1[2].BB  ( .x(input_forward[5:4]), .y(weight[5:4]), .sx(
        input_sign[0]), .sy(weight_sign[2]), .product({\products[2][5] , 
        \products[2][4] , \products[2][3] , \products[2][2] , \products[2][1] , 
        \products[2][0] }) );
  bit_brick_28 \genblk1[3].BB  ( .x(input_forward[7:6]), .y(weight[7:6]), .sx(
        input_sign[0]), .sy(weight_sign[3]), .product({\products[3][5] , 
        \products[3][4] , \products[3][3] , \products[3][2] , \products[3][1] , 
        \products[3][0] }) );
  bit_brick_27 \genblk1[4].BB  ( .x(input_forward[9:8]), .y(weight[9:8]), .sx(
        input_sign[1]), .sy(weight_sign[0]), .product({\products[4][5] , 
        \products[4][4] , \products[4][3] , \products[4][2] , \products[4][1] , 
        \products[4][0] }) );
  bit_brick_26 \genblk1[5].BB  ( .x(input_forward[11:10]), .y(weight[11:10]), 
        .sx(input_sign[1]), .sy(weight_sign[1]), .product({\products[5][5] , 
        \products[5][4] , \products[5][3] , \products[5][2] , \products[5][1] , 
        \products[5][0] }) );
  bit_brick_25 \genblk1[6].BB  ( .x(input_forward[13:12]), .y(weight[13:12]), 
        .sx(input_sign[1]), .sy(weight_sign[2]), .product({\products[6][5] , 
        \products[6][4] , \products[6][3] , \products[6][2] , \products[6][1] , 
        \products[6][0] }) );
  bit_brick_24 \genblk1[7].BB  ( .x(input_forward[15:14]), .y(weight[15:14]), 
        .sx(input_sign[1]), .sy(weight_sign[3]), .product({\products[7][5] , 
        \products[7][4] , \products[7][3] , \products[7][2] , \products[7][1] , 
        \products[7][0] }) );
  bit_brick_23 \genblk1[8].BB  ( .x(input_forward[17:16]), .y(weight[17:16]), 
        .sx(input_sign[2]), .sy(weight_sign[0]), .product({\products[8][5] , 
        \products[8][4] , \products[8][3] , \products[8][2] , \products[8][1] , 
        \products[8][0] }) );
  bit_brick_22 \genblk1[9].BB  ( .x(input_forward[19:18]), .y(weight[19:18]), 
        .sx(input_sign[2]), .sy(weight_sign[1]), .product({\products[9][5] , 
        \products[9][4] , \products[9][3] , \products[9][2] , \products[9][1] , 
        \products[9][0] }) );
  bit_brick_21 \genblk1[10].BB  ( .x(input_forward[21:20]), .y(weight[21:20]), 
        .sx(input_sign[2]), .sy(weight_sign[2]), .product({\products[10][5] , 
        \products[10][4] , \products[10][3] , \products[10][2] , 
        \products[10][1] , \products[10][0] }) );
  bit_brick_20 \genblk1[11].BB  ( .x(input_forward[23:22]), .y(weight[23:22]), 
        .sx(input_sign[2]), .sy(weight_sign[3]), .product({\products[11][5] , 
        \products[11][4] , \products[11][3] , \products[11][2] , 
        \products[11][1] , \products[11][0] }) );
  bit_brick_19 \genblk1[12].BB  ( .x(input_forward[25:24]), .y(weight[25:24]), 
        .sx(input_sign[3]), .sy(weight_sign[0]), .product({\products[12][5] , 
        \products[12][4] , \products[12][3] , \products[12][2] , 
        \products[12][1] , \products[12][0] }) );
  bit_brick_18 \genblk1[13].BB  ( .x(input_forward[27:26]), .y(weight[27:26]), 
        .sx(input_sign[3]), .sy(weight_sign[1]), .product({\products[13][5] , 
        \products[13][4] , \products[13][3] , \products[13][2] , 
        \products[13][1] , \products[13][0] }) );
  bit_brick_17 \genblk1[14].BB  ( .x(input_forward[29:28]), .y(weight[29:28]), 
        .sx(input_sign[3]), .sy(weight_sign[2]), .product({\products[14][5] , 
        \products[14][4] , \products[14][3] , \products[14][2] , 
        \products[14][1] , \products[14][0] }) );
  bit_brick_16 \genblk1[15].BB  ( .x(input_forward[31:30]), .y(weight[31:30]), 
        .sx(input_sign[3]), .sy(weight_sign[3]), .product({\products[15][5] , 
        \products[15][4] , \products[15][3] , \products[15][2] , 
        \products[15][1] , \products[15][0] }) );
  shift_add_1 shift_add ( .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .products({\products[15][5] , \products[15][4] , 
        \products[15][3] , \products[15][2] , \products[15][1] , 
        \products[15][0] , \products[14][5] , \products[14][4] , 
        \products[14][3] , \products[14][2] , \products[14][1] , 
        \products[14][0] , \products[13][5] , \products[13][4] , 
        \products[13][3] , \products[13][2] , \products[13][1] , 
        \products[13][0] , \products[12][5] , \products[12][4] , 
        \products[12][3] , \products[12][2] , \products[12][1] , 
        \products[12][0] , \products[11][5] , \products[11][4] , 
        \products[11][3] , \products[11][2] , \products[11][1] , 
        \products[11][0] , \products[10][5] , \products[10][4] , 
        \products[10][3] , \products[10][2] , \products[10][1] , 
        \products[10][0] , \products[9][5] , \products[9][4] , 
        \products[9][3] , \products[9][2] , \products[9][1] , \products[9][0] , 
        \products[8][5] , \products[8][4] , \products[8][3] , \products[8][2] , 
        \products[8][1] , \products[8][0] , \products[7][5] , \products[7][4] , 
        \products[7][3] , \products[7][2] , \products[7][1] , \products[7][0] , 
        \products[6][5] , \products[6][4] , \products[6][3] , \products[6][2] , 
        \products[6][1] , \products[6][0] , \products[5][5] , \products[5][4] , 
        \products[5][3] , \products[5][2] , \products[5][1] , \products[5][0] , 
        \products[4][5] , \products[4][4] , \products[4][3] , \products[4][2] , 
        \products[4][1] , \products[4][0] , \products[3][5] , \products[3][4] , 
        \products[3][3] , \products[3][2] , \products[3][1] , \products[3][0] , 
        \products[2][5] , \products[2][4] , \products[2][3] , \products[2][2] , 
        \products[2][1] , \products[2][0] , \products[1][5] , \products[1][4] , 
        \products[1][3] , \products[1][2] , \products[1][1] , \products[1][0] , 
        \products[0][5] , \products[0][4] , \products[0][3] , \products[0][2] , 
        \products[0][1] , \products[0][0] }), .shift_add_out(shift_add_out) );
  fusion_unit_1_DW01_add_0_DW01_add_5 add_53 ( .A(shift_add_out), .B(psum_in), 
        .CI(n2), .SUM(psum) );
  TIEL U1 ( .ZN(n2) );
endmodule


module WBUF_ARRAY_SIZE4_DATA_W32_0 ( clk, nRST, WBUF_wr_en, WBUF_data_in, 
        WBUF_data_out );
  input [31:0] WBUF_data_in;
  output [31:0] WBUF_data_out;
  input clk, nRST, WBUF_wr_en;
  wire   n1, n2, n3, n4, n5, n6;

  EDFCNQD1 \WBUF_data_out_reg[31]  ( .D(WBUF_data_in[31]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[31]) );
  EDFCNQD1 \WBUF_data_out_reg[30]  ( .D(WBUF_data_in[30]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[30]) );
  EDFCNQD1 \WBUF_data_out_reg[29]  ( .D(WBUF_data_in[29]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[29]) );
  EDFCNQD1 \WBUF_data_out_reg[28]  ( .D(WBUF_data_in[28]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[28]) );
  EDFCNQD1 \WBUF_data_out_reg[27]  ( .D(WBUF_data_in[27]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[27]) );
  EDFCNQD1 \WBUF_data_out_reg[26]  ( .D(WBUF_data_in[26]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[26]) );
  EDFCNQD1 \WBUF_data_out_reg[25]  ( .D(WBUF_data_in[25]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[25]) );
  EDFCNQD1 \WBUF_data_out_reg[24]  ( .D(WBUF_data_in[24]), .E(n4), .CP(clk), 
        .CDN(n3), .Q(WBUF_data_out[24]) );
  EDFCNQD1 \WBUF_data_out_reg[23]  ( .D(WBUF_data_in[23]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[23]) );
  EDFCNQD1 \WBUF_data_out_reg[22]  ( .D(WBUF_data_in[22]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[22]) );
  EDFCNQD1 \WBUF_data_out_reg[21]  ( .D(WBUF_data_in[21]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[21]) );
  EDFCNQD1 \WBUF_data_out_reg[20]  ( .D(WBUF_data_in[20]), .E(n4), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[20]) );
  EDFCNQD1 \WBUF_data_out_reg[19]  ( .D(WBUF_data_in[19]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[19]) );
  EDFCNQD1 \WBUF_data_out_reg[18]  ( .D(WBUF_data_in[18]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[18]) );
  EDFCNQD1 \WBUF_data_out_reg[17]  ( .D(WBUF_data_in[17]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[17]) );
  EDFCNQD1 \WBUF_data_out_reg[16]  ( .D(WBUF_data_in[16]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[16]) );
  EDFCNQD1 \WBUF_data_out_reg[15]  ( .D(WBUF_data_in[15]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[15]) );
  EDFCNQD1 \WBUF_data_out_reg[14]  ( .D(WBUF_data_in[14]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[14]) );
  EDFCNQD1 \WBUF_data_out_reg[13]  ( .D(WBUF_data_in[13]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[13]) );
  EDFCNQD1 \WBUF_data_out_reg[12]  ( .D(WBUF_data_in[12]), .E(n5), .CP(clk), 
        .CDN(n2), .Q(WBUF_data_out[12]) );
  EDFCNQD1 \WBUF_data_out_reg[11]  ( .D(WBUF_data_in[11]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[11]) );
  EDFCNQD1 \WBUF_data_out_reg[10]  ( .D(WBUF_data_in[10]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[10]) );
  EDFCNQD1 \WBUF_data_out_reg[9]  ( .D(WBUF_data_in[9]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[9]) );
  EDFCNQD1 \WBUF_data_out_reg[8]  ( .D(WBUF_data_in[8]), .E(n5), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[8]) );
  EDFCNQD1 \WBUF_data_out_reg[7]  ( .D(WBUF_data_in[7]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[7]) );
  EDFCNQD1 \WBUF_data_out_reg[6]  ( .D(WBUF_data_in[6]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[6]) );
  EDFCNQD1 \WBUF_data_out_reg[5]  ( .D(WBUF_data_in[5]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[5]) );
  EDFCNQD1 \WBUF_data_out_reg[4]  ( .D(WBUF_data_in[4]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[4]) );
  EDFCNQD1 \WBUF_data_out_reg[3]  ( .D(WBUF_data_in[3]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[3]) );
  EDFCNQD1 \WBUF_data_out_reg[2]  ( .D(WBUF_data_in[2]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[2]) );
  EDFCNQD1 \WBUF_data_out_reg[1]  ( .D(WBUF_data_in[1]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[1]) );
  EDFCNQD1 \WBUF_data_out_reg[0]  ( .D(WBUF_data_in[0]), .E(n6), .CP(clk), 
        .CDN(n1), .Q(WBUF_data_out[0]) );
  CKBD1 U2 ( .I(WBUF_wr_en), .Z(n5) );
  CKBD1 U3 ( .I(WBUF_wr_en), .Z(n4) );
  CKBD1 U4 ( .I(nRST), .Z(n1) );
  CKBD1 U5 ( .I(nRST), .Z(n2) );
  CKBD1 U6 ( .I(nRST), .Z(n3) );
  CKBD1 U7 ( .I(WBUF_wr_en), .Z(n6) );
endmodule


module w_mux_0 ( clk, nRST, input_bitwidth, rd_en, data_in, data_out );
  input [2:0] input_bitwidth;
  input [31:0] data_in;
  output [31:0] data_out;
  input clk, nRST, rd_en;
  wire   N40, N41, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14,
         n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28,
         n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n105, n106, n107,
         n108, n109, n110, n111, n112, n113, n114, n115, n116, n117, n118,
         n119, n120, n121, n122, n123, n124, n125, n126, n127, n128, n129,
         n130, n131, n132, n133, n134, n135, n136, n137, n138, n139, n140,
         n141, n142, n143, n144, n145, n146, n147, n148, n149, n150, n151,
         n152, n153, n154, n155, n156, n157, n158, n159, n160, n161, n162,
         n163, n164, n165, n166, n167, n168, n169, n170, n171, n172, n173,
         n174, n175, n176, n177, n178;
  wire   [1:0] rd_ptr;
  wire   [31:0] next_data_out;

  EDFCNQD1 \rd_ptr_reg[0]  ( .D(N40), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[0]) );
  EDFCNQD1 \rd_ptr_reg[1]  ( .D(N41), .E(rd_en), .CP(clk), .CDN(n3), .Q(
        rd_ptr[1]) );
  DFCNQD1 \data_out_reg[31]  ( .D(next_data_out[31]), .CP(clk), .CDN(n1), .Q(
        data_out[31]) );
  DFCNQD1 \data_out_reg[30]  ( .D(next_data_out[30]), .CP(clk), .CDN(n3), .Q(
        data_out[30]) );
  DFCNQD1 \data_out_reg[29]  ( .D(next_data_out[29]), .CP(clk), .CDN(n3), .Q(
        data_out[29]) );
  DFCNQD1 \data_out_reg[28]  ( .D(next_data_out[28]), .CP(clk), .CDN(n3), .Q(
        data_out[28]) );
  DFCNQD1 \data_out_reg[27]  ( .D(next_data_out[27]), .CP(clk), .CDN(n3), .Q(
        data_out[27]) );
  DFCNQD1 \data_out_reg[26]  ( .D(next_data_out[26]), .CP(clk), .CDN(n3), .Q(
        data_out[26]) );
  DFCNQD1 \data_out_reg[25]  ( .D(next_data_out[25]), .CP(clk), .CDN(n2), .Q(
        data_out[25]) );
  DFCNQD1 \data_out_reg[24]  ( .D(next_data_out[24]), .CP(clk), .CDN(n2), .Q(
        data_out[24]) );
  DFCNQD1 \data_out_reg[23]  ( .D(next_data_out[23]), .CP(clk), .CDN(n3), .Q(
        data_out[23]) );
  DFCNQD1 \data_out_reg[22]  ( .D(next_data_out[22]), .CP(clk), .CDN(n2), .Q(
        data_out[22]) );
  DFCNQD1 \data_out_reg[21]  ( .D(next_data_out[21]), .CP(clk), .CDN(n2), .Q(
        data_out[21]) );
  DFCNQD1 \data_out_reg[20]  ( .D(next_data_out[20]), .CP(clk), .CDN(n2), .Q(
        data_out[20]) );
  DFCNQD1 \data_out_reg[19]  ( .D(next_data_out[19]), .CP(clk), .CDN(n2), .Q(
        data_out[19]) );
  DFCNQD1 \data_out_reg[18]  ( .D(next_data_out[18]), .CP(clk), .CDN(n2), .Q(
        data_out[18]) );
  DFCNQD1 \data_out_reg[17]  ( .D(next_data_out[17]), .CP(clk), .CDN(n2), .Q(
        data_out[17]) );
  DFCNQD1 \data_out_reg[16]  ( .D(next_data_out[16]), .CP(clk), .CDN(n2), .Q(
        data_out[16]) );
  DFCNQD1 \data_out_reg[15]  ( .D(next_data_out[15]), .CP(clk), .CDN(n2), .Q(
        data_out[15]) );
  DFCNQD1 \data_out_reg[14]  ( .D(next_data_out[14]), .CP(clk), .CDN(n2), .Q(
        data_out[14]) );
  DFCNQD1 \data_out_reg[13]  ( .D(next_data_out[13]), .CP(clk), .CDN(n2), .Q(
        data_out[13]) );
  DFCNQD1 \data_out_reg[12]  ( .D(next_data_out[12]), .CP(clk), .CDN(n1), .Q(
        data_out[12]) );
  DFCNQD1 \data_out_reg[11]  ( .D(next_data_out[11]), .CP(clk), .CDN(n1), .Q(
        data_out[11]) );
  DFCNQD1 \data_out_reg[10]  ( .D(next_data_out[10]), .CP(clk), .CDN(n1), .Q(
        data_out[10]) );
  DFCNQD1 \data_out_reg[9]  ( .D(next_data_out[9]), .CP(clk), .CDN(n1), .Q(
        data_out[9]) );
  DFCNQD1 \data_out_reg[8]  ( .D(next_data_out[8]), .CP(clk), .CDN(n1), .Q(
        data_out[8]) );
  DFCNQD1 \data_out_reg[7]  ( .D(next_data_out[7]), .CP(clk), .CDN(n1), .Q(
        data_out[7]) );
  DFCNQD1 \data_out_reg[6]  ( .D(next_data_out[6]), .CP(clk), .CDN(n1), .Q(
        data_out[6]) );
  DFCNQD1 \data_out_reg[5]  ( .D(next_data_out[5]), .CP(clk), .CDN(n1), .Q(
        data_out[5]) );
  DFCNQD1 \data_out_reg[4]  ( .D(next_data_out[4]), .CP(clk), .CDN(n1), .Q(
        data_out[4]) );
  DFCNQD1 \data_out_reg[3]  ( .D(next_data_out[3]), .CP(clk), .CDN(n1), .Q(
        data_out[3]) );
  DFCNQD1 \data_out_reg[2]  ( .D(next_data_out[2]), .CP(clk), .CDN(n1), .Q(
        data_out[2]) );
  DFCNQD1 \data_out_reg[1]  ( .D(next_data_out[1]), .CP(clk), .CDN(n1), .Q(
        data_out[1]) );
  DFCNQD1 \data_out_reg[0]  ( .D(next_data_out[0]), .CP(clk), .CDN(n2), .Q(
        data_out[0]) );
  OA21D1 U20 ( .A1(n161), .A2(n160), .B(n159), .Z(n170) );
  OA21D1 U23 ( .A1(n156), .A2(n160), .B(n155), .Z(n169) );
  OA21D1 U26 ( .A1(n154), .A2(n160), .B(n153), .Z(n167) );
  OA21D1 U29 ( .A1(n152), .A2(n160), .B(n151), .Z(n166) );
  OA21D1 U32 ( .A1(n150), .A2(n160), .B(n149), .Z(n177) );
  OA21D1 U35 ( .A1(n148), .A2(n160), .B(n147), .Z(n165) );
  OA21D1 U38 ( .A1(n146), .A2(n160), .B(n145), .Z(n164) );
  OA21D1 U41 ( .A1(n144), .A2(n160), .B(n149), .Z(n163) );
  OA21D1 U47 ( .A1(n139), .A2(n160), .B(n138), .Z(n162) );
  OA21D1 U50 ( .A1(n137), .A2(n160), .B(n159), .Z(n175) );
  OA21D1 U56 ( .A1(n134), .A2(n160), .B(n155), .Z(n174) );
  OA21D1 U62 ( .A1(n131), .A2(n160), .B(n153), .Z(n173) );
  OA21D1 U68 ( .A1(n128), .A2(n160), .B(n151), .Z(n172) );
  OA21D1 U74 ( .A1(n125), .A2(n160), .B(n147), .Z(n171) );
  OA21D1 U80 ( .A1(n122), .A2(n160), .B(n145), .Z(n168) );
  OA21D1 U86 ( .A1(n119), .A2(n160), .B(n138), .Z(n176) );
  AN2XD1 U90 ( .A1(rd_ptr[1]), .A2(rd_ptr[0]), .Z(n140) );
  AN4XD1 U91 ( .A1(input_bitwidth[2]), .A2(rd_en), .A3(n5), .A4(n7), .Z(n143)
         );
  MAOI22D1 U97 ( .A1(n115), .A2(n12), .B1(n115), .B2(n114), .ZN(n113) );
  NR2D1 U3 ( .A1(n13), .A2(rd_ptr[1]), .ZN(n158) );
  NR2D1 U4 ( .A1(rd_ptr[0]), .A2(rd_ptr[1]), .ZN(n157) );
  AOI21D1 U5 ( .A1(n12), .A2(n116), .B(n113), .ZN(N41) );
  OAI21D1 U6 ( .A1(n111), .A2(n10), .B(n177), .ZN(next_data_out[1]) );
  OAI21D1 U7 ( .A1(n37), .A2(n10), .B(n177), .ZN(next_data_out[9]) );
  OAI21D1 U8 ( .A1(n8), .A2(n112), .B(n176), .ZN(next_data_out[0]) );
  OAI21D1 U9 ( .A1(n9), .A2(n110), .B(n168), .ZN(next_data_out[2]) );
  OAI21D1 U10 ( .A1(n9), .A2(n109), .B(n171), .ZN(next_data_out[3]) );
  OAI21D1 U11 ( .A1(n9), .A2(n108), .B(n172), .ZN(next_data_out[4]) );
  OAI21D1 U12 ( .A1(n8), .A2(n36), .B(n168), .ZN(next_data_out[10]) );
  OAI21D1 U13 ( .A1(n8), .A2(n35), .B(n171), .ZN(next_data_out[11]) );
  OAI21D1 U14 ( .A1(n8), .A2(n34), .B(n172), .ZN(next_data_out[12]) );
  OAI21D1 U15 ( .A1(n9), .A2(n33), .B(n173), .ZN(next_data_out[13]) );
  OAI21D1 U16 ( .A1(n8), .A2(n32), .B(n174), .ZN(next_data_out[14]) );
  OAI21D1 U17 ( .A1(n8), .A2(n31), .B(n175), .ZN(next_data_out[15]) );
  OAI21D1 U18 ( .A1(n10), .A2(n107), .B(n173), .ZN(next_data_out[5]) );
  OAI21D1 U19 ( .A1(n10), .A2(n106), .B(n174), .ZN(next_data_out[6]) );
  OAI21D1 U21 ( .A1(n10), .A2(n105), .B(n175), .ZN(next_data_out[7]) );
  OAI21D1 U22 ( .A1(n10), .A2(n38), .B(n176), .ZN(next_data_out[8]) );
  CKBD1 U24 ( .I(n178), .Z(n8) );
  CKBD1 U25 ( .I(n178), .Z(n9) );
  CKBD1 U27 ( .I(n178), .Z(n10) );
  INVD1 U28 ( .I(n6), .ZN(n7) );
  INVD1 U30 ( .I(n4), .ZN(n5) );
  INVD1 U31 ( .I(n116), .ZN(n11) );
  INVD1 U33 ( .I(n157), .ZN(n14) );
  INVD1 U34 ( .I(n158), .ZN(n12) );
  ND2D1 U36 ( .A1(n114), .A2(rd_en), .ZN(n178) );
  NR3D0 U37 ( .A1(n4), .A2(input_bitwidth[2]), .A3(n7), .ZN(n115) );
  NR3D0 U39 ( .A1(n6), .A2(input_bitwidth[2]), .A3(n5), .ZN(n114) );
  ND2D1 U40 ( .A1(rd_en), .A2(n115), .ZN(n160) );
  ND2D1 U42 ( .A1(n143), .A2(n118), .ZN(n138) );
  OAI221D0 U43 ( .A1(n12), .A2(n38), .B1(n14), .B2(n112), .C(n117), .ZN(n118)
         );
  AOI22D1 U44 ( .A1(data_in[24]), .A2(n140), .B1(data_in[16]), .B2(n11), .ZN(
        n117) );
  ND2D1 U45 ( .A1(n143), .A2(n142), .ZN(n149) );
  OAI221D0 U46 ( .A1(n12), .A2(n37), .B1(n14), .B2(n111), .C(n141), .ZN(n142)
         );
  AOI22D1 U48 ( .A1(data_in[25]), .A2(n140), .B1(n11), .B2(data_in[17]), .ZN(
        n141) );
  ND2D1 U49 ( .A1(n143), .A2(n121), .ZN(n145) );
  OAI221D0 U51 ( .A1(n12), .A2(n36), .B1(n14), .B2(n110), .C(n120), .ZN(n121)
         );
  AOI22D1 U52 ( .A1(data_in[26]), .A2(n140), .B1(data_in[18]), .B2(n11), .ZN(
        n120) );
  ND2D1 U53 ( .A1(n143), .A2(n124), .ZN(n147) );
  OAI221D0 U54 ( .A1(n12), .A2(n35), .B1(n14), .B2(n109), .C(n123), .ZN(n124)
         );
  AOI22D1 U55 ( .A1(data_in[27]), .A2(n140), .B1(data_in[19]), .B2(n11), .ZN(
        n123) );
  ND2D1 U57 ( .A1(n143), .A2(n127), .ZN(n151) );
  OAI221D0 U58 ( .A1(n12), .A2(n34), .B1(n14), .B2(n108), .C(n126), .ZN(n127)
         );
  AOI22D1 U59 ( .A1(data_in[28]), .A2(n140), .B1(data_in[20]), .B2(n11), .ZN(
        n126) );
  ND2D1 U60 ( .A1(n143), .A2(n130), .ZN(n153) );
  OAI221D0 U61 ( .A1(n12), .A2(n33), .B1(n14), .B2(n107), .C(n129), .ZN(n130)
         );
  AOI22D1 U63 ( .A1(data_in[29]), .A2(n140), .B1(data_in[21]), .B2(n11), .ZN(
        n129) );
  ND2D1 U64 ( .A1(n143), .A2(n133), .ZN(n155) );
  OAI221D0 U65 ( .A1(n12), .A2(n32), .B1(n14), .B2(n106), .C(n132), .ZN(n133)
         );
  AOI22D1 U66 ( .A1(data_in[30]), .A2(n140), .B1(data_in[22]), .B2(n11), .ZN(
        n132) );
  ND2D1 U67 ( .A1(n143), .A2(n136), .ZN(n159) );
  OAI221D0 U69 ( .A1(n12), .A2(n31), .B1(n14), .B2(n105), .C(n135), .ZN(n136)
         );
  AOI22D1 U70 ( .A1(data_in[31]), .A2(n140), .B1(data_in[23]), .B2(n11), .ZN(
        n135) );
  AOI22D1 U71 ( .A1(data_in[16]), .A2(n158), .B1(data_in[0]), .B2(n157), .ZN(
        n119) );
  AOI22D1 U72 ( .A1(data_in[17]), .A2(n158), .B1(data_in[1]), .B2(n157), .ZN(
        n150) );
  AOI22D1 U73 ( .A1(data_in[18]), .A2(n158), .B1(data_in[2]), .B2(n157), .ZN(
        n122) );
  AOI22D1 U75 ( .A1(data_in[19]), .A2(n158), .B1(data_in[3]), .B2(n157), .ZN(
        n125) );
  AOI22D1 U76 ( .A1(data_in[20]), .A2(n158), .B1(data_in[4]), .B2(n157), .ZN(
        n128) );
  AOI22D1 U77 ( .A1(data_in[21]), .A2(n158), .B1(data_in[5]), .B2(n157), .ZN(
        n131) );
  AOI22D1 U78 ( .A1(data_in[22]), .A2(n158), .B1(data_in[6]), .B2(n157), .ZN(
        n134) );
  AOI22D1 U79 ( .A1(data_in[23]), .A2(n158), .B1(data_in[7]), .B2(n157), .ZN(
        n137) );
  AOI22D1 U81 ( .A1(data_in[24]), .A2(n158), .B1(data_in[8]), .B2(n157), .ZN(
        n139) );
  AOI22D1 U82 ( .A1(data_in[25]), .A2(n158), .B1(data_in[9]), .B2(n157), .ZN(
        n144) );
  AOI22D1 U83 ( .A1(data_in[26]), .A2(n158), .B1(data_in[10]), .B2(n157), .ZN(
        n146) );
  AOI22D1 U84 ( .A1(data_in[27]), .A2(n158), .B1(data_in[11]), .B2(n157), .ZN(
        n148) );
  AOI22D1 U85 ( .A1(data_in[28]), .A2(n158), .B1(data_in[12]), .B2(n157), .ZN(
        n152) );
  AOI22D1 U87 ( .A1(data_in[29]), .A2(n158), .B1(data_in[13]), .B2(n157), .ZN(
        n154) );
  AOI22D1 U88 ( .A1(data_in[30]), .A2(n158), .B1(data_in[14]), .B2(n157), .ZN(
        n156) );
  AOI22D1 U89 ( .A1(data_in[31]), .A2(n158), .B1(data_in[15]), .B2(n157), .ZN(
        n161) );
  NR2D1 U92 ( .A1(rd_ptr[0]), .A2(n114), .ZN(N40) );
  OAI21D1 U93 ( .A1(n29), .A2(n10), .B(n163), .ZN(next_data_out[17]) );
  INVD1 U94 ( .I(data_in[17]), .ZN(n29) );
  OAI21D1 U95 ( .A1(n8), .A2(n30), .B(n162), .ZN(next_data_out[16]) );
  INVD1 U96 ( .I(data_in[16]), .ZN(n30) );
  OAI21D1 U98 ( .A1(n8), .A2(n28), .B(n164), .ZN(next_data_out[18]) );
  INVD1 U99 ( .I(data_in[18]), .ZN(n28) );
  OAI21D1 U100 ( .A1(n8), .A2(n27), .B(n165), .ZN(next_data_out[19]) );
  INVD1 U101 ( .I(data_in[19]), .ZN(n27) );
  OAI21D1 U102 ( .A1(n8), .A2(n26), .B(n166), .ZN(next_data_out[20]) );
  INVD1 U103 ( .I(data_in[20]), .ZN(n26) );
  OAI21D1 U104 ( .A1(n8), .A2(n25), .B(n167), .ZN(next_data_out[21]) );
  INVD1 U105 ( .I(data_in[21]), .ZN(n25) );
  OAI21D1 U106 ( .A1(n8), .A2(n24), .B(n169), .ZN(next_data_out[22]) );
  INVD1 U107 ( .I(data_in[22]), .ZN(n24) );
  OAI21D1 U108 ( .A1(n9), .A2(n23), .B(n170), .ZN(next_data_out[23]) );
  INVD1 U109 ( .I(data_in[23]), .ZN(n23) );
  OAI21D1 U110 ( .A1(n9), .A2(n22), .B(n162), .ZN(next_data_out[24]) );
  INVD1 U111 ( .I(data_in[24]), .ZN(n22) );
  OAI21D1 U112 ( .A1(n9), .A2(n20), .B(n164), .ZN(next_data_out[26]) );
  INVD1 U113 ( .I(data_in[26]), .ZN(n20) );
  OAI21D1 U114 ( .A1(n9), .A2(n19), .B(n165), .ZN(next_data_out[27]) );
  INVD1 U115 ( .I(data_in[27]), .ZN(n19) );
  OAI21D1 U116 ( .A1(n9), .A2(n18), .B(n166), .ZN(next_data_out[28]) );
  INVD1 U117 ( .I(data_in[28]), .ZN(n18) );
  OAI21D1 U118 ( .A1(n9), .A2(n17), .B(n167), .ZN(next_data_out[29]) );
  INVD1 U119 ( .I(data_in[29]), .ZN(n17) );
  OAI21D1 U120 ( .A1(n9), .A2(n16), .B(n169), .ZN(next_data_out[30]) );
  INVD1 U121 ( .I(data_in[30]), .ZN(n16) );
  OAI21D1 U122 ( .A1(n9), .A2(n15), .B(n170), .ZN(next_data_out[31]) );
  INVD1 U123 ( .I(data_in[31]), .ZN(n15) );
  OAI21D1 U124 ( .A1(n21), .A2(n10), .B(n163), .ZN(next_data_out[25]) );
  INVD1 U125 ( .I(data_in[25]), .ZN(n21) );
  CKBD1 U126 ( .I(input_bitwidth[0]), .Z(n4) );
  CKBD1 U127 ( .I(input_bitwidth[1]), .Z(n6) );
  ND2D1 U128 ( .A1(rd_ptr[1]), .A2(n13), .ZN(n116) );
  INVD1 U129 ( .I(rd_ptr[0]), .ZN(n13) );
  INVD1 U130 ( .I(data_in[1]), .ZN(n111) );
  INVD1 U131 ( .I(data_in[9]), .ZN(n37) );
  INVD1 U132 ( .I(data_in[0]), .ZN(n112) );
  INVD1 U133 ( .I(data_in[2]), .ZN(n110) );
  INVD1 U134 ( .I(data_in[3]), .ZN(n109) );
  INVD1 U135 ( .I(data_in[4]), .ZN(n108) );
  INVD1 U136 ( .I(data_in[5]), .ZN(n107) );
  INVD1 U137 ( .I(data_in[6]), .ZN(n106) );
  INVD1 U138 ( .I(data_in[7]), .ZN(n105) );
  INVD1 U139 ( .I(data_in[8]), .ZN(n38) );
  INVD1 U140 ( .I(data_in[10]), .ZN(n36) );
  INVD1 U141 ( .I(data_in[11]), .ZN(n35) );
  INVD1 U142 ( .I(data_in[12]), .ZN(n34) );
  INVD1 U143 ( .I(data_in[13]), .ZN(n33) );
  INVD1 U144 ( .I(data_in[14]), .ZN(n32) );
  INVD1 U145 ( .I(data_in[15]), .ZN(n31) );
  CKBD1 U146 ( .I(nRST), .Z(n2) );
  CKBD1 U147 ( .I(nRST), .Z(n1) );
  CKBD1 U148 ( .I(nRST), .Z(n3) );
endmodule


module bit_brick_15 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_14 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_13 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_12 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_11 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_10 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_9 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_8 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_7 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_6 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_5 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_4 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INVD1 U3 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U4 ( .I(x[1]), .ZN(n3) );
  INVD1 U5 ( .I(y[1]), .ZN(n6) );
  INVD1 U6 ( .I(x[0]), .ZN(n4) );
  INVD1 U7 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U8 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U9 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U10 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U11 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U12 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  AN2D0 U13 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INR2D0 U14 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKND2D0 U15 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U16 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  AN2D0 U17 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_3 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_2 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_1 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module bit_brick_0 ( x, y, sx, sy, product );
  input [1:0] x;
  input [1:0] y;
  output [5:0] product;
  input sx, sy;
  wire   \signed_x[2] , \signed_y[2] , \mult_14/n16 , \mult_14/n15 ,
         \mult_14/n14 , \mult_14/n13 , \mult_14/n11 , \mult_14/n9 ,
         \mult_14/n8 , \mult_14/n7 , \mult_14/n6 , \mult_14/n5 , \mult_14/n4 ,
         \mult_14/n3 , \mult_14/n2 , \mult_14/n1 , n1, n2, n3, n4, n5, n6;

  AN2XD1 U1 ( .A1(y[1]), .A2(sy), .Z(\signed_y[2] ) );
  AN2XD1 U2 ( .A1(x[1]), .A2(sx), .Z(\signed_x[2] ) );
  HA1D0 \mult_14/U8  ( .A(\mult_14/n15 ), .B(\mult_14/n13 ), .CO(\mult_14/n7 ), 
        .S(\mult_14/n8 ) );
  HA1D0 \mult_14/U5  ( .A(\mult_14/n16 ), .B(\mult_14/n14 ), .CO(\mult_14/n4 ), 
        .S(product[1]) );
  FA1D0 \mult_14/U4  ( .A(\mult_14/n4 ), .B(\mult_14/n11 ), .CI(\mult_14/n8 ), 
        .CO(\mult_14/n3 ), .S(product[2]) );
  FA1D0 \mult_14/U3  ( .A(\mult_14/n6 ), .B(\mult_14/n7 ), .CI(\mult_14/n3 ), 
        .CO(\mult_14/n2 ), .S(product[3]) );
  FA1D0 \mult_14/U2  ( .A(\mult_14/n5 ), .B(\mult_14/n9 ), .CI(\mult_14/n2 ), 
        .CO(\mult_14/n1 ), .S(product[4]) );
  INR2XD0 U3 ( .A1(\signed_y[2] ), .B1(n3), .ZN(n2) );
  CKAN2D0 U4 ( .A1(\signed_x[2] ), .A2(\signed_y[2] ), .Z(\mult_14/n9 ) );
  AN2XD1 U5 ( .A1(\signed_x[2] ), .A2(y[1]), .Z(n1) );
  INVD1 U6 ( .I(\mult_14/n1 ), .ZN(product[5]) );
  INVD1 U7 ( .I(x[1]), .ZN(n3) );
  INVD1 U8 ( .I(y[1]), .ZN(n6) );
  INVD1 U9 ( .I(x[0]), .ZN(n4) );
  INVD1 U10 ( .I(y[0]), .ZN(n5) );
  CKND2D0 U11 ( .A1(\signed_x[2] ), .A2(y[0]), .ZN(\mult_14/n11 ) );
  NR2D0 U12 ( .A1(n3), .A2(n6), .ZN(\mult_14/n13 ) );
  NR2D0 U13 ( .A1(n5), .A2(n3), .ZN(\mult_14/n14 ) );
  CKND2D0 U14 ( .A1(\signed_y[2] ), .A2(x[0]), .ZN(\mult_14/n15 ) );
  NR2D0 U15 ( .A1(n4), .A2(n6), .ZN(\mult_14/n16 ) );
  CKND2D0 U16 ( .A1(n1), .A2(n2), .ZN(\mult_14/n5 ) );
  XNR2D0 U17 ( .A1(n2), .A2(n1), .ZN(\mult_14/n6 ) );
  NR2D0 U18 ( .A1(n4), .A2(n5), .ZN(product[0]) );
endmodule


module shift_add_0_DW01_add_14_DW01_add_229 ( A, B, CI, SUM, CO );
  input [28:0] A;
  input [28:0] B;
  output [28:0] SUM;
  input CI;
  output CO;
  wire   n1, \SUM[18] , n3, n4, n5, n6, n7;
  wire   [28:1] carry;
  assign SUM[27] = \SUM[18] ;
  assign SUM[28] = \SUM[18] ;
  assign SUM[26] = \SUM[18] ;
  assign SUM[25] = \SUM[18] ;
  assign SUM[24] = \SUM[18] ;
  assign SUM[23] = \SUM[18] ;
  assign SUM[22] = \SUM[18] ;
  assign SUM[21] = \SUM[18] ;
  assign SUM[20] = \SUM[18] ;
  assign SUM[19] = \SUM[18] ;
  assign SUM[18] = \SUM[18] ;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D0 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  AOI222D1 U3 ( .A1(carry[15]), .A2(A[27]), .B1(carry[15]), .B2(B[15]), .C1(
        B[15]), .C2(A[27]), .ZN(n5) );
  XNR3D4 U4 ( .A1(B[27]), .A2(n7), .A3(n3), .ZN(\SUM[18] ) );
  AO222D1 U5 ( .A1(n4), .A2(A[27]), .B1(n4), .B2(B[27]), .C1(A[27]), .C2(B[27]), .Z(n3) );
  CKND0 U6 ( .I(A[27]), .ZN(n7) );
  CKND0 U7 ( .I(B[16]), .ZN(n6) );
  OAI222D0 U8 ( .A1(n5), .A2(n7), .B1(n5), .B2(n6), .C1(n7), .C2(n6), .ZN(n4)
         );
  XNR3D0 U9 ( .A1(B[27]), .A2(n7), .A3(n4), .ZN(SUM[17]) );
  XNR3D0 U10 ( .A1(n6), .A2(n5), .A3(n7), .ZN(SUM[16]) );
  XNR3D0 U11 ( .A1(carry[15]), .A2(B[15]), .A3(n7), .ZN(SUM[15]) );
endmodule


module shift_add_0_DW01_add_6_DW01_add_221 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_0_DW01_add_5_DW01_add_220 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_0_DW01_add_4_DW01_add_219 ( A, B, CI, SUM, CO );
  input [30:0] A;
  input [30:0] B;
  output [30:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [30:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  XOR3D1 U1_30 ( .A1(A[30]), .A2(B[30]), .A3(carry[30]), .Z(SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_0_DW01_add_3_DW01_add_218 ( A, B, CI, SUM, CO );
  input [29:0] A;
  input [29:0] B;
  output [29:0] SUM;
  input CI;
  output CO;
  wire   n1, n2, n3;
  wire   [29:1] carry;
  assign SUM[29] = SUM[23];
  assign SUM[28] = SUM[23];
  assign SUM[27] = SUM[23];
  assign SUM[26] = SUM[23];
  assign SUM[25] = SUM[23];
  assign SUM[24] = SUM[23];

  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D2 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D1 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D2 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  XNR3D2 U1 ( .A1(B[22]), .A2(A[21]), .A3(n2), .ZN(SUM[23]) );
  AN2XD1 U2 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  AOI222D1 U3 ( .A1(n3), .A2(A[21]), .B1(n3), .B2(B[22]), .C1(A[21]), .C2(
        B[22]), .ZN(n2) );
  CKXOR2D1 U4 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
  XOR3D0 U5 ( .A1(carry[21]), .A2(B[21]), .A3(A[21]), .Z(SUM[21]) );
  AO222D0 U6 ( .A1(carry[21]), .A2(A[21]), .B1(B[21]), .B2(carry[21]), .C1(
        B[21]), .C2(A[21]), .Z(n3) );
  XOR3D0 U7 ( .A1(B[22]), .A2(A[21]), .A3(n3), .Z(SUM[22]) );
endmodule


module shift_add_0_DW01_add_2_DW01_add_217 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_0_DW01_add_1_DW01_add_216 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  XOR3D0 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D1 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D1 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_0_DW01_add_0_DW01_add_215 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module shift_add_0 ( input_bitwidth, weight_bitwidth, .products({
        \products[15][5] , \products[15][4] , \products[15][3] , 
        \products[15][2] , \products[15][1] , \products[15][0] , 
        \products[14][5] , \products[14][4] , \products[14][3] , 
        \products[14][2] , \products[14][1] , \products[14][0] , 
        \products[13][5] , \products[13][4] , \products[13][3] , 
        \products[13][2] , \products[13][1] , \products[13][0] , 
        \products[12][5] , \products[12][4] , \products[12][3] , 
        \products[12][2] , \products[12][1] , \products[12][0] , 
        \products[11][5] , \products[11][4] , \products[11][3] , 
        \products[11][2] , \products[11][1] , \products[11][0] , 
        \products[10][5] , \products[10][4] , \products[10][3] , 
        \products[10][2] , \products[10][1] , \products[10][0] , 
        \products[9][5] , \products[9][4] , \products[9][3] , \products[9][2] , 
        \products[9][1] , \products[9][0] , \products[8][5] , \products[8][4] , 
        \products[8][3] , \products[8][2] , \products[8][1] , \products[8][0] , 
        \products[7][5] , \products[7][4] , \products[7][3] , \products[7][2] , 
        \products[7][1] , \products[7][0] , \products[6][5] , \products[6][4] , 
        \products[6][3] , \products[6][2] , \products[6][1] , \products[6][0] , 
        \products[5][5] , \products[5][4] , \products[5][3] , \products[5][2] , 
        \products[5][1] , \products[5][0] , \products[4][5] , \products[4][4] , 
        \products[4][3] , \products[4][2] , \products[4][1] , \products[4][0] , 
        \products[3][5] , \products[3][4] , \products[3][3] , \products[3][2] , 
        \products[3][1] , \products[3][0] , \products[2][5] , \products[2][4] , 
        \products[2][3] , \products[2][2] , \products[2][1] , \products[2][0] , 
        \products[1][5] , \products[1][4] , \products[1][3] , \products[1][2] , 
        \products[1][1] , \products[1][0] , \products[0][5] , \products[0][4] , 
        \products[0][3] , \products[0][2] , \products[0][1] , \products[0][0] 
        }), shift_add_out );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  output [31:0] shift_add_out;
  input \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] ;
  wire   \shifted_products[15][16] , \shifted_products[15][15] ,
         \shifted_products[15][14] , \shifted_products[15][13] ,
         \shifted_products[15][12] , \shifted_products[15][11] ,
         \shifted_products[15][10] , \shifted_products[15][9] ,
         \shifted_products[15][8] , \shifted_products[15][7] ,
         \shifted_products[15][6] , \shifted_products[15][5] ,
         \shifted_products[15][4] , \shifted_products[15][3] ,
         \shifted_products[15][2] , \shifted_products[15][1] ,
         \shifted_products[15][0] , \shifted_products[14][14] ,
         \shifted_products[14][13] , \shifted_products[14][12] ,
         \shifted_products[14][11] , \shifted_products[14][10] ,
         \shifted_products[14][9] , \shifted_products[14][8] ,
         \shifted_products[14][7] , \shifted_products[14][6] ,
         \shifted_products[14][5] , \shifted_products[14][4] ,
         \shifted_products[14][3] , \shifted_products[14][2] ,
         \shifted_products[14][1] , \shifted_products[14][0] ,
         \shifted_products[13][12] , \shifted_products[13][11] ,
         \shifted_products[13][10] , \shifted_products[13][9] ,
         \shifted_products[13][8] , \shifted_products[13][7] ,
         \shifted_products[13][6] , \shifted_products[13][5] ,
         \shifted_products[13][4] , \shifted_products[13][3] ,
         \shifted_products[13][2] , \shifted_products[13][1] ,
         \shifted_products[13][0] , \shifted_products[12][10] ,
         \shifted_products[12][9] , \shifted_products[12][8] ,
         \shifted_products[12][7] , \shifted_products[12][6] ,
         \shifted_products[12][5] , \shifted_products[12][4] ,
         \shifted_products[12][3] , \shifted_products[12][2] ,
         \shifted_products[12][1] , \shifted_products[12][0] ,
         \shifted_products[11][13] , \shifted_products[11][12] ,
         \shifted_products[11][11] , \shifted_products[11][10] ,
         \shifted_products[11][9] , \shifted_products[11][8] ,
         \shifted_products[11][7] , \shifted_products[11][6] ,
         \shifted_products[11][5] , \shifted_products[11][4] ,
         \shifted_products[11][3] , \shifted_products[11][2] ,
         \shifted_products[11][1] , \shifted_products[11][0] ,
         \shifted_products[10][12] , \shifted_products[10][11] ,
         \shifted_products[10][10] , \shifted_products[10][9] ,
         \shifted_products[10][8] , \shifted_products[10][7] ,
         \shifted_products[10][6] , \shifted_products[10][5] ,
         \shifted_products[10][4] , \shifted_products[10][3] ,
         \shifted_products[10][2] , \shifted_products[10][1] ,
         \shifted_products[10][0] , \shifted_products[9][10] ,
         \shifted_products[9][9] , \shifted_products[9][8] ,
         \shifted_products[9][7] , \shifted_products[9][6] ,
         \shifted_products[9][5] , \shifted_products[9][4] ,
         \shifted_products[9][3] , \shifted_products[9][2] ,
         \shifted_products[9][1] , \shifted_products[9][0] ,
         \shifted_products[8][8] , \shifted_products[8][7] ,
         \shifted_products[8][6] , \shifted_products[8][5] ,
         \shifted_products[8][4] , \shifted_products[8][3] ,
         \shifted_products[8][2] , \shifted_products[8][1] ,
         \shifted_products[8][0] , \shifted_products[7][11] ,
         \shifted_products[7][10] , \shifted_products[7][9] ,
         \shifted_products[7][8] , \shifted_products[7][7] ,
         \shifted_products[7][6] , \shifted_products[7][5] ,
         \shifted_products[7][4] , \shifted_products[7][3] ,
         \shifted_products[7][2] , \shifted_products[7][1] ,
         \shifted_products[7][0] , \shifted_products[6][10] ,
         \shifted_products[6][9] , \shifted_products[6][8] ,
         \shifted_products[6][7] , \shifted_products[6][6] ,
         \shifted_products[6][5] , \shifted_products[6][4] ,
         \shifted_products[6][3] , \shifted_products[6][2] ,
         \shifted_products[6][1] , \shifted_products[6][0] ,
         \shifted_products[5][8] , \shifted_products[5][7] ,
         \shifted_products[5][6] , \shifted_products[5][5] ,
         \shifted_products[5][4] , \shifted_products[5][3] ,
         \shifted_products[5][2] , \shifted_products[5][1] ,
         \shifted_products[5][0] , \shifted_products[4][6] ,
         \shifted_products[4][5] , \shifted_products[4][4] ,
         \shifted_products[4][3] , \shifted_products[4][2] ,
         \shifted_products[4][1] , \shifted_products[4][0] ,
         \shifted_products[3][9] , \shifted_products[3][8] ,
         \shifted_products[3][7] , \shifted_products[3][6] ,
         \shifted_products[3][5] , \shifted_products[3][4] ,
         \shifted_products[3][3] , \shifted_products[3][2] ,
         \shifted_products[3][1] , \shifted_products[3][0] ,
         \shifted_products[2][8] , \shifted_products[2][7] ,
         \shifted_products[2][6] , \shifted_products[2][5] ,
         \shifted_products[2][4] , \shifted_products[2][3] ,
         \shifted_products[2][2] , \shifted_products[2][1] ,
         \shifted_products[2][0] , \shifted_products[1][6] ,
         \shifted_products[1][5] , \shifted_products[1][4] ,
         \shifted_products[1][3] , \shifted_products[1][2] ,
         \shifted_products[1][1] , \shifted_products[1][0] ,
         \shifted_products[0][9] , N99, N87, N86, N85, N84, N83, N82, N81, N80,
         N79, N78, N77, N76, N61, N60, N59, N58, N57, N56, N55, N54, N446,
         N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435,
         N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424,
         N423, N422, N421, N420, N419, N418, N417, N416, N415, N414, N413,
         N412, N411, N410, N409, N408, N407, N406, N405, N404, N403, N402,
         N401, N400, N399, N398, N397, N396, N395, N394, N393, N392, N391,
         N390, N389, N388, N387, N386, N385, N384, N383, N382, N381, N380,
         N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369,
         N368, N367, N366, N365, N364, N363, N362, N361, N360, N359, N358,
         N357, N356, N355, N354, N353, N352, N351, N350, N349, N348, N347,
         N346, N345, N344, N343, N342, N341, N340, N339, N338, N337, N336,
         N335, N334, N333, N332, N331, N330, N329, N328, N327, N326, N325,
         N324, N323, N322, N321, N320, N319, N318, N317, N316, N315, N314,
         N313, N312, N311, N310, N309, N308, N307, N306, N305, N304, N303,
         N302, N301, N300, N299, N298, N297, N296, N295, N294, N293, N292,
         N291, N290, N289, N288, N287, N286, N285, N284, N283, N282, N281,
         N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270,
         N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259,
         N258, N257, N256, N255, N254, N253, N252, N251, N250, N249, N248,
         N247, N246, N245, N244, N243, N242, N241, N240, N239, N238, N237,
         N236, N235, N234, N233, N232, N231, N230, N229, N214, N213, N212,
         N211, N210, N209, N208, N207, N206, N205, N204, N203, N202, N201,
         N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, N179,
         N178, N177, N176, N175, N174, N159, N158, N157, N156, N155, N154,
         N153, N152, N151, N150, N149, N148, N136, N135, N134, N133, N132,
         N131, N130, N129, N128, N127, N126, N125, N124, N123, N108, N107,
         N106, N105, N104, N103, N102, N101, N100,
         \add_14_root_add_199_I16/carry[6] ,
         \add_14_root_add_199_I16/carry[5] ,
         \add_14_root_add_199_I16/carry[4] ,
         \add_14_root_add_199_I16/carry[3] ,
         \add_14_root_add_199_I16/carry[2] ,
         \add_14_root_add_199_I16/carry[1] ,
         \add_13_root_add_199_I16/carry[9] ,
         \add_13_root_add_199_I16/carry[8] ,
         \add_13_root_add_199_I16/carry[7] ,
         \add_13_root_add_199_I16/carry[6] ,
         \add_13_root_add_199_I16/carry[5] ,
         \add_13_root_add_199_I16/carry[4] ,
         \add_13_root_add_199_I16/carry[3] ,
         \add_13_root_add_199_I16/carry[2] ,
         \add_13_root_add_199_I16/carry[1] ,
         \add_12_root_add_199_I16/carry[7] ,
         \add_12_root_add_199_I16/carry[6] ,
         \add_12_root_add_199_I16/carry[5] ,
         \add_12_root_add_199_I16/carry[4] ,
         \add_12_root_add_199_I16/carry[3] ,
         \add_12_root_add_199_I16/carry[2] ,
         \add_12_root_add_199_I16/carry[1] ,
         \add_11_root_add_199_I16/carry[11] ,
         \add_11_root_add_199_I16/carry[10] ,
         \add_11_root_add_199_I16/carry[9] ,
         \add_11_root_add_199_I16/carry[8] ,
         \add_11_root_add_199_I16/carry[7] ,
         \add_11_root_add_199_I16/carry[6] ,
         \add_11_root_add_199_I16/carry[5] ,
         \add_11_root_add_199_I16/carry[4] ,
         \add_11_root_add_199_I16/carry[3] ,
         \add_11_root_add_199_I16/carry[2] ,
         \add_11_root_add_199_I16/carry[1] ,
         \add_10_root_add_199_I16/carry[9] ,
         \add_10_root_add_199_I16/carry[8] ,
         \add_10_root_add_199_I16/carry[7] ,
         \add_10_root_add_199_I16/carry[6] ,
         \add_10_root_add_199_I16/carry[5] ,
         \add_10_root_add_199_I16/carry[4] ,
         \add_10_root_add_199_I16/carry[3] ,
         \add_10_root_add_199_I16/carry[2] ,
         \add_10_root_add_199_I16/carry[1] ,
         \add_9_root_add_199_I16/carry[13] ,
         \add_9_root_add_199_I16/carry[12] ,
         \add_9_root_add_199_I16/carry[11] ,
         \add_9_root_add_199_I16/carry[10] , \add_9_root_add_199_I16/carry[9] ,
         \add_9_root_add_199_I16/carry[8] , \add_9_root_add_199_I16/carry[7] ,
         \add_9_root_add_199_I16/carry[6] , \add_9_root_add_199_I16/carry[5] ,
         \add_9_root_add_199_I16/carry[4] , \add_9_root_add_199_I16/carry[3] ,
         \add_9_root_add_199_I16/carry[2] , \add_9_root_add_199_I16/carry[1] ,
         \add_8_root_add_199_I16/carry[11] ,
         \add_8_root_add_199_I16/carry[10] , \add_8_root_add_199_I16/carry[9] ,
         \add_8_root_add_199_I16/carry[8] , \add_8_root_add_199_I16/carry[7] ,
         \add_8_root_add_199_I16/carry[6] , \add_8_root_add_199_I16/carry[5] ,
         \add_8_root_add_199_I16/carry[4] , \add_8_root_add_199_I16/carry[3] ,
         \add_8_root_add_199_I16/carry[2] , \add_8_root_add_199_I16/carry[1] ,
         n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30,
         n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58,
         n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72,
         n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86,
         n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100,
         n101, n102, n103, n104, n105, n106, n107, n108, n109, n110, n111,
         n112, n113, n114, n115, n116, n117, n118, n119, n120, n121, n122,
         n123, n124, n125, n126, n127, n128, n129, n130, n131, n132, n133,
         n134, n135, n216, n217, n218, n219, n220, n221, n222, n223, n224,
         n225, n226, n227, n228, n229, n230, n231, n232, n233, n234, n235,
         n236, n237, n238, n239, n240, n241, n242, n243, n244, n245, n246,
         n247, n248, n249, n250, n251, n252, n253, n254, n255, n256, n257,
         n258, n259, n260, n261, n262, n263, n264, n265, n266, n267, n268,
         n269, n270, n271, n272, n273, n274, n275, n276, n277, n278, n279,
         n280, n281, n282, n283, n284, n285, n286, n287, n288, n289, n290,
         n291, n292, n293, n294, n295, n296, n297, n298, n299, n300, n301,
         n302, n303, n304, n305, n306, n307, n308, n309, n310, n311, n312,
         n313, n314, n315, n316, n317, n318, n319, n320, n321, n322, n323,
         n324, n325, n326, n327, n328, n329, n330, n331, n332, n333, n334,
         n335, n336, n337, n338, n339, n340, n341, n342;

  MAOI22D1 U26 ( .A1(\products[7][0] ), .A2(n330), .B1(n126), .B2(n333), .ZN(
        n331) );
  AN2XD1 U66 ( .A1(n310), .A2(n321), .Z(n309) );
  AN2XD1 U74 ( .A1(n336), .A2(n305), .Z(n306) );
  MAOI22D1 U112 ( .A1(\products[15][2] ), .A2(n293), .B1(n78), .B2(n322), .ZN(
        n294) );
  OA21D1 U130 ( .A1(n260), .A2(n77), .B(n296), .Z(n287) );
  AN2XD1 U134 ( .A1(n323), .A2(n313), .Z(n297) );
  AN2XD1 U161 ( .A1(n310), .A2(n340), .Z(n280) );
  AN2XD1 U239 ( .A1(n313), .A2(n333), .Z(n299) );
  shift_add_0_DW01_add_14_DW01_add_229 add_7_root_add_199_I16 ( .A({
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \products[14][5] , 
        \products[14][5] , \products[14][5] , \shifted_products[14][14] , 
        \shifted_products[14][13] , \shifted_products[14][12] , 
        \shifted_products[14][11] , \shifted_products[14][10] , 
        \shifted_products[14][9] , \shifted_products[14][8] , 
        \shifted_products[14][7] , \shifted_products[14][6] , 
        \shifted_products[14][5] , \shifted_products[14][4] , 
        \shifted_products[14][3] , \shifted_products[14][2] , 
        \shifted_products[14][1] , \shifted_products[14][0] }), .B({
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \products[15][5] , \products[15][5] , \products[15][5] , 
        \shifted_products[15][16] , \shifted_products[15][15] , 
        \shifted_products[15][14] , \shifted_products[15][13] , 
        \shifted_products[15][12] , \shifted_products[15][11] , 
        \shifted_products[15][10] , \shifted_products[15][9] , 
        \shifted_products[15][8] , \shifted_products[15][7] , 
        \shifted_products[15][6] , \shifted_products[15][5] , 
        \shifted_products[15][4] , \shifted_products[15][3] , 
        \shifted_products[15][2] , \shifted_products[15][1] , 
        \shifted_products[15][0] }), .CI(n262), .SUM({N257, N256, N255, N254, 
        N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, N243, N242, 
        N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, N231, N230, 
        N229}) );
  shift_add_0_DW01_add_6_DW01_add_221 add_4_root_add_0_root_add_199_I16 ( .A({
        n37, n37, n37, n37, n37, n37, n37, n37, n37, n37, n37, n37, n37, n37, 
        n37, n37, n37, n37, N214, N213, N212, N211, N210, N209, N208, N207, 
        N206, N205, N204, N203, N202, N201}), .B({N257, N257, N257, N257, N256, 
        N255, N254, N253, N252, N251, N250, N249, N248, N247, N246, N245, N244, 
        N243, N242, N241, N240, N239, N238, N237, N236, N235, N234, N233, N232, 
        N231, N230, N229}), .CI(n262), .SUM({N382, N381, N380, N379, N378, 
        N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, N367, N366, 
        N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, N355, N354, 
        N353, N352, N351}) );
  shift_add_0_DW01_add_5_DW01_add_220 add_3_root_add_0_root_add_199_I16 ( .A({
        n38, n38, n38, n38, n38, n38, n38, n38, n38, n38, n38, n38, n38, n38, 
        n38, n38, N189, N188, N187, N186, N185, N184, N183, N182, N181, N180, 
        N179, N178, N177, N176, N175, N174}), .B({n12, n11, n10, n9, n8, n7, 
        n6, n5, n16, n15, n14, n13, n12, n11, n10, n9, n8, n7, n6, n5, N159, 
        N158, N157, N156, N155, N154, N153, N152, N151, N150, N149, N148}), 
        .CI(n262), .SUM({N350, N349, N348, N347, N346, N345, N344, N343, N342, 
        N341, N340, N339, N338, N337, N336, N335, N334, N333, N332, N331, N330, 
        N329, N328, N327, N326, N325, N324, N323, N322, N321, N320, N319}) );
  shift_add_0_DW01_add_4_DW01_add_219 add_5_root_add_199_I16 ( .A({n36, n36, 
        n36, n36, n36, n36, n36, n36, n36, n36, n36, n36, n36, n36, n36, n36, 
        n36, n36, n36, n36, n36, N108, N107, N106, N105, N104, N103, N102, 
        N101, N100, N99}), .B({n39, n39, n39, n39, n39, n39, n39, n39, n39, 
        n39, n39, n39, n39, n39, n39, n39, n39, N136, N135, N134, N133, N132, 
        N131, N130, N129, N128, N127, N126, N125, N124, N123}), .CI(n262), 
        .SUM({N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}) );
  shift_add_0_DW01_add_3_DW01_add_218 add_6_root_add_199_I16 ( .A({n33, n33, 
        n33, n33, n33, n33, n33, n33, n33, n33, n33, n33, n33, n33, n33, n33, 
        n33, n33, n33, n33, n33, n33, N61, N60, N59, N58, N57, N56, N55, N54}), 
        .B({n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, n17, 
        n17, n17, n17, n17, n17, N87, N86, N85, N84, N83, N82, N81, N80, N79, 
        N78, N77, N76}), .CI(n262), .SUM({N287, N286, N285, N284, N283, N282, 
        N281, N280, N279, N278, N277, N276, N275, N274, N273, N272, N271, N270, 
        N269, N268, N267, N266, N265, N264, N263, N262, N261, N260, N259, N258}) );
  shift_add_0_DW01_add_2_DW01_add_217 add_2_root_add_0_root_add_199_I16 ( .A({
        N318, N318, N317, N316, N315, N314, N313, N312, N311, N310, N309, N308, 
        N307, N306, N305, N304, N303, N302, N301, N300, N299, N298, N297, N296, 
        N295, N294, N293, N292, N291, N290, N289, N288}), .B({N382, N381, N380, 
        N379, N378, N377, N376, N375, N374, N373, N372, N371, N370, N369, N368, 
        N367, N366, N365, N364, N363, N362, N361, N360, N359, N358, N357, N356, 
        N355, N354, N353, N352, N351}), .CI(n262), .SUM({N446, N445, N444, 
        N443, N442, N441, N440, N439, N438, N437, N436, N435, N434, N433, N432, 
        N431, N430, N429, N428, N427, N426, N425, N424, N423, N422, N421, N420, 
        N419, N418, N417, N416, N415}) );
  shift_add_0_DW01_add_1_DW01_add_216 add_1_root_add_0_root_add_199_I16 ( .A({
        N446, N445, N444, N443, N442, N441, N440, N439, N438, N437, N436, N435, 
        N434, N433, N432, N431, N430, N429, N428, N427, N426, N425, N424, N423, 
        N422, N421, N420, N419, N418, N417, N416, N415}), .B({N287, N287, N287, 
        N286, N285, N284, N283, N282, N281, N280, N279, N278, N277, N276, N275, 
        N274, N273, N272, N271, N270, N269, N268, N267, N266, N265, N264, N263, 
        N262, N261, N260, N259, N258}), .CI(n262), .SUM({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}) );
  shift_add_0_DW01_add_0_DW01_add_215 add_0_root_add_0_root_add_199_I16 ( .A({
        N350, N349, N348, N347, N346, N345, N344, N343, N342, N341, N340, N339, 
        N338, N337, N336, N335, N334, N333, N332, N331, N330, N329, N328, N327, 
        N326, N325, N324, N323, N322, N321, N320, N319}), .B({N414, N413, N412, 
        N411, N410, N409, N408, N407, N406, N405, N404, N403, N402, N401, N400, 
        N399, N398, N397, N396, N395, N394, N393, N392, N391, N390, N389, N388, 
        N387, N386, N385, N384, N383}), .CI(n262), .SUM(shift_add_out) );
  CKAN2D1 U2 ( .A1(n340), .A2(n341), .Z(n329) );
  AOI222D2 U3 ( .A1(n74), .A2(\products[2][5] ), .B1(n74), .B2(
        \products[3][5] ), .C1(\products[2][5] ), .C2(\products[3][5] ), .ZN(
        n45) );
  BUFFD2 U4 ( .I(n66), .Z(n1) );
  AOI222D1 U5 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(\products[6][5] ), .B1(\add_11_root_add_199_I16/carry[11] ), .B2(\shifted_products[7][11] ), 
        .C1(\shifted_products[7][11] ), .C2(\products[6][5] ), .ZN(n66) );
  INVD2 U6 ( .I(n35), .ZN(n2) );
  CKND0 U7 ( .I(n35), .ZN(n3) );
  CKND0 U8 ( .I(n35), .ZN(n4) );
  CKND2 U9 ( .I(n2), .ZN(n5) );
  CKND0 U10 ( .I(n2), .ZN(n6) );
  CKND0 U11 ( .I(n2), .ZN(n7) );
  CKND0 U12 ( .I(n2), .ZN(n8) );
  CKND1 U13 ( .I(n3), .ZN(n9) );
  CKND1 U14 ( .I(n3), .ZN(n10) );
  CKND1 U15 ( .I(n3), .ZN(n11) );
  CKND1 U16 ( .I(n3), .ZN(n12) );
  CKND1 U17 ( .I(n4), .ZN(n13) );
  CKND1 U18 ( .I(n4), .ZN(n14) );
  CKND1 U19 ( .I(n4), .ZN(n15) );
  CKND1 U20 ( .I(n4), .ZN(n16) );
  XOR3D1 U21 ( .A1(\products[9][5] ), .A2(n64), .A3(n62), .Z(n35) );
  XOR3D4 U22 ( .A1(\products[3][5] ), .A2(n72), .A3(n45), .Z(n17) );
  NR3D2 U23 ( .A1(n41), .A2(n42), .A3(n43), .ZN(n73) );
  OA21D1 U24 ( .A1(n304), .A2(n228), .B(n303), .Z(n46) );
  NR2D1 U25 ( .A1(n337), .A2(n338), .ZN(n298) );
  ND2D1 U27 ( .A1(n299), .A2(n257), .ZN(n338) );
  ND2D1 U28 ( .A1(n340), .A2(n257), .ZN(n286) );
  FA1D0 U29 ( .A(\shifted_products[2][8] ), .B(\shifted_products[3][8] ), .CI(
        \add_13_root_add_199_I16/carry[8] ), .CO(
        \add_13_root_add_199_I16/carry[9] ), .S(N84) );
  FA1D0 U30 ( .A(\shifted_products[2][6] ), .B(\shifted_products[3][6] ), .CI(
        \add_13_root_add_199_I16/carry[6] ), .CO(
        \add_13_root_add_199_I16/carry[7] ), .S(N82) );
  INVD2 U31 ( .I(n301), .ZN(n257) );
  INVD1 U32 ( .I(n286), .ZN(n246) );
  ND3D1 U33 ( .A1(n24), .A2(n25), .A3(n26), .ZN(n74) );
  INVD1 U34 ( .I(\products[2][5] ), .ZN(n72) );
  NR3D1 U35 ( .A1(n27), .A2(n28), .A3(n29), .ZN(n70) );
  AN2XD1 U36 ( .A1(n69), .A2(\products[5][5] ), .Z(n28) );
  XNR3D2 U37 ( .A1(\products[7][5] ), .A2(n129), .A3(n40), .ZN(n39) );
  INVD1 U38 ( .I(n341), .ZN(n259) );
  ND2D1 U39 ( .A1(n264), .A2(n263), .ZN(n341) );
  CKND2D0 U40 ( .A1(n299), .A2(n257), .ZN(n18) );
  CKAN2D0 U41 ( .A1(n328), .A2(n53), .Z(n19) );
  CKND2D1 U42 ( .A1(n268), .A2(n267), .ZN(n328) );
  OR2XD1 U43 ( .A1(n1), .A2(n129), .Z(n20) );
  OR2XD1 U44 ( .A1(n1), .A2(n47), .Z(n21) );
  OR2D1 U45 ( .A1(n129), .A2(n47), .Z(n22) );
  ND3D2 U46 ( .A1(n20), .A2(n21), .A3(n22), .ZN(n67) );
  NR2D0 U47 ( .A1(n337), .A2(n18), .ZN(n23) );
  OR2XD1 U48 ( .A1(n73), .A2(n72), .Z(n24) );
  OR2XD1 U49 ( .A1(n73), .A2(n46), .Z(n25) );
  OR2XD1 U50 ( .A1(n72), .A2(n46), .Z(n26) );
  AN2D1 U51 ( .A1(n69), .A2(\products[4][5] ), .Z(n27) );
  AN2XD1 U52 ( .A1(\products[4][5] ), .A2(\products[5][5] ), .Z(n29) );
  OAI222D1 U53 ( .A1(n68), .A2(n221), .B1(n68), .B2(n71), .C1(n221), .C2(n71), 
        .ZN(n69) );
  OAI222D1 U54 ( .A1(n54), .A2(n95), .B1(n54), .B2(n57), .C1(n95), .C2(n57), 
        .ZN(n55) );
  NR3D1 U55 ( .A1(n30), .A2(n31), .A3(n32), .ZN(n56) );
  AN2XD1 U56 ( .A1(n55), .A2(\products[13][5] ), .Z(n31) );
  NR2D0 U57 ( .A1(n52), .A2(n94), .ZN(\shifted_products[13][0] ) );
  CKND2D2 U58 ( .A1(n265), .A2(n267), .ZN(n333) );
  AN2D1 U59 ( .A1(n55), .A2(\products[12][5] ), .Z(n30) );
  AN2D1 U60 ( .A1(\products[12][5] ), .A2(\products[13][5] ), .Z(n32) );
  AN2D1 U61 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(\products[2][5] ), 
        .Z(n41) );
  AN2D2 U62 ( .A1(n310), .A2(n53), .Z(n307) );
  INR2D2 U63 ( .A1(n290), .B1(n259), .ZN(n321) );
  NR2D0 U64 ( .A1(n329), .A2(n232), .ZN(\shifted_products[3][0] ) );
  AOI222D0 U65 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \products[10][5] ), .B1(\add_9_root_add_199_I16/carry[13] ), .B2(
        \shifted_products[11][13] ), .C1(\shifted_products[11][13] ), .C2(
        \products[10][5] ), .ZN(n59) );
  CKAN2D0 U67 ( .A1(n316), .A2(n50), .Z(n336) );
  AN2XD1 U68 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .Z(n42) );
  CKND2D3 U69 ( .A1(n316), .A2(n246), .ZN(n315) );
  OAI22D0 U70 ( .A1(n19), .A2(n131), .B1(n249), .B2(n133), .ZN(
        \shifted_products[6][3] ) );
  OAI22D0 U71 ( .A1(n340), .A2(n114), .B1(n252), .B2(n116), .ZN(
        \shifted_products[9][3] ) );
  NR2D0 U72 ( .A1(n340), .A2(n105), .ZN(\shifted_products[11][1] ) );
  INR2D1 U73 ( .A1(n323), .B1(n259), .ZN(n316) );
  CKND2D1 U75 ( .A1(n268), .A2(n266), .ZN(n322) );
  AOI222D2 U76 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[0][9] ), .B1(\add_14_root_add_199_I16/carry[6] ), 
        .B2(\shifted_products[1][6] ), .C1(\shifted_products[1][6] ), .C2(
        \shifted_products[0][9] ), .ZN(n76) );
  XNR3D4 U77 ( .A1(n238), .A2(n34), .A3(n75), .ZN(n33) );
  OA222D1 U78 ( .A1(n76), .A2(n75), .B1(n76), .B2(n238), .C1(n75), .C2(n238), 
        .Z(n34) );
  XNR3D1 U79 ( .A1(n46), .A2(n73), .A3(n72), .ZN(N86) );
  ND2D2 U80 ( .A1(n321), .A2(n298), .ZN(n327) );
  OAI22D0 U81 ( .A1(n329), .A2(n227), .B1(n302), .B2(n229), .ZN(
        \shifted_products[3][5] ) );
  OAI22D0 U82 ( .A1(n329), .A2(n229), .B1(n302), .B2(n231), .ZN(
        \shifted_products[3][3] ) );
  NR2D0 U83 ( .A1(n244), .A2(n234), .ZN(\shifted_products[2][3] ) );
  FA1D1 U84 ( .A(\shifted_products[2][7] ), .B(\shifted_products[3][7] ), .CI(
        \add_13_root_add_199_I16/carry[7] ), .CO(
        \add_13_root_add_199_I16/carry[8] ), .S(N83) );
  NR2D0 U85 ( .A1(n329), .A2(n231), .ZN(\shifted_products[3][1] ) );
  AOI222D1 U86 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(\products[4][5] ), .B1(\add_12_root_add_199_I16/carry[7] ), .B2(\shifted_products[5][7] ), .C1(
        \shifted_products[5][7] ), .C2(\products[4][5] ), .ZN(n68) );
  AOI222D1 U87 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(\products[8][5] ), .B1(\add_10_root_add_199_I16/carry[9] ), .B2(\shifted_products[9][9] ), .C1(
        \shifted_products[9][9] ), .C2(\products[8][5] ), .ZN(n61) );
  AOI222D1 U88 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \products[12][5] ), .B1(\add_8_root_add_199_I16/carry[11] ), .B2(
        \shifted_products[13][11] ), .C1(\shifted_products[13][11] ), .C2(
        \products[12][5] ), .ZN(n54) );
  XOR3D2 U89 ( .A1(\products[5][5] ), .A2(n70), .A3(n221), .Z(n36) );
  XOR3D2 U90 ( .A1(\products[13][5] ), .A2(n56), .A3(n95), .Z(n37) );
  XOR3D1 U91 ( .A1(\products[11][5] ), .A2(n58), .A3(n44), .Z(n38) );
  OAI22D0 U92 ( .A1(n329), .A2(n238), .B1(n23), .B2(n239), .ZN(
        \shifted_products[1][6] ) );
  OAI22D0 U93 ( .A1(n256), .A2(n125), .B1(n320), .B2(n123), .ZN(
        \shifted_products[7][11] ) );
  NR2D0 U94 ( .A1(n334), .A2(n259), .ZN(n342) );
  CKAN2D0 U95 ( .A1(n299), .A2(n50), .Z(n304) );
  OAI21D0 U96 ( .A1(n79), .A2(n50), .B(n289), .ZN(\shifted_products[15][15] )
         );
  NR2D0 U97 ( .A1(n52), .A2(n82), .ZN(\shifted_products[15][0] ) );
  CKND2D0 U98 ( .A1(n316), .A2(n245), .ZN(n288) );
  CKND2D0 U99 ( .A1(n246), .A2(n299), .ZN(n334) );
  CKND1 U100 ( .I(\products[13][5] ), .ZN(n89) );
  NR2D0 U101 ( .A1(n128), .A2(n52), .ZN(\shifted_products[7][0] ) );
  CKND2D0 U102 ( .A1(\products[12][5] ), .A2(n334), .ZN(n276) );
  CKND2D0 U103 ( .A1(\products[8][5] ), .A2(n334), .ZN(n335) );
  CKND1 U104 ( .I(\products[7][5] ), .ZN(n123) );
  CKND2D0 U105 ( .A1(\products[3][5] ), .A2(n315), .ZN(n303) );
  NR2D0 U106 ( .A1(n286), .A2(n259), .ZN(n275) );
  CKND2D0 U107 ( .A1(\products[2][5] ), .A2(n315), .ZN(n300) );
  CKND2D0 U108 ( .A1(\products[10][5] ), .A2(n286), .ZN(n269) );
  CKND1 U109 ( .I(\products[6][5] ), .ZN(n129) );
  CKND1 U110 ( .I(\products[14][5] ), .ZN(n83) );
  CKAN2D0 U111 ( .A1(n316), .A2(n299), .Z(n270) );
  CKND2D0 U113 ( .A1(\products[15][5] ), .A2(n286), .ZN(n296) );
  CKND2D1 U114 ( .A1(n250), .A2(n316), .ZN(n317) );
  CKND1 U115 ( .I(\products[5][5] ), .ZN(n135) );
  CKAN2D0 U116 ( .A1(n310), .A2(n329), .Z(n311) );
  OAI22D0 U117 ( .A1(n307), .A2(n221), .B1(n306), .B2(n223), .ZN(
        \shifted_products[4][5] ) );
  OAI22D0 U118 ( .A1(n307), .A2(n95), .B1(n305), .B2(n97), .ZN(
        \shifted_products[12][5] ) );
  OAI22D0 U119 ( .A1(n52), .A2(n217), .B1(n309), .B2(n219), .ZN(
        \shifted_products[5][3] ) );
  OAI22D0 U120 ( .A1(n307), .A2(n223), .B1(n306), .B2(n225), .ZN(
        \shifted_products[4][3] ) );
  OAI22D0 U121 ( .A1(n52), .A2(n79), .B1(n251), .B2(n81), .ZN(
        \shifted_products[15][3] ) );
  OAI22D0 U122 ( .A1(n19), .A2(n85), .B1(n250), .B2(n87), .ZN(
        \shifted_products[14][3] ) );
  OAI22D0 U123 ( .A1(n340), .A2(n103), .B1(n257), .B2(n105), .ZN(
        \shifted_products[11][3] ) );
  NR2D0 U124 ( .A1(n246), .A2(n108), .ZN(\shifted_products[10][3] ) );
  NR2D0 U125 ( .A1(n245), .A2(n119), .ZN(\shifted_products[8][3] ) );
  OAI22D0 U126 ( .A1(n51), .A2(n91), .B1(n248), .B2(n93), .ZN(
        \shifted_products[13][3] ) );
  OAI22D0 U127 ( .A1(n307), .A2(n97), .B1(n305), .B2(n99), .ZN(
        \shifted_products[12][3] ) );
  OAI22D0 U128 ( .A1(n125), .A2(n51), .B1(n247), .B2(n127), .ZN(
        \shifted_products[7][3] ) );
  OAI21D0 U129 ( .A1(n81), .A2(n50), .B(n289), .ZN(\shifted_products[15][13] )
         );
  NR2D0 U131 ( .A1(n52), .A2(n219), .ZN(\shifted_products[5][1] ) );
  NR2D0 U132 ( .A1(n307), .A2(n99), .ZN(\shifted_products[12][1] ) );
  NR2D0 U133 ( .A1(n52), .A2(n93), .ZN(\shifted_products[13][1] ) );
  NR2D0 U135 ( .A1(n127), .A2(n52), .ZN(\shifted_products[7][1] ) );
  NR2D0 U136 ( .A1(n246), .A2(n110), .ZN(\shifted_products[10][1] ) );
  NR2D0 U137 ( .A1(n52), .A2(n81), .ZN(\shifted_products[15][1] ) );
  CKND1 U138 ( .I(\products[4][5] ), .ZN(n221) );
  CKAN2D0 U139 ( .A1(\products[0][5] ), .A2(n52), .Z(\shifted_products[0][9] )
         );
  AO222D1 U140 ( .A1(n67), .A2(\products[6][5] ), .B1(n67), .B2(
        \products[7][5] ), .C1(\products[6][5] ), .C2(\products[7][5] ), .Z(
        n40) );
  OAI21D0 U141 ( .A1(n78), .A2(n50), .B(n289), .ZN(\shifted_products[15][16] )
         );
  OAI21D0 U142 ( .A1(n304), .A2(n229), .B(n303), .ZN(\shifted_products[3][9] )
         );
  AN2D4 U143 ( .A1(n290), .A2(n53), .Z(n340) );
  NR2D0 U144 ( .A1(n244), .A2(n237), .ZN(\shifted_products[2][0] ) );
  OAI21D0 U145 ( .A1(n304), .A2(n235), .B(n300), .ZN(\shifted_products[2][6] )
         );
  OAI22D0 U146 ( .A1(n329), .A2(n239), .B1(n23), .B2(n241), .ZN(
        \shifted_products[1][4] ) );
  OAI22D0 U147 ( .A1(n329), .A2(n240), .B1(n23), .B2(n242), .ZN(
        \shifted_products[1][3] ) );
  OAI22D0 U148 ( .A1(n329), .A2(n228), .B1(n302), .B2(n230), .ZN(
        \shifted_products[3][4] ) );
  OAI22D0 U149 ( .A1(n244), .A2(n233), .B1(n304), .B2(n237), .ZN(
        \shifted_products[2][4] ) );
  OAI22D0 U150 ( .A1(n329), .A2(n230), .B1(n302), .B2(n232), .ZN(
        \shifted_products[3][2] ) );
  NR2D0 U151 ( .A1(n244), .A2(n235), .ZN(\shifted_products[2][2] ) );
  NR2D0 U152 ( .A1(n329), .A2(n242), .ZN(\shifted_products[1][1] ) );
  INR2XD0 U153 ( .A1(n290), .B1(n308), .ZN(n305) );
  CKAN2D0 U154 ( .A1(n328), .A2(n53), .Z(n319) );
  INR2D0 U155 ( .A1(n323), .B1(n301), .ZN(n302) );
  CKND2D0 U156 ( .A1(n341), .A2(n333), .ZN(n293) );
  ND2D2 U157 ( .A1(n50), .A2(n323), .ZN(n337) );
  CKND2D0 U158 ( .A1(n50), .A2(n313), .ZN(n330) );
  CKAN2D0 U159 ( .A1(n333), .A2(n328), .Z(n310) );
  CKND2D0 U160 ( .A1(n316), .A2(n313), .ZN(n283) );
  AOI22D0 U162 ( .A1(\products[14][0] ), .A2(n283), .B1(\products[14][4] ), 
        .B2(n282), .ZN(n284) );
  NR2D0 U163 ( .A1(n307), .A2(n226), .ZN(\shifted_products[4][0] ) );
  NR2D0 U164 ( .A1(n307), .A2(n100), .ZN(\shifted_products[12][0] ) );
  AOI22D0 U165 ( .A1(\products[6][4] ), .A2(n317), .B1(\products[6][0] ), .B2(
        n330), .ZN(n318) );
  NR2D0 U166 ( .A1(n246), .A2(n111), .ZN(\shifted_products[10][0] ) );
  NR2D0 U167 ( .A1(n245), .A2(n122), .ZN(\shifted_products[8][0] ) );
  CKND1 U168 ( .I(\products[15][4] ), .ZN(n78) );
  CKND1 U169 ( .I(\products[14][3] ), .ZN(n85) );
  OAI21D0 U170 ( .A1(n304), .A2(n230), .B(n303), .ZN(\shifted_products[3][8] )
         );
  OAI21D0 U171 ( .A1(n304), .A2(n233), .B(n300), .ZN(\shifted_products[2][8] )
         );
  CKND1 U172 ( .I(\products[13][3] ), .ZN(n91) );
  CKND1 U173 ( .I(\products[7][3] ), .ZN(n125) );
  CKND2D0 U174 ( .A1(n321), .A2(n328), .ZN(n324) );
  CKND2D0 U175 ( .A1(n310), .A2(n290), .ZN(n277) );
  CKND1 U176 ( .I(\products[6][3] ), .ZN(n131) );
  CKND1 U177 ( .I(\products[14][4] ), .ZN(n84) );
  CKND1 U178 ( .I(\products[7][4] ), .ZN(n124) );
  CKND1 U179 ( .I(\products[12][3] ), .ZN(n97) );
  CKND1 U180 ( .I(\products[13][4] ), .ZN(n90) );
  CKND1 U181 ( .I(\products[5][3] ), .ZN(n217) );
  OAI21D0 U182 ( .A1(n336), .A2(n119), .B(n335), .ZN(\shifted_products[8][7] )
         );
  CKND1 U183 ( .I(\products[6][4] ), .ZN(n130) );
  OAI21D0 U184 ( .A1(n336), .A2(n97), .B(n276), .ZN(\shifted_products[12][9] )
         );
  OAI22D0 U185 ( .A1(n245), .A2(n118), .B1(n336), .B2(n122), .ZN(
        \shifted_products[8][4] ) );
  OAI21D0 U186 ( .A1(n336), .A2(n121), .B(n335), .ZN(\shifted_products[8][5] )
         );
  OAI21D0 U187 ( .A1(n336), .A2(n99), .B(n276), .ZN(\shifted_products[12][7] )
         );
  OAI22D0 U188 ( .A1(n246), .A2(n107), .B1(n270), .B2(n111), .ZN(
        \shifted_products[10][4] ) );
  OAI22D0 U189 ( .A1(n307), .A2(n222), .B1(n306), .B2(n224), .ZN(
        \shifted_products[4][4] ) );
  OAI22D0 U190 ( .A1(n307), .A2(n96), .B1(n305), .B2(n98), .ZN(
        \shifted_products[12][4] ) );
  OAI21D0 U191 ( .A1(n336), .A2(n120), .B(n335), .ZN(\shifted_products[8][6] )
         );
  AOI22D0 U192 ( .A1(\products[9][4] ), .A2(n18), .B1(\products[9][0] ), .B2(
        n337), .ZN(n339) );
  AOI22D0 U193 ( .A1(\products[15][4] ), .A2(n291), .B1(\products[15][0] ), 
        .B2(n293), .ZN(n292) );
  AOI22D0 U194 ( .A1(\products[11][0] ), .A2(n273), .B1(\products[11][4] ), 
        .B2(n301), .ZN(n274) );
  OAI22D0 U195 ( .A1(n255), .A2(n85), .B1(n285), .B2(n83), .ZN(
        \shifted_products[14][9] ) );
  OAI22D0 U196 ( .A1(n52), .A2(n218), .B1(n309), .B2(n220), .ZN(
        \shifted_products[5][2] ) );
  OAI22D0 U197 ( .A1(n307), .A2(n224), .B1(n306), .B2(n226), .ZN(
        \shifted_products[4][2] ) );
  OAI22D0 U198 ( .A1(n52), .A2(n92), .B1(n248), .B2(n94), .ZN(
        \shifted_products[13][2] ) );
  OAI22D0 U199 ( .A1(n307), .A2(n98), .B1(n305), .B2(n100), .ZN(
        \shifted_products[12][2] ) );
  OAI22D0 U200 ( .A1(n52), .A2(n80), .B1(n251), .B2(n82), .ZN(
        \shifted_products[15][2] ) );
  OAI22D0 U201 ( .A1(n19), .A2(n86), .B1(n250), .B2(n88), .ZN(
        \shifted_products[14][2] ) );
  OAI22D0 U202 ( .A1(n340), .A2(n104), .B1(n257), .B2(n106), .ZN(
        \shifted_products[11][2] ) );
  NR2D0 U203 ( .A1(n246), .A2(n109), .ZN(\shifted_products[10][2] ) );
  OAI22D0 U204 ( .A1(n340), .A2(n115), .B1(n252), .B2(n117), .ZN(
        \shifted_products[9][2] ) );
  NR2D0 U205 ( .A1(n245), .A2(n120), .ZN(\shifted_products[8][2] ) );
  OAI22D0 U206 ( .A1(n19), .A2(n132), .B1(n249), .B2(n134), .ZN(
        \shifted_products[6][2] ) );
  CKAN2D0 U207 ( .A1(n329), .A2(n328), .Z(n332) );
  CKND1 U208 ( .I(\products[5][4] ), .ZN(n216) );
  CKND1 U209 ( .I(\products[4][4] ), .ZN(n222) );
  CKND1 U210 ( .I(\products[4][3] ), .ZN(n223) );
  CKAN2D0 U211 ( .A1(n340), .A2(n328), .Z(n295) );
  CKND2D0 U212 ( .A1(n299), .A2(n323), .ZN(n273) );
  OAI22D0 U213 ( .A1(n329), .A2(n241), .B1(n23), .B2(n243), .ZN(
        \shifted_products[1][2] ) );
  CKND2D0 U214 ( .A1(n266), .A2(n263), .ZN(n290) );
  CKND2D0 U215 ( .A1(n268), .A2(n264), .ZN(n323) );
  CKND2D0 U216 ( .A1(n266), .A2(n265), .ZN(n313) );
  CKND2D0 U217 ( .A1(n265), .A2(n264), .ZN(n314) );
  CKND1 U218 ( .I(\products[6][2] ), .ZN(n132) );
  CKND1 U219 ( .I(\products[12][2] ), .ZN(n98) );
  AOI22D0 U220 ( .A1(\products[7][2] ), .A2(n325), .B1(\products[7][4] ), .B2(
        n324), .ZN(n326) );
  AOI22D0 U221 ( .A1(\products[13][4] ), .A2(n277), .B1(\products[13][2] ), 
        .B2(n308), .ZN(n278) );
  OAI21D0 U222 ( .A1(n336), .A2(n98), .B(n276), .ZN(\shifted_products[12][8] )
         );
  AOI22D0 U223 ( .A1(\products[13][4] ), .A2(n308), .B1(\products[13][2] ), 
        .B2(n259), .ZN(n279) );
  CKND1 U224 ( .I(\products[5][2] ), .ZN(n218) );
  CKND1 U225 ( .I(\products[4][2] ), .ZN(n224) );
  AN2D1 U226 ( .A1(\shifted_products[3][9] ), .A2(\products[2][5] ), .Z(n43)
         );
  INVD1 U227 ( .I(n334), .ZN(n245) );
  INVD1 U228 ( .I(n317), .ZN(n249) );
  INVD1 U229 ( .I(n315), .ZN(n244) );
  CKBD1 U230 ( .I(n327), .Z(n52) );
  CKBD1 U231 ( .I(n327), .Z(n51) );
  CKBD1 U232 ( .I(n327), .Z(n53) );
  INVD1 U233 ( .I(n18), .ZN(n252) );
  OAI22D1 U234 ( .A1(n312), .A2(n217), .B1(n311), .B2(n135), .ZN(
        \shifted_products[5][7] ) );
  INVD1 U235 ( .I(\products[15][5] ), .ZN(n77) );
  INVD1 U236 ( .I(n277), .ZN(n248) );
  NR2D1 U237 ( .A1(n19), .A2(n88), .ZN(\shifted_products[14][0] ) );
  INVD1 U238 ( .I(n324), .ZN(n247) );
  AOI222D0 U240 ( .A1(n60), .A2(\products[10][5] ), .B1(n60), .B2(
        \products[11][5] ), .C1(\products[10][5] ), .C2(\products[11][5] ), 
        .ZN(n44) );
  FA1D0 U241 ( .A(\shifted_products[10][1] ), .B(\shifted_products[11][1] ), 
        .CI(\add_9_root_add_199_I16/carry[1] ), .CO(
        \add_9_root_add_199_I16/carry[2] ), .S(N175) );
  FA1D0 U242 ( .A(\shifted_products[12][5] ), .B(\shifted_products[13][5] ), 
        .CI(\add_8_root_add_199_I16/carry[5] ), .CO(
        \add_8_root_add_199_I16/carry[6] ), .S(N206) );
  OAI222D0 U243 ( .A1(n254), .A2(n93), .B1(n248), .B2(n91), .C1(n51), .C2(n89), 
        .ZN(\shifted_products[13][5] ) );
  FA1D0 U244 ( .A(\shifted_products[4][5] ), .B(\shifted_products[5][5] ), 
        .CI(\add_12_root_add_199_I16/carry[5] ), .CO(
        \add_12_root_add_199_I16/carry[6] ), .S(N104) );
  OAI222D0 U245 ( .A1(n309), .A2(n217), .B1(n312), .B2(n219), .C1(n51), .C2(
        n135), .ZN(\shifted_products[5][5] ) );
  FA1D0 U246 ( .A(\shifted_products[4][3] ), .B(\shifted_products[5][3] ), 
        .CI(\add_12_root_add_199_I16/carry[3] ), .CO(
        \add_12_root_add_199_I16/carry[4] ), .S(N102) );
  FA1D0 U247 ( .A(\shifted_products[2][3] ), .B(\shifted_products[3][3] ), 
        .CI(\add_13_root_add_199_I16/carry[3] ), .CO(
        \add_13_root_add_199_I16/carry[4] ), .S(N79) );
  FA1D0 U248 ( .A(\shifted_products[10][3] ), .B(\shifted_products[11][3] ), 
        .CI(\add_9_root_add_199_I16/carry[3] ), .CO(
        \add_9_root_add_199_I16/carry[4] ), .S(N177) );
  FA1D0 U249 ( .A(\shifted_products[2][5] ), .B(\shifted_products[3][5] ), 
        .CI(\add_13_root_add_199_I16/carry[5] ), .CO(
        \add_13_root_add_199_I16/carry[6] ), .S(N81) );
  OAI21D1 U250 ( .A1(n304), .A2(n236), .B(n300), .ZN(\shifted_products[2][5] )
         );
  FA1D0 U251 ( .A(\shifted_products[10][9] ), .B(\shifted_products[11][9] ), 
        .CI(\add_9_root_add_199_I16/carry[9] ), .CO(
        \add_9_root_add_199_I16/carry[10] ), .S(N183) );
  OAI22D1 U252 ( .A1(n253), .A2(n103), .B1(n275), .B2(n101), .ZN(
        \shifted_products[11][9] ) );
  OAI21D1 U253 ( .A1(n49), .A2(n110), .B(n271), .ZN(\shifted_products[10][9] )
         );
  FA1D0 U254 ( .A(\shifted_products[6][3] ), .B(\shifted_products[7][3] ), 
        .CI(\add_11_root_add_199_I16/carry[3] ), .CO(
        \add_11_root_add_199_I16/carry[4] ), .S(N126) );
  FA1D0 U255 ( .A(\shifted_products[12][3] ), .B(\shifted_products[13][3] ), 
        .CI(\add_8_root_add_199_I16/carry[3] ), .CO(
        \add_8_root_add_199_I16/carry[4] ), .S(N204) );
  FA1D0 U256 ( .A(\shifted_products[8][3] ), .B(\shifted_products[9][3] ), 
        .CI(\add_10_root_add_199_I16/carry[3] ), .CO(
        \add_10_root_add_199_I16/carry[4] ), .S(N151) );
  OAI21D1 U257 ( .A1(n297), .A2(n79), .B(n287), .ZN(\shifted_products[15][11] ) );
  OAI21D1 U258 ( .A1(n49), .A2(n87), .B(n281), .ZN(\shifted_products[14][11] )
         );
  OAI21D1 U259 ( .A1(n49), .A2(n85), .B(n281), .ZN(\shifted_products[14][13] )
         );
  OAI21D1 U260 ( .A1(n304), .A2(n231), .B(n303), .ZN(\shifted_products[3][7] )
         );
  OAI21D1 U261 ( .A1(n304), .A2(n234), .B(n300), .ZN(\shifted_products[2][7] )
         );
  FA1D0 U262 ( .A(\shifted_products[10][11] ), .B(\shifted_products[11][11] ), 
        .CI(\add_9_root_add_199_I16/carry[11] ), .CO(
        \add_9_root_add_199_I16/carry[12] ), .S(N185) );
  OAI21D1 U263 ( .A1(n49), .A2(n105), .B(n272), .ZN(\shifted_products[11][11] ) );
  OAI21D1 U264 ( .A1(n49), .A2(n108), .B(n271), .ZN(\shifted_products[10][11] ) );
  FA1D0 U265 ( .A(\shifted_products[2][1] ), .B(\shifted_products[3][1] ), 
        .CI(\add_13_root_add_199_I16/carry[1] ), .CO(
        \add_13_root_add_199_I16/carry[2] ), .S(N77) );
  NR2D1 U266 ( .A1(n244), .A2(n236), .ZN(\shifted_products[2][1] ) );
  FA1D0 U267 ( .A(\shifted_products[6][1] ), .B(\shifted_products[7][1] ), 
        .CI(\add_11_root_add_199_I16/carry[1] ), .CO(
        \add_11_root_add_199_I16/carry[2] ), .S(N124) );
  NR2D1 U268 ( .A1(n319), .A2(n133), .ZN(\shifted_products[6][1] ) );
  FA1D0 U269 ( .A(\shifted_products[8][1] ), .B(\shifted_products[9][1] ), 
        .CI(\add_10_root_add_199_I16/carry[1] ), .CO(
        \add_10_root_add_199_I16/carry[2] ), .S(N149) );
  NR2D1 U270 ( .A1(n340), .A2(n116), .ZN(\shifted_products[9][1] ) );
  NR2D1 U271 ( .A1(n245), .A2(n121), .ZN(\shifted_products[8][1] ) );
  NR2D1 U272 ( .A1(n319), .A2(n87), .ZN(\shifted_products[14][1] ) );
  FA1D0 U273 ( .A(\shifted_products[4][1] ), .B(\shifted_products[5][1] ), 
        .CI(\add_12_root_add_199_I16/carry[1] ), .CO(
        \add_12_root_add_199_I16/carry[2] ), .S(N100) );
  NR2D1 U274 ( .A1(n307), .A2(n225), .ZN(\shifted_products[4][1] ) );
  FA1D0 U275 ( .A(\shifted_products[12][1] ), .B(\shifted_products[13][1] ), 
        .CI(\add_8_root_add_199_I16/carry[1] ), .CO(
        \add_8_root_add_199_I16/carry[2] ), .S(N202) );
  FA1D0 U276 ( .A(\products[0][5] ), .B(\shifted_products[1][5] ), .CI(
        \add_14_root_add_199_I16/carry[5] ), .CO(
        \add_14_root_add_199_I16/carry[6] ), .S(N59) );
  OAI22D1 U277 ( .A1(n329), .A2(n238), .B1(n23), .B2(n240), .ZN(
        \shifted_products[1][5] ) );
  NR2D1 U278 ( .A1(n319), .A2(n134), .ZN(\shifted_products[6][0] ) );
  INVD1 U279 ( .I(\products[12][5] ), .ZN(n95) );
  INVD1 U280 ( .I(\products[1][5] ), .ZN(n238) );
  NR2D1 U281 ( .A1(n308), .A2(n337), .ZN(n312) );
  INVD1 U282 ( .I(n330), .ZN(n256) );
  OAI22D1 U283 ( .A1(n261), .A2(n91), .B1(n342), .B2(n89), .ZN(
        \shifted_products[13][11] ) );
  OAI22D1 U284 ( .A1(n261), .A2(n114), .B1(n342), .B2(n112), .ZN(
        \shifted_products[9][9] ) );
  INVD1 U285 ( .I(\products[9][5] ), .ZN(n112) );
  INVD1 U286 ( .I(\products[11][5] ), .ZN(n101) );
  OAI21D1 U287 ( .A1(n49), .A2(n103), .B(n272), .ZN(\shifted_products[11][13] ) );
  OAI22D1 U288 ( .A1(n261), .A2(n90), .B1(n342), .B2(n89), .ZN(
        \shifted_products[13][12] ) );
  OAI22D1 U289 ( .A1(n261), .A2(n113), .B1(n342), .B2(n112), .ZN(
        \shifted_products[9][10] ) );
  ND2D1 U290 ( .A1(\products[14][5] ), .A2(n288), .ZN(n281) );
  ND2D1 U291 ( .A1(\products[10][5] ), .A2(n288), .ZN(n271) );
  ND2D1 U292 ( .A1(\products[15][5] ), .A2(n288), .ZN(n289) );
  ND2D1 U293 ( .A1(\products[11][5] ), .A2(n288), .ZN(n272) );
  INVD1 U294 ( .I(n282), .ZN(n250) );
  INVD1 U295 ( .I(n337), .ZN(n261) );
  OAI22D1 U296 ( .A1(n312), .A2(n216), .B1(n311), .B2(n135), .ZN(
        \shifted_products[5][8] ) );
  INVD1 U297 ( .I(n283), .ZN(n255) );
  INVD1 U298 ( .I(n273), .ZN(n253) );
  OA22D0 U299 ( .A1(n256), .A2(n124), .B1(n320), .B2(n123), .Z(n47) );
  INVD1 U300 ( .I(n291), .ZN(n251) );
  INVD1 U301 ( .I(n325), .ZN(n258) );
  INVD1 U302 ( .I(n293), .ZN(n260) );
  INVD1 U303 ( .I(n308), .ZN(n254) );
  NR2D1 U304 ( .A1(n340), .A2(n117), .ZN(\shifted_products[9][0] ) );
  NR2D1 U305 ( .A1(n340), .A2(n106), .ZN(\shifted_products[11][0] ) );
  INVD1 U306 ( .I(\products[3][5] ), .ZN(n227) );
  OA21D1 U307 ( .A1(n49), .A2(n102), .B(n272), .Z(n48) );
  ND2D1 U308 ( .A1(n313), .A2(n322), .ZN(n308) );
  INVD1 U309 ( .I(\products[15][3] ), .ZN(n79) );
  ND2D1 U310 ( .A1(n322), .A2(n328), .ZN(n301) );
  NR2D1 U311 ( .A1(n329), .A2(n243), .ZN(\shifted_products[1][0] ) );
  FA1D0 U312 ( .A(\shifted_products[6][7] ), .B(\shifted_products[7][7] ), 
        .CI(\add_11_root_add_199_I16/carry[7] ), .CO(
        \add_11_root_add_199_I16/carry[8] ), .S(N130) );
  OAI222D0 U313 ( .A1(n258), .A2(n125), .B1(n332), .B2(n123), .C1(n127), .C2(
        n333), .ZN(\shifted_products[7][7] ) );
  OAI222D0 U314 ( .A1(n244), .A2(n129), .B1(n256), .B2(n133), .C1(n333), .C2(
        n131), .ZN(\shifted_products[6][7] ) );
  FA1D0 U315 ( .A(\shifted_products[8][7] ), .B(\shifted_products[9][7] ), 
        .CI(\add_10_root_add_199_I16/carry[7] ), .CO(
        \add_10_root_add_199_I16/carry[8] ), .S(N155) );
  OAI222D0 U316 ( .A1(n261), .A2(n116), .B1(n245), .B2(n112), .C1(n114), .C2(
        n341), .ZN(\shifted_products[9][7] ) );
  OAI222D0 U317 ( .A1(n51), .A2(n78), .B1(n251), .B2(n80), .C1(n82), .C2(n322), 
        .ZN(\shifted_products[15][4] ) );
  OAI222D0 U318 ( .A1(n19), .A2(n84), .B1(n250), .B2(n86), .C1(n333), .C2(n88), 
        .ZN(\shifted_products[14][4] ) );
  OAI222D0 U319 ( .A1(n51), .A2(n77), .B1(n251), .B2(n79), .C1(n81), .C2(n322), 
        .ZN(\shifted_products[15][5] ) );
  OAI222D0 U320 ( .A1(n19), .A2(n83), .B1(n250), .B2(n85), .C1(n333), .C2(n87), 
        .ZN(\shifted_products[14][5] ) );
  OAI222D0 U321 ( .A1(n260), .A2(n81), .B1(n295), .B2(n77), .C1(n79), .C2(n322), .ZN(\shifted_products[15][7] ) );
  OAI222D0 U322 ( .A1(n246), .A2(n83), .B1(n255), .B2(n87), .C1(n333), .C2(n85), .ZN(\shifted_products[14][7] ) );
  FA1D0 U323 ( .A(\shifted_products[8][4] ), .B(\shifted_products[9][4] ), 
        .CI(\add_10_root_add_199_I16/carry[4] ), .CO(
        \add_10_root_add_199_I16/carry[5] ), .S(N152) );
  OAI222D0 U324 ( .A1(n340), .A2(n113), .B1(n252), .B2(n115), .C1(n341), .C2(
        n117), .ZN(\shifted_products[9][4] ) );
  FA1D0 U325 ( .A(\shifted_products[10][4] ), .B(\shifted_products[11][4] ), 
        .CI(\add_9_root_add_199_I16/carry[4] ), .CO(
        \add_9_root_add_199_I16/carry[5] ), .S(N178) );
  OAI222D0 U326 ( .A1(n340), .A2(n102), .B1(n257), .B2(n104), .C1(n341), .C2(
        n106), .ZN(\shifted_products[11][4] ) );
  FA1D0 U327 ( .A(\shifted_products[12][7] ), .B(\shifted_products[13][7] ), 
        .CI(\add_8_root_add_199_I16/carry[7] ), .CO(
        \add_8_root_add_199_I16/carry[8] ), .S(N208) );
  OAI222D0 U328 ( .A1(n254), .A2(n91), .B1(n280), .B2(n89), .C1(n341), .C2(n93), .ZN(\shifted_products[13][7] ) );
  FA1D0 U329 ( .A(\shifted_products[8][5] ), .B(\shifted_products[9][5] ), 
        .CI(\add_10_root_add_199_I16/carry[5] ), .CO(
        \add_10_root_add_199_I16/carry[6] ), .S(N153) );
  OAI222D0 U330 ( .A1(n340), .A2(n112), .B1(n252), .B2(n114), .C1(n341), .C2(
        n116), .ZN(\shifted_products[9][5] ) );
  FA1D0 U331 ( .A(\shifted_products[10][5] ), .B(\shifted_products[11][5] ), 
        .CI(\add_9_root_add_199_I16/carry[5] ), .CO(
        \add_9_root_add_199_I16/carry[6] ), .S(N179) );
  OAI222D0 U332 ( .A1(n340), .A2(n101), .B1(n257), .B2(n103), .C1(n341), .C2(
        n105), .ZN(\shifted_products[11][5] ) );
  OAI21D1 U333 ( .A1(n270), .A2(n110), .B(n269), .ZN(\shifted_products[10][5] ) );
  FA1D0 U334 ( .A(\shifted_products[6][9] ), .B(\shifted_products[7][9] ), 
        .CI(\add_11_root_add_199_I16/carry[9] ), .CO(
        \add_11_root_add_199_I16/carry[10] ), .S(N132) );
  OAI222D0 U335 ( .A1(n244), .A2(n123), .B1(n256), .B2(n127), .C1(n333), .C2(
        n125), .ZN(\shifted_products[7][9] ) );
  OAI22D1 U336 ( .A1(n256), .A2(n131), .B1(n320), .B2(n129), .ZN(
        \shifted_products[6][9] ) );
  FA1D0 U337 ( .A(\shifted_products[12][9] ), .B(\shifted_products[13][9] ), 
        .CI(\add_8_root_add_199_I16/carry[9] ), .CO(
        \add_8_root_add_199_I16/carry[10] ), .S(N210) );
  OAI222D0 U338 ( .A1(n261), .A2(n93), .B1(n245), .B2(n89), .C1(n341), .C2(n91), .ZN(\shifted_products[13][9] ) );
  FA1D0 U339 ( .A(\shifted_products[10][7] ), .B(\shifted_products[11][7] ), 
        .CI(\add_9_root_add_199_I16/carry[7] ), .CO(
        \add_9_root_add_199_I16/carry[8] ), .S(N181) );
  OAI21D1 U340 ( .A1(n270), .A2(n108), .B(n269), .ZN(\shifted_products[10][7] ) );
  OAI222D0 U341 ( .A1(n246), .A2(n101), .B1(n253), .B2(n105), .C1(n341), .C2(
        n103), .ZN(\shifted_products[11][7] ) );
  FA1D0 U342 ( .A(\shifted_products[10][8] ), .B(\shifted_products[11][8] ), 
        .CI(\add_9_root_add_199_I16/carry[8] ), .CO(
        \add_9_root_add_199_I16/carry[9] ), .S(N182) );
  OAI222D0 U343 ( .A1(n246), .A2(n101), .B1(n253), .B2(n104), .C1(n341), .C2(
        n102), .ZN(\shifted_products[11][8] ) );
  OAI221D0 U344 ( .A1(n270), .A2(n107), .B1(n50), .B2(n111), .C(n269), .ZN(
        \shifted_products[10][8] ) );
  FA1D0 U345 ( .A(\shifted_products[10][10] ), .B(\shifted_products[11][10] ), 
        .CI(\add_9_root_add_199_I16/carry[10] ), .CO(
        \add_9_root_add_199_I16/carry[11] ), .S(N184) );
  OAI222D0 U346 ( .A1(n253), .A2(n102), .B1(n275), .B2(n101), .C1(n49), .C2(
        n106), .ZN(\shifted_products[11][10] ) );
  OAI21D1 U347 ( .A1(n49), .A2(n109), .B(n271), .ZN(\shifted_products[10][10] ) );
  FA1D0 U348 ( .A(\shifted_products[12][4] ), .B(\shifted_products[13][4] ), 
        .CI(\add_8_root_add_199_I16/carry[4] ), .CO(
        \add_8_root_add_199_I16/carry[5] ), .S(N205) );
  OAI222D0 U349 ( .A1(n254), .A2(n94), .B1(n248), .B2(n92), .C1(n51), .C2(n90), 
        .ZN(\shifted_products[13][4] ) );
  FA1D0 U350 ( .A(\shifted_products[6][5] ), .B(\shifted_products[7][5] ), 
        .CI(\add_11_root_add_199_I16/carry[5] ), .CO(
        \add_11_root_add_199_I16/carry[6] ), .S(N128) );
  OAI222D0 U351 ( .A1(n19), .A2(n129), .B1(n249), .B2(n131), .C1(n333), .C2(
        n133), .ZN(\shifted_products[6][5] ) );
  OAI222D0 U352 ( .A1(n247), .A2(n125), .B1(n258), .B2(n127), .C1(n123), .C2(
        n52), .ZN(\shifted_products[7][5] ) );
  OAI222D0 U353 ( .A1(n304), .A2(n232), .B1(n302), .B2(n228), .C1(n329), .C2(
        n227), .ZN(\shifted_products[3][6] ) );
  FA1D0 U354 ( .A(\shifted_products[4][4] ), .B(\shifted_products[5][4] ), 
        .CI(\add_12_root_add_199_I16/carry[4] ), .CO(
        \add_12_root_add_199_I16/carry[5] ), .S(N103) );
  OAI222D0 U355 ( .A1(n309), .A2(n218), .B1(n312), .B2(n220), .C1(n51), .C2(
        n216), .ZN(\shifted_products[5][4] ) );
  FA1D0 U356 ( .A(\shifted_products[6][4] ), .B(\shifted_products[7][4] ), 
        .CI(\add_11_root_add_199_I16/carry[4] ), .CO(
        \add_11_root_add_199_I16/carry[5] ), .S(N127) );
  OAI222D0 U357 ( .A1(n19), .A2(n130), .B1(n249), .B2(n132), .C1(n333), .C2(
        n134), .ZN(\shifted_products[6][4] ) );
  OAI222D0 U358 ( .A1(n247), .A2(n126), .B1(n258), .B2(n128), .C1(n124), .C2(
        n52), .ZN(\shifted_products[7][4] ) );
  FA1D0 U359 ( .A(\shifted_products[8][6] ), .B(\shifted_products[9][6] ), 
        .CI(\add_10_root_add_199_I16/carry[6] ), .CO(
        \add_10_root_add_199_I16/carry[7] ), .S(N154) );
  OAI221D0 U360 ( .A1(n340), .A2(n112), .B1(n115), .B2(n341), .C(n339), .ZN(
        \shifted_products[9][6] ) );
  OAI221D0 U361 ( .A1(n51), .A2(n77), .B1(n80), .B2(n322), .C(n292), .ZN(
        \shifted_products[15][6] ) );
  OAI221D0 U362 ( .A1(n19), .A2(n83), .B1(n333), .B2(n86), .C(n284), .ZN(
        \shifted_products[14][6] ) );
  FA1D0 U363 ( .A(\shifted_products[10][6] ), .B(\shifted_products[11][6] ), 
        .CI(\add_9_root_add_199_I16/carry[6] ), .CO(
        \add_9_root_add_199_I16/carry[7] ), .S(N180) );
  OAI221D0 U364 ( .A1(n340), .A2(n101), .B1(n341), .B2(n104), .C(n274), .ZN(
        \shifted_products[11][6] ) );
  OAI21D1 U365 ( .A1(n270), .A2(n109), .B(n269), .ZN(\shifted_products[10][6] ) );
  OAI221D0 U366 ( .A1(n297), .A2(n81), .B1(n260), .B2(n79), .C(n296), .ZN(
        \shifted_products[15][9] ) );
  OAI221D0 U367 ( .A1(n297), .A2(n80), .B1(n260), .B2(n78), .C(n296), .ZN(
        \shifted_products[15][10] ) );
  OAI222D0 U368 ( .A1(n255), .A2(n84), .B1(n285), .B2(n83), .C1(n49), .C2(n88), 
        .ZN(\shifted_products[14][10] ) );
  FA1D0 U369 ( .A(\shifted_products[6][8] ), .B(\shifted_products[7][8] ), 
        .CI(\add_11_root_add_199_I16/carry[8] ), .CO(
        \add_11_root_add_199_I16/carry[9] ), .S(N131) );
  OAI221D0 U370 ( .A1(n332), .A2(n123), .B1(n258), .B2(n124), .C(n331), .ZN(
        \shifted_products[7][8] ) );
  OAI222D0 U371 ( .A1(n244), .A2(n129), .B1(n256), .B2(n132), .C1(n333), .C2(
        n130), .ZN(\shifted_products[6][8] ) );
  OAI221D0 U372 ( .A1(n297), .A2(n78), .B1(n82), .B2(n50), .C(n287), .ZN(
        \shifted_products[15][12] ) );
  OAI21D1 U373 ( .A1(n49), .A2(n86), .B(n281), .ZN(\shifted_products[14][12] )
         );
  FA1D0 U374 ( .A(\shifted_products[4][2] ), .B(\shifted_products[5][2] ), 
        .CI(\add_12_root_add_199_I16/carry[2] ), .CO(
        \add_12_root_add_199_I16/carry[3] ), .S(N101) );
  FA1D0 U375 ( .A(\shifted_products[2][2] ), .B(\shifted_products[3][2] ), 
        .CI(\add_13_root_add_199_I16/carry[2] ), .CO(
        \add_13_root_add_199_I16/carry[3] ), .S(N78) );
  FA1D0 U376 ( .A(\shifted_products[10][2] ), .B(\shifted_products[11][2] ), 
        .CI(\add_9_root_add_199_I16/carry[2] ), .CO(
        \add_9_root_add_199_I16/carry[3] ), .S(N176) );
  FA1D0 U377 ( .A(\shifted_products[2][4] ), .B(\shifted_products[3][4] ), 
        .CI(\add_13_root_add_199_I16/carry[4] ), .CO(
        \add_13_root_add_199_I16/carry[5] ), .S(N80) );
  FA1D0 U378 ( .A(\shifted_products[6][2] ), .B(\shifted_products[7][2] ), 
        .CI(\add_11_root_add_199_I16/carry[2] ), .CO(
        \add_11_root_add_199_I16/carry[3] ), .S(N125) );
  OAI22D1 U379 ( .A1(n126), .A2(n51), .B1(n247), .B2(n128), .ZN(
        \shifted_products[7][2] ) );
  FA1D0 U380 ( .A(\shifted_products[12][2] ), .B(\shifted_products[13][2] ), 
        .CI(\add_8_root_add_199_I16/carry[2] ), .CO(
        \add_8_root_add_199_I16/carry[3] ), .S(N203) );
  FA1D0 U381 ( .A(\shifted_products[8][2] ), .B(\shifted_products[9][2] ), 
        .CI(\add_10_root_add_199_I16/carry[2] ), .CO(
        \add_10_root_add_199_I16/carry[3] ), .S(N150) );
  FA1D0 U382 ( .A(\products[0][3] ), .B(\shifted_products[1][3] ), .CI(
        \add_14_root_add_199_I16/carry[3] ), .CO(
        \add_14_root_add_199_I16/carry[4] ), .S(N57) );
  FA1D0 U383 ( .A(\products[0][4] ), .B(\shifted_products[1][4] ), .CI(
        \add_14_root_add_199_I16/carry[4] ), .CO(
        \add_14_root_add_199_I16/carry[5] ), .S(N58) );
  FA1D0 U384 ( .A(\products[0][1] ), .B(\shifted_products[1][1] ), .CI(
        \add_14_root_add_199_I16/carry[1] ), .CO(
        \add_14_root_add_199_I16/carry[2] ), .S(N55) );
  INVD1 U385 ( .I(\products[12][4] ), .ZN(n96) );
  FA1D0 U386 ( .A(\shifted_products[6][10] ), .B(\shifted_products[7][10] ), 
        .CI(\add_11_root_add_199_I16/carry[10] ), .CO(
        \add_11_root_add_199_I16/carry[11] ), .S(N133) );
  OAI222D0 U387 ( .A1(n244), .A2(n123), .B1(n256), .B2(n126), .C1(n333), .C2(
        n124), .ZN(\shifted_products[7][10] ) );
  OAI22D1 U388 ( .A1(n256), .A2(n130), .B1(n320), .B2(n129), .ZN(
        \shifted_products[6][10] ) );
  OAI21D1 U389 ( .A1(n80), .A2(n50), .B(n289), .ZN(\shifted_products[15][14] )
         );
  OAI21D1 U390 ( .A1(n50), .A2(n84), .B(n281), .ZN(\shifted_products[14][14] )
         );
  FA1D0 U391 ( .A(\shifted_products[10][12] ), .B(\shifted_products[11][12] ), 
        .CI(\add_9_root_add_199_I16/carry[12] ), .CO(
        \add_9_root_add_199_I16/carry[13] ), .S(N186) );
  OAI21D1 U392 ( .A1(n49), .A2(n104), .B(n272), .ZN(\shifted_products[11][12] ) );
  OAI21D1 U393 ( .A1(n49), .A2(n107), .B(n271), .ZN(\shifted_products[10][12] ) );
  FA1D0 U394 ( .A(\shifted_products[12][10] ), .B(\shifted_products[13][10] ), 
        .CI(\add_8_root_add_199_I16/carry[10] ), .CO(
        \add_8_root_add_199_I16/carry[11] ), .S(N211) );
  OAI21D1 U395 ( .A1(n336), .A2(n96), .B(n276), .ZN(\shifted_products[12][10] ) );
  OAI222D0 U396 ( .A1(n261), .A2(n92), .B1(n245), .B2(n89), .C1(n341), .C2(n90), .ZN(\shifted_products[13][10] ) );
  FA1D0 U397 ( .A(\shifted_products[8][8] ), .B(\shifted_products[9][8] ), 
        .CI(\add_10_root_add_199_I16/carry[8] ), .CO(
        \add_10_root_add_199_I16/carry[9] ), .S(N156) );
  OAI21D1 U398 ( .A1(n336), .A2(n118), .B(n335), .ZN(\shifted_products[8][8] )
         );
  OAI222D0 U399 ( .A1(n261), .A2(n115), .B1(n245), .B2(n112), .C1(n341), .C2(
        n113), .ZN(\shifted_products[9][8] ) );
  FA1D0 U400 ( .A(\shifted_products[4][6] ), .B(\shifted_products[5][6] ), 
        .CI(\add_12_root_add_199_I16/carry[6] ), .CO(
        \add_12_root_add_199_I16/carry[7] ), .S(N105) );
  OAI22D1 U401 ( .A1(n307), .A2(n221), .B1(n306), .B2(n222), .ZN(
        \shifted_products[4][6] ) );
  OAI222D0 U402 ( .A1(n309), .A2(n216), .B1(n312), .B2(n218), .C1(n51), .C2(
        n135), .ZN(\shifted_products[5][6] ) );
  NR2D1 U403 ( .A1(n52), .A2(n220), .ZN(\shifted_products[5][0] ) );
  INVD1 U404 ( .I(\products[1][4] ), .ZN(n239) );
  INVD1 U405 ( .I(\products[1][3] ), .ZN(n240) );
  CKBD1 U406 ( .I(n314), .Z(n50) );
  INR2D1 U407 ( .A1(n333), .B1(n315), .ZN(n320) );
  INR2D1 U408 ( .A1(n333), .B1(n286), .ZN(n285) );
  INVD1 U409 ( .I(\products[11][3] ), .ZN(n103) );
  INVD1 U410 ( .I(\products[9][3] ), .ZN(n114) );
  INVD1 U411 ( .I(\products[11][4] ), .ZN(n102) );
  ND2D1 U412 ( .A1(n322), .A2(n290), .ZN(n282) );
  ND2D1 U413 ( .A1(n290), .A2(n328), .ZN(n291) );
  ND2D1 U414 ( .A1(n323), .A2(n322), .ZN(n325) );
  INVD1 U415 ( .I(\products[9][4] ), .ZN(n113) );
  INVD1 U416 ( .I(\products[3][3] ), .ZN(n229) );
  INVD1 U417 ( .I(\products[3][4] ), .ZN(n228) );
  INVD1 U418 ( .I(\products[10][4] ), .ZN(n107) );
  INVD1 U419 ( .I(\products[10][3] ), .ZN(n108) );
  INVD1 U420 ( .I(\products[2][4] ), .ZN(n233) );
  INVD1 U421 ( .I(\products[8][4] ), .ZN(n118) );
  INVD1 U422 ( .I(\products[2][3] ), .ZN(n234) );
  INVD1 U423 ( .I(\products[8][3] ), .ZN(n119) );
  CKBD1 U424 ( .I(n314), .Z(n49) );
  INVD1 U425 ( .I(\products[15][1] ), .ZN(n81) );
  INVD1 U426 ( .I(\products[7][1] ), .ZN(n127) );
  INVD1 U427 ( .I(\products[14][1] ), .ZN(n87) );
  INVD1 U428 ( .I(\products[13][1] ), .ZN(n93) );
  INVD1 U429 ( .I(\products[6][1] ), .ZN(n133) );
  INVD1 U430 ( .I(\products[5][1] ), .ZN(n219) );
  INVD1 U431 ( .I(\products[12][1] ), .ZN(n99) );
  INVD1 U432 ( .I(\products[3][1] ), .ZN(n231) );
  INVD1 U433 ( .I(\products[4][1] ), .ZN(n225) );
  INVD1 U434 ( .I(\products[1][1] ), .ZN(n242) );
  INVD1 U435 ( .I(\products[2][1] ), .ZN(n236) );
  INVD1 U436 ( .I(\products[15][0] ), .ZN(n82) );
  INVD1 U437 ( .I(\products[14][0] ), .ZN(n88) );
  INVD1 U438 ( .I(\products[11][0] ), .ZN(n106) );
  INVD1 U439 ( .I(\products[7][0] ), .ZN(n128) );
  INVD1 U440 ( .I(\products[6][0] ), .ZN(n134) );
  INVD1 U441 ( .I(\products[9][0] ), .ZN(n117) );
  INVD1 U442 ( .I(\products[11][1] ), .ZN(n105) );
  INVD1 U443 ( .I(\products[9][1] ), .ZN(n116) );
  INVD1 U444 ( .I(\products[10][1] ), .ZN(n110) );
  INVD1 U445 ( .I(\products[8][1] ), .ZN(n121) );
  INVD1 U446 ( .I(\products[13][2] ), .ZN(n92) );
  FA1D0 U447 ( .A(\shifted_products[6][6] ), .B(\shifted_products[7][6] ), 
        .CI(\add_11_root_add_199_I16/carry[6] ), .CO(
        \add_11_root_add_199_I16/carry[7] ), .S(N129) );
  OAI221D0 U448 ( .A1(n123), .A2(n51), .B1(n333), .B2(n128), .C(n326), .ZN(
        \shifted_products[7][6] ) );
  OAI221D0 U449 ( .A1(n19), .A2(n129), .B1(n333), .B2(n132), .C(n318), .ZN(
        \shifted_products[6][6] ) );
  FA1D0 U450 ( .A(\shifted_products[12][6] ), .B(\shifted_products[13][6] ), 
        .CI(\add_8_root_add_199_I16/carry[6] ), .CO(
        \add_8_root_add_199_I16/carry[7] ), .S(N207) );
  OAI222D0 U451 ( .A1(n307), .A2(n95), .B1(n305), .B2(n96), .C1(n336), .C2(
        n100), .ZN(\shifted_products[12][6] ) );
  OAI221D0 U452 ( .A1(n51), .A2(n89), .B1(n341), .B2(n94), .C(n278), .ZN(
        \shifted_products[13][6] ) );
  OAI221D0 U453 ( .A1(n295), .A2(n77), .B1(n297), .B2(n82), .C(n294), .ZN(
        \shifted_products[15][8] ) );
  OAI222D0 U454 ( .A1(n246), .A2(n83), .B1(n255), .B2(n86), .C1(n333), .C2(n84), .ZN(\shifted_products[14][8] ) );
  FA1D0 U455 ( .A(\shifted_products[12][8] ), .B(\shifted_products[13][8] ), 
        .CI(\add_8_root_add_199_I16/carry[8] ), .CO(
        \add_8_root_add_199_I16/carry[9] ), .S(N209) );
  OAI221D0 U456 ( .A1(n280), .A2(n89), .B1(n261), .B2(n94), .C(n279), .ZN(
        \shifted_products[13][8] ) );
  FA1D0 U457 ( .A(\products[0][2] ), .B(\shifted_products[1][2] ), .CI(
        \add_14_root_add_199_I16/carry[2] ), .CO(
        \add_14_root_add_199_I16/carry[3] ), .S(N56) );
  INVD1 U458 ( .I(\products[1][2] ), .ZN(n241) );
  INVD1 U459 ( .I(\products[15][2] ), .ZN(n80) );
  INVD1 U460 ( .I(\products[14][2] ), .ZN(n86) );
  INVD1 U461 ( .I(\products[11][2] ), .ZN(n104) );
  INVD1 U462 ( .I(\products[9][2] ), .ZN(n115) );
  INVD1 U463 ( .I(\products[7][2] ), .ZN(n126) );
  INVD1 U464 ( .I(\products[3][2] ), .ZN(n230) );
  INVD1 U465 ( .I(\products[10][2] ), .ZN(n109) );
  INVD1 U466 ( .I(\products[2][2] ), .ZN(n235) );
  INVD1 U467 ( .I(\products[8][2] ), .ZN(n120) );
  INVD1 U468 ( .I(\products[4][0] ), .ZN(n226) );
  INVD1 U469 ( .I(\products[5][0] ), .ZN(n220) );
  INVD1 U470 ( .I(\products[12][0] ), .ZN(n100) );
  INVD1 U471 ( .I(\products[13][0] ), .ZN(n94) );
  INVD1 U472 ( .I(\products[10][0] ), .ZN(n111) );
  INVD1 U473 ( .I(\products[3][0] ), .ZN(n232) );
  INVD1 U474 ( .I(\products[1][0] ), .ZN(n243) );
  INVD1 U475 ( .I(\products[2][0] ), .ZN(n237) );
  INVD1 U476 ( .I(\products[8][0] ), .ZN(n122) );
  INR3D0 U477 ( .A1(input_bitwidth[2]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[1]), .ZN(n264) );
  INR3D0 U478 ( .A1(weight_bitwidth[0]), .B1(weight_bitwidth[1]), .B2(
        weight_bitwidth[2]), .ZN(n263) );
  INR3D0 U479 ( .A1(input_bitwidth[0]), .B1(input_bitwidth[1]), .B2(
        input_bitwidth[2]), .ZN(n267) );
  INR3D0 U480 ( .A1(input_bitwidth[1]), .B1(input_bitwidth[0]), .B2(
        input_bitwidth[2]), .ZN(n266) );
  INR3D0 U481 ( .A1(weight_bitwidth[1]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[2]), .ZN(n268) );
  INR3D0 U482 ( .A1(weight_bitwidth[2]), .B1(weight_bitwidth[0]), .B2(
        weight_bitwidth[1]), .ZN(n265) );
  TIEL U483 ( .ZN(n262) );
  AN2D0 U484 ( .A1(\shifted_products[2][0] ), .A2(\shifted_products[3][0] ), 
        .Z(\add_13_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U485 ( .A1(\shifted_products[3][0] ), .A2(\shifted_products[2][0] ), 
        .Z(N76) );
  AN2D0 U486 ( .A1(\products[0][0] ), .A2(\shifted_products[1][0] ), .Z(
        \add_14_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U487 ( .A1(\shifted_products[1][0] ), .A2(\products[0][0] ), .Z(N54) );
  AN2D0 U488 ( .A1(\shifted_products[12][0] ), .A2(\shifted_products[13][0] ), 
        .Z(\add_8_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U489 ( .A1(\shifted_products[13][0] ), .A2(
        \shifted_products[12][0] ), .Z(N201) );
  AN2D0 U490 ( .A1(\shifted_products[6][0] ), .A2(\shifted_products[7][0] ), 
        .Z(\add_11_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U491 ( .A1(\shifted_products[7][0] ), .A2(\shifted_products[6][0] ), 
        .Z(N123) );
  AN2D0 U492 ( .A1(\shifted_products[4][0] ), .A2(\shifted_products[5][0] ), 
        .Z(\add_12_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U493 ( .A1(\shifted_products[5][0] ), .A2(\shifted_products[4][0] ), 
        .Z(N99) );
  AN2D0 U494 ( .A1(\shifted_products[8][0] ), .A2(\shifted_products[9][0] ), 
        .Z(\add_10_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U495 ( .A1(\shifted_products[9][0] ), .A2(\shifted_products[8][0] ), 
        .Z(N148) );
  AN2D0 U496 ( .A1(\shifted_products[10][0] ), .A2(\shifted_products[11][0] ), 
        .Z(\add_9_root_add_199_I16/carry[1] ) );
  CKXOR2D0 U497 ( .A1(\shifted_products[11][0] ), .A2(
        \shifted_products[10][0] ), .Z(N174) );
  XOR3D0 U498 ( .A1(\add_8_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[13][11] ), .A3(\products[12][5] ), .Z(N212) );
  XOR3D0 U499 ( .A1(\shifted_products[13][12] ), .A2(n54), .A3(n95), .Z(N213)
         );
  XOR3D0 U500 ( .A1(\products[13][5] ), .A2(\products[12][5] ), .A3(n55), .Z(
        N214) );
  CKND0 U501 ( .I(\shifted_products[13][12] ), .ZN(n57) );
  XNR3D0 U502 ( .A1(\add_9_root_add_199_I16/carry[13] ), .A2(
        \shifted_products[11][13] ), .A3(n58), .ZN(N187) );
  XNR3D0 U503 ( .A1(n48), .A2(n59), .A3(n58), .ZN(N188) );
  XNR3D0 U504 ( .A1(\products[11][5] ), .A2(n58), .A3(n60), .ZN(N189) );
  OAI222D0 U505 ( .A1(n59), .A2(n58), .B1(n59), .B2(n48), .C1(n58), .C2(n48), 
        .ZN(n60) );
  CKND0 U506 ( .I(\products[10][5] ), .ZN(n58) );
  XOR3D0 U507 ( .A1(\add_10_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[9][9] ), .A3(\products[8][5] ), .Z(N157) );
  XOR3D0 U508 ( .A1(\shifted_products[9][10] ), .A2(n61), .A3(n62), .Z(N158)
         );
  XOR3D0 U509 ( .A1(\products[9][5] ), .A2(\products[8][5] ), .A3(n63), .Z(
        N159) );
  AOI222D0 U510 ( .A1(n63), .A2(\products[8][5] ), .B1(n63), .B2(
        \products[9][5] ), .C1(\products[8][5] ), .C2(\products[9][5] ), .ZN(
        n64) );
  OAI222D0 U511 ( .A1(n61), .A2(n62), .B1(n61), .B2(n65), .C1(n62), .C2(n65), 
        .ZN(n63) );
  CKND0 U512 ( .I(\shifted_products[9][10] ), .ZN(n65) );
  CKND0 U513 ( .I(\products[8][5] ), .ZN(n62) );
  XNR3D0 U514 ( .A1(\add_11_root_add_199_I16/carry[11] ), .A2(
        \shifted_products[7][11] ), .A3(n129), .ZN(N134) );
  XNR3D0 U515 ( .A1(n47), .A2(n1), .A3(n129), .ZN(N135) );
  XNR3D0 U516 ( .A1(\products[7][5] ), .A2(n129), .A3(n67), .ZN(N136) );
  XOR3D0 U517 ( .A1(\add_12_root_add_199_I16/carry[7] ), .A2(
        \shifted_products[5][7] ), .A3(\products[4][5] ), .Z(N106) );
  XOR3D0 U518 ( .A1(\shifted_products[5][8] ), .A2(n68), .A3(n221), .Z(N107)
         );
  XOR3D0 U519 ( .A1(\products[5][5] ), .A2(\products[4][5] ), .A3(n69), .Z(
        N108) );
  CKND0 U520 ( .I(\shifted_products[5][8] ), .ZN(n71) );
  XNR3D0 U521 ( .A1(\add_13_root_add_199_I16/carry[9] ), .A2(
        \shifted_products[3][9] ), .A3(n72), .ZN(N85) );
  XNR3D0 U522 ( .A1(\products[3][5] ), .A2(n72), .A3(n74), .ZN(N87) );
  XNR3D0 U523 ( .A1(\add_14_root_add_199_I16/carry[6] ), .A2(
        \shifted_products[1][6] ), .A3(n75), .ZN(N60) );
  XNR3D0 U524 ( .A1(n238), .A2(n76), .A3(n75), .ZN(N61) );
  CKND0 U525 ( .I(\shifted_products[0][9] ), .ZN(n75) );
endmodule


module fusion_unit_0_DW01_add_0_DW01_add_4 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module fusion_unit_0 ( clk, nRST, input_bitwidth, weight_bitwidth, input_sign, 
        weight_sign, input_forward, weight, psum_in, psum, input_to_right );
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  input [3:0] input_sign;
  input [3:0] weight_sign;
  input [31:0] input_forward;
  input [31:0] weight;
  input [31:0] psum_in;
  output [31:0] psum;
  output [31:0] input_to_right;
  input clk, nRST;
  wire   \products[15][5] , \products[15][4] , \products[15][3] ,
         \products[15][2] , \products[15][1] , \products[15][0] ,
         \products[14][5] , \products[14][4] , \products[14][3] ,
         \products[14][2] , \products[14][1] , \products[14][0] ,
         \products[13][5] , \products[13][4] , \products[13][3] ,
         \products[13][2] , \products[13][1] , \products[13][0] ,
         \products[12][5] , \products[12][4] , \products[12][3] ,
         \products[12][2] , \products[12][1] , \products[12][0] ,
         \products[11][5] , \products[11][4] , \products[11][3] ,
         \products[11][2] , \products[11][1] , \products[11][0] ,
         \products[10][5] , \products[10][4] , \products[10][3] ,
         \products[10][2] , \products[10][1] , \products[10][0] ,
         \products[9][5] , \products[9][4] , \products[9][3] ,
         \products[9][2] , \products[9][1] , \products[9][0] ,
         \products[8][5] , \products[8][4] , \products[8][3] ,
         \products[8][2] , \products[8][1] , \products[8][0] ,
         \products[7][5] , \products[7][4] , \products[7][3] ,
         \products[7][2] , \products[7][1] , \products[7][0] ,
         \products[6][5] , \products[6][4] , \products[6][3] ,
         \products[6][2] , \products[6][1] , \products[6][0] ,
         \products[5][5] , \products[5][4] , \products[5][3] ,
         \products[5][2] , \products[5][1] , \products[5][0] ,
         \products[4][5] , \products[4][4] , \products[4][3] ,
         \products[4][2] , \products[4][1] , \products[4][0] ,
         \products[3][5] , \products[3][4] , \products[3][3] ,
         \products[3][2] , \products[3][1] , \products[3][0] ,
         \products[2][5] , \products[2][4] , \products[2][3] ,
         \products[2][2] , \products[2][1] , \products[2][0] ,
         \products[1][5] , \products[1][4] , \products[1][3] ,
         \products[1][2] , \products[1][1] , \products[1][0] ,
         \products[0][5] , \products[0][4] , \products[0][3] ,
         \products[0][2] , \products[0][1] , \products[0][0] , n2;
  wire   [31:0] shift_add_out;
  assign input_to_right[31] = input_forward[31];
  assign input_to_right[30] = input_forward[30];
  assign input_to_right[29] = input_forward[29];
  assign input_to_right[28] = input_forward[28];
  assign input_to_right[27] = input_forward[27];
  assign input_to_right[26] = input_forward[26];
  assign input_to_right[25] = input_forward[25];
  assign input_to_right[24] = input_forward[24];
  assign input_to_right[23] = input_forward[23];
  assign input_to_right[22] = input_forward[22];
  assign input_to_right[21] = input_forward[21];
  assign input_to_right[20] = input_forward[20];
  assign input_to_right[19] = input_forward[19];
  assign input_to_right[18] = input_forward[18];
  assign input_to_right[17] = input_forward[17];
  assign input_to_right[16] = input_forward[16];
  assign input_to_right[15] = input_forward[15];
  assign input_to_right[14] = input_forward[14];
  assign input_to_right[13] = input_forward[13];
  assign input_to_right[12] = input_forward[12];
  assign input_to_right[11] = input_forward[11];
  assign input_to_right[10] = input_forward[10];
  assign input_to_right[9] = input_forward[9];
  assign input_to_right[8] = input_forward[8];
  assign input_to_right[7] = input_forward[7];
  assign input_to_right[6] = input_forward[6];
  assign input_to_right[5] = input_forward[5];
  assign input_to_right[4] = input_forward[4];
  assign input_to_right[3] = input_forward[3];
  assign input_to_right[2] = input_forward[2];
  assign input_to_right[1] = input_forward[1];
  assign input_to_right[0] = input_forward[0];

  bit_brick_15 \genblk1[0].BB  ( .x(input_forward[1:0]), .y(weight[1:0]), .sx(
        input_sign[0]), .sy(weight_sign[0]), .product({\products[0][5] , 
        \products[0][4] , \products[0][3] , \products[0][2] , \products[0][1] , 
        \products[0][0] }) );
  bit_brick_14 \genblk1[1].BB  ( .x(input_forward[3:2]), .y(weight[3:2]), .sx(
        input_sign[0]), .sy(weight_sign[1]), .product({\products[1][5] , 
        \products[1][4] , \products[1][3] , \products[1][2] , \products[1][1] , 
        \products[1][0] }) );
  bit_brick_13 \genblk1[2].BB  ( .x(input_forward[5:4]), .y(weight[5:4]), .sx(
        input_sign[0]), .sy(weight_sign[2]), .product({\products[2][5] , 
        \products[2][4] , \products[2][3] , \products[2][2] , \products[2][1] , 
        \products[2][0] }) );
  bit_brick_12 \genblk1[3].BB  ( .x(input_forward[7:6]), .y(weight[7:6]), .sx(
        input_sign[0]), .sy(weight_sign[3]), .product({\products[3][5] , 
        \products[3][4] , \products[3][3] , \products[3][2] , \products[3][1] , 
        \products[3][0] }) );
  bit_brick_11 \genblk1[4].BB  ( .x(input_forward[9:8]), .y(weight[9:8]), .sx(
        input_sign[1]), .sy(weight_sign[0]), .product({\products[4][5] , 
        \products[4][4] , \products[4][3] , \products[4][2] , \products[4][1] , 
        \products[4][0] }) );
  bit_brick_10 \genblk1[5].BB  ( .x(input_forward[11:10]), .y(weight[11:10]), 
        .sx(input_sign[1]), .sy(weight_sign[1]), .product({\products[5][5] , 
        \products[5][4] , \products[5][3] , \products[5][2] , \products[5][1] , 
        \products[5][0] }) );
  bit_brick_9 \genblk1[6].BB  ( .x(input_forward[13:12]), .y(weight[13:12]), 
        .sx(input_sign[1]), .sy(weight_sign[2]), .product({\products[6][5] , 
        \products[6][4] , \products[6][3] , \products[6][2] , \products[6][1] , 
        \products[6][0] }) );
  bit_brick_8 \genblk1[7].BB  ( .x(input_forward[15:14]), .y(weight[15:14]), 
        .sx(input_sign[1]), .sy(weight_sign[3]), .product({\products[7][5] , 
        \products[7][4] , \products[7][3] , \products[7][2] , \products[7][1] , 
        \products[7][0] }) );
  bit_brick_7 \genblk1[8].BB  ( .x(input_forward[17:16]), .y(weight[17:16]), 
        .sx(input_sign[2]), .sy(weight_sign[0]), .product({\products[8][5] , 
        \products[8][4] , \products[8][3] , \products[8][2] , \products[8][1] , 
        \products[8][0] }) );
  bit_brick_6 \genblk1[9].BB  ( .x(input_forward[19:18]), .y(weight[19:18]), 
        .sx(input_sign[2]), .sy(weight_sign[1]), .product({\products[9][5] , 
        \products[9][4] , \products[9][3] , \products[9][2] , \products[9][1] , 
        \products[9][0] }) );
  bit_brick_5 \genblk1[10].BB  ( .x(input_forward[21:20]), .y(weight[21:20]), 
        .sx(input_sign[2]), .sy(weight_sign[2]), .product({\products[10][5] , 
        \products[10][4] , \products[10][3] , \products[10][2] , 
        \products[10][1] , \products[10][0] }) );
  bit_brick_4 \genblk1[11].BB  ( .x(input_forward[23:22]), .y(weight[23:22]), 
        .sx(input_sign[2]), .sy(weight_sign[3]), .product({\products[11][5] , 
        \products[11][4] , \products[11][3] , \products[11][2] , 
        \products[11][1] , \products[11][0] }) );
  bit_brick_3 \genblk1[12].BB  ( .x(input_forward[25:24]), .y(weight[25:24]), 
        .sx(input_sign[3]), .sy(weight_sign[0]), .product({\products[12][5] , 
        \products[12][4] , \products[12][3] , \products[12][2] , 
        \products[12][1] , \products[12][0] }) );
  bit_brick_2 \genblk1[13].BB  ( .x(input_forward[27:26]), .y(weight[27:26]), 
        .sx(input_sign[3]), .sy(weight_sign[1]), .product({\products[13][5] , 
        \products[13][4] , \products[13][3] , \products[13][2] , 
        \products[13][1] , \products[13][0] }) );
  bit_brick_1 \genblk1[14].BB  ( .x(input_forward[29:28]), .y(weight[29:28]), 
        .sx(input_sign[3]), .sy(weight_sign[2]), .product({\products[14][5] , 
        \products[14][4] , \products[14][3] , \products[14][2] , 
        \products[14][1] , \products[14][0] }) );
  bit_brick_0 \genblk1[15].BB  ( .x(input_forward[31:30]), .y(weight[31:30]), 
        .sx(input_sign[3]), .sy(weight_sign[3]), .product({\products[15][5] , 
        \products[15][4] , \products[15][3] , \products[15][2] , 
        \products[15][1] , \products[15][0] }) );
  shift_add_0 shift_add ( .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .products({\products[15][5] , \products[15][4] , 
        \products[15][3] , \products[15][2] , \products[15][1] , 
        \products[15][0] , \products[14][5] , \products[14][4] , 
        \products[14][3] , \products[14][2] , \products[14][1] , 
        \products[14][0] , \products[13][5] , \products[13][4] , 
        \products[13][3] , \products[13][2] , \products[13][1] , 
        \products[13][0] , \products[12][5] , \products[12][4] , 
        \products[12][3] , \products[12][2] , \products[12][1] , 
        \products[12][0] , \products[11][5] , \products[11][4] , 
        \products[11][3] , \products[11][2] , \products[11][1] , 
        \products[11][0] , \products[10][5] , \products[10][4] , 
        \products[10][3] , \products[10][2] , \products[10][1] , 
        \products[10][0] , \products[9][5] , \products[9][4] , 
        \products[9][3] , \products[9][2] , \products[9][1] , \products[9][0] , 
        \products[8][5] , \products[8][4] , \products[8][3] , \products[8][2] , 
        \products[8][1] , \products[8][0] , \products[7][5] , \products[7][4] , 
        \products[7][3] , \products[7][2] , \products[7][1] , \products[7][0] , 
        \products[6][5] , \products[6][4] , \products[6][3] , \products[6][2] , 
        \products[6][1] , \products[6][0] , \products[5][5] , \products[5][4] , 
        \products[5][3] , \products[5][2] , \products[5][1] , \products[5][0] , 
        \products[4][5] , \products[4][4] , \products[4][3] , \products[4][2] , 
        \products[4][1] , \products[4][0] , \products[3][5] , \products[3][4] , 
        \products[3][3] , \products[3][2] , \products[3][1] , \products[3][0] , 
        \products[2][5] , \products[2][4] , \products[2][3] , \products[2][2] , 
        \products[2][1] , \products[2][0] , \products[1][5] , \products[1][4] , 
        \products[1][3] , \products[1][2] , \products[1][1] , \products[1][0] , 
        \products[0][5] , \products[0][4] , \products[0][3] , \products[0][2] , 
        \products[0][1] , \products[0][0] }), .shift_add_out(shift_add_out) );
  fusion_unit_0_DW01_add_0_DW01_add_4 add_53 ( .A(shift_add_out), .B(psum_in), 
        .CI(n2), .SUM(psum) );
  TIEL U1 ( .ZN(n2) );
endmodule


module accumulator_3_DW01_add_0_DW01_add_3 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module accumulator_3 ( clk, nRST, clear, psum, acc_sum );
  input [31:0] psum;
  output [31:0] acc_sum;
  input clk, nRST, clear;
  wire   N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17, N18,
         N19, N20, N21, N22, N23, N24, N25, N26, N27, N28, N29, N30, N31, N32,
         N33, N34, N35, n1, n2, n3, n4, n5, n6, n7;
  wire   [31:0] next_acc_sum;

  DFCNQD1 \acc_sum_reg[0]  ( .D(next_acc_sum[0]), .CP(clk), .CDN(n2), .Q(
        acc_sum[0]) );
  DFCNQD1 \acc_sum_reg[1]  ( .D(next_acc_sum[1]), .CP(clk), .CDN(n2), .Q(
        acc_sum[1]) );
  DFCNQD1 \acc_sum_reg[2]  ( .D(next_acc_sum[2]), .CP(clk), .CDN(n2), .Q(
        acc_sum[2]) );
  DFCNQD1 \acc_sum_reg[3]  ( .D(next_acc_sum[3]), .CP(clk), .CDN(n2), .Q(
        acc_sum[3]) );
  DFCNQD1 \acc_sum_reg[4]  ( .D(next_acc_sum[4]), .CP(clk), .CDN(n2), .Q(
        acc_sum[4]) );
  DFCNQD1 \acc_sum_reg[5]  ( .D(next_acc_sum[5]), .CP(clk), .CDN(n2), .Q(
        acc_sum[5]) );
  DFCNQD1 \acc_sum_reg[6]  ( .D(next_acc_sum[6]), .CP(clk), .CDN(n3), .Q(
        acc_sum[6]) );
  DFCNQD1 \acc_sum_reg[7]  ( .D(next_acc_sum[7]), .CP(clk), .CDN(n3), .Q(
        acc_sum[7]) );
  DFCNQD1 \acc_sum_reg[8]  ( .D(next_acc_sum[8]), .CP(clk), .CDN(n3), .Q(
        acc_sum[8]) );
  DFCNQD1 \acc_sum_reg[9]  ( .D(next_acc_sum[9]), .CP(clk), .CDN(n3), .Q(
        acc_sum[9]) );
  DFCNQD1 \acc_sum_reg[10]  ( .D(next_acc_sum[10]), .CP(clk), .CDN(n3), .Q(
        acc_sum[10]) );
  DFCNQD1 \acc_sum_reg[11]  ( .D(next_acc_sum[11]), .CP(clk), .CDN(n3), .Q(
        acc_sum[11]) );
  DFCNQD1 \acc_sum_reg[12]  ( .D(next_acc_sum[12]), .CP(clk), .CDN(n2), .Q(
        acc_sum[12]) );
  DFCNQD1 \acc_sum_reg[13]  ( .D(next_acc_sum[13]), .CP(clk), .CDN(n2), .Q(
        acc_sum[13]) );
  DFCNQD1 \acc_sum_reg[14]  ( .D(next_acc_sum[14]), .CP(clk), .CDN(n2), .Q(
        acc_sum[14]) );
  DFCNQD1 \acc_sum_reg[15]  ( .D(next_acc_sum[15]), .CP(clk), .CDN(n2), .Q(
        acc_sum[15]) );
  DFCNQD1 \acc_sum_reg[16]  ( .D(next_acc_sum[16]), .CP(clk), .CDN(n2), .Q(
        acc_sum[16]) );
  DFCNQD1 \acc_sum_reg[17]  ( .D(next_acc_sum[17]), .CP(clk), .CDN(n2), .Q(
        acc_sum[17]) );
  DFCNQD1 \acc_sum_reg[18]  ( .D(next_acc_sum[18]), .CP(clk), .CDN(n2), .Q(
        acc_sum[18]) );
  DFCNQD1 \acc_sum_reg[19]  ( .D(next_acc_sum[19]), .CP(clk), .CDN(n4), .Q(
        acc_sum[19]) );
  DFCNQD1 \acc_sum_reg[20]  ( .D(next_acc_sum[20]), .CP(clk), .CDN(n4), .Q(
        acc_sum[20]) );
  DFCNQD1 \acc_sum_reg[21]  ( .D(next_acc_sum[21]), .CP(clk), .CDN(n4), .Q(
        acc_sum[21]) );
  DFCNQD1 \acc_sum_reg[22]  ( .D(next_acc_sum[22]), .CP(clk), .CDN(n4), .Q(
        acc_sum[22]) );
  DFCNQD1 \acc_sum_reg[23]  ( .D(next_acc_sum[23]), .CP(clk), .CDN(n4), .Q(
        acc_sum[23]) );
  DFCNQD1 \acc_sum_reg[24]  ( .D(next_acc_sum[24]), .CP(clk), .CDN(n4), .Q(
        acc_sum[24]) );
  DFCNQD1 \acc_sum_reg[25]  ( .D(next_acc_sum[25]), .CP(clk), .CDN(n3), .Q(
        acc_sum[25]) );
  DFCNQD1 \acc_sum_reg[26]  ( .D(next_acc_sum[26]), .CP(clk), .CDN(n3), .Q(
        acc_sum[26]) );
  DFCNQD1 \acc_sum_reg[27]  ( .D(next_acc_sum[27]), .CP(clk), .CDN(n3), .Q(
        acc_sum[27]) );
  DFCNQD1 \acc_sum_reg[28]  ( .D(next_acc_sum[28]), .CP(clk), .CDN(n3), .Q(
        acc_sum[28]) );
  DFCNQD1 \acc_sum_reg[29]  ( .D(next_acc_sum[29]), .CP(clk), .CDN(n3), .Q(
        acc_sum[29]) );
  DFCNQD1 \acc_sum_reg[30]  ( .D(next_acc_sum[30]), .CP(clk), .CDN(n3), .Q(
        acc_sum[30]) );
  DFCNQD1 \acc_sum_reg[31]  ( .D(next_acc_sum[31]), .CP(clk), .CDN(n3), .Q(
        acc_sum[31]) );
  accumulator_3_DW01_add_0_DW01_add_3 add_24 ( .A(acc_sum), .B(psum), .CI(n1), 
        .SUM({N35, N34, N33, N32, N31, N30, N29, N28, N27, N26, N25, N24, N23, 
        N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, N12, N11, N10, N9, 
        N8, N7, N6, N5, N4}) );
  INR2D1 U3 ( .A1(N34), .B1(n5), .ZN(next_acc_sum[30]) );
  INR2D1 U4 ( .A1(N33), .B1(n5), .ZN(next_acc_sum[29]) );
  INR2D1 U5 ( .A1(N32), .B1(n5), .ZN(next_acc_sum[28]) );
  INR2D1 U6 ( .A1(N31), .B1(n5), .ZN(next_acc_sum[27]) );
  INR2D1 U7 ( .A1(N30), .B1(n6), .ZN(next_acc_sum[26]) );
  INR2D1 U8 ( .A1(N29), .B1(n6), .ZN(next_acc_sum[25]) );
  INR2D1 U9 ( .A1(N28), .B1(n6), .ZN(next_acc_sum[24]) );
  INR2D1 U10 ( .A1(N27), .B1(n6), .ZN(next_acc_sum[23]) );
  INR2D1 U11 ( .A1(N26), .B1(n6), .ZN(next_acc_sum[22]) );
  INR2D1 U12 ( .A1(N25), .B1(n6), .ZN(next_acc_sum[21]) );
  INR2D1 U13 ( .A1(N24), .B1(n6), .ZN(next_acc_sum[20]) );
  INR2D1 U14 ( .A1(N23), .B1(n6), .ZN(next_acc_sum[19]) );
  INR2D1 U15 ( .A1(N22), .B1(n6), .ZN(next_acc_sum[18]) );
  INR2D1 U16 ( .A1(N21), .B1(n6), .ZN(next_acc_sum[17]) );
  INR2D1 U17 ( .A1(N20), .B1(n6), .ZN(next_acc_sum[16]) );
  INR2D1 U18 ( .A1(N19), .B1(n6), .ZN(next_acc_sum[15]) );
  INR2D1 U19 ( .A1(N13), .B1(n5), .ZN(next_acc_sum[9]) );
  INR2D1 U20 ( .A1(N12), .B1(n5), .ZN(next_acc_sum[8]) );
  INR2D1 U21 ( .A1(N11), .B1(n5), .ZN(next_acc_sum[7]) );
  INR2D1 U22 ( .A1(N10), .B1(n5), .ZN(next_acc_sum[6]) );
  INR2D1 U23 ( .A1(N9), .B1(n5), .ZN(next_acc_sum[5]) );
  INR2D1 U24 ( .A1(N8), .B1(n5), .ZN(next_acc_sum[4]) );
  INR2D1 U25 ( .A1(N7), .B1(n5), .ZN(next_acc_sum[3]) );
  INR2D1 U26 ( .A1(N6), .B1(n5), .ZN(next_acc_sum[2]) );
  INR2D1 U27 ( .A1(N5), .B1(n6), .ZN(next_acc_sum[1]) );
  INR2D1 U28 ( .A1(N18), .B1(n7), .ZN(next_acc_sum[14]) );
  INR2D1 U29 ( .A1(N17), .B1(n7), .ZN(next_acc_sum[13]) );
  INR2D1 U30 ( .A1(N16), .B1(n7), .ZN(next_acc_sum[12]) );
  INR2D1 U31 ( .A1(N15), .B1(n7), .ZN(next_acc_sum[11]) );
  INR2D1 U32 ( .A1(N14), .B1(n7), .ZN(next_acc_sum[10]) );
  INR2D1 U33 ( .A1(N35), .B1(n5), .ZN(next_acc_sum[31]) );
  INR2D1 U34 ( .A1(N4), .B1(n7), .ZN(next_acc_sum[0]) );
  CKBD1 U35 ( .I(clear), .Z(n5) );
  CKBD1 U36 ( .I(clear), .Z(n6) );
  CKBD1 U37 ( .I(clear), .Z(n7) );
  CKBD1 U38 ( .I(nRST), .Z(n3) );
  CKBD1 U39 ( .I(nRST), .Z(n2) );
  CKBD1 U40 ( .I(nRST), .Z(n4) );
  TIEL U41 ( .ZN(n1) );
endmodule


module accumulator_2_DW01_add_0_DW01_add_2 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module accumulator_2 ( clk, nRST, clear, psum, acc_sum );
  input [31:0] psum;
  output [31:0] acc_sum;
  input clk, nRST, clear;
  wire   N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17, N18,
         N19, N20, N21, N22, N23, N24, N25, N26, N27, N28, N29, N30, N31, N32,
         N33, N34, N35, n2, n3, n4, n5, n6, n7, n8;
  wire   [31:0] next_acc_sum;

  DFCNQD1 \acc_sum_reg[0]  ( .D(next_acc_sum[0]), .CP(clk), .CDN(n2), .Q(
        acc_sum[0]) );
  DFCNQD1 \acc_sum_reg[1]  ( .D(next_acc_sum[1]), .CP(clk), .CDN(n2), .Q(
        acc_sum[1]) );
  DFCNQD1 \acc_sum_reg[2]  ( .D(next_acc_sum[2]), .CP(clk), .CDN(n2), .Q(
        acc_sum[2]) );
  DFCNQD1 \acc_sum_reg[3]  ( .D(next_acc_sum[3]), .CP(clk), .CDN(n2), .Q(
        acc_sum[3]) );
  DFCNQD1 \acc_sum_reg[4]  ( .D(next_acc_sum[4]), .CP(clk), .CDN(n2), .Q(
        acc_sum[4]) );
  DFCNQD1 \acc_sum_reg[5]  ( .D(next_acc_sum[5]), .CP(clk), .CDN(n2), .Q(
        acc_sum[5]) );
  DFCNQD1 \acc_sum_reg[6]  ( .D(next_acc_sum[6]), .CP(clk), .CDN(n2), .Q(
        acc_sum[6]) );
  DFCNQD1 \acc_sum_reg[7]  ( .D(next_acc_sum[7]), .CP(clk), .CDN(n2), .Q(
        acc_sum[7]) );
  DFCNQD1 \acc_sum_reg[8]  ( .D(next_acc_sum[8]), .CP(clk), .CDN(n2), .Q(
        acc_sum[8]) );
  DFCNQD1 \acc_sum_reg[9]  ( .D(next_acc_sum[9]), .CP(clk), .CDN(n2), .Q(
        acc_sum[9]) );
  DFCNQD1 \acc_sum_reg[10]  ( .D(next_acc_sum[10]), .CP(clk), .CDN(n2), .Q(
        acc_sum[10]) );
  DFCNQD1 \acc_sum_reg[11]  ( .D(next_acc_sum[11]), .CP(clk), .CDN(n2), .Q(
        acc_sum[11]) );
  DFCNQD1 \acc_sum_reg[12]  ( .D(next_acc_sum[12]), .CP(clk), .CDN(n2), .Q(
        acc_sum[12]) );
  DFCNQD1 \acc_sum_reg[13]  ( .D(next_acc_sum[13]), .CP(clk), .CDN(n3), .Q(
        acc_sum[13]) );
  DFCNQD1 \acc_sum_reg[14]  ( .D(next_acc_sum[14]), .CP(clk), .CDN(n3), .Q(
        acc_sum[14]) );
  DFCNQD1 \acc_sum_reg[15]  ( .D(next_acc_sum[15]), .CP(clk), .CDN(n3), .Q(
        acc_sum[15]) );
  DFCNQD1 \acc_sum_reg[16]  ( .D(next_acc_sum[16]), .CP(clk), .CDN(n3), .Q(
        acc_sum[16]) );
  DFCNQD1 \acc_sum_reg[17]  ( .D(next_acc_sum[17]), .CP(clk), .CDN(n3), .Q(
        acc_sum[17]) );
  DFCNQD1 \acc_sum_reg[18]  ( .D(next_acc_sum[18]), .CP(clk), .CDN(n3), .Q(
        acc_sum[18]) );
  DFCNQD1 \acc_sum_reg[19]  ( .D(next_acc_sum[19]), .CP(clk), .CDN(n3), .Q(
        acc_sum[19]) );
  DFCNQD1 \acc_sum_reg[20]  ( .D(next_acc_sum[20]), .CP(clk), .CDN(n3), .Q(
        acc_sum[20]) );
  DFCNQD1 \acc_sum_reg[21]  ( .D(next_acc_sum[21]), .CP(clk), .CDN(n3), .Q(
        acc_sum[21]) );
  DFCNQD1 \acc_sum_reg[22]  ( .D(next_acc_sum[22]), .CP(clk), .CDN(n3), .Q(
        acc_sum[22]) );
  DFCNQD1 \acc_sum_reg[23]  ( .D(next_acc_sum[23]), .CP(clk), .CDN(n3), .Q(
        acc_sum[23]) );
  DFCNQD1 \acc_sum_reg[24]  ( .D(next_acc_sum[24]), .CP(clk), .CDN(n3), .Q(
        acc_sum[24]) );
  DFCNQD1 \acc_sum_reg[25]  ( .D(next_acc_sum[25]), .CP(clk), .CDN(n3), .Q(
        acc_sum[25]) );
  DFCNQD1 \acc_sum_reg[26]  ( .D(next_acc_sum[26]), .CP(clk), .CDN(n4), .Q(
        acc_sum[26]) );
  DFCNQD1 \acc_sum_reg[27]  ( .D(next_acc_sum[27]), .CP(clk), .CDN(n4), .Q(
        acc_sum[27]) );
  DFCNQD1 \acc_sum_reg[28]  ( .D(next_acc_sum[28]), .CP(clk), .CDN(n4), .Q(
        acc_sum[28]) );
  DFCNQD1 \acc_sum_reg[29]  ( .D(next_acc_sum[29]), .CP(clk), .CDN(n4), .Q(
        acc_sum[29]) );
  DFCNQD1 \acc_sum_reg[30]  ( .D(next_acc_sum[30]), .CP(clk), .CDN(n4), .Q(
        acc_sum[30]) );
  DFCNQD1 \acc_sum_reg[31]  ( .D(next_acc_sum[31]), .CP(clk), .CDN(n4), .Q(
        acc_sum[31]) );
  accumulator_2_DW01_add_0_DW01_add_2 add_24 ( .A(acc_sum), .B(psum), .CI(n8), 
        .SUM({N35, N34, N33, N32, N31, N30, N29, N28, N27, N26, N25, N24, N23, 
        N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, N12, N11, N10, N9, 
        N8, N7, N6, N5, N4}) );
  INR2D1 U3 ( .A1(N34), .B1(n5), .ZN(next_acc_sum[30]) );
  INR2D1 U4 ( .A1(N33), .B1(n5), .ZN(next_acc_sum[29]) );
  INR2D1 U5 ( .A1(N32), .B1(n5), .ZN(next_acc_sum[28]) );
  INR2D1 U6 ( .A1(N31), .B1(n5), .ZN(next_acc_sum[27]) );
  INR2D1 U7 ( .A1(N30), .B1(n6), .ZN(next_acc_sum[26]) );
  INR2D1 U8 ( .A1(N29), .B1(n6), .ZN(next_acc_sum[25]) );
  INR2D1 U9 ( .A1(N28), .B1(n6), .ZN(next_acc_sum[24]) );
  INR2D1 U10 ( .A1(N27), .B1(n6), .ZN(next_acc_sum[23]) );
  INR2D1 U11 ( .A1(N26), .B1(n6), .ZN(next_acc_sum[22]) );
  INR2D1 U12 ( .A1(N25), .B1(n6), .ZN(next_acc_sum[21]) );
  INR2D1 U13 ( .A1(N24), .B1(n6), .ZN(next_acc_sum[20]) );
  INR2D1 U14 ( .A1(N23), .B1(n6), .ZN(next_acc_sum[19]) );
  INR2D1 U15 ( .A1(N22), .B1(n6), .ZN(next_acc_sum[18]) );
  INR2D1 U16 ( .A1(N21), .B1(n6), .ZN(next_acc_sum[17]) );
  INR2D1 U17 ( .A1(N20), .B1(n6), .ZN(next_acc_sum[16]) );
  INR2D1 U18 ( .A1(N19), .B1(n6), .ZN(next_acc_sum[15]) );
  INR2D1 U19 ( .A1(N13), .B1(n5), .ZN(next_acc_sum[9]) );
  INR2D1 U20 ( .A1(N12), .B1(n5), .ZN(next_acc_sum[8]) );
  INR2D1 U21 ( .A1(N11), .B1(n5), .ZN(next_acc_sum[7]) );
  INR2D1 U22 ( .A1(N10), .B1(n5), .ZN(next_acc_sum[6]) );
  INR2D1 U23 ( .A1(N9), .B1(n5), .ZN(next_acc_sum[5]) );
  INR2D1 U24 ( .A1(N8), .B1(n5), .ZN(next_acc_sum[4]) );
  INR2D1 U25 ( .A1(N7), .B1(n5), .ZN(next_acc_sum[3]) );
  INR2D1 U26 ( .A1(N6), .B1(n5), .ZN(next_acc_sum[2]) );
  INR2D1 U27 ( .A1(N5), .B1(n6), .ZN(next_acc_sum[1]) );
  INR2D1 U28 ( .A1(N18), .B1(n7), .ZN(next_acc_sum[14]) );
  INR2D1 U29 ( .A1(N17), .B1(n7), .ZN(next_acc_sum[13]) );
  INR2D1 U30 ( .A1(N16), .B1(n7), .ZN(next_acc_sum[12]) );
  INR2D1 U31 ( .A1(N15), .B1(n7), .ZN(next_acc_sum[11]) );
  INR2D1 U32 ( .A1(N14), .B1(n7), .ZN(next_acc_sum[10]) );
  INR2D1 U33 ( .A1(N35), .B1(n5), .ZN(next_acc_sum[31]) );
  INR2D1 U34 ( .A1(N4), .B1(n7), .ZN(next_acc_sum[0]) );
  CKBD1 U35 ( .I(clear), .Z(n5) );
  CKBD1 U36 ( .I(clear), .Z(n6) );
  CKBD1 U37 ( .I(clear), .Z(n7) );
  CKBD1 U38 ( .I(nRST), .Z(n3) );
  CKBD1 U39 ( .I(nRST), .Z(n2) );
  CKBD1 U40 ( .I(nRST), .Z(n4) );
  TIEL U41 ( .ZN(n8) );
endmodule


module accumulator_1_DW01_add_0_DW01_add_1 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module accumulator_1 ( clk, nRST, clear, psum, acc_sum );
  input [31:0] psum;
  output [31:0] acc_sum;
  input clk, nRST, clear;
  wire   N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17, N18,
         N19, N20, N21, N22, N23, N24, N25, N26, N27, N28, N29, N30, N31, N32,
         N33, N34, N35, n2, n3, n4, n5, n6, n7, n8;
  wire   [31:0] next_acc_sum;

  DFCNQD1 \acc_sum_reg[0]  ( .D(next_acc_sum[0]), .CP(clk), .CDN(n2), .Q(
        acc_sum[0]) );
  DFCNQD1 \acc_sum_reg[1]  ( .D(next_acc_sum[1]), .CP(clk), .CDN(n2), .Q(
        acc_sum[1]) );
  DFCNQD1 \acc_sum_reg[2]  ( .D(next_acc_sum[2]), .CP(clk), .CDN(n2), .Q(
        acc_sum[2]) );
  DFCNQD1 \acc_sum_reg[3]  ( .D(next_acc_sum[3]), .CP(clk), .CDN(n2), .Q(
        acc_sum[3]) );
  DFCNQD1 \acc_sum_reg[4]  ( .D(next_acc_sum[4]), .CP(clk), .CDN(n2), .Q(
        acc_sum[4]) );
  DFCNQD1 \acc_sum_reg[5]  ( .D(next_acc_sum[5]), .CP(clk), .CDN(n2), .Q(
        acc_sum[5]) );
  DFCNQD1 \acc_sum_reg[6]  ( .D(next_acc_sum[6]), .CP(clk), .CDN(n2), .Q(
        acc_sum[6]) );
  DFCNQD1 \acc_sum_reg[7]  ( .D(next_acc_sum[7]), .CP(clk), .CDN(n2), .Q(
        acc_sum[7]) );
  DFCNQD1 \acc_sum_reg[8]  ( .D(next_acc_sum[8]), .CP(clk), .CDN(n2), .Q(
        acc_sum[8]) );
  DFCNQD1 \acc_sum_reg[9]  ( .D(next_acc_sum[9]), .CP(clk), .CDN(n2), .Q(
        acc_sum[9]) );
  DFCNQD1 \acc_sum_reg[10]  ( .D(next_acc_sum[10]), .CP(clk), .CDN(n2), .Q(
        acc_sum[10]) );
  DFCNQD1 \acc_sum_reg[11]  ( .D(next_acc_sum[11]), .CP(clk), .CDN(n2), .Q(
        acc_sum[11]) );
  DFCNQD1 \acc_sum_reg[12]  ( .D(next_acc_sum[12]), .CP(clk), .CDN(n2), .Q(
        acc_sum[12]) );
  DFCNQD1 \acc_sum_reg[13]  ( .D(next_acc_sum[13]), .CP(clk), .CDN(n3), .Q(
        acc_sum[13]) );
  DFCNQD1 \acc_sum_reg[14]  ( .D(next_acc_sum[14]), .CP(clk), .CDN(n3), .Q(
        acc_sum[14]) );
  DFCNQD1 \acc_sum_reg[15]  ( .D(next_acc_sum[15]), .CP(clk), .CDN(n3), .Q(
        acc_sum[15]) );
  DFCNQD1 \acc_sum_reg[16]  ( .D(next_acc_sum[16]), .CP(clk), .CDN(n3), .Q(
        acc_sum[16]) );
  DFCNQD1 \acc_sum_reg[17]  ( .D(next_acc_sum[17]), .CP(clk), .CDN(n3), .Q(
        acc_sum[17]) );
  DFCNQD1 \acc_sum_reg[18]  ( .D(next_acc_sum[18]), .CP(clk), .CDN(n3), .Q(
        acc_sum[18]) );
  DFCNQD1 \acc_sum_reg[19]  ( .D(next_acc_sum[19]), .CP(clk), .CDN(n3), .Q(
        acc_sum[19]) );
  DFCNQD1 \acc_sum_reg[20]  ( .D(next_acc_sum[20]), .CP(clk), .CDN(n3), .Q(
        acc_sum[20]) );
  DFCNQD1 \acc_sum_reg[21]  ( .D(next_acc_sum[21]), .CP(clk), .CDN(n3), .Q(
        acc_sum[21]) );
  DFCNQD1 \acc_sum_reg[22]  ( .D(next_acc_sum[22]), .CP(clk), .CDN(n3), .Q(
        acc_sum[22]) );
  DFCNQD1 \acc_sum_reg[23]  ( .D(next_acc_sum[23]), .CP(clk), .CDN(n3), .Q(
        acc_sum[23]) );
  DFCNQD1 \acc_sum_reg[24]  ( .D(next_acc_sum[24]), .CP(clk), .CDN(n3), .Q(
        acc_sum[24]) );
  DFCNQD1 \acc_sum_reg[25]  ( .D(next_acc_sum[25]), .CP(clk), .CDN(n3), .Q(
        acc_sum[25]) );
  DFCNQD1 \acc_sum_reg[26]  ( .D(next_acc_sum[26]), .CP(clk), .CDN(n4), .Q(
        acc_sum[26]) );
  DFCNQD1 \acc_sum_reg[27]  ( .D(next_acc_sum[27]), .CP(clk), .CDN(n4), .Q(
        acc_sum[27]) );
  DFCNQD1 \acc_sum_reg[28]  ( .D(next_acc_sum[28]), .CP(clk), .CDN(n4), .Q(
        acc_sum[28]) );
  DFCNQD1 \acc_sum_reg[29]  ( .D(next_acc_sum[29]), .CP(clk), .CDN(n4), .Q(
        acc_sum[29]) );
  DFCNQD1 \acc_sum_reg[30]  ( .D(next_acc_sum[30]), .CP(clk), .CDN(n4), .Q(
        acc_sum[30]) );
  DFCNQD1 \acc_sum_reg[31]  ( .D(next_acc_sum[31]), .CP(clk), .CDN(n4), .Q(
        acc_sum[31]) );
  accumulator_1_DW01_add_0_DW01_add_1 add_24 ( .A(acc_sum), .B(psum), .CI(n8), 
        .SUM({N35, N34, N33, N32, N31, N30, N29, N28, N27, N26, N25, N24, N23, 
        N22, N21, N20, N19, N18, N17, N16, N15, N14, N13, N12, N11, N10, N9, 
        N8, N7, N6, N5, N4}) );
  INR2D1 U3 ( .A1(N34), .B1(n5), .ZN(next_acc_sum[30]) );
  INR2D1 U4 ( .A1(N33), .B1(n5), .ZN(next_acc_sum[29]) );
  INR2D1 U5 ( .A1(N32), .B1(n5), .ZN(next_acc_sum[28]) );
  INR2D1 U6 ( .A1(N31), .B1(n5), .ZN(next_acc_sum[27]) );
  INR2D1 U7 ( .A1(N30), .B1(n6), .ZN(next_acc_sum[26]) );
  INR2D1 U8 ( .A1(N29), .B1(n6), .ZN(next_acc_sum[25]) );
  INR2D1 U9 ( .A1(N28), .B1(n6), .ZN(next_acc_sum[24]) );
  INR2D1 U10 ( .A1(N27), .B1(n6), .ZN(next_acc_sum[23]) );
  INR2D1 U11 ( .A1(N26), .B1(n6), .ZN(next_acc_sum[22]) );
  INR2D1 U12 ( .A1(N25), .B1(n6), .ZN(next_acc_sum[21]) );
  INR2D1 U13 ( .A1(N24), .B1(n6), .ZN(next_acc_sum[20]) );
  INR2D1 U14 ( .A1(N23), .B1(n6), .ZN(next_acc_sum[19]) );
  INR2D1 U15 ( .A1(N22), .B1(n6), .ZN(next_acc_sum[18]) );
  INR2D1 U16 ( .A1(N21), .B1(n6), .ZN(next_acc_sum[17]) );
  INR2D1 U17 ( .A1(N20), .B1(n6), .ZN(next_acc_sum[16]) );
  INR2D1 U18 ( .A1(N19), .B1(n6), .ZN(next_acc_sum[15]) );
  INR2D1 U19 ( .A1(N13), .B1(n5), .ZN(next_acc_sum[9]) );
  INR2D1 U20 ( .A1(N12), .B1(n5), .ZN(next_acc_sum[8]) );
  INR2D1 U21 ( .A1(N11), .B1(n5), .ZN(next_acc_sum[7]) );
  INR2D1 U22 ( .A1(N10), .B1(n5), .ZN(next_acc_sum[6]) );
  INR2D1 U23 ( .A1(N9), .B1(n5), .ZN(next_acc_sum[5]) );
  INR2D1 U24 ( .A1(N8), .B1(n5), .ZN(next_acc_sum[4]) );
  INR2D1 U25 ( .A1(N7), .B1(n5), .ZN(next_acc_sum[3]) );
  INR2D1 U26 ( .A1(N6), .B1(n5), .ZN(next_acc_sum[2]) );
  INR2D1 U27 ( .A1(N5), .B1(n6), .ZN(next_acc_sum[1]) );
  INR2D1 U28 ( .A1(N18), .B1(n7), .ZN(next_acc_sum[14]) );
  INR2D1 U29 ( .A1(N17), .B1(n7), .ZN(next_acc_sum[13]) );
  INR2D1 U30 ( .A1(N16), .B1(n7), .ZN(next_acc_sum[12]) );
  INR2D1 U31 ( .A1(N15), .B1(n7), .ZN(next_acc_sum[11]) );
  INR2D1 U32 ( .A1(N14), .B1(n7), .ZN(next_acc_sum[10]) );
  INR2D1 U33 ( .A1(N35), .B1(n5), .ZN(next_acc_sum[31]) );
  INR2D1 U34 ( .A1(N4), .B1(n7), .ZN(next_acc_sum[0]) );
  CKBD1 U35 ( .I(clear), .Z(n5) );
  CKBD1 U36 ( .I(clear), .Z(n6) );
  CKBD1 U37 ( .I(clear), .Z(n7) );
  CKBD1 U38 ( .I(nRST), .Z(n3) );
  CKBD1 U39 ( .I(nRST), .Z(n2) );
  CKBD1 U40 ( .I(nRST), .Z(n4) );
  TIEL U41 ( .ZN(n8) );
endmodule


module accumulator_0_DW01_add_0 ( A, B, CI, SUM, CO );
  input [31:0] A;
  input [31:0] B;
  output [31:0] SUM;
  input CI;
  output CO;
  wire   n1;
  wire   [31:1] carry;

  XOR3D1 U1_31 ( .A1(A[31]), .A2(B[31]), .A3(carry[31]), .Z(SUM[31]) );
  FA1D0 U1_30 ( .A(A[30]), .B(B[30]), .CI(carry[30]), .CO(carry[31]), .S(
        SUM[30]) );
  FA1D0 U1_29 ( .A(A[29]), .B(B[29]), .CI(carry[29]), .CO(carry[30]), .S(
        SUM[29]) );
  FA1D0 U1_28 ( .A(A[28]), .B(B[28]), .CI(carry[28]), .CO(carry[29]), .S(
        SUM[28]) );
  FA1D0 U1_27 ( .A(A[27]), .B(B[27]), .CI(carry[27]), .CO(carry[28]), .S(
        SUM[27]) );
  FA1D0 U1_26 ( .A(A[26]), .B(B[26]), .CI(carry[26]), .CO(carry[27]), .S(
        SUM[26]) );
  FA1D0 U1_25 ( .A(A[25]), .B(B[25]), .CI(carry[25]), .CO(carry[26]), .S(
        SUM[25]) );
  FA1D0 U1_24 ( .A(A[24]), .B(B[24]), .CI(carry[24]), .CO(carry[25]), .S(
        SUM[24]) );
  FA1D0 U1_23 ( .A(A[23]), .B(B[23]), .CI(carry[23]), .CO(carry[24]), .S(
        SUM[23]) );
  FA1D0 U1_22 ( .A(A[22]), .B(B[22]), .CI(carry[22]), .CO(carry[23]), .S(
        SUM[22]) );
  FA1D0 U1_21 ( .A(A[21]), .B(B[21]), .CI(carry[21]), .CO(carry[22]), .S(
        SUM[21]) );
  FA1D0 U1_20 ( .A(A[20]), .B(B[20]), .CI(carry[20]), .CO(carry[21]), .S(
        SUM[20]) );
  FA1D0 U1_19 ( .A(A[19]), .B(B[19]), .CI(carry[19]), .CO(carry[20]), .S(
        SUM[19]) );
  FA1D0 U1_18 ( .A(A[18]), .B(B[18]), .CI(carry[18]), .CO(carry[19]), .S(
        SUM[18]) );
  FA1D0 U1_17 ( .A(A[17]), .B(B[17]), .CI(carry[17]), .CO(carry[18]), .S(
        SUM[17]) );
  FA1D0 U1_16 ( .A(A[16]), .B(B[16]), .CI(carry[16]), .CO(carry[17]), .S(
        SUM[16]) );
  FA1D0 U1_15 ( .A(A[15]), .B(B[15]), .CI(carry[15]), .CO(carry[16]), .S(
        SUM[15]) );
  FA1D0 U1_14 ( .A(A[14]), .B(B[14]), .CI(carry[14]), .CO(carry[15]), .S(
        SUM[14]) );
  FA1D0 U1_13 ( .A(A[13]), .B(B[13]), .CI(carry[13]), .CO(carry[14]), .S(
        SUM[13]) );
  FA1D0 U1_12 ( .A(A[12]), .B(B[12]), .CI(carry[12]), .CO(carry[13]), .S(
        SUM[12]) );
  FA1D0 U1_11 ( .A(A[11]), .B(B[11]), .CI(carry[11]), .CO(carry[12]), .S(
        SUM[11]) );
  FA1D0 U1_10 ( .A(A[10]), .B(B[10]), .CI(carry[10]), .CO(carry[11]), .S(
        SUM[10]) );
  FA1D0 U1_9 ( .A(A[9]), .B(B[9]), .CI(carry[9]), .CO(carry[10]), .S(SUM[9])
         );
  FA1D0 U1_8 ( .A(A[8]), .B(B[8]), .CI(carry[8]), .CO(carry[9]), .S(SUM[8]) );
  FA1D0 U1_7 ( .A(A[7]), .B(B[7]), .CI(carry[7]), .CO(carry[8]), .S(SUM[7]) );
  FA1D0 U1_6 ( .A(A[6]), .B(B[6]), .CI(carry[6]), .CO(carry[7]), .S(SUM[6]) );
  FA1D0 U1_5 ( .A(A[5]), .B(B[5]), .CI(carry[5]), .CO(carry[6]), .S(SUM[5]) );
  FA1D0 U1_4 ( .A(A[4]), .B(B[4]), .CI(carry[4]), .CO(carry[5]), .S(SUM[4]) );
  FA1D0 U1_3 ( .A(A[3]), .B(B[3]), .CI(carry[3]), .CO(carry[4]), .S(SUM[3]) );
  FA1D0 U1_2 ( .A(A[2]), .B(B[2]), .CI(carry[2]), .CO(carry[3]), .S(SUM[2]) );
  FA1D0 U1_1 ( .A(A[1]), .B(B[1]), .CI(n1), .CO(carry[2]), .S(SUM[1]) );
  AN2XD1 U1 ( .A1(B[0]), .A2(A[0]), .Z(n1) );
  CKXOR2D1 U2 ( .A1(B[0]), .A2(A[0]), .Z(SUM[0]) );
endmodule


module accumulator_0 ( clk, nRST, clear, psum, acc_sum );
  input [31:0] psum;
  output [31:0] acc_sum;
  input clk, nRST, clear;
  wire   N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17, N18,
         N19, N20, N21, N22, N23, N24, N25, N26, N27, N28, N29, N30, N31, N32,
         N33, N34, N35, n2, n3, n4, n5, n6, n7, n8;
  wire   [31:0] next_acc_sum;

  DFCNQD1 \acc_sum_reg[0]  ( .D(next_acc_sum[0]), .CP(clk), .CDN(n2), .Q(
        acc_sum[0]) );
  DFCNQD1 \acc_sum_reg[1]  ( .D(next_acc_sum[1]), .CP(clk), .CDN(n2), .Q(
        acc_sum[1]) );
  DFCNQD1 \acc_sum_reg[2]  ( .D(next_acc_sum[2]), .CP(clk), .CDN(n2), .Q(
        acc_sum[2]) );
  DFCNQD1 \acc_sum_reg[3]  ( .D(next_acc_sum[3]), .CP(clk), .CDN(n2), .Q(
        acc_sum[3]) );
  DFCNQD1 \acc_sum_reg[4]  ( .D(next_acc_sum[4]), .CP(clk), .CDN(n2), .Q(
        acc_sum[4]) );
  DFCNQD1 \acc_sum_reg[5]  ( .D(next_acc_sum[5]), .CP(clk), .CDN(n2), .Q(
        acc_sum[5]) );
  DFCNQD1 \acc_sum_reg[6]  ( .D(next_acc_sum[6]), .CP(clk), .CDN(n2), .Q(
        acc_sum[6]) );
  DFCNQD1 \acc_sum_reg[7]  ( .D(next_acc_sum[7]), .CP(clk), .CDN(n2), .Q(
        acc_sum[7]) );
  DFCNQD1 \acc_sum_reg[8]  ( .D(next_acc_sum[8]), .CP(clk), .CDN(n2), .Q(
        acc_sum[8]) );
  DFCNQD1 \acc_sum_reg[9]  ( .D(next_acc_sum[9]), .CP(clk), .CDN(n2), .Q(
        acc_sum[9]) );
  DFCNQD1 \acc_sum_reg[10]  ( .D(next_acc_sum[10]), .CP(clk), .CDN(n2), .Q(
        acc_sum[10]) );
  DFCNQD1 \acc_sum_reg[11]  ( .D(next_acc_sum[11]), .CP(clk), .CDN(n2), .Q(
        acc_sum[11]) );
  DFCNQD1 \acc_sum_reg[12]  ( .D(next_acc_sum[12]), .CP(clk), .CDN(n2), .Q(
        acc_sum[12]) );
  DFCNQD1 \acc_sum_reg[13]  ( .D(next_acc_sum[13]), .CP(clk), .CDN(n3), .Q(
        acc_sum[13]) );
  DFCNQD1 \acc_sum_reg[14]  ( .D(next_acc_sum[14]), .CP(clk), .CDN(n3), .Q(
        acc_sum[14]) );
  DFCNQD1 \acc_sum_reg[15]  ( .D(next_acc_sum[15]), .CP(clk), .CDN(n3), .Q(
        acc_sum[15]) );
  DFCNQD1 \acc_sum_reg[16]  ( .D(next_acc_sum[16]), .CP(clk), .CDN(n3), .Q(
        acc_sum[16]) );
  DFCNQD1 \acc_sum_reg[17]  ( .D(next_acc_sum[17]), .CP(clk), .CDN(n3), .Q(
        acc_sum[17]) );
  DFCNQD1 \acc_sum_reg[18]  ( .D(next_acc_sum[18]), .CP(clk), .CDN(n3), .Q(
        acc_sum[18]) );
  DFCNQD1 \acc_sum_reg[19]  ( .D(next_acc_sum[19]), .CP(clk), .CDN(n3), .Q(
        acc_sum[19]) );
  DFCNQD1 \acc_sum_reg[20]  ( .D(next_acc_sum[20]), .CP(clk), .CDN(n3), .Q(
        acc_sum[20]) );
  DFCNQD1 \acc_sum_reg[21]  ( .D(next_acc_sum[21]), .CP(clk), .CDN(n3), .Q(
        acc_sum[21]) );
  DFCNQD1 \acc_sum_reg[22]  ( .D(next_acc_sum[22]), .CP(clk), .CDN(n3), .Q(
        acc_sum[22]) );
  DFCNQD1 \acc_sum_reg[23]  ( .D(next_acc_sum[23]), .CP(clk), .CDN(n3), .Q(
        acc_sum[23]) );
  DFCNQD1 \acc_sum_reg[24]  ( .D(next_acc_sum[24]), .CP(clk), .CDN(n3), .Q(
        acc_sum[24]) );
  DFCNQD1 \acc_sum_reg[25]  ( .D(next_acc_sum[25]), .CP(clk), .CDN(n3), .Q(
        acc_sum[25]) );
  DFCNQD1 \acc_sum_reg[26]  ( .D(next_acc_sum[26]), .CP(clk), .CDN(n4), .Q(
        acc_sum[26]) );
  DFCNQD1 \acc_sum_reg[27]  ( .D(next_acc_sum[27]), .CP(clk), .CDN(n4), .Q(
        acc_sum[27]) );
  DFCNQD1 \acc_sum_reg[28]  ( .D(next_acc_sum[28]), .CP(clk), .CDN(n4), .Q(
        acc_sum[28]) );
  DFCNQD1 \acc_sum_reg[29]  ( .D(next_acc_sum[29]), .CP(clk), .CDN(n4), .Q(
        acc_sum[29]) );
  DFCNQD1 \acc_sum_reg[30]  ( .D(next_acc_sum[30]), .CP(clk), .CDN(n4), .Q(
        acc_sum[30]) );
  DFCNQD1 \acc_sum_reg[31]  ( .D(next_acc_sum[31]), .CP(clk), .CDN(n4), .Q(
        acc_sum[31]) );
  accumulator_0_DW01_add_0 add_24 ( .A(acc_sum), .B(psum), .CI(n8), .SUM({N35, 
        N34, N33, N32, N31, N30, N29, N28, N27, N26, N25, N24, N23, N22, N21, 
        N20, N19, N18, N17, N16, N15, N14, N13, N12, N11, N10, N9, N8, N7, N6, 
        N5, N4}) );
  INR2D1 U3 ( .A1(N34), .B1(n5), .ZN(next_acc_sum[30]) );
  INR2D1 U4 ( .A1(N33), .B1(n5), .ZN(next_acc_sum[29]) );
  INR2D1 U5 ( .A1(N32), .B1(n5), .ZN(next_acc_sum[28]) );
  INR2D1 U6 ( .A1(N31), .B1(n5), .ZN(next_acc_sum[27]) );
  INR2D1 U7 ( .A1(N30), .B1(n6), .ZN(next_acc_sum[26]) );
  INR2D1 U8 ( .A1(N29), .B1(n6), .ZN(next_acc_sum[25]) );
  INR2D1 U9 ( .A1(N28), .B1(n6), .ZN(next_acc_sum[24]) );
  INR2D1 U10 ( .A1(N27), .B1(n6), .ZN(next_acc_sum[23]) );
  INR2D1 U11 ( .A1(N26), .B1(n6), .ZN(next_acc_sum[22]) );
  INR2D1 U12 ( .A1(N25), .B1(n6), .ZN(next_acc_sum[21]) );
  INR2D1 U13 ( .A1(N24), .B1(n6), .ZN(next_acc_sum[20]) );
  INR2D1 U14 ( .A1(N23), .B1(n6), .ZN(next_acc_sum[19]) );
  INR2D1 U15 ( .A1(N22), .B1(n6), .ZN(next_acc_sum[18]) );
  INR2D1 U16 ( .A1(N21), .B1(n6), .ZN(next_acc_sum[17]) );
  INR2D1 U17 ( .A1(N20), .B1(n6), .ZN(next_acc_sum[16]) );
  INR2D1 U18 ( .A1(N19), .B1(n6), .ZN(next_acc_sum[15]) );
  INR2D1 U19 ( .A1(N13), .B1(n5), .ZN(next_acc_sum[9]) );
  INR2D1 U20 ( .A1(N12), .B1(n5), .ZN(next_acc_sum[8]) );
  INR2D1 U21 ( .A1(N11), .B1(n5), .ZN(next_acc_sum[7]) );
  INR2D1 U22 ( .A1(N10), .B1(n5), .ZN(next_acc_sum[6]) );
  INR2D1 U23 ( .A1(N9), .B1(n5), .ZN(next_acc_sum[5]) );
  INR2D1 U24 ( .A1(N8), .B1(n5), .ZN(next_acc_sum[4]) );
  INR2D1 U25 ( .A1(N7), .B1(n5), .ZN(next_acc_sum[3]) );
  INR2D1 U26 ( .A1(N6), .B1(n5), .ZN(next_acc_sum[2]) );
  INR2D1 U27 ( .A1(N5), .B1(n6), .ZN(next_acc_sum[1]) );
  INR2D1 U28 ( .A1(N18), .B1(n7), .ZN(next_acc_sum[14]) );
  INR2D1 U29 ( .A1(N17), .B1(n7), .ZN(next_acc_sum[13]) );
  INR2D1 U30 ( .A1(N16), .B1(n7), .ZN(next_acc_sum[12]) );
  INR2D1 U31 ( .A1(N15), .B1(n7), .ZN(next_acc_sum[11]) );
  INR2D1 U32 ( .A1(N14), .B1(n7), .ZN(next_acc_sum[10]) );
  INR2D1 U33 ( .A1(N35), .B1(n5), .ZN(next_acc_sum[31]) );
  INR2D1 U34 ( .A1(N4), .B1(n7), .ZN(next_acc_sum[0]) );
  CKBD1 U35 ( .I(clear), .Z(n5) );
  CKBD1 U36 ( .I(clear), .Z(n6) );
  CKBD1 U37 ( .I(clear), .Z(n7) );
  CKBD1 U38 ( .I(nRST), .Z(n3) );
  CKBD1 U39 ( .I(nRST), .Z(n2) );
  CKBD1 U40 ( .I(nRST), .Z(n4) );
  TIEL U41 ( .ZN(n8) );
endmodule


module bitfusion ( clk, nRST, data_in, IBUF_wr_en, .WBUF_wr_en({
        \WBUF_wr_en[3][3] , \WBUF_wr_en[3][2] , \WBUF_wr_en[3][1] , 
        \WBUF_wr_en[3][0] , \WBUF_wr_en[2][3] , \WBUF_wr_en[2][2] , 
        \WBUF_wr_en[2][1] , \WBUF_wr_en[2][0] , \WBUF_wr_en[1][3] , 
        \WBUF_wr_en[1][2] , \WBUF_wr_en[1][1] , \WBUF_wr_en[1][0] , 
        \WBUF_wr_en[0][3] , \WBUF_wr_en[0][2] , \WBUF_wr_en[0][1] , 
        \WBUF_wr_en[0][0] }), input_rd_en, acc_clear, .weight_rd_en({
        \weight_rd_en[3][3] , \weight_rd_en[3][2] , \weight_rd_en[3][1] , 
        \weight_rd_en[3][0] , \weight_rd_en[2][3] , \weight_rd_en[2][2] , 
        \weight_rd_en[2][1] , \weight_rd_en[2][0] , \weight_rd_en[1][3] , 
        \weight_rd_en[1][2] , \weight_rd_en[1][1] , \weight_rd_en[1][0] , 
        \weight_rd_en[0][3] , \weight_rd_en[0][2] , \weight_rd_en[0][1] , 
        \weight_rd_en[0][0] }), .input_sign({\input_sign[3][3][3] , 
        \input_sign[3][3][2] , \input_sign[3][3][1] , \input_sign[3][3][0] , 
        \input_sign[3][2][3] , \input_sign[3][2][2] , \input_sign[3][2][1] , 
        \input_sign[3][2][0] , \input_sign[3][1][3] , \input_sign[3][1][2] , 
        \input_sign[3][1][1] , \input_sign[3][1][0] , \input_sign[3][0][3] , 
        \input_sign[3][0][2] , \input_sign[3][0][1] , \input_sign[3][0][0] , 
        \input_sign[2][3][3] , \input_sign[2][3][2] , \input_sign[2][3][1] , 
        \input_sign[2][3][0] , \input_sign[2][2][3] , \input_sign[2][2][2] , 
        \input_sign[2][2][1] , \input_sign[2][2][0] , \input_sign[2][1][3] , 
        \input_sign[2][1][2] , \input_sign[2][1][1] , \input_sign[2][1][0] , 
        \input_sign[2][0][3] , \input_sign[2][0][2] , \input_sign[2][0][1] , 
        \input_sign[2][0][0] , \input_sign[1][3][3] , \input_sign[1][3][2] , 
        \input_sign[1][3][1] , \input_sign[1][3][0] , \input_sign[1][2][3] , 
        \input_sign[1][2][2] , \input_sign[1][2][1] , \input_sign[1][2][0] , 
        \input_sign[1][1][3] , \input_sign[1][1][2] , \input_sign[1][1][1] , 
        \input_sign[1][1][0] , \input_sign[1][0][3] , \input_sign[1][0][2] , 
        \input_sign[1][0][1] , \input_sign[1][0][0] , \input_sign[0][3][3] , 
        \input_sign[0][3][2] , \input_sign[0][3][1] , \input_sign[0][3][0] , 
        \input_sign[0][2][3] , \input_sign[0][2][2] , \input_sign[0][2][1] , 
        \input_sign[0][2][0] , \input_sign[0][1][3] , \input_sign[0][1][2] , 
        \input_sign[0][1][1] , \input_sign[0][1][0] , \input_sign[0][0][3] , 
        \input_sign[0][0][2] , \input_sign[0][0][1] , \input_sign[0][0][0] }), 
    .weight_sign({\weight_sign[3][3][3] , \weight_sign[3][3][2] , 
        \weight_sign[3][3][1] , \weight_sign[3][3][0] , \weight_sign[3][2][3] , 
        \weight_sign[3][2][2] , \weight_sign[3][2][1] , \weight_sign[3][2][0] , 
        \weight_sign[3][1][3] , \weight_sign[3][1][2] , \weight_sign[3][1][1] , 
        \weight_sign[3][1][0] , \weight_sign[3][0][3] , \weight_sign[3][0][2] , 
        \weight_sign[3][0][1] , \weight_sign[3][0][0] , \weight_sign[2][3][3] , 
        \weight_sign[2][3][2] , \weight_sign[2][3][1] , \weight_sign[2][3][0] , 
        \weight_sign[2][2][3] , \weight_sign[2][2][2] , \weight_sign[2][2][1] , 
        \weight_sign[2][2][0] , \weight_sign[2][1][3] , \weight_sign[2][1][2] , 
        \weight_sign[2][1][1] , \weight_sign[2][1][0] , \weight_sign[2][0][3] , 
        \weight_sign[2][0][2] , \weight_sign[2][0][1] , \weight_sign[2][0][0] , 
        \weight_sign[1][3][3] , \weight_sign[1][3][2] , \weight_sign[1][3][1] , 
        \weight_sign[1][3][0] , \weight_sign[1][2][3] , \weight_sign[1][2][2] , 
        \weight_sign[1][2][1] , \weight_sign[1][2][0] , \weight_sign[1][1][3] , 
        \weight_sign[1][1][2] , \weight_sign[1][1][1] , \weight_sign[1][1][0] , 
        \weight_sign[1][0][3] , \weight_sign[1][0][2] , \weight_sign[1][0][1] , 
        \weight_sign[1][0][0] , \weight_sign[0][3][3] , \weight_sign[0][3][2] , 
        \weight_sign[0][3][1] , \weight_sign[0][3][0] , \weight_sign[0][2][3] , 
        \weight_sign[0][2][2] , \weight_sign[0][2][1] , \weight_sign[0][2][0] , 
        \weight_sign[0][1][3] , \weight_sign[0][1][2] , \weight_sign[0][1][1] , 
        \weight_sign[0][1][0] , \weight_sign[0][0][3] , \weight_sign[0][0][2] , 
        \weight_sign[0][0][1] , \weight_sign[0][0][0] }), input_bitwidth, 
        weight_bitwidth, .OBUF({\OBUF[3][31] , \OBUF[3][30] , \OBUF[3][29] , 
        \OBUF[3][28] , \OBUF[3][27] , \OBUF[3][26] , \OBUF[3][25] , 
        \OBUF[3][24] , \OBUF[3][23] , \OBUF[3][22] , \OBUF[3][21] , 
        \OBUF[3][20] , \OBUF[3][19] , \OBUF[3][18] , \OBUF[3][17] , 
        \OBUF[3][16] , \OBUF[3][15] , \OBUF[3][14] , \OBUF[3][13] , 
        \OBUF[3][12] , \OBUF[3][11] , \OBUF[3][10] , \OBUF[3][9] , 
        \OBUF[3][8] , \OBUF[3][7] , \OBUF[3][6] , \OBUF[3][5] , \OBUF[3][4] , 
        \OBUF[3][3] , \OBUF[3][2] , \OBUF[3][1] , \OBUF[3][0] , \OBUF[2][31] , 
        \OBUF[2][30] , \OBUF[2][29] , \OBUF[2][28] , \OBUF[2][27] , 
        \OBUF[2][26] , \OBUF[2][25] , \OBUF[2][24] , \OBUF[2][23] , 
        \OBUF[2][22] , \OBUF[2][21] , \OBUF[2][20] , \OBUF[2][19] , 
        \OBUF[2][18] , \OBUF[2][17] , \OBUF[2][16] , \OBUF[2][15] , 
        \OBUF[2][14] , \OBUF[2][13] , \OBUF[2][12] , \OBUF[2][11] , 
        \OBUF[2][10] , \OBUF[2][9] , \OBUF[2][8] , \OBUF[2][7] , \OBUF[2][6] , 
        \OBUF[2][5] , \OBUF[2][4] , \OBUF[2][3] , \OBUF[2][2] , \OBUF[2][1] , 
        \OBUF[2][0] , \OBUF[1][31] , \OBUF[1][30] , \OBUF[1][29] , 
        \OBUF[1][28] , \OBUF[1][27] , \OBUF[1][26] , \OBUF[1][25] , 
        \OBUF[1][24] , \OBUF[1][23] , \OBUF[1][22] , \OBUF[1][21] , 
        \OBUF[1][20] , \OBUF[1][19] , \OBUF[1][18] , \OBUF[1][17] , 
        \OBUF[1][16] , \OBUF[1][15] , \OBUF[1][14] , \OBUF[1][13] , 
        \OBUF[1][12] , \OBUF[1][11] , \OBUF[1][10] , \OBUF[1][9] , 
        \OBUF[1][8] , \OBUF[1][7] , \OBUF[1][6] , \OBUF[1][5] , \OBUF[1][4] , 
        \OBUF[1][3] , \OBUF[1][2] , \OBUF[1][1] , \OBUF[1][0] , \OBUF[0][31] , 
        \OBUF[0][30] , \OBUF[0][29] , \OBUF[0][28] , \OBUF[0][27] , 
        \OBUF[0][26] , \OBUF[0][25] , \OBUF[0][24] , \OBUF[0][23] , 
        \OBUF[0][22] , \OBUF[0][21] , \OBUF[0][20] , \OBUF[0][19] , 
        \OBUF[0][18] , \OBUF[0][17] , \OBUF[0][16] , \OBUF[0][15] , 
        \OBUF[0][14] , \OBUF[0][13] , \OBUF[0][12] , \OBUF[0][11] , 
        \OBUF[0][10] , \OBUF[0][9] , \OBUF[0][8] , \OBUF[0][7] , \OBUF[0][6] , 
        \OBUF[0][5] , \OBUF[0][4] , \OBUF[0][3] , \OBUF[0][2] , \OBUF[0][1] , 
        \OBUF[0][0] }) );
  input [31:0] data_in;
  input [3:0] IBUF_wr_en;
  input [3:0] input_rd_en;
  input [3:0] acc_clear;
  input [2:0] input_bitwidth;
  input [2:0] weight_bitwidth;
  input clk, nRST, \WBUF_wr_en[3][3] , \WBUF_wr_en[3][2] , \WBUF_wr_en[3][1] ,
         \WBUF_wr_en[3][0] , \WBUF_wr_en[2][3] , \WBUF_wr_en[2][2] ,
         \WBUF_wr_en[2][1] , \WBUF_wr_en[2][0] , \WBUF_wr_en[1][3] ,
         \WBUF_wr_en[1][2] , \WBUF_wr_en[1][1] , \WBUF_wr_en[1][0] ,
         \WBUF_wr_en[0][3] , \WBUF_wr_en[0][2] , \WBUF_wr_en[0][1] ,
         \WBUF_wr_en[0][0] , \weight_rd_en[3][3] , \weight_rd_en[3][2] ,
         \weight_rd_en[3][1] , \weight_rd_en[3][0] , \weight_rd_en[2][3] ,
         \weight_rd_en[2][2] , \weight_rd_en[2][1] , \weight_rd_en[2][0] ,
         \weight_rd_en[1][3] , \weight_rd_en[1][2] , \weight_rd_en[1][1] ,
         \weight_rd_en[1][0] , \weight_rd_en[0][3] , \weight_rd_en[0][2] ,
         \weight_rd_en[0][1] , \weight_rd_en[0][0] , \input_sign[3][3][3] ,
         \input_sign[3][3][2] , \input_sign[3][3][1] , \input_sign[3][3][0] ,
         \input_sign[3][2][3] , \input_sign[3][2][2] , \input_sign[3][2][1] ,
         \input_sign[3][2][0] , \input_sign[3][1][3] , \input_sign[3][1][2] ,
         \input_sign[3][1][1] , \input_sign[3][1][0] , \input_sign[3][0][3] ,
         \input_sign[3][0][2] , \input_sign[3][0][1] , \input_sign[3][0][0] ,
         \input_sign[2][3][3] , \input_sign[2][3][2] , \input_sign[2][3][1] ,
         \input_sign[2][3][0] , \input_sign[2][2][3] , \input_sign[2][2][2] ,
         \input_sign[2][2][1] , \input_sign[2][2][0] , \input_sign[2][1][3] ,
         \input_sign[2][1][2] , \input_sign[2][1][1] , \input_sign[2][1][0] ,
         \input_sign[2][0][3] , \input_sign[2][0][2] , \input_sign[2][0][1] ,
         \input_sign[2][0][0] , \input_sign[1][3][3] , \input_sign[1][3][2] ,
         \input_sign[1][3][1] , \input_sign[1][3][0] , \input_sign[1][2][3] ,
         \input_sign[1][2][2] , \input_sign[1][2][1] , \input_sign[1][2][0] ,
         \input_sign[1][1][3] , \input_sign[1][1][2] , \input_sign[1][1][1] ,
         \input_sign[1][1][0] , \input_sign[1][0][3] , \input_sign[1][0][2] ,
         \input_sign[1][0][1] , \input_sign[1][0][0] , \input_sign[0][3][3] ,
         \input_sign[0][3][2] , \input_sign[0][3][1] , \input_sign[0][3][0] ,
         \input_sign[0][2][3] , \input_sign[0][2][2] , \input_sign[0][2][1] ,
         \input_sign[0][2][0] , \input_sign[0][1][3] , \input_sign[0][1][2] ,
         \input_sign[0][1][1] , \input_sign[0][1][0] , \input_sign[0][0][3] ,
         \input_sign[0][0][2] , \input_sign[0][0][1] , \input_sign[0][0][0] ,
         \weight_sign[3][3][3] , \weight_sign[3][3][2] ,
         \weight_sign[3][3][1] , \weight_sign[3][3][0] ,
         \weight_sign[3][2][3] , \weight_sign[3][2][2] ,
         \weight_sign[3][2][1] , \weight_sign[3][2][0] ,
         \weight_sign[3][1][3] , \weight_sign[3][1][2] ,
         \weight_sign[3][1][1] , \weight_sign[3][1][0] ,
         \weight_sign[3][0][3] , \weight_sign[3][0][2] ,
         \weight_sign[3][0][1] , \weight_sign[3][0][0] ,
         \weight_sign[2][3][3] , \weight_sign[2][3][2] ,
         \weight_sign[2][3][1] , \weight_sign[2][3][0] ,
         \weight_sign[2][2][3] , \weight_sign[2][2][2] ,
         \weight_sign[2][2][1] , \weight_sign[2][2][0] ,
         \weight_sign[2][1][3] , \weight_sign[2][1][2] ,
         \weight_sign[2][1][1] , \weight_sign[2][1][0] ,
         \weight_sign[2][0][3] , \weight_sign[2][0][2] ,
         \weight_sign[2][0][1] , \weight_sign[2][0][0] ,
         \weight_sign[1][3][3] , \weight_sign[1][3][2] ,
         \weight_sign[1][3][1] , \weight_sign[1][3][0] ,
         \weight_sign[1][2][3] , \weight_sign[1][2][2] ,
         \weight_sign[1][2][1] , \weight_sign[1][2][0] ,
         \weight_sign[1][1][3] , \weight_sign[1][1][2] ,
         \weight_sign[1][1][1] , \weight_sign[1][1][0] ,
         \weight_sign[1][0][3] , \weight_sign[1][0][2] ,
         \weight_sign[1][0][1] , \weight_sign[1][0][0] ,
         \weight_sign[0][3][3] , \weight_sign[0][3][2] ,
         \weight_sign[0][3][1] , \weight_sign[0][3][0] ,
         \weight_sign[0][2][3] , \weight_sign[0][2][2] ,
         \weight_sign[0][2][1] , \weight_sign[0][2][0] ,
         \weight_sign[0][1][3] , \weight_sign[0][1][2] ,
         \weight_sign[0][1][1] , \weight_sign[0][1][0] ,
         \weight_sign[0][0][3] , \weight_sign[0][0][2] ,
         \weight_sign[0][0][1] , \weight_sign[0][0][0] ;
  output \OBUF[3][31] , \OBUF[3][30] , \OBUF[3][29] , \OBUF[3][28] ,
         \OBUF[3][27] , \OBUF[3][26] , \OBUF[3][25] , \OBUF[3][24] ,
         \OBUF[3][23] , \OBUF[3][22] , \OBUF[3][21] , \OBUF[3][20] ,
         \OBUF[3][19] , \OBUF[3][18] , \OBUF[3][17] , \OBUF[3][16] ,
         \OBUF[3][15] , \OBUF[3][14] , \OBUF[3][13] , \OBUF[3][12] ,
         \OBUF[3][11] , \OBUF[3][10] , \OBUF[3][9] , \OBUF[3][8] ,
         \OBUF[3][7] , \OBUF[3][6] , \OBUF[3][5] , \OBUF[3][4] , \OBUF[3][3] ,
         \OBUF[3][2] , \OBUF[3][1] , \OBUF[3][0] , \OBUF[2][31] ,
         \OBUF[2][30] , \OBUF[2][29] , \OBUF[2][28] , \OBUF[2][27] ,
         \OBUF[2][26] , \OBUF[2][25] , \OBUF[2][24] , \OBUF[2][23] ,
         \OBUF[2][22] , \OBUF[2][21] , \OBUF[2][20] , \OBUF[2][19] ,
         \OBUF[2][18] , \OBUF[2][17] , \OBUF[2][16] , \OBUF[2][15] ,
         \OBUF[2][14] , \OBUF[2][13] , \OBUF[2][12] , \OBUF[2][11] ,
         \OBUF[2][10] , \OBUF[2][9] , \OBUF[2][8] , \OBUF[2][7] , \OBUF[2][6] ,
         \OBUF[2][5] , \OBUF[2][4] , \OBUF[2][3] , \OBUF[2][2] , \OBUF[2][1] ,
         \OBUF[2][0] , \OBUF[1][31] , \OBUF[1][30] , \OBUF[1][29] ,
         \OBUF[1][28] , \OBUF[1][27] , \OBUF[1][26] , \OBUF[1][25] ,
         \OBUF[1][24] , \OBUF[1][23] , \OBUF[1][22] , \OBUF[1][21] ,
         \OBUF[1][20] , \OBUF[1][19] , \OBUF[1][18] , \OBUF[1][17] ,
         \OBUF[1][16] , \OBUF[1][15] , \OBUF[1][14] , \OBUF[1][13] ,
         \OBUF[1][12] , \OBUF[1][11] , \OBUF[1][10] , \OBUF[1][9] ,
         \OBUF[1][8] , \OBUF[1][7] , \OBUF[1][6] , \OBUF[1][5] , \OBUF[1][4] ,
         \OBUF[1][3] , \OBUF[1][2] , \OBUF[1][1] , \OBUF[1][0] , \OBUF[0][31] ,
         \OBUF[0][30] , \OBUF[0][29] , \OBUF[0][28] , \OBUF[0][27] ,
         \OBUF[0][26] , \OBUF[0][25] , \OBUF[0][24] , \OBUF[0][23] ,
         \OBUF[0][22] , \OBUF[0][21] , \OBUF[0][20] , \OBUF[0][19] ,
         \OBUF[0][18] , \OBUF[0][17] , \OBUF[0][16] , \OBUF[0][15] ,
         \OBUF[0][14] , \OBUF[0][13] , \OBUF[0][12] , \OBUF[0][11] ,
         \OBUF[0][10] , \OBUF[0][9] , \OBUF[0][8] , \OBUF[0][7] , \OBUF[0][6] ,
         \OBUF[0][5] , \OBUF[0][4] , \OBUF[0][3] , \OBUF[0][2] , \OBUF[0][1] ,
         \OBUF[0][0] ;
  wire   \*Logic0* , \input_forward_reg[3][2][31] ,
         \input_forward_reg[3][2][30] , \input_forward_reg[3][2][29] ,
         \input_forward_reg[3][2][28] , \input_forward_reg[3][2][27] ,
         \input_forward_reg[3][2][26] , \input_forward_reg[3][2][25] ,
         \input_forward_reg[3][2][24] , \input_forward_reg[3][2][23] ,
         \input_forward_reg[3][2][22] , \input_forward_reg[3][2][21] ,
         \input_forward_reg[3][2][20] , \input_forward_reg[3][2][19] ,
         \input_forward_reg[3][2][18] , \input_forward_reg[3][2][17] ,
         \input_forward_reg[3][2][16] , \input_forward_reg[3][2][15] ,
         \input_forward_reg[3][2][14] , \input_forward_reg[3][2][13] ,
         \input_forward_reg[3][2][12] , \input_forward_reg[3][2][11] ,
         \input_forward_reg[3][2][10] , \input_forward_reg[3][2][9] ,
         \input_forward_reg[3][2][8] , \input_forward_reg[3][2][7] ,
         \input_forward_reg[3][2][6] , \input_forward_reg[3][2][5] ,
         \input_forward_reg[3][2][4] , \input_forward_reg[3][2][3] ,
         \input_forward_reg[3][2][2] , \input_forward_reg[3][2][1] ,
         \input_forward_reg[3][2][0] , \input_forward_reg[3][1][31] ,
         \input_forward_reg[3][1][30] , \input_forward_reg[3][1][29] ,
         \input_forward_reg[3][1][28] , \input_forward_reg[3][1][27] ,
         \input_forward_reg[3][1][26] , \input_forward_reg[3][1][25] ,
         \input_forward_reg[3][1][24] , \input_forward_reg[3][1][23] ,
         \input_forward_reg[3][1][22] , \input_forward_reg[3][1][21] ,
         \input_forward_reg[3][1][20] , \input_forward_reg[3][1][19] ,
         \input_forward_reg[3][1][18] , \input_forward_reg[3][1][17] ,
         \input_forward_reg[3][1][16] , \input_forward_reg[3][1][15] ,
         \input_forward_reg[3][1][14] , \input_forward_reg[3][1][13] ,
         \input_forward_reg[3][1][12] , \input_forward_reg[3][1][11] ,
         \input_forward_reg[3][1][10] , \input_forward_reg[3][1][9] ,
         \input_forward_reg[3][1][8] , \input_forward_reg[3][1][7] ,
         \input_forward_reg[3][1][6] , \input_forward_reg[3][1][5] ,
         \input_forward_reg[3][1][4] , \input_forward_reg[3][1][3] ,
         \input_forward_reg[3][1][2] , \input_forward_reg[3][1][1] ,
         \input_forward_reg[3][1][0] , \input_forward_reg[3][0][31] ,
         \input_forward_reg[3][0][30] , \input_forward_reg[3][0][29] ,
         \input_forward_reg[3][0][28] , \input_forward_reg[3][0][27] ,
         \input_forward_reg[3][0][26] , \input_forward_reg[3][0][25] ,
         \input_forward_reg[3][0][24] , \input_forward_reg[3][0][23] ,
         \input_forward_reg[3][0][22] , \input_forward_reg[3][0][21] ,
         \input_forward_reg[3][0][20] , \input_forward_reg[3][0][19] ,
         \input_forward_reg[3][0][18] , \input_forward_reg[3][0][17] ,
         \input_forward_reg[3][0][16] , \input_forward_reg[3][0][15] ,
         \input_forward_reg[3][0][14] , \input_forward_reg[3][0][13] ,
         \input_forward_reg[3][0][12] , \input_forward_reg[3][0][11] ,
         \input_forward_reg[3][0][10] , \input_forward_reg[3][0][9] ,
         \input_forward_reg[3][0][8] , \input_forward_reg[3][0][7] ,
         \input_forward_reg[3][0][6] , \input_forward_reg[3][0][5] ,
         \input_forward_reg[3][0][4] , \input_forward_reg[3][0][3] ,
         \input_forward_reg[3][0][2] , \input_forward_reg[3][0][1] ,
         \input_forward_reg[3][0][0] , \input_forward_reg[2][2][31] ,
         \input_forward_reg[2][2][30] , \input_forward_reg[2][2][29] ,
         \input_forward_reg[2][2][28] , \input_forward_reg[2][2][27] ,
         \input_forward_reg[2][2][26] , \input_forward_reg[2][2][25] ,
         \input_forward_reg[2][2][24] , \input_forward_reg[2][2][23] ,
         \input_forward_reg[2][2][22] , \input_forward_reg[2][2][21] ,
         \input_forward_reg[2][2][20] , \input_forward_reg[2][2][19] ,
         \input_forward_reg[2][2][18] , \input_forward_reg[2][2][17] ,
         \input_forward_reg[2][2][16] , \input_forward_reg[2][2][15] ,
         \input_forward_reg[2][2][14] , \input_forward_reg[2][2][13] ,
         \input_forward_reg[2][2][12] , \input_forward_reg[2][2][11] ,
         \input_forward_reg[2][2][10] , \input_forward_reg[2][2][9] ,
         \input_forward_reg[2][2][8] , \input_forward_reg[2][2][7] ,
         \input_forward_reg[2][2][6] , \input_forward_reg[2][2][5] ,
         \input_forward_reg[2][2][4] , \input_forward_reg[2][2][3] ,
         \input_forward_reg[2][2][2] , \input_forward_reg[2][2][1] ,
         \input_forward_reg[2][2][0] , \input_forward_reg[2][1][31] ,
         \input_forward_reg[2][1][30] , \input_forward_reg[2][1][29] ,
         \input_forward_reg[2][1][28] , \input_forward_reg[2][1][27] ,
         \input_forward_reg[2][1][26] , \input_forward_reg[2][1][25] ,
         \input_forward_reg[2][1][24] , \input_forward_reg[2][1][23] ,
         \input_forward_reg[2][1][22] , \input_forward_reg[2][1][21] ,
         \input_forward_reg[2][1][20] , \input_forward_reg[2][1][19] ,
         \input_forward_reg[2][1][18] , \input_forward_reg[2][1][17] ,
         \input_forward_reg[2][1][16] , \input_forward_reg[2][1][15] ,
         \input_forward_reg[2][1][14] , \input_forward_reg[2][1][13] ,
         \input_forward_reg[2][1][12] , \input_forward_reg[2][1][11] ,
         \input_forward_reg[2][1][10] , \input_forward_reg[2][1][9] ,
         \input_forward_reg[2][1][8] , \input_forward_reg[2][1][7] ,
         \input_forward_reg[2][1][6] , \input_forward_reg[2][1][5] ,
         \input_forward_reg[2][1][4] , \input_forward_reg[2][1][3] ,
         \input_forward_reg[2][1][2] , \input_forward_reg[2][1][1] ,
         \input_forward_reg[2][1][0] , \input_forward_reg[2][0][31] ,
         \input_forward_reg[2][0][30] , \input_forward_reg[2][0][29] ,
         \input_forward_reg[2][0][28] , \input_forward_reg[2][0][27] ,
         \input_forward_reg[2][0][26] , \input_forward_reg[2][0][25] ,
         \input_forward_reg[2][0][24] , \input_forward_reg[2][0][23] ,
         \input_forward_reg[2][0][22] , \input_forward_reg[2][0][21] ,
         \input_forward_reg[2][0][20] , \input_forward_reg[2][0][19] ,
         \input_forward_reg[2][0][18] , \input_forward_reg[2][0][17] ,
         \input_forward_reg[2][0][16] , \input_forward_reg[2][0][15] ,
         \input_forward_reg[2][0][14] , \input_forward_reg[2][0][13] ,
         \input_forward_reg[2][0][12] , \input_forward_reg[2][0][11] ,
         \input_forward_reg[2][0][10] , \input_forward_reg[2][0][9] ,
         \input_forward_reg[2][0][8] , \input_forward_reg[2][0][7] ,
         \input_forward_reg[2][0][6] , \input_forward_reg[2][0][5] ,
         \input_forward_reg[2][0][4] , \input_forward_reg[2][0][3] ,
         \input_forward_reg[2][0][2] , \input_forward_reg[2][0][1] ,
         \input_forward_reg[2][0][0] , \input_forward_reg[1][2][31] ,
         \input_forward_reg[1][2][30] , \input_forward_reg[1][2][29] ,
         \input_forward_reg[1][2][28] , \input_forward_reg[1][2][27] ,
         \input_forward_reg[1][2][26] , \input_forward_reg[1][2][25] ,
         \input_forward_reg[1][2][24] , \input_forward_reg[1][2][23] ,
         \input_forward_reg[1][2][22] , \input_forward_reg[1][2][21] ,
         \input_forward_reg[1][2][20] , \input_forward_reg[1][2][19] ,
         \input_forward_reg[1][2][18] , \input_forward_reg[1][2][17] ,
         \input_forward_reg[1][2][16] , \input_forward_reg[1][2][15] ,
         \input_forward_reg[1][2][14] , \input_forward_reg[1][2][13] ,
         \input_forward_reg[1][2][12] , \input_forward_reg[1][2][11] ,
         \input_forward_reg[1][2][10] , \input_forward_reg[1][2][9] ,
         \input_forward_reg[1][2][8] , \input_forward_reg[1][2][7] ,
         \input_forward_reg[1][2][6] , \input_forward_reg[1][2][5] ,
         \input_forward_reg[1][2][4] , \input_forward_reg[1][2][3] ,
         \input_forward_reg[1][2][2] , \input_forward_reg[1][2][1] ,
         \input_forward_reg[1][2][0] , \input_forward_reg[1][1][31] ,
         \input_forward_reg[1][1][30] , \input_forward_reg[1][1][29] ,
         \input_forward_reg[1][1][28] , \input_forward_reg[1][1][27] ,
         \input_forward_reg[1][1][26] , \input_forward_reg[1][1][25] ,
         \input_forward_reg[1][1][24] , \input_forward_reg[1][1][23] ,
         \input_forward_reg[1][1][22] , \input_forward_reg[1][1][21] ,
         \input_forward_reg[1][1][20] , \input_forward_reg[1][1][19] ,
         \input_forward_reg[1][1][18] , \input_forward_reg[1][1][17] ,
         \input_forward_reg[1][1][16] , \input_forward_reg[1][1][15] ,
         \input_forward_reg[1][1][14] , \input_forward_reg[1][1][13] ,
         \input_forward_reg[1][1][12] , \input_forward_reg[1][1][11] ,
         \input_forward_reg[1][1][10] , \input_forward_reg[1][1][9] ,
         \input_forward_reg[1][1][8] , \input_forward_reg[1][1][7] ,
         \input_forward_reg[1][1][6] , \input_forward_reg[1][1][5] ,
         \input_forward_reg[1][1][4] , \input_forward_reg[1][1][3] ,
         \input_forward_reg[1][1][2] , \input_forward_reg[1][1][1] ,
         \input_forward_reg[1][1][0] , \input_forward_reg[1][0][31] ,
         \input_forward_reg[1][0][30] , \input_forward_reg[1][0][29] ,
         \input_forward_reg[1][0][28] , \input_forward_reg[1][0][27] ,
         \input_forward_reg[1][0][26] , \input_forward_reg[1][0][25] ,
         \input_forward_reg[1][0][24] , \input_forward_reg[1][0][23] ,
         \input_forward_reg[1][0][22] , \input_forward_reg[1][0][21] ,
         \input_forward_reg[1][0][20] , \input_forward_reg[1][0][19] ,
         \input_forward_reg[1][0][18] , \input_forward_reg[1][0][17] ,
         \input_forward_reg[1][0][16] , \input_forward_reg[1][0][15] ,
         \input_forward_reg[1][0][14] , \input_forward_reg[1][0][13] ,
         \input_forward_reg[1][0][12] , \input_forward_reg[1][0][11] ,
         \input_forward_reg[1][0][10] , \input_forward_reg[1][0][9] ,
         \input_forward_reg[1][0][8] , \input_forward_reg[1][0][7] ,
         \input_forward_reg[1][0][6] , \input_forward_reg[1][0][5] ,
         \input_forward_reg[1][0][4] , \input_forward_reg[1][0][3] ,
         \input_forward_reg[1][0][2] , \input_forward_reg[1][0][1] ,
         \input_forward_reg[1][0][0] , \input_forward_reg[0][2][31] ,
         \input_forward_reg[0][2][30] , \input_forward_reg[0][2][29] ,
         \input_forward_reg[0][2][28] , \input_forward_reg[0][2][27] ,
         \input_forward_reg[0][2][26] , \input_forward_reg[0][2][25] ,
         \input_forward_reg[0][2][24] , \input_forward_reg[0][2][23] ,
         \input_forward_reg[0][2][22] , \input_forward_reg[0][2][21] ,
         \input_forward_reg[0][2][20] , \input_forward_reg[0][2][19] ,
         \input_forward_reg[0][2][18] , \input_forward_reg[0][2][17] ,
         \input_forward_reg[0][2][16] , \input_forward_reg[0][2][15] ,
         \input_forward_reg[0][2][14] , \input_forward_reg[0][2][13] ,
         \input_forward_reg[0][2][12] , \input_forward_reg[0][2][11] ,
         \input_forward_reg[0][2][10] , \input_forward_reg[0][2][9] ,
         \input_forward_reg[0][2][8] , \input_forward_reg[0][2][7] ,
         \input_forward_reg[0][2][6] , \input_forward_reg[0][2][5] ,
         \input_forward_reg[0][2][4] , \input_forward_reg[0][2][3] ,
         \input_forward_reg[0][2][2] , \input_forward_reg[0][2][1] ,
         \input_forward_reg[0][2][0] , \input_forward_reg[0][1][31] ,
         \input_forward_reg[0][1][30] , \input_forward_reg[0][1][29] ,
         \input_forward_reg[0][1][28] , \input_forward_reg[0][1][27] ,
         \input_forward_reg[0][1][26] , \input_forward_reg[0][1][25] ,
         \input_forward_reg[0][1][24] , \input_forward_reg[0][1][23] ,
         \input_forward_reg[0][1][22] , \input_forward_reg[0][1][21] ,
         \input_forward_reg[0][1][20] , \input_forward_reg[0][1][19] ,
         \input_forward_reg[0][1][18] , \input_forward_reg[0][1][17] ,
         \input_forward_reg[0][1][16] , \input_forward_reg[0][1][15] ,
         \input_forward_reg[0][1][14] , \input_forward_reg[0][1][13] ,
         \input_forward_reg[0][1][12] , \input_forward_reg[0][1][11] ,
         \input_forward_reg[0][1][10] , \input_forward_reg[0][1][9] ,
         \input_forward_reg[0][1][8] , \input_forward_reg[0][1][7] ,
         \input_forward_reg[0][1][6] , \input_forward_reg[0][1][5] ,
         \input_forward_reg[0][1][4] , \input_forward_reg[0][1][3] ,
         \input_forward_reg[0][1][2] , \input_forward_reg[0][1][1] ,
         \input_forward_reg[0][1][0] , \input_forward_reg[0][0][31] ,
         \input_forward_reg[0][0][30] , \input_forward_reg[0][0][29] ,
         \input_forward_reg[0][0][28] , \input_forward_reg[0][0][27] ,
         \input_forward_reg[0][0][26] , \input_forward_reg[0][0][25] ,
         \input_forward_reg[0][0][24] , \input_forward_reg[0][0][23] ,
         \input_forward_reg[0][0][22] , \input_forward_reg[0][0][21] ,
         \input_forward_reg[0][0][20] , \input_forward_reg[0][0][19] ,
         \input_forward_reg[0][0][18] , \input_forward_reg[0][0][17] ,
         \input_forward_reg[0][0][16] , \input_forward_reg[0][0][15] ,
         \input_forward_reg[0][0][14] , \input_forward_reg[0][0][13] ,
         \input_forward_reg[0][0][12] , \input_forward_reg[0][0][11] ,
         \input_forward_reg[0][0][10] , \input_forward_reg[0][0][9] ,
         \input_forward_reg[0][0][8] , \input_forward_reg[0][0][7] ,
         \input_forward_reg[0][0][6] , \input_forward_reg[0][0][5] ,
         \input_forward_reg[0][0][4] , \input_forward_reg[0][0][3] ,
         \input_forward_reg[0][0][2] , \input_forward_reg[0][0][1] ,
         \input_forward_reg[0][0][0] , \next_input_forward_reg[3][2][31] ,
         \next_input_forward_reg[3][2][30] ,
         \next_input_forward_reg[3][2][29] ,
         \next_input_forward_reg[3][2][28] ,
         \next_input_forward_reg[3][2][27] ,
         \next_input_forward_reg[3][2][26] ,
         \next_input_forward_reg[3][2][25] ,
         \next_input_forward_reg[3][2][24] ,
         \next_input_forward_reg[3][2][23] ,
         \next_input_forward_reg[3][2][22] ,
         \next_input_forward_reg[3][2][21] ,
         \next_input_forward_reg[3][2][20] ,
         \next_input_forward_reg[3][2][19] ,
         \next_input_forward_reg[3][2][18] ,
         \next_input_forward_reg[3][2][17] ,
         \next_input_forward_reg[3][2][16] ,
         \next_input_forward_reg[3][2][15] ,
         \next_input_forward_reg[3][2][14] ,
         \next_input_forward_reg[3][2][13] ,
         \next_input_forward_reg[3][2][12] ,
         \next_input_forward_reg[3][2][11] ,
         \next_input_forward_reg[3][2][10] , \next_input_forward_reg[3][2][9] ,
         \next_input_forward_reg[3][2][8] , \next_input_forward_reg[3][2][7] ,
         \next_input_forward_reg[3][2][6] , \next_input_forward_reg[3][2][5] ,
         \next_input_forward_reg[3][2][4] , \next_input_forward_reg[3][2][3] ,
         \next_input_forward_reg[3][2][2] , \next_input_forward_reg[3][2][1] ,
         \next_input_forward_reg[3][2][0] , \next_input_forward_reg[3][1][31] ,
         \next_input_forward_reg[3][1][30] ,
         \next_input_forward_reg[3][1][29] ,
         \next_input_forward_reg[3][1][28] ,
         \next_input_forward_reg[3][1][27] ,
         \next_input_forward_reg[3][1][26] ,
         \next_input_forward_reg[3][1][25] ,
         \next_input_forward_reg[3][1][24] ,
         \next_input_forward_reg[3][1][23] ,
         \next_input_forward_reg[3][1][22] ,
         \next_input_forward_reg[3][1][21] ,
         \next_input_forward_reg[3][1][20] ,
         \next_input_forward_reg[3][1][19] ,
         \next_input_forward_reg[3][1][18] ,
         \next_input_forward_reg[3][1][17] ,
         \next_input_forward_reg[3][1][16] ,
         \next_input_forward_reg[3][1][15] ,
         \next_input_forward_reg[3][1][14] ,
         \next_input_forward_reg[3][1][13] ,
         \next_input_forward_reg[3][1][12] ,
         \next_input_forward_reg[3][1][11] ,
         \next_input_forward_reg[3][1][10] , \next_input_forward_reg[3][1][9] ,
         \next_input_forward_reg[3][1][8] , \next_input_forward_reg[3][1][7] ,
         \next_input_forward_reg[3][1][6] , \next_input_forward_reg[3][1][5] ,
         \next_input_forward_reg[3][1][4] , \next_input_forward_reg[3][1][3] ,
         \next_input_forward_reg[3][1][2] , \next_input_forward_reg[3][1][1] ,
         \next_input_forward_reg[3][1][0] , \next_input_forward_reg[3][0][31] ,
         \next_input_forward_reg[3][0][30] ,
         \next_input_forward_reg[3][0][29] ,
         \next_input_forward_reg[3][0][28] ,
         \next_input_forward_reg[3][0][27] ,
         \next_input_forward_reg[3][0][26] ,
         \next_input_forward_reg[3][0][25] ,
         \next_input_forward_reg[3][0][24] ,
         \next_input_forward_reg[3][0][23] ,
         \next_input_forward_reg[3][0][22] ,
         \next_input_forward_reg[3][0][21] ,
         \next_input_forward_reg[3][0][20] ,
         \next_input_forward_reg[3][0][19] ,
         \next_input_forward_reg[3][0][18] ,
         \next_input_forward_reg[3][0][17] ,
         \next_input_forward_reg[3][0][16] ,
         \next_input_forward_reg[3][0][15] ,
         \next_input_forward_reg[3][0][14] ,
         \next_input_forward_reg[3][0][13] ,
         \next_input_forward_reg[3][0][12] ,
         \next_input_forward_reg[3][0][11] ,
         \next_input_forward_reg[3][0][10] , \next_input_forward_reg[3][0][9] ,
         \next_input_forward_reg[3][0][8] , \next_input_forward_reg[3][0][7] ,
         \next_input_forward_reg[3][0][6] , \next_input_forward_reg[3][0][5] ,
         \next_input_forward_reg[3][0][4] , \next_input_forward_reg[3][0][3] ,
         \next_input_forward_reg[3][0][2] , \next_input_forward_reg[3][0][1] ,
         \next_input_forward_reg[3][0][0] , \next_input_forward_reg[2][2][31] ,
         \next_input_forward_reg[2][2][30] ,
         \next_input_forward_reg[2][2][29] ,
         \next_input_forward_reg[2][2][28] ,
         \next_input_forward_reg[2][2][27] ,
         \next_input_forward_reg[2][2][26] ,
         \next_input_forward_reg[2][2][25] ,
         \next_input_forward_reg[2][2][24] ,
         \next_input_forward_reg[2][2][23] ,
         \next_input_forward_reg[2][2][22] ,
         \next_input_forward_reg[2][2][21] ,
         \next_input_forward_reg[2][2][20] ,
         \next_input_forward_reg[2][2][19] ,
         \next_input_forward_reg[2][2][18] ,
         \next_input_forward_reg[2][2][17] ,
         \next_input_forward_reg[2][2][16] ,
         \next_input_forward_reg[2][2][15] ,
         \next_input_forward_reg[2][2][14] ,
         \next_input_forward_reg[2][2][13] ,
         \next_input_forward_reg[2][2][12] ,
         \next_input_forward_reg[2][2][11] ,
         \next_input_forward_reg[2][2][10] , \next_input_forward_reg[2][2][9] ,
         \next_input_forward_reg[2][2][8] , \next_input_forward_reg[2][2][7] ,
         \next_input_forward_reg[2][2][6] , \next_input_forward_reg[2][2][5] ,
         \next_input_forward_reg[2][2][4] , \next_input_forward_reg[2][2][3] ,
         \next_input_forward_reg[2][2][2] , \next_input_forward_reg[2][2][1] ,
         \next_input_forward_reg[2][2][0] , \next_input_forward_reg[2][1][31] ,
         \next_input_forward_reg[2][1][30] ,
         \next_input_forward_reg[2][1][29] ,
         \next_input_forward_reg[2][1][28] ,
         \next_input_forward_reg[2][1][27] ,
         \next_input_forward_reg[2][1][26] ,
         \next_input_forward_reg[2][1][25] ,
         \next_input_forward_reg[2][1][24] ,
         \next_input_forward_reg[2][1][23] ,
         \next_input_forward_reg[2][1][22] ,
         \next_input_forward_reg[2][1][21] ,
         \next_input_forward_reg[2][1][20] ,
         \next_input_forward_reg[2][1][19] ,
         \next_input_forward_reg[2][1][18] ,
         \next_input_forward_reg[2][1][17] ,
         \next_input_forward_reg[2][1][16] ,
         \next_input_forward_reg[2][1][15] ,
         \next_input_forward_reg[2][1][14] ,
         \next_input_forward_reg[2][1][13] ,
         \next_input_forward_reg[2][1][12] ,
         \next_input_forward_reg[2][1][11] ,
         \next_input_forward_reg[2][1][10] , \next_input_forward_reg[2][1][9] ,
         \next_input_forward_reg[2][1][8] , \next_input_forward_reg[2][1][7] ,
         \next_input_forward_reg[2][1][6] , \next_input_forward_reg[2][1][5] ,
         \next_input_forward_reg[2][1][4] , \next_input_forward_reg[2][1][3] ,
         \next_input_forward_reg[2][1][2] , \next_input_forward_reg[2][1][1] ,
         \next_input_forward_reg[2][1][0] , \next_input_forward_reg[2][0][31] ,
         \next_input_forward_reg[2][0][30] ,
         \next_input_forward_reg[2][0][29] ,
         \next_input_forward_reg[2][0][28] ,
         \next_input_forward_reg[2][0][27] ,
         \next_input_forward_reg[2][0][26] ,
         \next_input_forward_reg[2][0][25] ,
         \next_input_forward_reg[2][0][24] ,
         \next_input_forward_reg[2][0][23] ,
         \next_input_forward_reg[2][0][22] ,
         \next_input_forward_reg[2][0][21] ,
         \next_input_forward_reg[2][0][20] ,
         \next_input_forward_reg[2][0][19] ,
         \next_input_forward_reg[2][0][18] ,
         \next_input_forward_reg[2][0][17] ,
         \next_input_forward_reg[2][0][16] ,
         \next_input_forward_reg[2][0][15] ,
         \next_input_forward_reg[2][0][14] ,
         \next_input_forward_reg[2][0][13] ,
         \next_input_forward_reg[2][0][12] ,
         \next_input_forward_reg[2][0][11] ,
         \next_input_forward_reg[2][0][10] , \next_input_forward_reg[2][0][9] ,
         \next_input_forward_reg[2][0][8] , \next_input_forward_reg[2][0][7] ,
         \next_input_forward_reg[2][0][6] , \next_input_forward_reg[2][0][5] ,
         \next_input_forward_reg[2][0][4] , \next_input_forward_reg[2][0][3] ,
         \next_input_forward_reg[2][0][2] , \next_input_forward_reg[2][0][1] ,
         \next_input_forward_reg[2][0][0] , \next_input_forward_reg[1][2][31] ,
         \next_input_forward_reg[1][2][30] ,
         \next_input_forward_reg[1][2][29] ,
         \next_input_forward_reg[1][2][28] ,
         \next_input_forward_reg[1][2][27] ,
         \next_input_forward_reg[1][2][26] ,
         \next_input_forward_reg[1][2][25] ,
         \next_input_forward_reg[1][2][24] ,
         \next_input_forward_reg[1][2][23] ,
         \next_input_forward_reg[1][2][22] ,
         \next_input_forward_reg[1][2][21] ,
         \next_input_forward_reg[1][2][20] ,
         \next_input_forward_reg[1][2][19] ,
         \next_input_forward_reg[1][2][18] ,
         \next_input_forward_reg[1][2][17] ,
         \next_input_forward_reg[1][2][16] ,
         \next_input_forward_reg[1][2][15] ,
         \next_input_forward_reg[1][2][14] ,
         \next_input_forward_reg[1][2][13] ,
         \next_input_forward_reg[1][2][12] ,
         \next_input_forward_reg[1][2][11] ,
         \next_input_forward_reg[1][2][10] , \next_input_forward_reg[1][2][9] ,
         \next_input_forward_reg[1][2][8] , \next_input_forward_reg[1][2][7] ,
         \next_input_forward_reg[1][2][6] , \next_input_forward_reg[1][2][5] ,
         \next_input_forward_reg[1][2][4] , \next_input_forward_reg[1][2][3] ,
         \next_input_forward_reg[1][2][2] , \next_input_forward_reg[1][2][1] ,
         \next_input_forward_reg[1][2][0] , \next_input_forward_reg[1][1][31] ,
         \next_input_forward_reg[1][1][30] ,
         \next_input_forward_reg[1][1][29] ,
         \next_input_forward_reg[1][1][28] ,
         \next_input_forward_reg[1][1][27] ,
         \next_input_forward_reg[1][1][26] ,
         \next_input_forward_reg[1][1][25] ,
         \next_input_forward_reg[1][1][24] ,
         \next_input_forward_reg[1][1][23] ,
         \next_input_forward_reg[1][1][22] ,
         \next_input_forward_reg[1][1][21] ,
         \next_input_forward_reg[1][1][20] ,
         \next_input_forward_reg[1][1][19] ,
         \next_input_forward_reg[1][1][18] ,
         \next_input_forward_reg[1][1][17] ,
         \next_input_forward_reg[1][1][16] ,
         \next_input_forward_reg[1][1][15] ,
         \next_input_forward_reg[1][1][14] ,
         \next_input_forward_reg[1][1][13] ,
         \next_input_forward_reg[1][1][12] ,
         \next_input_forward_reg[1][1][11] ,
         \next_input_forward_reg[1][1][10] , \next_input_forward_reg[1][1][9] ,
         \next_input_forward_reg[1][1][8] , \next_input_forward_reg[1][1][7] ,
         \next_input_forward_reg[1][1][6] , \next_input_forward_reg[1][1][5] ,
         \next_input_forward_reg[1][1][4] , \next_input_forward_reg[1][1][3] ,
         \next_input_forward_reg[1][1][2] , \next_input_forward_reg[1][1][1] ,
         \next_input_forward_reg[1][1][0] , \next_input_forward_reg[1][0][31] ,
         \next_input_forward_reg[1][0][30] ,
         \next_input_forward_reg[1][0][29] ,
         \next_input_forward_reg[1][0][28] ,
         \next_input_forward_reg[1][0][27] ,
         \next_input_forward_reg[1][0][26] ,
         \next_input_forward_reg[1][0][25] ,
         \next_input_forward_reg[1][0][24] ,
         \next_input_forward_reg[1][0][23] ,
         \next_input_forward_reg[1][0][22] ,
         \next_input_forward_reg[1][0][21] ,
         \next_input_forward_reg[1][0][20] ,
         \next_input_forward_reg[1][0][19] ,
         \next_input_forward_reg[1][0][18] ,
         \next_input_forward_reg[1][0][17] ,
         \next_input_forward_reg[1][0][16] ,
         \next_input_forward_reg[1][0][15] ,
         \next_input_forward_reg[1][0][14] ,
         \next_input_forward_reg[1][0][13] ,
         \next_input_forward_reg[1][0][12] ,
         \next_input_forward_reg[1][0][11] ,
         \next_input_forward_reg[1][0][10] , \next_input_forward_reg[1][0][9] ,
         \next_input_forward_reg[1][0][8] , \next_input_forward_reg[1][0][7] ,
         \next_input_forward_reg[1][0][6] , \next_input_forward_reg[1][0][5] ,
         \next_input_forward_reg[1][0][4] , \next_input_forward_reg[1][0][3] ,
         \next_input_forward_reg[1][0][2] , \next_input_forward_reg[1][0][1] ,
         \next_input_forward_reg[1][0][0] , \next_input_forward_reg[0][2][31] ,
         \next_input_forward_reg[0][2][30] ,
         \next_input_forward_reg[0][2][29] ,
         \next_input_forward_reg[0][2][28] ,
         \next_input_forward_reg[0][2][27] ,
         \next_input_forward_reg[0][2][26] ,
         \next_input_forward_reg[0][2][25] ,
         \next_input_forward_reg[0][2][24] ,
         \next_input_forward_reg[0][2][23] ,
         \next_input_forward_reg[0][2][22] ,
         \next_input_forward_reg[0][2][21] ,
         \next_input_forward_reg[0][2][20] ,
         \next_input_forward_reg[0][2][19] ,
         \next_input_forward_reg[0][2][18] ,
         \next_input_forward_reg[0][2][17] ,
         \next_input_forward_reg[0][2][16] ,
         \next_input_forward_reg[0][2][15] ,
         \next_input_forward_reg[0][2][14] ,
         \next_input_forward_reg[0][2][13] ,
         \next_input_forward_reg[0][2][12] ,
         \next_input_forward_reg[0][2][11] ,
         \next_input_forward_reg[0][2][10] , \next_input_forward_reg[0][2][9] ,
         \next_input_forward_reg[0][2][8] , \next_input_forward_reg[0][2][7] ,
         \next_input_forward_reg[0][2][6] , \next_input_forward_reg[0][2][5] ,
         \next_input_forward_reg[0][2][4] , \next_input_forward_reg[0][2][3] ,
         \next_input_forward_reg[0][2][2] , \next_input_forward_reg[0][2][1] ,
         \next_input_forward_reg[0][2][0] , \next_input_forward_reg[0][1][31] ,
         \next_input_forward_reg[0][1][30] ,
         \next_input_forward_reg[0][1][29] ,
         \next_input_forward_reg[0][1][28] ,
         \next_input_forward_reg[0][1][27] ,
         \next_input_forward_reg[0][1][26] ,
         \next_input_forward_reg[0][1][25] ,
         \next_input_forward_reg[0][1][24] ,
         \next_input_forward_reg[0][1][23] ,
         \next_input_forward_reg[0][1][22] ,
         \next_input_forward_reg[0][1][21] ,
         \next_input_forward_reg[0][1][20] ,
         \next_input_forward_reg[0][1][19] ,
         \next_input_forward_reg[0][1][18] ,
         \next_input_forward_reg[0][1][17] ,
         \next_input_forward_reg[0][1][16] ,
         \next_input_forward_reg[0][1][15] ,
         \next_input_forward_reg[0][1][14] ,
         \next_input_forward_reg[0][1][13] ,
         \next_input_forward_reg[0][1][12] ,
         \next_input_forward_reg[0][1][11] ,
         \next_input_forward_reg[0][1][10] , \next_input_forward_reg[0][1][9] ,
         \next_input_forward_reg[0][1][8] , \next_input_forward_reg[0][1][7] ,
         \next_input_forward_reg[0][1][6] , \next_input_forward_reg[0][1][5] ,
         \next_input_forward_reg[0][1][4] , \next_input_forward_reg[0][1][3] ,
         \next_input_forward_reg[0][1][2] , \next_input_forward_reg[0][1][1] ,
         \next_input_forward_reg[0][1][0] , \next_input_forward_reg[0][0][31] ,
         \next_input_forward_reg[0][0][30] ,
         \next_input_forward_reg[0][0][29] ,
         \next_input_forward_reg[0][0][28] ,
         \next_input_forward_reg[0][0][27] ,
         \next_input_forward_reg[0][0][26] ,
         \next_input_forward_reg[0][0][25] ,
         \next_input_forward_reg[0][0][24] ,
         \next_input_forward_reg[0][0][23] ,
         \next_input_forward_reg[0][0][22] ,
         \next_input_forward_reg[0][0][21] ,
         \next_input_forward_reg[0][0][20] ,
         \next_input_forward_reg[0][0][19] ,
         \next_input_forward_reg[0][0][18] ,
         \next_input_forward_reg[0][0][17] ,
         \next_input_forward_reg[0][0][16] ,
         \next_input_forward_reg[0][0][15] ,
         \next_input_forward_reg[0][0][14] ,
         \next_input_forward_reg[0][0][13] ,
         \next_input_forward_reg[0][0][12] ,
         \next_input_forward_reg[0][0][11] ,
         \next_input_forward_reg[0][0][10] , \next_input_forward_reg[0][0][9] ,
         \next_input_forward_reg[0][0][8] , \next_input_forward_reg[0][0][7] ,
         \next_input_forward_reg[0][0][6] , \next_input_forward_reg[0][0][5] ,
         \next_input_forward_reg[0][0][4] , \next_input_forward_reg[0][0][3] ,
         \next_input_forward_reg[0][0][2] , \next_input_forward_reg[0][0][1] ,
         \next_input_forward_reg[0][0][0] , \psums[3][3][31] ,
         \psums[3][3][30] , \psums[3][3][29] , \psums[3][3][28] ,
         \psums[3][3][27] , \psums[3][3][26] , \psums[3][3][25] ,
         \psums[3][3][24] , \psums[3][3][23] , \psums[3][3][22] ,
         \psums[3][3][21] , \psums[3][3][20] , \psums[3][3][19] ,
         \psums[3][3][18] , \psums[3][3][17] , \psums[3][3][16] ,
         \psums[3][3][15] , \psums[3][3][14] , \psums[3][3][13] ,
         \psums[3][3][12] , \psums[3][3][11] , \psums[3][3][10] ,
         \psums[3][3][9] , \psums[3][3][8] , \psums[3][3][7] ,
         \psums[3][3][6] , \psums[3][3][5] , \psums[3][3][4] ,
         \psums[3][3][3] , \psums[3][3][2] , \psums[3][3][1] ,
         \psums[3][3][0] , \psums[3][2][31] , \psums[3][2][30] ,
         \psums[3][2][29] , \psums[3][2][28] , \psums[3][2][27] ,
         \psums[3][2][26] , \psums[3][2][25] , \psums[3][2][24] ,
         \psums[3][2][23] , \psums[3][2][22] , \psums[3][2][21] ,
         \psums[3][2][20] , \psums[3][2][19] , \psums[3][2][18] ,
         \psums[3][2][17] , \psums[3][2][16] , \psums[3][2][15] ,
         \psums[3][2][14] , \psums[3][2][13] , \psums[3][2][12] ,
         \psums[3][2][11] , \psums[3][2][10] , \psums[3][2][9] ,
         \psums[3][2][8] , \psums[3][2][7] , \psums[3][2][6] ,
         \psums[3][2][5] , \psums[3][2][4] , \psums[3][2][3] ,
         \psums[3][2][2] , \psums[3][2][1] , \psums[3][2][0] ,
         \psums[3][1][31] , \psums[3][1][30] , \psums[3][1][29] ,
         \psums[3][1][28] , \psums[3][1][27] , \psums[3][1][26] ,
         \psums[3][1][25] , \psums[3][1][24] , \psums[3][1][23] ,
         \psums[3][1][22] , \psums[3][1][21] , \psums[3][1][20] ,
         \psums[3][1][19] , \psums[3][1][18] , \psums[3][1][17] ,
         \psums[3][1][16] , \psums[3][1][15] , \psums[3][1][14] ,
         \psums[3][1][13] , \psums[3][1][12] , \psums[3][1][11] ,
         \psums[3][1][10] , \psums[3][1][9] , \psums[3][1][8] ,
         \psums[3][1][7] , \psums[3][1][6] , \psums[3][1][5] ,
         \psums[3][1][4] , \psums[3][1][3] , \psums[3][1][2] ,
         \psums[3][1][1] , \psums[3][1][0] , \psums[3][0][31] ,
         \psums[3][0][30] , \psums[3][0][29] , \psums[3][0][28] ,
         \psums[3][0][27] , \psums[3][0][26] , \psums[3][0][25] ,
         \psums[3][0][24] , \psums[3][0][23] , \psums[3][0][22] ,
         \psums[3][0][21] , \psums[3][0][20] , \psums[3][0][19] ,
         \psums[3][0][18] , \psums[3][0][17] , \psums[3][0][16] ,
         \psums[3][0][15] , \psums[3][0][14] , \psums[3][0][13] ,
         \psums[3][0][12] , \psums[3][0][11] , \psums[3][0][10] ,
         \psums[3][0][9] , \psums[3][0][8] , \psums[3][0][7] ,
         \psums[3][0][6] , \psums[3][0][5] , \psums[3][0][4] ,
         \psums[3][0][3] , \psums[3][0][2] , \psums[3][0][1] ,
         \psums[3][0][0] , \psums[2][3][31] , \psums[2][3][30] ,
         \psums[2][3][29] , \psums[2][3][28] , \psums[2][3][27] ,
         \psums[2][3][26] , \psums[2][3][25] , \psums[2][3][24] ,
         \psums[2][3][23] , \psums[2][3][22] , \psums[2][3][21] ,
         \psums[2][3][20] , \psums[2][3][19] , \psums[2][3][18] ,
         \psums[2][3][17] , \psums[2][3][16] , \psums[2][3][15] ,
         \psums[2][3][14] , \psums[2][3][13] , \psums[2][3][12] ,
         \psums[2][3][11] , \psums[2][3][10] , \psums[2][3][9] ,
         \psums[2][3][8] , \psums[2][3][7] , \psums[2][3][6] ,
         \psums[2][3][5] , \psums[2][3][4] , \psums[2][3][3] ,
         \psums[2][3][2] , \psums[2][3][1] , \psums[2][3][0] ,
         \psums[2][2][31] , \psums[2][2][30] , \psums[2][2][29] ,
         \psums[2][2][28] , \psums[2][2][27] , \psums[2][2][26] ,
         \psums[2][2][25] , \psums[2][2][24] , \psums[2][2][23] ,
         \psums[2][2][22] , \psums[2][2][21] , \psums[2][2][20] ,
         \psums[2][2][19] , \psums[2][2][18] , \psums[2][2][17] ,
         \psums[2][2][16] , \psums[2][2][15] , \psums[2][2][14] ,
         \psums[2][2][13] , \psums[2][2][12] , \psums[2][2][11] ,
         \psums[2][2][10] , \psums[2][2][9] , \psums[2][2][8] ,
         \psums[2][2][7] , \psums[2][2][6] , \psums[2][2][5] ,
         \psums[2][2][4] , \psums[2][2][3] , \psums[2][2][2] ,
         \psums[2][2][1] , \psums[2][2][0] , \psums[2][1][31] ,
         \psums[2][1][30] , \psums[2][1][29] , \psums[2][1][28] ,
         \psums[2][1][27] , \psums[2][1][26] , \psums[2][1][25] ,
         \psums[2][1][24] , \psums[2][1][23] , \psums[2][1][22] ,
         \psums[2][1][21] , \psums[2][1][20] , \psums[2][1][19] ,
         \psums[2][1][18] , \psums[2][1][17] , \psums[2][1][16] ,
         \psums[2][1][15] , \psums[2][1][14] , \psums[2][1][13] ,
         \psums[2][1][12] , \psums[2][1][11] , \psums[2][1][10] ,
         \psums[2][1][9] , \psums[2][1][8] , \psums[2][1][7] ,
         \psums[2][1][6] , \psums[2][1][5] , \psums[2][1][4] ,
         \psums[2][1][3] , \psums[2][1][2] , \psums[2][1][1] ,
         \psums[2][1][0] , \psums[2][0][31] , \psums[2][0][30] ,
         \psums[2][0][29] , \psums[2][0][28] , \psums[2][0][27] ,
         \psums[2][0][26] , \psums[2][0][25] , \psums[2][0][24] ,
         \psums[2][0][23] , \psums[2][0][22] , \psums[2][0][21] ,
         \psums[2][0][20] , \psums[2][0][19] , \psums[2][0][18] ,
         \psums[2][0][17] , \psums[2][0][16] , \psums[2][0][15] ,
         \psums[2][0][14] , \psums[2][0][13] , \psums[2][0][12] ,
         \psums[2][0][11] , \psums[2][0][10] , \psums[2][0][9] ,
         \psums[2][0][8] , \psums[2][0][7] , \psums[2][0][6] ,
         \psums[2][0][5] , \psums[2][0][4] , \psums[2][0][3] ,
         \psums[2][0][2] , \psums[2][0][1] , \psums[2][0][0] ,
         \psums[1][3][31] , \psums[1][3][30] , \psums[1][3][29] ,
         \psums[1][3][28] , \psums[1][3][27] , \psums[1][3][26] ,
         \psums[1][3][25] , \psums[1][3][24] , \psums[1][3][23] ,
         \psums[1][3][22] , \psums[1][3][21] , \psums[1][3][20] ,
         \psums[1][3][19] , \psums[1][3][18] , \psums[1][3][17] ,
         \psums[1][3][16] , \psums[1][3][15] , \psums[1][3][14] ,
         \psums[1][3][13] , \psums[1][3][12] , \psums[1][3][11] ,
         \psums[1][3][10] , \psums[1][3][9] , \psums[1][3][8] ,
         \psums[1][3][7] , \psums[1][3][6] , \psums[1][3][5] ,
         \psums[1][3][4] , \psums[1][3][3] , \psums[1][3][2] ,
         \psums[1][3][1] , \psums[1][3][0] , \psums[1][2][31] ,
         \psums[1][2][30] , \psums[1][2][29] , \psums[1][2][28] ,
         \psums[1][2][27] , \psums[1][2][26] , \psums[1][2][25] ,
         \psums[1][2][24] , \psums[1][2][23] , \psums[1][2][22] ,
         \psums[1][2][21] , \psums[1][2][20] , \psums[1][2][19] ,
         \psums[1][2][18] , \psums[1][2][17] , \psums[1][2][16] ,
         \psums[1][2][15] , \psums[1][2][14] , \psums[1][2][13] ,
         \psums[1][2][12] , \psums[1][2][11] , \psums[1][2][10] ,
         \psums[1][2][9] , \psums[1][2][8] , \psums[1][2][7] ,
         \psums[1][2][6] , \psums[1][2][5] , \psums[1][2][4] ,
         \psums[1][2][3] , \psums[1][2][2] , \psums[1][2][1] ,
         \psums[1][2][0] , \psums[1][1][31] , \psums[1][1][30] ,
         \psums[1][1][29] , \psums[1][1][28] , \psums[1][1][27] ,
         \psums[1][1][26] , \psums[1][1][25] , \psums[1][1][24] ,
         \psums[1][1][23] , \psums[1][1][22] , \psums[1][1][21] ,
         \psums[1][1][20] , \psums[1][1][19] , \psums[1][1][18] ,
         \psums[1][1][17] , \psums[1][1][16] , \psums[1][1][15] ,
         \psums[1][1][14] , \psums[1][1][13] , \psums[1][1][12] ,
         \psums[1][1][11] , \psums[1][1][10] , \psums[1][1][9] ,
         \psums[1][1][8] , \psums[1][1][7] , \psums[1][1][6] ,
         \psums[1][1][5] , \psums[1][1][4] , \psums[1][1][3] ,
         \psums[1][1][2] , \psums[1][1][1] , \psums[1][1][0] ,
         \psums[1][0][31] , \psums[1][0][30] , \psums[1][0][29] ,
         \psums[1][0][28] , \psums[1][0][27] , \psums[1][0][26] ,
         \psums[1][0][25] , \psums[1][0][24] , \psums[1][0][23] ,
         \psums[1][0][22] , \psums[1][0][21] , \psums[1][0][20] ,
         \psums[1][0][19] , \psums[1][0][18] , \psums[1][0][17] ,
         \psums[1][0][16] , \psums[1][0][15] , \psums[1][0][14] ,
         \psums[1][0][13] , \psums[1][0][12] , \psums[1][0][11] ,
         \psums[1][0][10] , \psums[1][0][9] , \psums[1][0][8] ,
         \psums[1][0][7] , \psums[1][0][6] , \psums[1][0][5] ,
         \psums[1][0][4] , \psums[1][0][3] , \psums[1][0][2] ,
         \psums[1][0][1] , \psums[1][0][0] , \psums[0][3][31] ,
         \psums[0][3][30] , \psums[0][3][29] , \psums[0][3][28] ,
         \psums[0][3][27] , \psums[0][3][26] , \psums[0][3][25] ,
         \psums[0][3][24] , \psums[0][3][23] , \psums[0][3][22] ,
         \psums[0][3][21] , \psums[0][3][20] , \psums[0][3][19] ,
         \psums[0][3][18] , \psums[0][3][17] , \psums[0][3][16] ,
         \psums[0][3][15] , \psums[0][3][14] , \psums[0][3][13] ,
         \psums[0][3][12] , \psums[0][3][11] , \psums[0][3][10] ,
         \psums[0][3][9] , \psums[0][3][8] , \psums[0][3][7] ,
         \psums[0][3][6] , \psums[0][3][5] , \psums[0][3][4] ,
         \psums[0][3][3] , \psums[0][3][2] , \psums[0][3][1] ,
         \psums[0][3][0] , \psums[0][2][31] , \psums[0][2][30] ,
         \psums[0][2][29] , \psums[0][2][28] , \psums[0][2][27] ,
         \psums[0][2][26] , \psums[0][2][25] , \psums[0][2][24] ,
         \psums[0][2][23] , \psums[0][2][22] , \psums[0][2][21] ,
         \psums[0][2][20] , \psums[0][2][19] , \psums[0][2][18] ,
         \psums[0][2][17] , \psums[0][2][16] , \psums[0][2][15] ,
         \psums[0][2][14] , \psums[0][2][13] , \psums[0][2][12] ,
         \psums[0][2][11] , \psums[0][2][10] , \psums[0][2][9] ,
         \psums[0][2][8] , \psums[0][2][7] , \psums[0][2][6] ,
         \psums[0][2][5] , \psums[0][2][4] , \psums[0][2][3] ,
         \psums[0][2][2] , \psums[0][2][1] , \psums[0][2][0] ,
         \psums[0][1][31] , \psums[0][1][30] , \psums[0][1][29] ,
         \psums[0][1][28] , \psums[0][1][27] , \psums[0][1][26] ,
         \psums[0][1][25] , \psums[0][1][24] , \psums[0][1][23] ,
         \psums[0][1][22] , \psums[0][1][21] , \psums[0][1][20] ,
         \psums[0][1][19] , \psums[0][1][18] , \psums[0][1][17] ,
         \psums[0][1][16] , \psums[0][1][15] , \psums[0][1][14] ,
         \psums[0][1][13] , \psums[0][1][12] , \psums[0][1][11] ,
         \psums[0][1][10] , \psums[0][1][9] , \psums[0][1][8] ,
         \psums[0][1][7] , \psums[0][1][6] , \psums[0][1][5] ,
         \psums[0][1][4] , \psums[0][1][3] , \psums[0][1][2] ,
         \psums[0][1][1] , \psums[0][1][0] , \psums[0][0][31] ,
         \psums[0][0][30] , \psums[0][0][29] , \psums[0][0][28] ,
         \psums[0][0][27] , \psums[0][0][26] , \psums[0][0][25] ,
         \psums[0][0][24] , \psums[0][0][23] , \psums[0][0][22] ,
         \psums[0][0][21] , \psums[0][0][20] , \psums[0][0][19] ,
         \psums[0][0][18] , \psums[0][0][17] , \psums[0][0][16] ,
         \psums[0][0][15] , \psums[0][0][14] , \psums[0][0][13] ,
         \psums[0][0][12] , \psums[0][0][11] , \psums[0][0][10] ,
         \psums[0][0][9] , \psums[0][0][8] , \psums[0][0][7] ,
         \psums[0][0][6] , \psums[0][0][5] , \psums[0][0][4] ,
         \psums[0][0][3] , \psums[0][0][2] , \psums[0][0][1] ,
         \psums[0][0][0] , \next_psums[3][3][31] , \next_psums[3][3][30] ,
         \next_psums[3][3][29] , \next_psums[3][3][28] ,
         \next_psums[3][3][27] , \next_psums[3][3][26] ,
         \next_psums[3][3][25] , \next_psums[3][3][24] ,
         \next_psums[3][3][23] , \next_psums[3][3][22] ,
         \next_psums[3][3][21] , \next_psums[3][3][20] ,
         \next_psums[3][3][19] , \next_psums[3][3][18] ,
         \next_psums[3][3][17] , \next_psums[3][3][16] ,
         \next_psums[3][3][15] , \next_psums[3][3][14] ,
         \next_psums[3][3][13] , \next_psums[3][3][12] ,
         \next_psums[3][3][11] , \next_psums[3][3][10] , \next_psums[3][3][9] ,
         \next_psums[3][3][8] , \next_psums[3][3][7] , \next_psums[3][3][6] ,
         \next_psums[3][3][5] , \next_psums[3][3][4] , \next_psums[3][3][3] ,
         \next_psums[3][3][2] , \next_psums[3][3][1] , \next_psums[3][3][0] ,
         \next_psums[3][2][31] , \next_psums[3][2][30] ,
         \next_psums[3][2][29] , \next_psums[3][2][28] ,
         \next_psums[3][2][27] , \next_psums[3][2][26] ,
         \next_psums[3][2][25] , \next_psums[3][2][24] ,
         \next_psums[3][2][23] , \next_psums[3][2][22] ,
         \next_psums[3][2][21] , \next_psums[3][2][20] ,
         \next_psums[3][2][19] , \next_psums[3][2][18] ,
         \next_psums[3][2][17] , \next_psums[3][2][16] ,
         \next_psums[3][2][15] , \next_psums[3][2][14] ,
         \next_psums[3][2][13] , \next_psums[3][2][12] ,
         \next_psums[3][2][11] , \next_psums[3][2][10] , \next_psums[3][2][9] ,
         \next_psums[3][2][8] , \next_psums[3][2][7] , \next_psums[3][2][6] ,
         \next_psums[3][2][5] , \next_psums[3][2][4] , \next_psums[3][2][3] ,
         \next_psums[3][2][2] , \next_psums[3][2][1] , \next_psums[3][2][0] ,
         \next_psums[3][1][31] , \next_psums[3][1][30] ,
         \next_psums[3][1][29] , \next_psums[3][1][28] ,
         \next_psums[3][1][27] , \next_psums[3][1][26] ,
         \next_psums[3][1][25] , \next_psums[3][1][24] ,
         \next_psums[3][1][23] , \next_psums[3][1][22] ,
         \next_psums[3][1][21] , \next_psums[3][1][20] ,
         \next_psums[3][1][19] , \next_psums[3][1][18] ,
         \next_psums[3][1][17] , \next_psums[3][1][16] ,
         \next_psums[3][1][15] , \next_psums[3][1][14] ,
         \next_psums[3][1][13] , \next_psums[3][1][12] ,
         \next_psums[3][1][11] , \next_psums[3][1][10] , \next_psums[3][1][9] ,
         \next_psums[3][1][8] , \next_psums[3][1][7] , \next_psums[3][1][6] ,
         \next_psums[3][1][5] , \next_psums[3][1][4] , \next_psums[3][1][3] ,
         \next_psums[3][1][2] , \next_psums[3][1][1] , \next_psums[3][1][0] ,
         \next_psums[3][0][31] , \next_psums[3][0][30] ,
         \next_psums[3][0][29] , \next_psums[3][0][28] ,
         \next_psums[3][0][27] , \next_psums[3][0][26] ,
         \next_psums[3][0][25] , \next_psums[3][0][24] ,
         \next_psums[3][0][23] , \next_psums[3][0][22] ,
         \next_psums[3][0][21] , \next_psums[3][0][20] ,
         \next_psums[3][0][19] , \next_psums[3][0][18] ,
         \next_psums[3][0][17] , \next_psums[3][0][16] ,
         \next_psums[3][0][15] , \next_psums[3][0][14] ,
         \next_psums[3][0][13] , \next_psums[3][0][12] ,
         \next_psums[3][0][11] , \next_psums[3][0][10] , \next_psums[3][0][9] ,
         \next_psums[3][0][8] , \next_psums[3][0][7] , \next_psums[3][0][6] ,
         \next_psums[3][0][5] , \next_psums[3][0][4] , \next_psums[3][0][3] ,
         \next_psums[3][0][2] , \next_psums[3][0][1] , \next_psums[3][0][0] ,
         \next_psums[2][3][31] , \next_psums[2][3][30] ,
         \next_psums[2][3][29] , \next_psums[2][3][28] ,
         \next_psums[2][3][27] , \next_psums[2][3][26] ,
         \next_psums[2][3][25] , \next_psums[2][3][24] ,
         \next_psums[2][3][23] , \next_psums[2][3][22] ,
         \next_psums[2][3][21] , \next_psums[2][3][20] ,
         \next_psums[2][3][19] , \next_psums[2][3][18] ,
         \next_psums[2][3][17] , \next_psums[2][3][16] ,
         \next_psums[2][3][15] , \next_psums[2][3][14] ,
         \next_psums[2][3][13] , \next_psums[2][3][12] ,
         \next_psums[2][3][11] , \next_psums[2][3][10] , \next_psums[2][3][9] ,
         \next_psums[2][3][8] , \next_psums[2][3][7] , \next_psums[2][3][6] ,
         \next_psums[2][3][5] , \next_psums[2][3][4] , \next_psums[2][3][3] ,
         \next_psums[2][3][2] , \next_psums[2][3][1] , \next_psums[2][3][0] ,
         \next_psums[2][2][31] , \next_psums[2][2][30] ,
         \next_psums[2][2][29] , \next_psums[2][2][28] ,
         \next_psums[2][2][27] , \next_psums[2][2][26] ,
         \next_psums[2][2][25] , \next_psums[2][2][24] ,
         \next_psums[2][2][23] , \next_psums[2][2][22] ,
         \next_psums[2][2][21] , \next_psums[2][2][20] ,
         \next_psums[2][2][19] , \next_psums[2][2][18] ,
         \next_psums[2][2][17] , \next_psums[2][2][16] ,
         \next_psums[2][2][15] , \next_psums[2][2][14] ,
         \next_psums[2][2][13] , \next_psums[2][2][12] ,
         \next_psums[2][2][11] , \next_psums[2][2][10] , \next_psums[2][2][9] ,
         \next_psums[2][2][8] , \next_psums[2][2][7] , \next_psums[2][2][6] ,
         \next_psums[2][2][5] , \next_psums[2][2][4] , \next_psums[2][2][3] ,
         \next_psums[2][2][2] , \next_psums[2][2][1] , \next_psums[2][2][0] ,
         \next_psums[2][1][31] , \next_psums[2][1][30] ,
         \next_psums[2][1][29] , \next_psums[2][1][28] ,
         \next_psums[2][1][27] , \next_psums[2][1][26] ,
         \next_psums[2][1][25] , \next_psums[2][1][24] ,
         \next_psums[2][1][23] , \next_psums[2][1][22] ,
         \next_psums[2][1][21] , \next_psums[2][1][20] ,
         \next_psums[2][1][19] , \next_psums[2][1][18] ,
         \next_psums[2][1][17] , \next_psums[2][1][16] ,
         \next_psums[2][1][15] , \next_psums[2][1][14] ,
         \next_psums[2][1][13] , \next_psums[2][1][12] ,
         \next_psums[2][1][11] , \next_psums[2][1][10] , \next_psums[2][1][9] ,
         \next_psums[2][1][8] , \next_psums[2][1][7] , \next_psums[2][1][6] ,
         \next_psums[2][1][5] , \next_psums[2][1][4] , \next_psums[2][1][3] ,
         \next_psums[2][1][2] , \next_psums[2][1][1] , \next_psums[2][1][0] ,
         \next_psums[2][0][31] , \next_psums[2][0][30] ,
         \next_psums[2][0][29] , \next_psums[2][0][28] ,
         \next_psums[2][0][27] , \next_psums[2][0][26] ,
         \next_psums[2][0][25] , \next_psums[2][0][24] ,
         \next_psums[2][0][23] , \next_psums[2][0][22] ,
         \next_psums[2][0][21] , \next_psums[2][0][20] ,
         \next_psums[2][0][19] , \next_psums[2][0][18] ,
         \next_psums[2][0][17] , \next_psums[2][0][16] ,
         \next_psums[2][0][15] , \next_psums[2][0][14] ,
         \next_psums[2][0][13] , \next_psums[2][0][12] ,
         \next_psums[2][0][11] , \next_psums[2][0][10] , \next_psums[2][0][9] ,
         \next_psums[2][0][8] , \next_psums[2][0][7] , \next_psums[2][0][6] ,
         \next_psums[2][0][5] , \next_psums[2][0][4] , \next_psums[2][0][3] ,
         \next_psums[2][0][2] , \next_psums[2][0][1] , \next_psums[2][0][0] ,
         \next_psums[1][3][31] , \next_psums[1][3][30] ,
         \next_psums[1][3][29] , \next_psums[1][3][28] ,
         \next_psums[1][3][27] , \next_psums[1][3][26] ,
         \next_psums[1][3][25] , \next_psums[1][3][24] ,
         \next_psums[1][3][23] , \next_psums[1][3][22] ,
         \next_psums[1][3][21] , \next_psums[1][3][20] ,
         \next_psums[1][3][19] , \next_psums[1][3][18] ,
         \next_psums[1][3][17] , \next_psums[1][3][16] ,
         \next_psums[1][3][15] , \next_psums[1][3][14] ,
         \next_psums[1][3][13] , \next_psums[1][3][12] ,
         \next_psums[1][3][11] , \next_psums[1][3][10] , \next_psums[1][3][9] ,
         \next_psums[1][3][8] , \next_psums[1][3][7] , \next_psums[1][3][6] ,
         \next_psums[1][3][5] , \next_psums[1][3][4] , \next_psums[1][3][3] ,
         \next_psums[1][3][2] , \next_psums[1][3][1] , \next_psums[1][3][0] ,
         \next_psums[1][2][31] , \next_psums[1][2][30] ,
         \next_psums[1][2][29] , \next_psums[1][2][28] ,
         \next_psums[1][2][27] , \next_psums[1][2][26] ,
         \next_psums[1][2][25] , \next_psums[1][2][24] ,
         \next_psums[1][2][23] , \next_psums[1][2][22] ,
         \next_psums[1][2][21] , \next_psums[1][2][20] ,
         \next_psums[1][2][19] , \next_psums[1][2][18] ,
         \next_psums[1][2][17] , \next_psums[1][2][16] ,
         \next_psums[1][2][15] , \next_psums[1][2][14] ,
         \next_psums[1][2][13] , \next_psums[1][2][12] ,
         \next_psums[1][2][11] , \next_psums[1][2][10] , \next_psums[1][2][9] ,
         \next_psums[1][2][8] , \next_psums[1][2][7] , \next_psums[1][2][6] ,
         \next_psums[1][2][5] , \next_psums[1][2][4] , \next_psums[1][2][3] ,
         \next_psums[1][2][2] , \next_psums[1][2][1] , \next_psums[1][2][0] ,
         \next_psums[1][1][31] , \next_psums[1][1][30] ,
         \next_psums[1][1][29] , \next_psums[1][1][28] ,
         \next_psums[1][1][27] , \next_psums[1][1][26] ,
         \next_psums[1][1][25] , \next_psums[1][1][24] ,
         \next_psums[1][1][23] , \next_psums[1][1][22] ,
         \next_psums[1][1][21] , \next_psums[1][1][20] ,
         \next_psums[1][1][19] , \next_psums[1][1][18] ,
         \next_psums[1][1][17] , \next_psums[1][1][16] ,
         \next_psums[1][1][15] , \next_psums[1][1][14] ,
         \next_psums[1][1][13] , \next_psums[1][1][12] ,
         \next_psums[1][1][11] , \next_psums[1][1][10] , \next_psums[1][1][9] ,
         \next_psums[1][1][8] , \next_psums[1][1][7] , \next_psums[1][1][6] ,
         \next_psums[1][1][5] , \next_psums[1][1][4] , \next_psums[1][1][3] ,
         \next_psums[1][1][2] , \next_psums[1][1][1] , \next_psums[1][1][0] ,
         \next_psums[1][0][31] , \next_psums[1][0][30] ,
         \next_psums[1][0][29] , \next_psums[1][0][28] ,
         \next_psums[1][0][27] , \next_psums[1][0][26] ,
         \next_psums[1][0][25] , \next_psums[1][0][24] ,
         \next_psums[1][0][23] , \next_psums[1][0][22] ,
         \next_psums[1][0][21] , \next_psums[1][0][20] ,
         \next_psums[1][0][19] , \next_psums[1][0][18] ,
         \next_psums[1][0][17] , \next_psums[1][0][16] ,
         \next_psums[1][0][15] , \next_psums[1][0][14] ,
         \next_psums[1][0][13] , \next_psums[1][0][12] ,
         \next_psums[1][0][11] , \next_psums[1][0][10] , \next_psums[1][0][9] ,
         \next_psums[1][0][8] , \next_psums[1][0][7] , \next_psums[1][0][6] ,
         \next_psums[1][0][5] , \next_psums[1][0][4] , \next_psums[1][0][3] ,
         \next_psums[1][0][2] , \next_psums[1][0][1] , \next_psums[1][0][0] ,
         \next_psums[0][3][31] , \next_psums[0][3][30] ,
         \next_psums[0][3][29] , \next_psums[0][3][28] ,
         \next_psums[0][3][27] , \next_psums[0][3][26] ,
         \next_psums[0][3][25] , \next_psums[0][3][24] ,
         \next_psums[0][3][23] , \next_psums[0][3][22] ,
         \next_psums[0][3][21] , \next_psums[0][3][20] ,
         \next_psums[0][3][19] , \next_psums[0][3][18] ,
         \next_psums[0][3][17] , \next_psums[0][3][16] ,
         \next_psums[0][3][15] , \next_psums[0][3][14] ,
         \next_psums[0][3][13] , \next_psums[0][3][12] ,
         \next_psums[0][3][11] , \next_psums[0][3][10] , \next_psums[0][3][9] ,
         \next_psums[0][3][8] , \next_psums[0][3][7] , \next_psums[0][3][6] ,
         \next_psums[0][3][5] , \next_psums[0][3][4] , \next_psums[0][3][3] ,
         \next_psums[0][3][2] , \next_psums[0][3][1] , \next_psums[0][3][0] ,
         \next_psums[0][2][31] , \next_psums[0][2][30] ,
         \next_psums[0][2][29] , \next_psums[0][2][28] ,
         \next_psums[0][2][27] , \next_psums[0][2][26] ,
         \next_psums[0][2][25] , \next_psums[0][2][24] ,
         \next_psums[0][2][23] , \next_psums[0][2][22] ,
         \next_psums[0][2][21] , \next_psums[0][2][20] ,
         \next_psums[0][2][19] , \next_psums[0][2][18] ,
         \next_psums[0][2][17] , \next_psums[0][2][16] ,
         \next_psums[0][2][15] , \next_psums[0][2][14] ,
         \next_psums[0][2][13] , \next_psums[0][2][12] ,
         \next_psums[0][2][11] , \next_psums[0][2][10] , \next_psums[0][2][9] ,
         \next_psums[0][2][8] , \next_psums[0][2][7] , \next_psums[0][2][6] ,
         \next_psums[0][2][5] , \next_psums[0][2][4] , \next_psums[0][2][3] ,
         \next_psums[0][2][2] , \next_psums[0][2][1] , \next_psums[0][2][0] ,
         \next_psums[0][1][31] , \next_psums[0][1][30] ,
         \next_psums[0][1][29] , \next_psums[0][1][28] ,
         \next_psums[0][1][27] , \next_psums[0][1][26] ,
         \next_psums[0][1][25] , \next_psums[0][1][24] ,
         \next_psums[0][1][23] , \next_psums[0][1][22] ,
         \next_psums[0][1][21] , \next_psums[0][1][20] ,
         \next_psums[0][1][19] , \next_psums[0][1][18] ,
         \next_psums[0][1][17] , \next_psums[0][1][16] ,
         \next_psums[0][1][15] , \next_psums[0][1][14] ,
         \next_psums[0][1][13] , \next_psums[0][1][12] ,
         \next_psums[0][1][11] , \next_psums[0][1][10] , \next_psums[0][1][9] ,
         \next_psums[0][1][8] , \next_psums[0][1][7] , \next_psums[0][1][6] ,
         \next_psums[0][1][5] , \next_psums[0][1][4] , \next_psums[0][1][3] ,
         \next_psums[0][1][2] , \next_psums[0][1][1] , \next_psums[0][1][0] ,
         \next_psums[0][0][31] , \next_psums[0][0][30] ,
         \next_psums[0][0][29] , \next_psums[0][0][28] ,
         \next_psums[0][0][27] , \next_psums[0][0][26] ,
         \next_psums[0][0][25] , \next_psums[0][0][24] ,
         \next_psums[0][0][23] , \next_psums[0][0][22] ,
         \next_psums[0][0][21] , \next_psums[0][0][20] ,
         \next_psums[0][0][19] , \next_psums[0][0][18] ,
         \next_psums[0][0][17] , \next_psums[0][0][16] ,
         \next_psums[0][0][15] , \next_psums[0][0][14] ,
         \next_psums[0][0][13] , \next_psums[0][0][12] ,
         \next_psums[0][0][11] , \next_psums[0][0][10] , \next_psums[0][0][9] ,
         \next_psums[0][0][8] , \next_psums[0][0][7] , \next_psums[0][0][6] ,
         \next_psums[0][0][5] , \next_psums[0][0][4] , \next_psums[0][0][3] ,
         \next_psums[0][0][2] , \next_psums[0][0][1] , \next_psums[0][0][0] ,
         \WBUF_data_out[3][3][31] , \WBUF_data_out[3][3][30] ,
         \WBUF_data_out[3][3][29] , \WBUF_data_out[3][3][28] ,
         \WBUF_data_out[3][3][27] , \WBUF_data_out[3][3][26] ,
         \WBUF_data_out[3][3][25] , \WBUF_data_out[3][3][24] ,
         \WBUF_data_out[3][3][23] , \WBUF_data_out[3][3][22] ,
         \WBUF_data_out[3][3][21] , \WBUF_data_out[3][3][20] ,
         \WBUF_data_out[3][3][19] , \WBUF_data_out[3][3][18] ,
         \WBUF_data_out[3][3][17] , \WBUF_data_out[3][3][16] ,
         \WBUF_data_out[3][3][15] , \WBUF_data_out[3][3][14] ,
         \WBUF_data_out[3][3][13] , \WBUF_data_out[3][3][12] ,
         \WBUF_data_out[3][3][11] , \WBUF_data_out[3][3][10] ,
         \WBUF_data_out[3][3][9] , \WBUF_data_out[3][3][8] ,
         \WBUF_data_out[3][3][7] , \WBUF_data_out[3][3][6] ,
         \WBUF_data_out[3][3][5] , \WBUF_data_out[3][3][4] ,
         \WBUF_data_out[3][3][3] , \WBUF_data_out[3][3][2] ,
         \WBUF_data_out[3][3][1] , \WBUF_data_out[3][3][0] ,
         \WBUF_data_out[3][2][31] , \WBUF_data_out[3][2][30] ,
         \WBUF_data_out[3][2][29] , \WBUF_data_out[3][2][28] ,
         \WBUF_data_out[3][2][27] , \WBUF_data_out[3][2][26] ,
         \WBUF_data_out[3][2][25] , \WBUF_data_out[3][2][24] ,
         \WBUF_data_out[3][2][23] , \WBUF_data_out[3][2][22] ,
         \WBUF_data_out[3][2][21] , \WBUF_data_out[3][2][20] ,
         \WBUF_data_out[3][2][19] , \WBUF_data_out[3][2][18] ,
         \WBUF_data_out[3][2][17] , \WBUF_data_out[3][2][16] ,
         \WBUF_data_out[3][2][15] , \WBUF_data_out[3][2][14] ,
         \WBUF_data_out[3][2][13] , \WBUF_data_out[3][2][12] ,
         \WBUF_data_out[3][2][11] , \WBUF_data_out[3][2][10] ,
         \WBUF_data_out[3][2][9] , \WBUF_data_out[3][2][8] ,
         \WBUF_data_out[3][2][7] , \WBUF_data_out[3][2][6] ,
         \WBUF_data_out[3][2][5] , \WBUF_data_out[3][2][4] ,
         \WBUF_data_out[3][2][3] , \WBUF_data_out[3][2][2] ,
         \WBUF_data_out[3][2][1] , \WBUF_data_out[3][2][0] ,
         \WBUF_data_out[3][1][31] , \WBUF_data_out[3][1][30] ,
         \WBUF_data_out[3][1][29] , \WBUF_data_out[3][1][28] ,
         \WBUF_data_out[3][1][27] , \WBUF_data_out[3][1][26] ,
         \WBUF_data_out[3][1][25] , \WBUF_data_out[3][1][24] ,
         \WBUF_data_out[3][1][23] , \WBUF_data_out[3][1][22] ,
         \WBUF_data_out[3][1][21] , \WBUF_data_out[3][1][20] ,
         \WBUF_data_out[3][1][19] , \WBUF_data_out[3][1][18] ,
         \WBUF_data_out[3][1][17] , \WBUF_data_out[3][1][16] ,
         \WBUF_data_out[3][1][15] , \WBUF_data_out[3][1][14] ,
         \WBUF_data_out[3][1][13] , \WBUF_data_out[3][1][12] ,
         \WBUF_data_out[3][1][11] , \WBUF_data_out[3][1][10] ,
         \WBUF_data_out[3][1][9] , \WBUF_data_out[3][1][8] ,
         \WBUF_data_out[3][1][7] , \WBUF_data_out[3][1][6] ,
         \WBUF_data_out[3][1][5] , \WBUF_data_out[3][1][4] ,
         \WBUF_data_out[3][1][3] , \WBUF_data_out[3][1][2] ,
         \WBUF_data_out[3][1][1] , \WBUF_data_out[3][1][0] ,
         \WBUF_data_out[3][0][31] , \WBUF_data_out[3][0][30] ,
         \WBUF_data_out[3][0][29] , \WBUF_data_out[3][0][28] ,
         \WBUF_data_out[3][0][27] , \WBUF_data_out[3][0][26] ,
         \WBUF_data_out[3][0][25] , \WBUF_data_out[3][0][24] ,
         \WBUF_data_out[3][0][23] , \WBUF_data_out[3][0][22] ,
         \WBUF_data_out[3][0][21] , \WBUF_data_out[3][0][20] ,
         \WBUF_data_out[3][0][19] , \WBUF_data_out[3][0][18] ,
         \WBUF_data_out[3][0][17] , \WBUF_data_out[3][0][16] ,
         \WBUF_data_out[3][0][15] , \WBUF_data_out[3][0][14] ,
         \WBUF_data_out[3][0][13] , \WBUF_data_out[3][0][12] ,
         \WBUF_data_out[3][0][11] , \WBUF_data_out[3][0][10] ,
         \WBUF_data_out[3][0][9] , \WBUF_data_out[3][0][8] ,
         \WBUF_data_out[3][0][7] , \WBUF_data_out[3][0][6] ,
         \WBUF_data_out[3][0][5] , \WBUF_data_out[3][0][4] ,
         \WBUF_data_out[3][0][3] , \WBUF_data_out[3][0][2] ,
         \WBUF_data_out[3][0][1] , \WBUF_data_out[3][0][0] ,
         \WBUF_data_out[2][3][31] , \WBUF_data_out[2][3][30] ,
         \WBUF_data_out[2][3][29] , \WBUF_data_out[2][3][28] ,
         \WBUF_data_out[2][3][27] , \WBUF_data_out[2][3][26] ,
         \WBUF_data_out[2][3][25] , \WBUF_data_out[2][3][24] ,
         \WBUF_data_out[2][3][23] , \WBUF_data_out[2][3][22] ,
         \WBUF_data_out[2][3][21] , \WBUF_data_out[2][3][20] ,
         \WBUF_data_out[2][3][19] , \WBUF_data_out[2][3][18] ,
         \WBUF_data_out[2][3][17] , \WBUF_data_out[2][3][16] ,
         \WBUF_data_out[2][3][15] , \WBUF_data_out[2][3][14] ,
         \WBUF_data_out[2][3][13] , \WBUF_data_out[2][3][12] ,
         \WBUF_data_out[2][3][11] , \WBUF_data_out[2][3][10] ,
         \WBUF_data_out[2][3][9] , \WBUF_data_out[2][3][8] ,
         \WBUF_data_out[2][3][7] , \WBUF_data_out[2][3][6] ,
         \WBUF_data_out[2][3][5] , \WBUF_data_out[2][3][4] ,
         \WBUF_data_out[2][3][3] , \WBUF_data_out[2][3][2] ,
         \WBUF_data_out[2][3][1] , \WBUF_data_out[2][3][0] ,
         \WBUF_data_out[2][2][31] , \WBUF_data_out[2][2][30] ,
         \WBUF_data_out[2][2][29] , \WBUF_data_out[2][2][28] ,
         \WBUF_data_out[2][2][27] , \WBUF_data_out[2][2][26] ,
         \WBUF_data_out[2][2][25] , \WBUF_data_out[2][2][24] ,
         \WBUF_data_out[2][2][23] , \WBUF_data_out[2][2][22] ,
         \WBUF_data_out[2][2][21] , \WBUF_data_out[2][2][20] ,
         \WBUF_data_out[2][2][19] , \WBUF_data_out[2][2][18] ,
         \WBUF_data_out[2][2][17] , \WBUF_data_out[2][2][16] ,
         \WBUF_data_out[2][2][15] , \WBUF_data_out[2][2][14] ,
         \WBUF_data_out[2][2][13] , \WBUF_data_out[2][2][12] ,
         \WBUF_data_out[2][2][11] , \WBUF_data_out[2][2][10] ,
         \WBUF_data_out[2][2][9] , \WBUF_data_out[2][2][8] ,
         \WBUF_data_out[2][2][7] , \WBUF_data_out[2][2][6] ,
         \WBUF_data_out[2][2][5] , \WBUF_data_out[2][2][4] ,
         \WBUF_data_out[2][2][3] , \WBUF_data_out[2][2][2] ,
         \WBUF_data_out[2][2][1] , \WBUF_data_out[2][2][0] ,
         \WBUF_data_out[2][1][31] , \WBUF_data_out[2][1][30] ,
         \WBUF_data_out[2][1][29] , \WBUF_data_out[2][1][28] ,
         \WBUF_data_out[2][1][27] , \WBUF_data_out[2][1][26] ,
         \WBUF_data_out[2][1][25] , \WBUF_data_out[2][1][24] ,
         \WBUF_data_out[2][1][23] , \WBUF_data_out[2][1][22] ,
         \WBUF_data_out[2][1][21] , \WBUF_data_out[2][1][20] ,
         \WBUF_data_out[2][1][19] , \WBUF_data_out[2][1][18] ,
         \WBUF_data_out[2][1][17] , \WBUF_data_out[2][1][16] ,
         \WBUF_data_out[2][1][15] , \WBUF_data_out[2][1][14] ,
         \WBUF_data_out[2][1][13] , \WBUF_data_out[2][1][12] ,
         \WBUF_data_out[2][1][11] , \WBUF_data_out[2][1][10] ,
         \WBUF_data_out[2][1][9] , \WBUF_data_out[2][1][8] ,
         \WBUF_data_out[2][1][7] , \WBUF_data_out[2][1][6] ,
         \WBUF_data_out[2][1][5] , \WBUF_data_out[2][1][4] ,
         \WBUF_data_out[2][1][3] , \WBUF_data_out[2][1][2] ,
         \WBUF_data_out[2][1][1] , \WBUF_data_out[2][1][0] ,
         \WBUF_data_out[2][0][31] , \WBUF_data_out[2][0][30] ,
         \WBUF_data_out[2][0][29] , \WBUF_data_out[2][0][28] ,
         \WBUF_data_out[2][0][27] , \WBUF_data_out[2][0][26] ,
         \WBUF_data_out[2][0][25] , \WBUF_data_out[2][0][24] ,
         \WBUF_data_out[2][0][23] , \WBUF_data_out[2][0][22] ,
         \WBUF_data_out[2][0][21] , \WBUF_data_out[2][0][20] ,
         \WBUF_data_out[2][0][19] , \WBUF_data_out[2][0][18] ,
         \WBUF_data_out[2][0][17] , \WBUF_data_out[2][0][16] ,
         \WBUF_data_out[2][0][15] , \WBUF_data_out[2][0][14] ,
         \WBUF_data_out[2][0][13] , \WBUF_data_out[2][0][12] ,
         \WBUF_data_out[2][0][11] , \WBUF_data_out[2][0][10] ,
         \WBUF_data_out[2][0][9] , \WBUF_data_out[2][0][8] ,
         \WBUF_data_out[2][0][7] , \WBUF_data_out[2][0][6] ,
         \WBUF_data_out[2][0][5] , \WBUF_data_out[2][0][4] ,
         \WBUF_data_out[2][0][3] , \WBUF_data_out[2][0][2] ,
         \WBUF_data_out[2][0][1] , \WBUF_data_out[2][0][0] ,
         \WBUF_data_out[1][3][31] , \WBUF_data_out[1][3][30] ,
         \WBUF_data_out[1][3][29] , \WBUF_data_out[1][3][28] ,
         \WBUF_data_out[1][3][27] , \WBUF_data_out[1][3][26] ,
         \WBUF_data_out[1][3][25] , \WBUF_data_out[1][3][24] ,
         \WBUF_data_out[1][3][23] , \WBUF_data_out[1][3][22] ,
         \WBUF_data_out[1][3][21] , \WBUF_data_out[1][3][20] ,
         \WBUF_data_out[1][3][19] , \WBUF_data_out[1][3][18] ,
         \WBUF_data_out[1][3][17] , \WBUF_data_out[1][3][16] ,
         \WBUF_data_out[1][3][15] , \WBUF_data_out[1][3][14] ,
         \WBUF_data_out[1][3][13] , \WBUF_data_out[1][3][12] ,
         \WBUF_data_out[1][3][11] , \WBUF_data_out[1][3][10] ,
         \WBUF_data_out[1][3][9] , \WBUF_data_out[1][3][8] ,
         \WBUF_data_out[1][3][7] , \WBUF_data_out[1][3][6] ,
         \WBUF_data_out[1][3][5] , \WBUF_data_out[1][3][4] ,
         \WBUF_data_out[1][3][3] , \WBUF_data_out[1][3][2] ,
         \WBUF_data_out[1][3][1] , \WBUF_data_out[1][3][0] ,
         \WBUF_data_out[1][2][31] , \WBUF_data_out[1][2][30] ,
         \WBUF_data_out[1][2][29] , \WBUF_data_out[1][2][28] ,
         \WBUF_data_out[1][2][27] , \WBUF_data_out[1][2][26] ,
         \WBUF_data_out[1][2][25] , \WBUF_data_out[1][2][24] ,
         \WBUF_data_out[1][2][23] , \WBUF_data_out[1][2][22] ,
         \WBUF_data_out[1][2][21] , \WBUF_data_out[1][2][20] ,
         \WBUF_data_out[1][2][19] , \WBUF_data_out[1][2][18] ,
         \WBUF_data_out[1][2][17] , \WBUF_data_out[1][2][16] ,
         \WBUF_data_out[1][2][15] , \WBUF_data_out[1][2][14] ,
         \WBUF_data_out[1][2][13] , \WBUF_data_out[1][2][12] ,
         \WBUF_data_out[1][2][11] , \WBUF_data_out[1][2][10] ,
         \WBUF_data_out[1][2][9] , \WBUF_data_out[1][2][8] ,
         \WBUF_data_out[1][2][7] , \WBUF_data_out[1][2][6] ,
         \WBUF_data_out[1][2][5] , \WBUF_data_out[1][2][4] ,
         \WBUF_data_out[1][2][3] , \WBUF_data_out[1][2][2] ,
         \WBUF_data_out[1][2][1] , \WBUF_data_out[1][2][0] ,
         \WBUF_data_out[1][1][31] , \WBUF_data_out[1][1][30] ,
         \WBUF_data_out[1][1][29] , \WBUF_data_out[1][1][28] ,
         \WBUF_data_out[1][1][27] , \WBUF_data_out[1][1][26] ,
         \WBUF_data_out[1][1][25] , \WBUF_data_out[1][1][24] ,
         \WBUF_data_out[1][1][23] , \WBUF_data_out[1][1][22] ,
         \WBUF_data_out[1][1][21] , \WBUF_data_out[1][1][20] ,
         \WBUF_data_out[1][1][19] , \WBUF_data_out[1][1][18] ,
         \WBUF_data_out[1][1][17] , \WBUF_data_out[1][1][16] ,
         \WBUF_data_out[1][1][15] , \WBUF_data_out[1][1][14] ,
         \WBUF_data_out[1][1][13] , \WBUF_data_out[1][1][12] ,
         \WBUF_data_out[1][1][11] , \WBUF_data_out[1][1][10] ,
         \WBUF_data_out[1][1][9] , \WBUF_data_out[1][1][8] ,
         \WBUF_data_out[1][1][7] , \WBUF_data_out[1][1][6] ,
         \WBUF_data_out[1][1][5] , \WBUF_data_out[1][1][4] ,
         \WBUF_data_out[1][1][3] , \WBUF_data_out[1][1][2] ,
         \WBUF_data_out[1][1][1] , \WBUF_data_out[1][1][0] ,
         \WBUF_data_out[1][0][31] , \WBUF_data_out[1][0][30] ,
         \WBUF_data_out[1][0][29] , \WBUF_data_out[1][0][28] ,
         \WBUF_data_out[1][0][27] , \WBUF_data_out[1][0][26] ,
         \WBUF_data_out[1][0][25] , \WBUF_data_out[1][0][24] ,
         \WBUF_data_out[1][0][23] , \WBUF_data_out[1][0][22] ,
         \WBUF_data_out[1][0][21] , \WBUF_data_out[1][0][20] ,
         \WBUF_data_out[1][0][19] , \WBUF_data_out[1][0][18] ,
         \WBUF_data_out[1][0][17] , \WBUF_data_out[1][0][16] ,
         \WBUF_data_out[1][0][15] , \WBUF_data_out[1][0][14] ,
         \WBUF_data_out[1][0][13] , \WBUF_data_out[1][0][12] ,
         \WBUF_data_out[1][0][11] , \WBUF_data_out[1][0][10] ,
         \WBUF_data_out[1][0][9] , \WBUF_data_out[1][0][8] ,
         \WBUF_data_out[1][0][7] , \WBUF_data_out[1][0][6] ,
         \WBUF_data_out[1][0][5] , \WBUF_data_out[1][0][4] ,
         \WBUF_data_out[1][0][3] , \WBUF_data_out[1][0][2] ,
         \WBUF_data_out[1][0][1] , \WBUF_data_out[1][0][0] ,
         \WBUF_data_out[0][3][31] , \WBUF_data_out[0][3][30] ,
         \WBUF_data_out[0][3][29] , \WBUF_data_out[0][3][28] ,
         \WBUF_data_out[0][3][27] , \WBUF_data_out[0][3][26] ,
         \WBUF_data_out[0][3][25] , \WBUF_data_out[0][3][24] ,
         \WBUF_data_out[0][3][23] , \WBUF_data_out[0][3][22] ,
         \WBUF_data_out[0][3][21] , \WBUF_data_out[0][3][20] ,
         \WBUF_data_out[0][3][19] , \WBUF_data_out[0][3][18] ,
         \WBUF_data_out[0][3][17] , \WBUF_data_out[0][3][16] ,
         \WBUF_data_out[0][3][15] , \WBUF_data_out[0][3][14] ,
         \WBUF_data_out[0][3][13] , \WBUF_data_out[0][3][12] ,
         \WBUF_data_out[0][3][11] , \WBUF_data_out[0][3][10] ,
         \WBUF_data_out[0][3][9] , \WBUF_data_out[0][3][8] ,
         \WBUF_data_out[0][3][7] , \WBUF_data_out[0][3][6] ,
         \WBUF_data_out[0][3][5] , \WBUF_data_out[0][3][4] ,
         \WBUF_data_out[0][3][3] , \WBUF_data_out[0][3][2] ,
         \WBUF_data_out[0][3][1] , \WBUF_data_out[0][3][0] ,
         \WBUF_data_out[0][2][31] , \WBUF_data_out[0][2][30] ,
         \WBUF_data_out[0][2][29] , \WBUF_data_out[0][2][28] ,
         \WBUF_data_out[0][2][27] , \WBUF_data_out[0][2][26] ,
         \WBUF_data_out[0][2][25] , \WBUF_data_out[0][2][24] ,
         \WBUF_data_out[0][2][23] , \WBUF_data_out[0][2][22] ,
         \WBUF_data_out[0][2][21] , \WBUF_data_out[0][2][20] ,
         \WBUF_data_out[0][2][19] , \WBUF_data_out[0][2][18] ,
         \WBUF_data_out[0][2][17] , \WBUF_data_out[0][2][16] ,
         \WBUF_data_out[0][2][15] , \WBUF_data_out[0][2][14] ,
         \WBUF_data_out[0][2][13] , \WBUF_data_out[0][2][12] ,
         \WBUF_data_out[0][2][11] , \WBUF_data_out[0][2][10] ,
         \WBUF_data_out[0][2][9] , \WBUF_data_out[0][2][8] ,
         \WBUF_data_out[0][2][7] , \WBUF_data_out[0][2][6] ,
         \WBUF_data_out[0][2][5] , \WBUF_data_out[0][2][4] ,
         \WBUF_data_out[0][2][3] , \WBUF_data_out[0][2][2] ,
         \WBUF_data_out[0][2][1] , \WBUF_data_out[0][2][0] ,
         \WBUF_data_out[0][1][31] , \WBUF_data_out[0][1][30] ,
         \WBUF_data_out[0][1][29] , \WBUF_data_out[0][1][28] ,
         \WBUF_data_out[0][1][27] , \WBUF_data_out[0][1][26] ,
         \WBUF_data_out[0][1][25] , \WBUF_data_out[0][1][24] ,
         \WBUF_data_out[0][1][23] , \WBUF_data_out[0][1][22] ,
         \WBUF_data_out[0][1][21] , \WBUF_data_out[0][1][20] ,
         \WBUF_data_out[0][1][19] , \WBUF_data_out[0][1][18] ,
         \WBUF_data_out[0][1][17] , \WBUF_data_out[0][1][16] ,
         \WBUF_data_out[0][1][15] , \WBUF_data_out[0][1][14] ,
         \WBUF_data_out[0][1][13] , \WBUF_data_out[0][1][12] ,
         \WBUF_data_out[0][1][11] , \WBUF_data_out[0][1][10] ,
         \WBUF_data_out[0][1][9] , \WBUF_data_out[0][1][8] ,
         \WBUF_data_out[0][1][7] , \WBUF_data_out[0][1][6] ,
         \WBUF_data_out[0][1][5] , \WBUF_data_out[0][1][4] ,
         \WBUF_data_out[0][1][3] , \WBUF_data_out[0][1][2] ,
         \WBUF_data_out[0][1][1] , \WBUF_data_out[0][1][0] ,
         \WBUF_data_out[0][0][31] , \WBUF_data_out[0][0][30] ,
         \WBUF_data_out[0][0][29] , \WBUF_data_out[0][0][28] ,
         \WBUF_data_out[0][0][27] , \WBUF_data_out[0][0][26] ,
         \WBUF_data_out[0][0][25] , \WBUF_data_out[0][0][24] ,
         \WBUF_data_out[0][0][23] , \WBUF_data_out[0][0][22] ,
         \WBUF_data_out[0][0][21] , \WBUF_data_out[0][0][20] ,
         \WBUF_data_out[0][0][19] , \WBUF_data_out[0][0][18] ,
         \WBUF_data_out[0][0][17] , \WBUF_data_out[0][0][16] ,
         \WBUF_data_out[0][0][15] , \WBUF_data_out[0][0][14] ,
         \WBUF_data_out[0][0][13] , \WBUF_data_out[0][0][12] ,
         \WBUF_data_out[0][0][11] , \WBUF_data_out[0][0][10] ,
         \WBUF_data_out[0][0][9] , \WBUF_data_out[0][0][8] ,
         \WBUF_data_out[0][0][7] , \WBUF_data_out[0][0][6] ,
         \WBUF_data_out[0][0][5] , \WBUF_data_out[0][0][4] ,
         \WBUF_data_out[0][0][3] , \WBUF_data_out[0][0][2] ,
         \WBUF_data_out[0][0][1] , \WBUF_data_out[0][0][0] ,
         \weight_mux_outs[3][3][31] , \weight_mux_outs[3][3][30] ,
         \weight_mux_outs[3][3][29] , \weight_mux_outs[3][3][28] ,
         \weight_mux_outs[3][3][27] , \weight_mux_outs[3][3][26] ,
         \weight_mux_outs[3][3][25] , \weight_mux_outs[3][3][24] ,
         \weight_mux_outs[3][3][23] , \weight_mux_outs[3][3][22] ,
         \weight_mux_outs[3][3][21] , \weight_mux_outs[3][3][20] ,
         \weight_mux_outs[3][3][19] , \weight_mux_outs[3][3][18] ,
         \weight_mux_outs[3][3][17] , \weight_mux_outs[3][3][16] ,
         \weight_mux_outs[3][3][15] , \weight_mux_outs[3][3][14] ,
         \weight_mux_outs[3][3][13] , \weight_mux_outs[3][3][12] ,
         \weight_mux_outs[3][3][11] , \weight_mux_outs[3][3][10] ,
         \weight_mux_outs[3][3][9] , \weight_mux_outs[3][3][8] ,
         \weight_mux_outs[3][3][7] , \weight_mux_outs[3][3][6] ,
         \weight_mux_outs[3][3][5] , \weight_mux_outs[3][3][4] ,
         \weight_mux_outs[3][3][3] , \weight_mux_outs[3][3][2] ,
         \weight_mux_outs[3][3][1] , \weight_mux_outs[3][3][0] ,
         \weight_mux_outs[3][2][31] , \weight_mux_outs[3][2][30] ,
         \weight_mux_outs[3][2][29] , \weight_mux_outs[3][2][28] ,
         \weight_mux_outs[3][2][27] , \weight_mux_outs[3][2][26] ,
         \weight_mux_outs[3][2][25] , \weight_mux_outs[3][2][24] ,
         \weight_mux_outs[3][2][23] , \weight_mux_outs[3][2][22] ,
         \weight_mux_outs[3][2][21] , \weight_mux_outs[3][2][20] ,
         \weight_mux_outs[3][2][19] , \weight_mux_outs[3][2][18] ,
         \weight_mux_outs[3][2][17] , \weight_mux_outs[3][2][16] ,
         \weight_mux_outs[3][2][15] , \weight_mux_outs[3][2][14] ,
         \weight_mux_outs[3][2][13] , \weight_mux_outs[3][2][12] ,
         \weight_mux_outs[3][2][11] , \weight_mux_outs[3][2][10] ,
         \weight_mux_outs[3][2][9] , \weight_mux_outs[3][2][8] ,
         \weight_mux_outs[3][2][7] , \weight_mux_outs[3][2][6] ,
         \weight_mux_outs[3][2][5] , \weight_mux_outs[3][2][4] ,
         \weight_mux_outs[3][2][3] , \weight_mux_outs[3][2][2] ,
         \weight_mux_outs[3][2][1] , \weight_mux_outs[3][2][0] ,
         \weight_mux_outs[3][1][31] , \weight_mux_outs[3][1][30] ,
         \weight_mux_outs[3][1][29] , \weight_mux_outs[3][1][28] ,
         \weight_mux_outs[3][1][27] , \weight_mux_outs[3][1][26] ,
         \weight_mux_outs[3][1][25] , \weight_mux_outs[3][1][24] ,
         \weight_mux_outs[3][1][23] , \weight_mux_outs[3][1][22] ,
         \weight_mux_outs[3][1][21] , \weight_mux_outs[3][1][20] ,
         \weight_mux_outs[3][1][19] , \weight_mux_outs[3][1][18] ,
         \weight_mux_outs[3][1][17] , \weight_mux_outs[3][1][16] ,
         \weight_mux_outs[3][1][15] , \weight_mux_outs[3][1][14] ,
         \weight_mux_outs[3][1][13] , \weight_mux_outs[3][1][12] ,
         \weight_mux_outs[3][1][11] , \weight_mux_outs[3][1][10] ,
         \weight_mux_outs[3][1][9] , \weight_mux_outs[3][1][8] ,
         \weight_mux_outs[3][1][7] , \weight_mux_outs[3][1][6] ,
         \weight_mux_outs[3][1][5] , \weight_mux_outs[3][1][4] ,
         \weight_mux_outs[3][1][3] , \weight_mux_outs[3][1][2] ,
         \weight_mux_outs[3][1][1] , \weight_mux_outs[3][1][0] ,
         \weight_mux_outs[3][0][31] , \weight_mux_outs[3][0][30] ,
         \weight_mux_outs[3][0][29] , \weight_mux_outs[3][0][28] ,
         \weight_mux_outs[3][0][27] , \weight_mux_outs[3][0][26] ,
         \weight_mux_outs[3][0][25] , \weight_mux_outs[3][0][24] ,
         \weight_mux_outs[3][0][23] , \weight_mux_outs[3][0][22] ,
         \weight_mux_outs[3][0][21] , \weight_mux_outs[3][0][20] ,
         \weight_mux_outs[3][0][19] , \weight_mux_outs[3][0][18] ,
         \weight_mux_outs[3][0][17] , \weight_mux_outs[3][0][16] ,
         \weight_mux_outs[3][0][15] , \weight_mux_outs[3][0][14] ,
         \weight_mux_outs[3][0][13] , \weight_mux_outs[3][0][12] ,
         \weight_mux_outs[3][0][11] , \weight_mux_outs[3][0][10] ,
         \weight_mux_outs[3][0][9] , \weight_mux_outs[3][0][8] ,
         \weight_mux_outs[3][0][7] , \weight_mux_outs[3][0][6] ,
         \weight_mux_outs[3][0][5] , \weight_mux_outs[3][0][4] ,
         \weight_mux_outs[3][0][3] , \weight_mux_outs[3][0][2] ,
         \weight_mux_outs[3][0][1] , \weight_mux_outs[3][0][0] ,
         \weight_mux_outs[2][3][31] , \weight_mux_outs[2][3][30] ,
         \weight_mux_outs[2][3][29] , \weight_mux_outs[2][3][28] ,
         \weight_mux_outs[2][3][27] , \weight_mux_outs[2][3][26] ,
         \weight_mux_outs[2][3][25] , \weight_mux_outs[2][3][24] ,
         \weight_mux_outs[2][3][23] , \weight_mux_outs[2][3][22] ,
         \weight_mux_outs[2][3][21] , \weight_mux_outs[2][3][20] ,
         \weight_mux_outs[2][3][19] , \weight_mux_outs[2][3][18] ,
         \weight_mux_outs[2][3][17] , \weight_mux_outs[2][3][16] ,
         \weight_mux_outs[2][3][15] , \weight_mux_outs[2][3][14] ,
         \weight_mux_outs[2][3][13] , \weight_mux_outs[2][3][12] ,
         \weight_mux_outs[2][3][11] , \weight_mux_outs[2][3][10] ,
         \weight_mux_outs[2][3][9] , \weight_mux_outs[2][3][8] ,
         \weight_mux_outs[2][3][7] , \weight_mux_outs[2][3][6] ,
         \weight_mux_outs[2][3][5] , \weight_mux_outs[2][3][4] ,
         \weight_mux_outs[2][3][3] , \weight_mux_outs[2][3][2] ,
         \weight_mux_outs[2][3][1] , \weight_mux_outs[2][3][0] ,
         \weight_mux_outs[2][2][31] , \weight_mux_outs[2][2][30] ,
         \weight_mux_outs[2][2][29] , \weight_mux_outs[2][2][28] ,
         \weight_mux_outs[2][2][27] , \weight_mux_outs[2][2][26] ,
         \weight_mux_outs[2][2][25] , \weight_mux_outs[2][2][24] ,
         \weight_mux_outs[2][2][23] , \weight_mux_outs[2][2][22] ,
         \weight_mux_outs[2][2][21] , \weight_mux_outs[2][2][20] ,
         \weight_mux_outs[2][2][19] , \weight_mux_outs[2][2][18] ,
         \weight_mux_outs[2][2][17] , \weight_mux_outs[2][2][16] ,
         \weight_mux_outs[2][2][15] , \weight_mux_outs[2][2][14] ,
         \weight_mux_outs[2][2][13] , \weight_mux_outs[2][2][12] ,
         \weight_mux_outs[2][2][11] , \weight_mux_outs[2][2][10] ,
         \weight_mux_outs[2][2][9] , \weight_mux_outs[2][2][8] ,
         \weight_mux_outs[2][2][7] , \weight_mux_outs[2][2][6] ,
         \weight_mux_outs[2][2][5] , \weight_mux_outs[2][2][4] ,
         \weight_mux_outs[2][2][3] , \weight_mux_outs[2][2][2] ,
         \weight_mux_outs[2][2][1] , \weight_mux_outs[2][2][0] ,
         \weight_mux_outs[2][1][31] , \weight_mux_outs[2][1][30] ,
         \weight_mux_outs[2][1][29] , \weight_mux_outs[2][1][28] ,
         \weight_mux_outs[2][1][27] , \weight_mux_outs[2][1][26] ,
         \weight_mux_outs[2][1][25] , \weight_mux_outs[2][1][24] ,
         \weight_mux_outs[2][1][23] , \weight_mux_outs[2][1][22] ,
         \weight_mux_outs[2][1][21] , \weight_mux_outs[2][1][20] ,
         \weight_mux_outs[2][1][19] , \weight_mux_outs[2][1][18] ,
         \weight_mux_outs[2][1][17] , \weight_mux_outs[2][1][16] ,
         \weight_mux_outs[2][1][15] , \weight_mux_outs[2][1][14] ,
         \weight_mux_outs[2][1][13] , \weight_mux_outs[2][1][12] ,
         \weight_mux_outs[2][1][11] , \weight_mux_outs[2][1][10] ,
         \weight_mux_outs[2][1][9] , \weight_mux_outs[2][1][8] ,
         \weight_mux_outs[2][1][7] , \weight_mux_outs[2][1][6] ,
         \weight_mux_outs[2][1][5] , \weight_mux_outs[2][1][4] ,
         \weight_mux_outs[2][1][3] , \weight_mux_outs[2][1][2] ,
         \weight_mux_outs[2][1][1] , \weight_mux_outs[2][1][0] ,
         \weight_mux_outs[2][0][31] , \weight_mux_outs[2][0][30] ,
         \weight_mux_outs[2][0][29] , \weight_mux_outs[2][0][28] ,
         \weight_mux_outs[2][0][27] , \weight_mux_outs[2][0][26] ,
         \weight_mux_outs[2][0][25] , \weight_mux_outs[2][0][24] ,
         \weight_mux_outs[2][0][23] , \weight_mux_outs[2][0][22] ,
         \weight_mux_outs[2][0][21] , \weight_mux_outs[2][0][20] ,
         \weight_mux_outs[2][0][19] , \weight_mux_outs[2][0][18] ,
         \weight_mux_outs[2][0][17] , \weight_mux_outs[2][0][16] ,
         \weight_mux_outs[2][0][15] , \weight_mux_outs[2][0][14] ,
         \weight_mux_outs[2][0][13] , \weight_mux_outs[2][0][12] ,
         \weight_mux_outs[2][0][11] , \weight_mux_outs[2][0][10] ,
         \weight_mux_outs[2][0][9] , \weight_mux_outs[2][0][8] ,
         \weight_mux_outs[2][0][7] , \weight_mux_outs[2][0][6] ,
         \weight_mux_outs[2][0][5] , \weight_mux_outs[2][0][4] ,
         \weight_mux_outs[2][0][3] , \weight_mux_outs[2][0][2] ,
         \weight_mux_outs[2][0][1] , \weight_mux_outs[2][0][0] ,
         \weight_mux_outs[1][3][31] , \weight_mux_outs[1][3][30] ,
         \weight_mux_outs[1][3][29] , \weight_mux_outs[1][3][28] ,
         \weight_mux_outs[1][3][27] , \weight_mux_outs[1][3][26] ,
         \weight_mux_outs[1][3][25] , \weight_mux_outs[1][3][24] ,
         \weight_mux_outs[1][3][23] , \weight_mux_outs[1][3][22] ,
         \weight_mux_outs[1][3][21] , \weight_mux_outs[1][3][20] ,
         \weight_mux_outs[1][3][19] , \weight_mux_outs[1][3][18] ,
         \weight_mux_outs[1][3][17] , \weight_mux_outs[1][3][16] ,
         \weight_mux_outs[1][3][15] , \weight_mux_outs[1][3][14] ,
         \weight_mux_outs[1][3][13] , \weight_mux_outs[1][3][12] ,
         \weight_mux_outs[1][3][11] , \weight_mux_outs[1][3][10] ,
         \weight_mux_outs[1][3][9] , \weight_mux_outs[1][3][8] ,
         \weight_mux_outs[1][3][7] , \weight_mux_outs[1][3][6] ,
         \weight_mux_outs[1][3][5] , \weight_mux_outs[1][3][4] ,
         \weight_mux_outs[1][3][3] , \weight_mux_outs[1][3][2] ,
         \weight_mux_outs[1][3][1] , \weight_mux_outs[1][3][0] ,
         \weight_mux_outs[1][2][31] , \weight_mux_outs[1][2][30] ,
         \weight_mux_outs[1][2][29] , \weight_mux_outs[1][2][28] ,
         \weight_mux_outs[1][2][27] , \weight_mux_outs[1][2][26] ,
         \weight_mux_outs[1][2][25] , \weight_mux_outs[1][2][24] ,
         \weight_mux_outs[1][2][23] , \weight_mux_outs[1][2][22] ,
         \weight_mux_outs[1][2][21] , \weight_mux_outs[1][2][20] ,
         \weight_mux_outs[1][2][19] , \weight_mux_outs[1][2][18] ,
         \weight_mux_outs[1][2][17] , \weight_mux_outs[1][2][16] ,
         \weight_mux_outs[1][2][15] , \weight_mux_outs[1][2][14] ,
         \weight_mux_outs[1][2][13] , \weight_mux_outs[1][2][12] ,
         \weight_mux_outs[1][2][11] , \weight_mux_outs[1][2][10] ,
         \weight_mux_outs[1][2][9] , \weight_mux_outs[1][2][8] ,
         \weight_mux_outs[1][2][7] , \weight_mux_outs[1][2][6] ,
         \weight_mux_outs[1][2][5] , \weight_mux_outs[1][2][4] ,
         \weight_mux_outs[1][2][3] , \weight_mux_outs[1][2][2] ,
         \weight_mux_outs[1][2][1] , \weight_mux_outs[1][2][0] ,
         \weight_mux_outs[1][1][31] , \weight_mux_outs[1][1][30] ,
         \weight_mux_outs[1][1][29] , \weight_mux_outs[1][1][28] ,
         \weight_mux_outs[1][1][27] , \weight_mux_outs[1][1][26] ,
         \weight_mux_outs[1][1][25] , \weight_mux_outs[1][1][24] ,
         \weight_mux_outs[1][1][23] , \weight_mux_outs[1][1][22] ,
         \weight_mux_outs[1][1][21] , \weight_mux_outs[1][1][20] ,
         \weight_mux_outs[1][1][19] , \weight_mux_outs[1][1][18] ,
         \weight_mux_outs[1][1][17] , \weight_mux_outs[1][1][16] ,
         \weight_mux_outs[1][1][15] , \weight_mux_outs[1][1][14] ,
         \weight_mux_outs[1][1][13] , \weight_mux_outs[1][1][12] ,
         \weight_mux_outs[1][1][11] , \weight_mux_outs[1][1][10] ,
         \weight_mux_outs[1][1][9] , \weight_mux_outs[1][1][8] ,
         \weight_mux_outs[1][1][7] , \weight_mux_outs[1][1][6] ,
         \weight_mux_outs[1][1][5] , \weight_mux_outs[1][1][4] ,
         \weight_mux_outs[1][1][3] , \weight_mux_outs[1][1][2] ,
         \weight_mux_outs[1][1][1] , \weight_mux_outs[1][1][0] ,
         \weight_mux_outs[1][0][31] , \weight_mux_outs[1][0][30] ,
         \weight_mux_outs[1][0][29] , \weight_mux_outs[1][0][28] ,
         \weight_mux_outs[1][0][27] , \weight_mux_outs[1][0][26] ,
         \weight_mux_outs[1][0][25] , \weight_mux_outs[1][0][24] ,
         \weight_mux_outs[1][0][23] , \weight_mux_outs[1][0][22] ,
         \weight_mux_outs[1][0][21] , \weight_mux_outs[1][0][20] ,
         \weight_mux_outs[1][0][19] , \weight_mux_outs[1][0][18] ,
         \weight_mux_outs[1][0][17] , \weight_mux_outs[1][0][16] ,
         \weight_mux_outs[1][0][15] , \weight_mux_outs[1][0][14] ,
         \weight_mux_outs[1][0][13] , \weight_mux_outs[1][0][12] ,
         \weight_mux_outs[1][0][11] , \weight_mux_outs[1][0][10] ,
         \weight_mux_outs[1][0][9] , \weight_mux_outs[1][0][8] ,
         \weight_mux_outs[1][0][7] , \weight_mux_outs[1][0][6] ,
         \weight_mux_outs[1][0][5] , \weight_mux_outs[1][0][4] ,
         \weight_mux_outs[1][0][3] , \weight_mux_outs[1][0][2] ,
         \weight_mux_outs[1][0][1] , \weight_mux_outs[1][0][0] ,
         \weight_mux_outs[0][3][31] , \weight_mux_outs[0][3][30] ,
         \weight_mux_outs[0][3][29] , \weight_mux_outs[0][3][28] ,
         \weight_mux_outs[0][3][27] , \weight_mux_outs[0][3][26] ,
         \weight_mux_outs[0][3][25] , \weight_mux_outs[0][3][24] ,
         \weight_mux_outs[0][3][23] , \weight_mux_outs[0][3][22] ,
         \weight_mux_outs[0][3][21] , \weight_mux_outs[0][3][20] ,
         \weight_mux_outs[0][3][19] , \weight_mux_outs[0][3][18] ,
         \weight_mux_outs[0][3][17] , \weight_mux_outs[0][3][16] ,
         \weight_mux_outs[0][3][15] , \weight_mux_outs[0][3][14] ,
         \weight_mux_outs[0][3][13] , \weight_mux_outs[0][3][12] ,
         \weight_mux_outs[0][3][11] , \weight_mux_outs[0][3][10] ,
         \weight_mux_outs[0][3][9] , \weight_mux_outs[0][3][8] ,
         \weight_mux_outs[0][3][7] , \weight_mux_outs[0][3][6] ,
         \weight_mux_outs[0][3][5] , \weight_mux_outs[0][3][4] ,
         \weight_mux_outs[0][3][3] , \weight_mux_outs[0][3][2] ,
         \weight_mux_outs[0][3][1] , \weight_mux_outs[0][3][0] ,
         \weight_mux_outs[0][2][31] , \weight_mux_outs[0][2][30] ,
         \weight_mux_outs[0][2][29] , \weight_mux_outs[0][2][28] ,
         \weight_mux_outs[0][2][27] , \weight_mux_outs[0][2][26] ,
         \weight_mux_outs[0][2][25] , \weight_mux_outs[0][2][24] ,
         \weight_mux_outs[0][2][23] , \weight_mux_outs[0][2][22] ,
         \weight_mux_outs[0][2][21] , \weight_mux_outs[0][2][20] ,
         \weight_mux_outs[0][2][19] , \weight_mux_outs[0][2][18] ,
         \weight_mux_outs[0][2][17] , \weight_mux_outs[0][2][16] ,
         \weight_mux_outs[0][2][15] , \weight_mux_outs[0][2][14] ,
         \weight_mux_outs[0][2][13] , \weight_mux_outs[0][2][12] ,
         \weight_mux_outs[0][2][11] , \weight_mux_outs[0][2][10] ,
         \weight_mux_outs[0][2][9] , \weight_mux_outs[0][2][8] ,
         \weight_mux_outs[0][2][7] , \weight_mux_outs[0][2][6] ,
         \weight_mux_outs[0][2][5] , \weight_mux_outs[0][2][4] ,
         \weight_mux_outs[0][2][3] , \weight_mux_outs[0][2][2] ,
         \weight_mux_outs[0][2][1] , \weight_mux_outs[0][2][0] ,
         \weight_mux_outs[0][1][31] , \weight_mux_outs[0][1][30] ,
         \weight_mux_outs[0][1][29] , \weight_mux_outs[0][1][28] ,
         \weight_mux_outs[0][1][27] , \weight_mux_outs[0][1][26] ,
         \weight_mux_outs[0][1][25] , \weight_mux_outs[0][1][24] ,
         \weight_mux_outs[0][1][23] , \weight_mux_outs[0][1][22] ,
         \weight_mux_outs[0][1][21] , \weight_mux_outs[0][1][20] ,
         \weight_mux_outs[0][1][19] , \weight_mux_outs[0][1][18] ,
         \weight_mux_outs[0][1][17] , \weight_mux_outs[0][1][16] ,
         \weight_mux_outs[0][1][15] , \weight_mux_outs[0][1][14] ,
         \weight_mux_outs[0][1][13] , \weight_mux_outs[0][1][12] ,
         \weight_mux_outs[0][1][11] , \weight_mux_outs[0][1][10] ,
         \weight_mux_outs[0][1][9] , \weight_mux_outs[0][1][8] ,
         \weight_mux_outs[0][1][7] , \weight_mux_outs[0][1][6] ,
         \weight_mux_outs[0][1][5] , \weight_mux_outs[0][1][4] ,
         \weight_mux_outs[0][1][3] , \weight_mux_outs[0][1][2] ,
         \weight_mux_outs[0][1][1] , \weight_mux_outs[0][1][0] ,
         \weight_mux_outs[0][0][31] , \weight_mux_outs[0][0][30] ,
         \weight_mux_outs[0][0][29] , \weight_mux_outs[0][0][28] ,
         \weight_mux_outs[0][0][27] , \weight_mux_outs[0][0][26] ,
         \weight_mux_outs[0][0][25] , \weight_mux_outs[0][0][24] ,
         \weight_mux_outs[0][0][23] , \weight_mux_outs[0][0][22] ,
         \weight_mux_outs[0][0][21] , \weight_mux_outs[0][0][20] ,
         \weight_mux_outs[0][0][19] , \weight_mux_outs[0][0][18] ,
         \weight_mux_outs[0][0][17] , \weight_mux_outs[0][0][16] ,
         \weight_mux_outs[0][0][15] , \weight_mux_outs[0][0][14] ,
         \weight_mux_outs[0][0][13] , \weight_mux_outs[0][0][12] ,
         \weight_mux_outs[0][0][11] , \weight_mux_outs[0][0][10] ,
         \weight_mux_outs[0][0][9] , \weight_mux_outs[0][0][8] ,
         \weight_mux_outs[0][0][7] , \weight_mux_outs[0][0][6] ,
         \weight_mux_outs[0][0][5] , \weight_mux_outs[0][0][4] ,
         \weight_mux_outs[0][0][3] , \weight_mux_outs[0][0][2] ,
         \weight_mux_outs[0][0][1] , \weight_mux_outs[0][0][0] ,
         \IBUF_data_out[3][31] , \IBUF_data_out[3][30] ,
         \IBUF_data_out[3][29] , \IBUF_data_out[3][28] ,
         \IBUF_data_out[3][27] , \IBUF_data_out[3][26] ,
         \IBUF_data_out[3][25] , \IBUF_data_out[3][24] ,
         \IBUF_data_out[3][23] , \IBUF_data_out[3][22] ,
         \IBUF_data_out[3][21] , \IBUF_data_out[3][20] ,
         \IBUF_data_out[3][19] , \IBUF_data_out[3][18] ,
         \IBUF_data_out[3][17] , \IBUF_data_out[3][16] ,
         \IBUF_data_out[3][15] , \IBUF_data_out[3][14] ,
         \IBUF_data_out[3][13] , \IBUF_data_out[3][12] ,
         \IBUF_data_out[3][11] , \IBUF_data_out[3][10] , \IBUF_data_out[3][9] ,
         \IBUF_data_out[3][8] , \IBUF_data_out[3][7] , \IBUF_data_out[3][6] ,
         \IBUF_data_out[3][5] , \IBUF_data_out[3][4] , \IBUF_data_out[3][3] ,
         \IBUF_data_out[3][2] , \IBUF_data_out[3][1] , \IBUF_data_out[3][0] ,
         \IBUF_data_out[2][31] , \IBUF_data_out[2][30] ,
         \IBUF_data_out[2][29] , \IBUF_data_out[2][28] ,
         \IBUF_data_out[2][27] , \IBUF_data_out[2][26] ,
         \IBUF_data_out[2][25] , \IBUF_data_out[2][24] ,
         \IBUF_data_out[2][23] , \IBUF_data_out[2][22] ,
         \IBUF_data_out[2][21] , \IBUF_data_out[2][20] ,
         \IBUF_data_out[2][19] , \IBUF_data_out[2][18] ,
         \IBUF_data_out[2][17] , \IBUF_data_out[2][16] ,
         \IBUF_data_out[2][15] , \IBUF_data_out[2][14] ,
         \IBUF_data_out[2][13] , \IBUF_data_out[2][12] ,
         \IBUF_data_out[2][11] , \IBUF_data_out[2][10] , \IBUF_data_out[2][9] ,
         \IBUF_data_out[2][8] , \IBUF_data_out[2][7] , \IBUF_data_out[2][6] ,
         \IBUF_data_out[2][5] , \IBUF_data_out[2][4] , \IBUF_data_out[2][3] ,
         \IBUF_data_out[2][2] , \IBUF_data_out[2][1] , \IBUF_data_out[2][0] ,
         \IBUF_data_out[1][31] , \IBUF_data_out[1][30] ,
         \IBUF_data_out[1][29] , \IBUF_data_out[1][28] ,
         \IBUF_data_out[1][27] , \IBUF_data_out[1][26] ,
         \IBUF_data_out[1][25] , \IBUF_data_out[1][24] ,
         \IBUF_data_out[1][23] , \IBUF_data_out[1][22] ,
         \IBUF_data_out[1][21] , \IBUF_data_out[1][20] ,
         \IBUF_data_out[1][19] , \IBUF_data_out[1][18] ,
         \IBUF_data_out[1][17] , \IBUF_data_out[1][16] ,
         \IBUF_data_out[1][15] , \IBUF_data_out[1][14] ,
         \IBUF_data_out[1][13] , \IBUF_data_out[1][12] ,
         \IBUF_data_out[1][11] , \IBUF_data_out[1][10] , \IBUF_data_out[1][9] ,
         \IBUF_data_out[1][8] , \IBUF_data_out[1][7] , \IBUF_data_out[1][6] ,
         \IBUF_data_out[1][5] , \IBUF_data_out[1][4] , \IBUF_data_out[1][3] ,
         \IBUF_data_out[1][2] , \IBUF_data_out[1][1] , \IBUF_data_out[1][0] ,
         \IBUF_data_out[0][31] , \IBUF_data_out[0][30] ,
         \IBUF_data_out[0][29] , \IBUF_data_out[0][28] ,
         \IBUF_data_out[0][27] , \IBUF_data_out[0][26] ,
         \IBUF_data_out[0][25] , \IBUF_data_out[0][24] ,
         \IBUF_data_out[0][23] , \IBUF_data_out[0][22] ,
         \IBUF_data_out[0][21] , \IBUF_data_out[0][20] ,
         \IBUF_data_out[0][19] , \IBUF_data_out[0][18] ,
         \IBUF_data_out[0][17] , \IBUF_data_out[0][16] ,
         \IBUF_data_out[0][15] , \IBUF_data_out[0][14] ,
         \IBUF_data_out[0][13] , \IBUF_data_out[0][12] ,
         \IBUF_data_out[0][11] , \IBUF_data_out[0][10] , \IBUF_data_out[0][9] ,
         \IBUF_data_out[0][8] , \IBUF_data_out[0][7] , \IBUF_data_out[0][6] ,
         \IBUF_data_out[0][5] , \IBUF_data_out[0][4] , \IBUF_data_out[0][3] ,
         \IBUF_data_out[0][2] , \IBUF_data_out[0][1] , \IBUF_data_out[0][0] ,
         \input_mux_outs[3][31] , \input_mux_outs[3][30] ,
         \input_mux_outs[3][29] , \input_mux_outs[3][28] ,
         \input_mux_outs[3][27] , \input_mux_outs[3][26] ,
         \input_mux_outs[3][25] , \input_mux_outs[3][24] ,
         \input_mux_outs[3][23] , \input_mux_outs[3][22] ,
         \input_mux_outs[3][21] , \input_mux_outs[3][20] ,
         \input_mux_outs[3][19] , \input_mux_outs[3][18] ,
         \input_mux_outs[3][17] , \input_mux_outs[3][16] ,
         \input_mux_outs[3][15] , \input_mux_outs[3][14] ,
         \input_mux_outs[3][13] , \input_mux_outs[3][12] ,
         \input_mux_outs[3][11] , \input_mux_outs[3][10] ,
         \input_mux_outs[3][9] , \input_mux_outs[3][8] ,
         \input_mux_outs[3][7] , \input_mux_outs[3][6] ,
         \input_mux_outs[3][5] , \input_mux_outs[3][4] ,
         \input_mux_outs[3][3] , \input_mux_outs[3][2] ,
         \input_mux_outs[3][1] , \input_mux_outs[3][0] ,
         \input_mux_outs[2][31] , \input_mux_outs[2][30] ,
         \input_mux_outs[2][29] , \input_mux_outs[2][28] ,
         \input_mux_outs[2][27] , \input_mux_outs[2][26] ,
         \input_mux_outs[2][25] , \input_mux_outs[2][24] ,
         \input_mux_outs[2][23] , \input_mux_outs[2][22] ,
         \input_mux_outs[2][21] , \input_mux_outs[2][20] ,
         \input_mux_outs[2][19] , \input_mux_outs[2][18] ,
         \input_mux_outs[2][17] , \input_mux_outs[2][16] ,
         \input_mux_outs[2][15] , \input_mux_outs[2][14] ,
         \input_mux_outs[2][13] , \input_mux_outs[2][12] ,
         \input_mux_outs[2][11] , \input_mux_outs[2][10] ,
         \input_mux_outs[2][9] , \input_mux_outs[2][8] ,
         \input_mux_outs[2][7] , \input_mux_outs[2][6] ,
         \input_mux_outs[2][5] , \input_mux_outs[2][4] ,
         \input_mux_outs[2][3] , \input_mux_outs[2][2] ,
         \input_mux_outs[2][1] , \input_mux_outs[2][0] ,
         \input_mux_outs[1][31] , \input_mux_outs[1][30] ,
         \input_mux_outs[1][29] , \input_mux_outs[1][28] ,
         \input_mux_outs[1][27] , \input_mux_outs[1][26] ,
         \input_mux_outs[1][25] , \input_mux_outs[1][24] ,
         \input_mux_outs[1][23] , \input_mux_outs[1][22] ,
         \input_mux_outs[1][21] , \input_mux_outs[1][20] ,
         \input_mux_outs[1][19] , \input_mux_outs[1][18] ,
         \input_mux_outs[1][17] , \input_mux_outs[1][16] ,
         \input_mux_outs[1][15] , \input_mux_outs[1][14] ,
         \input_mux_outs[1][13] , \input_mux_outs[1][12] ,
         \input_mux_outs[1][11] , \input_mux_outs[1][10] ,
         \input_mux_outs[1][9] , \input_mux_outs[1][8] ,
         \input_mux_outs[1][7] , \input_mux_outs[1][6] ,
         \input_mux_outs[1][5] , \input_mux_outs[1][4] ,
         \input_mux_outs[1][3] , \input_mux_outs[1][2] ,
         \input_mux_outs[1][1] , \input_mux_outs[1][0] ,
         \input_mux_outs[0][31] , \input_mux_outs[0][30] ,
         \input_mux_outs[0][29] , \input_mux_outs[0][28] ,
         \input_mux_outs[0][27] , \input_mux_outs[0][26] ,
         \input_mux_outs[0][25] , \input_mux_outs[0][24] ,
         \input_mux_outs[0][23] , \input_mux_outs[0][22] ,
         \input_mux_outs[0][21] , \input_mux_outs[0][20] ,
         \input_mux_outs[0][19] , \input_mux_outs[0][18] ,
         \input_mux_outs[0][17] , \input_mux_outs[0][16] ,
         \input_mux_outs[0][15] , \input_mux_outs[0][14] ,
         \input_mux_outs[0][13] , \input_mux_outs[0][12] ,
         \input_mux_outs[0][11] , \input_mux_outs[0][10] ,
         \input_mux_outs[0][9] , \input_mux_outs[0][8] ,
         \input_mux_outs[0][7] , \input_mux_outs[0][6] ,
         \input_mux_outs[0][5] , \input_mux_outs[0][4] ,
         \input_mux_outs[0][3] , \input_mux_outs[0][2] ,
         \input_mux_outs[0][1] , \input_mux_outs[0][0] ;

  DFCNQD1 \input_forward_reg_reg[0][0][31]  ( .D(
        \next_input_forward_reg[0][0][31] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][31] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][30]  ( .D(
        \next_input_forward_reg[0][0][30] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][30] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][29]  ( .D(
        \next_input_forward_reg[0][0][29] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][29] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][28]  ( .D(
        \next_input_forward_reg[0][0][28] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][28] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][27]  ( .D(
        \next_input_forward_reg[0][0][27] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][27] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][26]  ( .D(
        \next_input_forward_reg[0][0][26] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][26] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][25]  ( .D(
        \next_input_forward_reg[0][0][25] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][25] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][24]  ( .D(
        \next_input_forward_reg[0][0][24] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][24] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][23]  ( .D(
        \next_input_forward_reg[0][0][23] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][23] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][22]  ( .D(
        \next_input_forward_reg[0][0][22] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][22] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][21]  ( .D(
        \next_input_forward_reg[0][0][21] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][21] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][20]  ( .D(
        \next_input_forward_reg[0][0][20] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][20] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][19]  ( .D(
        \next_input_forward_reg[0][0][19] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][19] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][18]  ( .D(
        \next_input_forward_reg[0][0][18] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][18] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][17]  ( .D(
        \next_input_forward_reg[0][0][17] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][17] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][16]  ( .D(
        \next_input_forward_reg[0][0][16] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][16] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][15]  ( .D(
        \next_input_forward_reg[0][0][15] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][15] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][14]  ( .D(
        \next_input_forward_reg[0][0][14] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][14] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][13]  ( .D(
        \next_input_forward_reg[0][0][13] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][13] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][12]  ( .D(
        \next_input_forward_reg[0][0][12] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][12] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][11]  ( .D(
        \next_input_forward_reg[0][0][11] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][11] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][10]  ( .D(
        \next_input_forward_reg[0][0][10] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][10] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][9]  ( .D(
        \next_input_forward_reg[0][0][9] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][9] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][8]  ( .D(
        \next_input_forward_reg[0][0][8] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][8] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][7]  ( .D(
        \next_input_forward_reg[0][0][7] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][7] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][6]  ( .D(
        \next_input_forward_reg[0][0][6] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][6] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][5]  ( .D(
        \next_input_forward_reg[0][0][5] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][5] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][4]  ( .D(
        \next_input_forward_reg[0][0][4] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][4] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][3]  ( .D(
        \next_input_forward_reg[0][0][3] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][3] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][2]  ( .D(
        \next_input_forward_reg[0][0][2] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][2] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][1]  ( .D(
        \next_input_forward_reg[0][0][1] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][1] ) );
  DFCNQD1 \input_forward_reg_reg[0][0][0]  ( .D(
        \next_input_forward_reg[0][0][0] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][0][0] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][0]  ( .D(
        \next_input_forward_reg[0][1][0] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][0] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][1]  ( .D(
        \next_input_forward_reg[0][1][1] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][1] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][2]  ( .D(
        \next_input_forward_reg[0][1][2] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][2] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][3]  ( .D(
        \next_input_forward_reg[0][1][3] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][3] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][4]  ( .D(
        \next_input_forward_reg[0][1][4] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][4] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][5]  ( .D(
        \next_input_forward_reg[0][1][5] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][5] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][6]  ( .D(
        \next_input_forward_reg[0][1][6] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][6] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][7]  ( .D(
        \next_input_forward_reg[0][1][7] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][7] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][8]  ( .D(
        \next_input_forward_reg[0][1][8] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][8] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][9]  ( .D(
        \next_input_forward_reg[0][1][9] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][9] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][10]  ( .D(
        \next_input_forward_reg[0][1][10] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][10] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][11]  ( .D(
        \next_input_forward_reg[0][1][11] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][11] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][12]  ( .D(
        \next_input_forward_reg[0][1][12] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][12] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][13]  ( .D(
        \next_input_forward_reg[0][1][13] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][13] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][14]  ( .D(
        \next_input_forward_reg[0][1][14] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][14] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][15]  ( .D(
        \next_input_forward_reg[0][1][15] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][15] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][16]  ( .D(
        \next_input_forward_reg[0][1][16] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][16] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][17]  ( .D(
        \next_input_forward_reg[0][1][17] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][17] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][18]  ( .D(
        \next_input_forward_reg[0][1][18] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][18] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][19]  ( .D(
        \next_input_forward_reg[0][1][19] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][19] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][20]  ( .D(
        \next_input_forward_reg[0][1][20] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][20] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][21]  ( .D(
        \next_input_forward_reg[0][1][21] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][21] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][22]  ( .D(
        \next_input_forward_reg[0][1][22] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][22] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][23]  ( .D(
        \next_input_forward_reg[0][1][23] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][23] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][24]  ( .D(
        \next_input_forward_reg[0][1][24] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][24] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][25]  ( .D(
        \next_input_forward_reg[0][1][25] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][25] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][26]  ( .D(
        \next_input_forward_reg[0][1][26] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][26] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][27]  ( .D(
        \next_input_forward_reg[0][1][27] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][27] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][28]  ( .D(
        \next_input_forward_reg[0][1][28] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][28] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][29]  ( .D(
        \next_input_forward_reg[0][1][29] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][29] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][30]  ( .D(
        \next_input_forward_reg[0][1][30] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][30] ) );
  DFCNQD1 \input_forward_reg_reg[0][1][31]  ( .D(
        \next_input_forward_reg[0][1][31] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][1][31] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][0]  ( .D(
        \next_input_forward_reg[0][2][0] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][0] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][1]  ( .D(
        \next_input_forward_reg[0][2][1] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][1] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][2]  ( .D(
        \next_input_forward_reg[0][2][2] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][2] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][3]  ( .D(
        \next_input_forward_reg[0][2][3] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][3] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][4]  ( .D(
        \next_input_forward_reg[0][2][4] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][4] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][5]  ( .D(
        \next_input_forward_reg[0][2][5] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][5] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][6]  ( .D(
        \next_input_forward_reg[0][2][6] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][6] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][7]  ( .D(
        \next_input_forward_reg[0][2][7] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][7] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][8]  ( .D(
        \next_input_forward_reg[0][2][8] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][8] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][9]  ( .D(
        \next_input_forward_reg[0][2][9] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][9] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][10]  ( .D(
        \next_input_forward_reg[0][2][10] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][10] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][11]  ( .D(
        \next_input_forward_reg[0][2][11] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][11] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][12]  ( .D(
        \next_input_forward_reg[0][2][12] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][12] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][13]  ( .D(
        \next_input_forward_reg[0][2][13] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][13] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][14]  ( .D(
        \next_input_forward_reg[0][2][14] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][14] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][15]  ( .D(
        \next_input_forward_reg[0][2][15] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][15] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][16]  ( .D(
        \next_input_forward_reg[0][2][16] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][16] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][17]  ( .D(
        \next_input_forward_reg[0][2][17] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][17] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][18]  ( .D(
        \next_input_forward_reg[0][2][18] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][18] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][19]  ( .D(
        \next_input_forward_reg[0][2][19] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][19] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][20]  ( .D(
        \next_input_forward_reg[0][2][20] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][20] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][21]  ( .D(
        \next_input_forward_reg[0][2][21] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][21] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][22]  ( .D(
        \next_input_forward_reg[0][2][22] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][22] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][23]  ( .D(
        \next_input_forward_reg[0][2][23] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][23] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][24]  ( .D(
        \next_input_forward_reg[0][2][24] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][24] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][25]  ( .D(
        \next_input_forward_reg[0][2][25] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][25] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][26]  ( .D(
        \next_input_forward_reg[0][2][26] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][26] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][27]  ( .D(
        \next_input_forward_reg[0][2][27] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][27] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][28]  ( .D(
        \next_input_forward_reg[0][2][28] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][28] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][29]  ( .D(
        \next_input_forward_reg[0][2][29] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][29] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][30]  ( .D(
        \next_input_forward_reg[0][2][30] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][30] ) );
  DFCNQD1 \input_forward_reg_reg[0][2][31]  ( .D(
        \next_input_forward_reg[0][2][31] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[0][2][31] ) );
  DFCNQD1 \psums_reg[0][3][31]  ( .D(\next_psums[0][3][31] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][31] ) );
  DFCNQD1 \psums_reg[0][3][30]  ( .D(\next_psums[0][3][30] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][30] ) );
  DFCNQD1 \psums_reg[0][3][29]  ( .D(\next_psums[0][3][29] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][29] ) );
  DFCNQD1 \psums_reg[0][3][28]  ( .D(\next_psums[0][3][28] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][28] ) );
  DFCNQD1 \psums_reg[0][3][27]  ( .D(\next_psums[0][3][27] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][27] ) );
  DFCNQD1 \psums_reg[0][3][26]  ( .D(\next_psums[0][3][26] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][26] ) );
  DFCNQD1 \psums_reg[0][3][25]  ( .D(\next_psums[0][3][25] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][25] ) );
  DFCNQD1 \psums_reg[0][3][24]  ( .D(\next_psums[0][3][24] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][24] ) );
  DFCNQD1 \psums_reg[0][3][23]  ( .D(\next_psums[0][3][23] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][23] ) );
  DFCNQD1 \psums_reg[0][3][22]  ( .D(\next_psums[0][3][22] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][22] ) );
  DFCNQD1 \psums_reg[0][3][21]  ( .D(\next_psums[0][3][21] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][21] ) );
  DFCNQD1 \psums_reg[0][3][20]  ( .D(\next_psums[0][3][20] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][20] ) );
  DFCNQD1 \psums_reg[0][3][19]  ( .D(\next_psums[0][3][19] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][19] ) );
  DFCNQD1 \psums_reg[0][3][18]  ( .D(\next_psums[0][3][18] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][18] ) );
  DFCNQD1 \psums_reg[0][3][17]  ( .D(\next_psums[0][3][17] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][17] ) );
  DFCNQD1 \psums_reg[0][3][16]  ( .D(\next_psums[0][3][16] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][16] ) );
  DFCNQD1 \psums_reg[0][3][15]  ( .D(\next_psums[0][3][15] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][15] ) );
  DFCNQD1 \psums_reg[0][3][14]  ( .D(\next_psums[0][3][14] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][14] ) );
  DFCNQD1 \psums_reg[0][3][13]  ( .D(\next_psums[0][3][13] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][13] ) );
  DFCNQD1 \psums_reg[0][3][12]  ( .D(\next_psums[0][3][12] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][12] ) );
  DFCNQD1 \psums_reg[0][3][11]  ( .D(\next_psums[0][3][11] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][11] ) );
  DFCNQD1 \psums_reg[0][3][10]  ( .D(\next_psums[0][3][10] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][10] ) );
  DFCNQD1 \psums_reg[0][3][9]  ( .D(\next_psums[0][3][9] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][9] ) );
  DFCNQD1 \psums_reg[0][3][8]  ( .D(\next_psums[0][3][8] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][8] ) );
  DFCNQD1 \psums_reg[0][3][7]  ( .D(\next_psums[0][3][7] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][7] ) );
  DFCNQD1 \psums_reg[0][3][6]  ( .D(\next_psums[0][3][6] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][6] ) );
  DFCNQD1 \psums_reg[0][3][5]  ( .D(\next_psums[0][3][5] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][5] ) );
  DFCNQD1 \psums_reg[0][3][4]  ( .D(\next_psums[0][3][4] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][4] ) );
  DFCNQD1 \psums_reg[0][3][3]  ( .D(\next_psums[0][3][3] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][3] ) );
  DFCNQD1 \psums_reg[0][3][2]  ( .D(\next_psums[0][3][2] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][2] ) );
  DFCNQD1 \psums_reg[0][3][1]  ( .D(\next_psums[0][3][1] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][1] ) );
  DFCNQD1 \psums_reg[0][3][0]  ( .D(\next_psums[0][3][0] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][3][0] ) );
  DFCNQD1 \psums_reg[0][2][31]  ( .D(\next_psums[0][2][31] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][31] ) );
  DFCNQD1 \psums_reg[0][2][30]  ( .D(\next_psums[0][2][30] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][30] ) );
  DFCNQD1 \psums_reg[0][2][29]  ( .D(\next_psums[0][2][29] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][29] ) );
  DFCNQD1 \psums_reg[0][2][28]  ( .D(\next_psums[0][2][28] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][28] ) );
  DFCNQD1 \psums_reg[0][2][27]  ( .D(\next_psums[0][2][27] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][27] ) );
  DFCNQD1 \psums_reg[0][2][26]  ( .D(\next_psums[0][2][26] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][26] ) );
  DFCNQD1 \psums_reg[0][2][25]  ( .D(\next_psums[0][2][25] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][25] ) );
  DFCNQD1 \psums_reg[0][2][24]  ( .D(\next_psums[0][2][24] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][24] ) );
  DFCNQD1 \psums_reg[0][2][23]  ( .D(\next_psums[0][2][23] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][23] ) );
  DFCNQD1 \psums_reg[0][2][22]  ( .D(\next_psums[0][2][22] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][22] ) );
  DFCNQD1 \psums_reg[0][2][21]  ( .D(\next_psums[0][2][21] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][21] ) );
  DFCNQD1 \psums_reg[0][2][20]  ( .D(\next_psums[0][2][20] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][20] ) );
  DFCNQD1 \psums_reg[0][2][19]  ( .D(\next_psums[0][2][19] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][19] ) );
  DFCNQD1 \psums_reg[0][2][18]  ( .D(\next_psums[0][2][18] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][18] ) );
  DFCNQD1 \psums_reg[0][2][17]  ( .D(\next_psums[0][2][17] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][17] ) );
  DFCNQD1 \psums_reg[0][2][16]  ( .D(\next_psums[0][2][16] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][16] ) );
  DFCNQD1 \psums_reg[0][2][15]  ( .D(\next_psums[0][2][15] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][15] ) );
  DFCNQD1 \psums_reg[0][2][14]  ( .D(\next_psums[0][2][14] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][14] ) );
  DFCNQD1 \psums_reg[0][2][13]  ( .D(\next_psums[0][2][13] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][13] ) );
  DFCNQD1 \psums_reg[0][2][12]  ( .D(\next_psums[0][2][12] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][12] ) );
  DFCNQD1 \psums_reg[0][2][11]  ( .D(\next_psums[0][2][11] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][11] ) );
  DFCNQD1 \psums_reg[0][2][10]  ( .D(\next_psums[0][2][10] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][10] ) );
  DFCNQD1 \psums_reg[0][2][9]  ( .D(\next_psums[0][2][9] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][9] ) );
  DFCNQD1 \psums_reg[0][2][8]  ( .D(\next_psums[0][2][8] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][8] ) );
  DFCNQD1 \psums_reg[0][2][7]  ( .D(\next_psums[0][2][7] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][7] ) );
  DFCNQD1 \psums_reg[0][2][6]  ( .D(\next_psums[0][2][6] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][6] ) );
  DFCNQD1 \psums_reg[0][2][5]  ( .D(\next_psums[0][2][5] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][5] ) );
  DFCNQD1 \psums_reg[0][2][4]  ( .D(\next_psums[0][2][4] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][4] ) );
  DFCNQD1 \psums_reg[0][2][3]  ( .D(\next_psums[0][2][3] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][3] ) );
  DFCNQD1 \psums_reg[0][2][2]  ( .D(\next_psums[0][2][2] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][2] ) );
  DFCNQD1 \psums_reg[0][2][1]  ( .D(\next_psums[0][2][1] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][1] ) );
  DFCNQD1 \psums_reg[0][2][0]  ( .D(\next_psums[0][2][0] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][2][0] ) );
  DFCNQD1 \psums_reg[0][1][31]  ( .D(\next_psums[0][1][31] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][31] ) );
  DFCNQD1 \psums_reg[0][1][30]  ( .D(\next_psums[0][1][30] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][30] ) );
  DFCNQD1 \psums_reg[0][1][29]  ( .D(\next_psums[0][1][29] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][29] ) );
  DFCNQD1 \psums_reg[0][1][28]  ( .D(\next_psums[0][1][28] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][28] ) );
  DFCNQD1 \psums_reg[0][1][27]  ( .D(\next_psums[0][1][27] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][27] ) );
  DFCNQD1 \psums_reg[0][1][26]  ( .D(\next_psums[0][1][26] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][26] ) );
  DFCNQD1 \psums_reg[0][1][25]  ( .D(\next_psums[0][1][25] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][25] ) );
  DFCNQD1 \psums_reg[0][1][24]  ( .D(\next_psums[0][1][24] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][24] ) );
  DFCNQD1 \psums_reg[0][1][23]  ( .D(\next_psums[0][1][23] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][23] ) );
  DFCNQD1 \psums_reg[0][1][22]  ( .D(\next_psums[0][1][22] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][22] ) );
  DFCNQD1 \psums_reg[0][1][21]  ( .D(\next_psums[0][1][21] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][21] ) );
  DFCNQD1 \psums_reg[0][1][20]  ( .D(\next_psums[0][1][20] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][20] ) );
  DFCNQD1 \psums_reg[0][1][19]  ( .D(\next_psums[0][1][19] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][19] ) );
  DFCNQD1 \psums_reg[0][1][18]  ( .D(\next_psums[0][1][18] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][18] ) );
  DFCNQD1 \psums_reg[0][1][17]  ( .D(\next_psums[0][1][17] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][17] ) );
  DFCNQD1 \psums_reg[0][1][16]  ( .D(\next_psums[0][1][16] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][16] ) );
  DFCNQD1 \psums_reg[0][1][15]  ( .D(\next_psums[0][1][15] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][15] ) );
  DFCNQD1 \psums_reg[0][1][14]  ( .D(\next_psums[0][1][14] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][14] ) );
  DFCNQD1 \psums_reg[0][1][13]  ( .D(\next_psums[0][1][13] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][13] ) );
  DFCNQD1 \psums_reg[0][1][12]  ( .D(\next_psums[0][1][12] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][12] ) );
  DFCNQD1 \psums_reg[0][1][11]  ( .D(\next_psums[0][1][11] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][11] ) );
  DFCNQD1 \psums_reg[0][1][10]  ( .D(\next_psums[0][1][10] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][10] ) );
  DFCNQD1 \psums_reg[0][1][9]  ( .D(\next_psums[0][1][9] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][9] ) );
  DFCNQD1 \psums_reg[0][1][8]  ( .D(\next_psums[0][1][8] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][8] ) );
  DFCNQD1 \psums_reg[0][1][7]  ( .D(\next_psums[0][1][7] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][7] ) );
  DFCNQD1 \psums_reg[0][1][6]  ( .D(\next_psums[0][1][6] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][6] ) );
  DFCNQD1 \psums_reg[0][1][5]  ( .D(\next_psums[0][1][5] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][5] ) );
  DFCNQD1 \psums_reg[0][1][4]  ( .D(\next_psums[0][1][4] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][4] ) );
  DFCNQD1 \psums_reg[0][1][3]  ( .D(\next_psums[0][1][3] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][3] ) );
  DFCNQD1 \psums_reg[0][1][2]  ( .D(\next_psums[0][1][2] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][2] ) );
  DFCNQD1 \psums_reg[0][1][1]  ( .D(\next_psums[0][1][1] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][1] ) );
  DFCNQD1 \psums_reg[0][1][0]  ( .D(\next_psums[0][1][0] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][1][0] ) );
  DFCNQD1 \psums_reg[0][0][31]  ( .D(\next_psums[0][0][31] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][31] ) );
  DFCNQD1 \psums_reg[0][0][30]  ( .D(\next_psums[0][0][30] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][30] ) );
  DFCNQD1 \psums_reg[0][0][29]  ( .D(\next_psums[0][0][29] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][29] ) );
  DFCNQD1 \psums_reg[0][0][28]  ( .D(\next_psums[0][0][28] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][28] ) );
  DFCNQD1 \psums_reg[0][0][27]  ( .D(\next_psums[0][0][27] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][27] ) );
  DFCNQD1 \psums_reg[0][0][26]  ( .D(\next_psums[0][0][26] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][26] ) );
  DFCNQD1 \psums_reg[0][0][25]  ( .D(\next_psums[0][0][25] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][25] ) );
  DFCNQD1 \psums_reg[0][0][24]  ( .D(\next_psums[0][0][24] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][24] ) );
  DFCNQD1 \psums_reg[0][0][23]  ( .D(\next_psums[0][0][23] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][23] ) );
  DFCNQD1 \psums_reg[0][0][22]  ( .D(\next_psums[0][0][22] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][22] ) );
  DFCNQD1 \psums_reg[0][0][21]  ( .D(\next_psums[0][0][21] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][21] ) );
  DFCNQD1 \psums_reg[0][0][20]  ( .D(\next_psums[0][0][20] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][20] ) );
  DFCNQD1 \psums_reg[0][0][19]  ( .D(\next_psums[0][0][19] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][19] ) );
  DFCNQD1 \psums_reg[0][0][18]  ( .D(\next_psums[0][0][18] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][18] ) );
  DFCNQD1 \psums_reg[0][0][17]  ( .D(\next_psums[0][0][17] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][17] ) );
  DFCNQD1 \psums_reg[0][0][16]  ( .D(\next_psums[0][0][16] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][16] ) );
  DFCNQD1 \psums_reg[0][0][15]  ( .D(\next_psums[0][0][15] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][15] ) );
  DFCNQD1 \psums_reg[0][0][14]  ( .D(\next_psums[0][0][14] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][14] ) );
  DFCNQD1 \psums_reg[0][0][13]  ( .D(\next_psums[0][0][13] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][13] ) );
  DFCNQD1 \psums_reg[0][0][12]  ( .D(\next_psums[0][0][12] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][12] ) );
  DFCNQD1 \psums_reg[0][0][11]  ( .D(\next_psums[0][0][11] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][11] ) );
  DFCNQD1 \psums_reg[0][0][10]  ( .D(\next_psums[0][0][10] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][10] ) );
  DFCNQD1 \psums_reg[0][0][9]  ( .D(\next_psums[0][0][9] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][9] ) );
  DFCNQD1 \psums_reg[0][0][8]  ( .D(\next_psums[0][0][8] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][8] ) );
  DFCNQD1 \psums_reg[0][0][7]  ( .D(\next_psums[0][0][7] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][7] ) );
  DFCNQD1 \psums_reg[0][0][6]  ( .D(\next_psums[0][0][6] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][6] ) );
  DFCNQD1 \psums_reg[0][0][5]  ( .D(\next_psums[0][0][5] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][5] ) );
  DFCNQD1 \psums_reg[0][0][4]  ( .D(\next_psums[0][0][4] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][4] ) );
  DFCNQD1 \psums_reg[0][0][3]  ( .D(\next_psums[0][0][3] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][3] ) );
  DFCNQD1 \psums_reg[0][0][2]  ( .D(\next_psums[0][0][2] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][2] ) );
  DFCNQD1 \psums_reg[0][0][1]  ( .D(\next_psums[0][0][1] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][1] ) );
  DFCNQD1 \psums_reg[0][0][0]  ( .D(\next_psums[0][0][0] ), .CP(clk), .CDN(
        nRST), .Q(\psums[0][0][0] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][0]  ( .D(
        \next_input_forward_reg[1][0][0] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][0] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][1]  ( .D(
        \next_input_forward_reg[1][0][1] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][1] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][2]  ( .D(
        \next_input_forward_reg[1][0][2] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][2] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][3]  ( .D(
        \next_input_forward_reg[1][0][3] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][3] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][4]  ( .D(
        \next_input_forward_reg[1][0][4] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][4] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][5]  ( .D(
        \next_input_forward_reg[1][0][5] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][5] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][6]  ( .D(
        \next_input_forward_reg[1][0][6] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][6] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][7]  ( .D(
        \next_input_forward_reg[1][0][7] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][7] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][8]  ( .D(
        \next_input_forward_reg[1][0][8] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][8] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][9]  ( .D(
        \next_input_forward_reg[1][0][9] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][9] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][10]  ( .D(
        \next_input_forward_reg[1][0][10] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][10] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][11]  ( .D(
        \next_input_forward_reg[1][0][11] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][11] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][12]  ( .D(
        \next_input_forward_reg[1][0][12] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][12] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][13]  ( .D(
        \next_input_forward_reg[1][0][13] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][13] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][14]  ( .D(
        \next_input_forward_reg[1][0][14] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][14] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][15]  ( .D(
        \next_input_forward_reg[1][0][15] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][15] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][16]  ( .D(
        \next_input_forward_reg[1][0][16] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][16] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][17]  ( .D(
        \next_input_forward_reg[1][0][17] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][17] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][18]  ( .D(
        \next_input_forward_reg[1][0][18] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][18] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][19]  ( .D(
        \next_input_forward_reg[1][0][19] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][19] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][20]  ( .D(
        \next_input_forward_reg[1][0][20] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][20] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][21]  ( .D(
        \next_input_forward_reg[1][0][21] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][21] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][22]  ( .D(
        \next_input_forward_reg[1][0][22] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][22] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][23]  ( .D(
        \next_input_forward_reg[1][0][23] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][23] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][24]  ( .D(
        \next_input_forward_reg[1][0][24] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][24] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][25]  ( .D(
        \next_input_forward_reg[1][0][25] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][25] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][26]  ( .D(
        \next_input_forward_reg[1][0][26] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][26] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][27]  ( .D(
        \next_input_forward_reg[1][0][27] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][27] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][28]  ( .D(
        \next_input_forward_reg[1][0][28] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][28] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][29]  ( .D(
        \next_input_forward_reg[1][0][29] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][29] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][30]  ( .D(
        \next_input_forward_reg[1][0][30] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][30] ) );
  DFCNQD1 \input_forward_reg_reg[1][0][31]  ( .D(
        \next_input_forward_reg[1][0][31] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][0][31] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][0]  ( .D(
        \next_input_forward_reg[1][1][0] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][0] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][1]  ( .D(
        \next_input_forward_reg[1][1][1] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][1] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][2]  ( .D(
        \next_input_forward_reg[1][1][2] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][2] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][3]  ( .D(
        \next_input_forward_reg[1][1][3] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][3] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][4]  ( .D(
        \next_input_forward_reg[1][1][4] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][4] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][5]  ( .D(
        \next_input_forward_reg[1][1][5] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][5] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][6]  ( .D(
        \next_input_forward_reg[1][1][6] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][6] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][7]  ( .D(
        \next_input_forward_reg[1][1][7] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][7] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][8]  ( .D(
        \next_input_forward_reg[1][1][8] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][8] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][9]  ( .D(
        \next_input_forward_reg[1][1][9] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][9] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][10]  ( .D(
        \next_input_forward_reg[1][1][10] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][10] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][11]  ( .D(
        \next_input_forward_reg[1][1][11] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][11] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][12]  ( .D(
        \next_input_forward_reg[1][1][12] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][12] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][13]  ( .D(
        \next_input_forward_reg[1][1][13] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][13] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][14]  ( .D(
        \next_input_forward_reg[1][1][14] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][14] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][15]  ( .D(
        \next_input_forward_reg[1][1][15] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][15] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][16]  ( .D(
        \next_input_forward_reg[1][1][16] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][16] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][17]  ( .D(
        \next_input_forward_reg[1][1][17] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][17] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][18]  ( .D(
        \next_input_forward_reg[1][1][18] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][18] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][19]  ( .D(
        \next_input_forward_reg[1][1][19] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][19] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][20]  ( .D(
        \next_input_forward_reg[1][1][20] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][20] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][21]  ( .D(
        \next_input_forward_reg[1][1][21] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][21] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][22]  ( .D(
        \next_input_forward_reg[1][1][22] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][22] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][23]  ( .D(
        \next_input_forward_reg[1][1][23] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][23] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][24]  ( .D(
        \next_input_forward_reg[1][1][24] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][24] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][25]  ( .D(
        \next_input_forward_reg[1][1][25] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][25] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][26]  ( .D(
        \next_input_forward_reg[1][1][26] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][26] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][27]  ( .D(
        \next_input_forward_reg[1][1][27] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][27] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][28]  ( .D(
        \next_input_forward_reg[1][1][28] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][28] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][29]  ( .D(
        \next_input_forward_reg[1][1][29] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][29] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][30]  ( .D(
        \next_input_forward_reg[1][1][30] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][30] ) );
  DFCNQD1 \input_forward_reg_reg[1][1][31]  ( .D(
        \next_input_forward_reg[1][1][31] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][1][31] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][0]  ( .D(
        \next_input_forward_reg[1][2][0] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][0] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][1]  ( .D(
        \next_input_forward_reg[1][2][1] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][1] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][2]  ( .D(
        \next_input_forward_reg[1][2][2] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][2] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][3]  ( .D(
        \next_input_forward_reg[1][2][3] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][3] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][4]  ( .D(
        \next_input_forward_reg[1][2][4] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][4] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][5]  ( .D(
        \next_input_forward_reg[1][2][5] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][5] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][6]  ( .D(
        \next_input_forward_reg[1][2][6] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][6] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][7]  ( .D(
        \next_input_forward_reg[1][2][7] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][7] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][8]  ( .D(
        \next_input_forward_reg[1][2][8] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][8] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][9]  ( .D(
        \next_input_forward_reg[1][2][9] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][9] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][10]  ( .D(
        \next_input_forward_reg[1][2][10] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][10] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][11]  ( .D(
        \next_input_forward_reg[1][2][11] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][11] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][12]  ( .D(
        \next_input_forward_reg[1][2][12] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][12] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][13]  ( .D(
        \next_input_forward_reg[1][2][13] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][13] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][14]  ( .D(
        \next_input_forward_reg[1][2][14] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][14] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][15]  ( .D(
        \next_input_forward_reg[1][2][15] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][15] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][16]  ( .D(
        \next_input_forward_reg[1][2][16] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][16] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][17]  ( .D(
        \next_input_forward_reg[1][2][17] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][17] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][18]  ( .D(
        \next_input_forward_reg[1][2][18] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][18] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][19]  ( .D(
        \next_input_forward_reg[1][2][19] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][19] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][20]  ( .D(
        \next_input_forward_reg[1][2][20] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][20] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][21]  ( .D(
        \next_input_forward_reg[1][2][21] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][21] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][22]  ( .D(
        \next_input_forward_reg[1][2][22] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][22] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][23]  ( .D(
        \next_input_forward_reg[1][2][23] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][23] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][24]  ( .D(
        \next_input_forward_reg[1][2][24] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][24] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][25]  ( .D(
        \next_input_forward_reg[1][2][25] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][25] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][26]  ( .D(
        \next_input_forward_reg[1][2][26] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][26] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][27]  ( .D(
        \next_input_forward_reg[1][2][27] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][27] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][28]  ( .D(
        \next_input_forward_reg[1][2][28] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][28] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][29]  ( .D(
        \next_input_forward_reg[1][2][29] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][29] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][30]  ( .D(
        \next_input_forward_reg[1][2][30] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][30] ) );
  DFCNQD1 \input_forward_reg_reg[1][2][31]  ( .D(
        \next_input_forward_reg[1][2][31] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[1][2][31] ) );
  DFCNQD1 \psums_reg[1][3][0]  ( .D(\next_psums[1][3][0] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][0] ) );
  DFCNQD1 \psums_reg[1][3][1]  ( .D(\next_psums[1][3][1] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][1] ) );
  DFCNQD1 \psums_reg[1][3][2]  ( .D(\next_psums[1][3][2] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][2] ) );
  DFCNQD1 \psums_reg[1][3][3]  ( .D(\next_psums[1][3][3] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][3] ) );
  DFCNQD1 \psums_reg[1][3][4]  ( .D(\next_psums[1][3][4] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][4] ) );
  DFCNQD1 \psums_reg[1][3][5]  ( .D(\next_psums[1][3][5] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][5] ) );
  DFCNQD1 \psums_reg[1][3][6]  ( .D(\next_psums[1][3][6] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][6] ) );
  DFCNQD1 \psums_reg[1][3][7]  ( .D(\next_psums[1][3][7] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][7] ) );
  DFCNQD1 \psums_reg[1][3][8]  ( .D(\next_psums[1][3][8] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][8] ) );
  DFCNQD1 \psums_reg[1][3][9]  ( .D(\next_psums[1][3][9] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][9] ) );
  DFCNQD1 \psums_reg[1][3][10]  ( .D(\next_psums[1][3][10] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][10] ) );
  DFCNQD1 \psums_reg[1][3][11]  ( .D(\next_psums[1][3][11] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][11] ) );
  DFCNQD1 \psums_reg[1][3][12]  ( .D(\next_psums[1][3][12] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][12] ) );
  DFCNQD1 \psums_reg[1][3][13]  ( .D(\next_psums[1][3][13] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][13] ) );
  DFCNQD1 \psums_reg[1][3][14]  ( .D(\next_psums[1][3][14] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][14] ) );
  DFCNQD1 \psums_reg[1][3][15]  ( .D(\next_psums[1][3][15] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][15] ) );
  DFCNQD1 \psums_reg[1][3][16]  ( .D(\next_psums[1][3][16] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][16] ) );
  DFCNQD1 \psums_reg[1][3][17]  ( .D(\next_psums[1][3][17] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][17] ) );
  DFCNQD1 \psums_reg[1][3][18]  ( .D(\next_psums[1][3][18] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][18] ) );
  DFCNQD1 \psums_reg[1][3][19]  ( .D(\next_psums[1][3][19] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][19] ) );
  DFCNQD1 \psums_reg[1][3][20]  ( .D(\next_psums[1][3][20] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][20] ) );
  DFCNQD1 \psums_reg[1][3][21]  ( .D(\next_psums[1][3][21] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][21] ) );
  DFCNQD1 \psums_reg[1][3][22]  ( .D(\next_psums[1][3][22] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][22] ) );
  DFCNQD1 \psums_reg[1][3][23]  ( .D(\next_psums[1][3][23] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][23] ) );
  DFCNQD1 \psums_reg[1][3][24]  ( .D(\next_psums[1][3][24] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][24] ) );
  DFCNQD1 \psums_reg[1][3][25]  ( .D(\next_psums[1][3][25] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][25] ) );
  DFCNQD1 \psums_reg[1][3][26]  ( .D(\next_psums[1][3][26] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][26] ) );
  DFCNQD1 \psums_reg[1][3][27]  ( .D(\next_psums[1][3][27] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][27] ) );
  DFCNQD1 \psums_reg[1][3][28]  ( .D(\next_psums[1][3][28] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][28] ) );
  DFCNQD1 \psums_reg[1][3][29]  ( .D(\next_psums[1][3][29] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][29] ) );
  DFCNQD1 \psums_reg[1][3][30]  ( .D(\next_psums[1][3][30] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][30] ) );
  DFCNQD1 \psums_reg[1][3][31]  ( .D(\next_psums[1][3][31] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][3][31] ) );
  DFCNQD1 \psums_reg[1][2][0]  ( .D(\next_psums[1][2][0] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][0] ) );
  DFCNQD1 \psums_reg[1][2][1]  ( .D(\next_psums[1][2][1] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][1] ) );
  DFCNQD1 \psums_reg[1][2][2]  ( .D(\next_psums[1][2][2] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][2] ) );
  DFCNQD1 \psums_reg[1][2][3]  ( .D(\next_psums[1][2][3] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][3] ) );
  DFCNQD1 \psums_reg[1][2][4]  ( .D(\next_psums[1][2][4] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][4] ) );
  DFCNQD1 \psums_reg[1][2][5]  ( .D(\next_psums[1][2][5] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][5] ) );
  DFCNQD1 \psums_reg[1][2][6]  ( .D(\next_psums[1][2][6] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][6] ) );
  DFCNQD1 \psums_reg[1][2][7]  ( .D(\next_psums[1][2][7] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][7] ) );
  DFCNQD1 \psums_reg[1][2][8]  ( .D(\next_psums[1][2][8] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][8] ) );
  DFCNQD1 \psums_reg[1][2][9]  ( .D(\next_psums[1][2][9] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][9] ) );
  DFCNQD1 \psums_reg[1][2][10]  ( .D(\next_psums[1][2][10] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][10] ) );
  DFCNQD1 \psums_reg[1][2][11]  ( .D(\next_psums[1][2][11] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][11] ) );
  DFCNQD1 \psums_reg[1][2][12]  ( .D(\next_psums[1][2][12] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][12] ) );
  DFCNQD1 \psums_reg[1][2][13]  ( .D(\next_psums[1][2][13] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][13] ) );
  DFCNQD1 \psums_reg[1][2][14]  ( .D(\next_psums[1][2][14] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][14] ) );
  DFCNQD1 \psums_reg[1][2][15]  ( .D(\next_psums[1][2][15] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][15] ) );
  DFCNQD1 \psums_reg[1][2][16]  ( .D(\next_psums[1][2][16] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][16] ) );
  DFCNQD1 \psums_reg[1][2][17]  ( .D(\next_psums[1][2][17] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][17] ) );
  DFCNQD1 \psums_reg[1][2][18]  ( .D(\next_psums[1][2][18] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][18] ) );
  DFCNQD1 \psums_reg[1][2][19]  ( .D(\next_psums[1][2][19] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][19] ) );
  DFCNQD1 \psums_reg[1][2][20]  ( .D(\next_psums[1][2][20] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][20] ) );
  DFCNQD1 \psums_reg[1][2][21]  ( .D(\next_psums[1][2][21] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][21] ) );
  DFCNQD1 \psums_reg[1][2][22]  ( .D(\next_psums[1][2][22] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][22] ) );
  DFCNQD1 \psums_reg[1][2][23]  ( .D(\next_psums[1][2][23] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][23] ) );
  DFCNQD1 \psums_reg[1][2][24]  ( .D(\next_psums[1][2][24] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][24] ) );
  DFCNQD1 \psums_reg[1][2][25]  ( .D(\next_psums[1][2][25] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][25] ) );
  DFCNQD1 \psums_reg[1][2][26]  ( .D(\next_psums[1][2][26] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][26] ) );
  DFCNQD1 \psums_reg[1][2][27]  ( .D(\next_psums[1][2][27] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][27] ) );
  DFCNQD1 \psums_reg[1][2][28]  ( .D(\next_psums[1][2][28] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][28] ) );
  DFCNQD1 \psums_reg[1][2][29]  ( .D(\next_psums[1][2][29] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][29] ) );
  DFCNQD1 \psums_reg[1][2][30]  ( .D(\next_psums[1][2][30] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][30] ) );
  DFCNQD1 \psums_reg[1][2][31]  ( .D(\next_psums[1][2][31] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][2][31] ) );
  DFCNQD1 \psums_reg[1][1][0]  ( .D(\next_psums[1][1][0] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][0] ) );
  DFCNQD1 \psums_reg[1][1][1]  ( .D(\next_psums[1][1][1] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][1] ) );
  DFCNQD1 \psums_reg[1][1][2]  ( .D(\next_psums[1][1][2] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][2] ) );
  DFCNQD1 \psums_reg[1][1][3]  ( .D(\next_psums[1][1][3] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][3] ) );
  DFCNQD1 \psums_reg[1][1][4]  ( .D(\next_psums[1][1][4] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][4] ) );
  DFCNQD1 \psums_reg[1][1][5]  ( .D(\next_psums[1][1][5] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][5] ) );
  DFCNQD1 \psums_reg[1][1][6]  ( .D(\next_psums[1][1][6] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][6] ) );
  DFCNQD1 \psums_reg[1][1][7]  ( .D(\next_psums[1][1][7] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][7] ) );
  DFCNQD1 \psums_reg[1][1][8]  ( .D(\next_psums[1][1][8] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][8] ) );
  DFCNQD1 \psums_reg[1][1][9]  ( .D(\next_psums[1][1][9] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][9] ) );
  DFCNQD1 \psums_reg[1][1][10]  ( .D(\next_psums[1][1][10] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][10] ) );
  DFCNQD1 \psums_reg[1][1][11]  ( .D(\next_psums[1][1][11] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][11] ) );
  DFCNQD1 \psums_reg[1][1][12]  ( .D(\next_psums[1][1][12] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][12] ) );
  DFCNQD1 \psums_reg[1][1][13]  ( .D(\next_psums[1][1][13] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][13] ) );
  DFCNQD1 \psums_reg[1][1][14]  ( .D(\next_psums[1][1][14] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][14] ) );
  DFCNQD1 \psums_reg[1][1][15]  ( .D(\next_psums[1][1][15] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][15] ) );
  DFCNQD1 \psums_reg[1][1][16]  ( .D(\next_psums[1][1][16] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][16] ) );
  DFCNQD1 \psums_reg[1][1][17]  ( .D(\next_psums[1][1][17] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][17] ) );
  DFCNQD1 \psums_reg[1][1][18]  ( .D(\next_psums[1][1][18] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][18] ) );
  DFCNQD1 \psums_reg[1][1][19]  ( .D(\next_psums[1][1][19] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][19] ) );
  DFCNQD1 \psums_reg[1][1][20]  ( .D(\next_psums[1][1][20] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][20] ) );
  DFCNQD1 \psums_reg[1][1][21]  ( .D(\next_psums[1][1][21] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][21] ) );
  DFCNQD1 \psums_reg[1][1][22]  ( .D(\next_psums[1][1][22] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][22] ) );
  DFCNQD1 \psums_reg[1][1][23]  ( .D(\next_psums[1][1][23] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][23] ) );
  DFCNQD1 \psums_reg[1][1][24]  ( .D(\next_psums[1][1][24] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][24] ) );
  DFCNQD1 \psums_reg[1][1][25]  ( .D(\next_psums[1][1][25] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][25] ) );
  DFCNQD1 \psums_reg[1][1][26]  ( .D(\next_psums[1][1][26] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][26] ) );
  DFCNQD1 \psums_reg[1][1][27]  ( .D(\next_psums[1][1][27] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][27] ) );
  DFCNQD1 \psums_reg[1][1][28]  ( .D(\next_psums[1][1][28] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][28] ) );
  DFCNQD1 \psums_reg[1][1][29]  ( .D(\next_psums[1][1][29] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][29] ) );
  DFCNQD1 \psums_reg[1][1][30]  ( .D(\next_psums[1][1][30] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][30] ) );
  DFCNQD1 \psums_reg[1][1][31]  ( .D(\next_psums[1][1][31] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][1][31] ) );
  DFCNQD1 \psums_reg[1][0][0]  ( .D(\next_psums[1][0][0] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][0] ) );
  DFCNQD1 \psums_reg[1][0][1]  ( .D(\next_psums[1][0][1] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][1] ) );
  DFCNQD1 \psums_reg[1][0][2]  ( .D(\next_psums[1][0][2] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][2] ) );
  DFCNQD1 \psums_reg[1][0][3]  ( .D(\next_psums[1][0][3] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][3] ) );
  DFCNQD1 \psums_reg[1][0][4]  ( .D(\next_psums[1][0][4] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][4] ) );
  DFCNQD1 \psums_reg[1][0][5]  ( .D(\next_psums[1][0][5] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][5] ) );
  DFCNQD1 \psums_reg[1][0][6]  ( .D(\next_psums[1][0][6] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][6] ) );
  DFCNQD1 \psums_reg[1][0][7]  ( .D(\next_psums[1][0][7] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][7] ) );
  DFCNQD1 \psums_reg[1][0][8]  ( .D(\next_psums[1][0][8] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][8] ) );
  DFCNQD1 \psums_reg[1][0][9]  ( .D(\next_psums[1][0][9] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][9] ) );
  DFCNQD1 \psums_reg[1][0][10]  ( .D(\next_psums[1][0][10] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][10] ) );
  DFCNQD1 \psums_reg[1][0][11]  ( .D(\next_psums[1][0][11] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][11] ) );
  DFCNQD1 \psums_reg[1][0][12]  ( .D(\next_psums[1][0][12] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][12] ) );
  DFCNQD1 \psums_reg[1][0][13]  ( .D(\next_psums[1][0][13] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][13] ) );
  DFCNQD1 \psums_reg[1][0][14]  ( .D(\next_psums[1][0][14] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][14] ) );
  DFCNQD1 \psums_reg[1][0][15]  ( .D(\next_psums[1][0][15] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][15] ) );
  DFCNQD1 \psums_reg[1][0][16]  ( .D(\next_psums[1][0][16] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][16] ) );
  DFCNQD1 \psums_reg[1][0][17]  ( .D(\next_psums[1][0][17] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][17] ) );
  DFCNQD1 \psums_reg[1][0][18]  ( .D(\next_psums[1][0][18] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][18] ) );
  DFCNQD1 \psums_reg[1][0][19]  ( .D(\next_psums[1][0][19] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][19] ) );
  DFCNQD1 \psums_reg[1][0][20]  ( .D(\next_psums[1][0][20] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][20] ) );
  DFCNQD1 \psums_reg[1][0][21]  ( .D(\next_psums[1][0][21] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][21] ) );
  DFCNQD1 \psums_reg[1][0][22]  ( .D(\next_psums[1][0][22] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][22] ) );
  DFCNQD1 \psums_reg[1][0][23]  ( .D(\next_psums[1][0][23] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][23] ) );
  DFCNQD1 \psums_reg[1][0][24]  ( .D(\next_psums[1][0][24] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][24] ) );
  DFCNQD1 \psums_reg[1][0][25]  ( .D(\next_psums[1][0][25] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][25] ) );
  DFCNQD1 \psums_reg[1][0][26]  ( .D(\next_psums[1][0][26] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][26] ) );
  DFCNQD1 \psums_reg[1][0][27]  ( .D(\next_psums[1][0][27] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][27] ) );
  DFCNQD1 \psums_reg[1][0][28]  ( .D(\next_psums[1][0][28] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][28] ) );
  DFCNQD1 \psums_reg[1][0][29]  ( .D(\next_psums[1][0][29] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][29] ) );
  DFCNQD1 \psums_reg[1][0][30]  ( .D(\next_psums[1][0][30] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][30] ) );
  DFCNQD1 \psums_reg[1][0][31]  ( .D(\next_psums[1][0][31] ), .CP(clk), .CDN(
        nRST), .Q(\psums[1][0][31] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][0]  ( .D(
        \next_input_forward_reg[2][0][0] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][0] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][1]  ( .D(
        \next_input_forward_reg[2][0][1] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][1] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][2]  ( .D(
        \next_input_forward_reg[2][0][2] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][2] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][3]  ( .D(
        \next_input_forward_reg[2][0][3] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][3] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][4]  ( .D(
        \next_input_forward_reg[2][0][4] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][4] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][5]  ( .D(
        \next_input_forward_reg[2][0][5] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][5] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][6]  ( .D(
        \next_input_forward_reg[2][0][6] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][6] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][7]  ( .D(
        \next_input_forward_reg[2][0][7] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][7] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][8]  ( .D(
        \next_input_forward_reg[2][0][8] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][8] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][9]  ( .D(
        \next_input_forward_reg[2][0][9] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][9] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][10]  ( .D(
        \next_input_forward_reg[2][0][10] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][10] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][11]  ( .D(
        \next_input_forward_reg[2][0][11] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][11] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][12]  ( .D(
        \next_input_forward_reg[2][0][12] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][12] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][13]  ( .D(
        \next_input_forward_reg[2][0][13] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][13] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][14]  ( .D(
        \next_input_forward_reg[2][0][14] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][14] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][15]  ( .D(
        \next_input_forward_reg[2][0][15] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][15] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][16]  ( .D(
        \next_input_forward_reg[2][0][16] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][16] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][17]  ( .D(
        \next_input_forward_reg[2][0][17] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][17] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][18]  ( .D(
        \next_input_forward_reg[2][0][18] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][18] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][19]  ( .D(
        \next_input_forward_reg[2][0][19] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][19] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][20]  ( .D(
        \next_input_forward_reg[2][0][20] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][20] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][21]  ( .D(
        \next_input_forward_reg[2][0][21] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][21] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][22]  ( .D(
        \next_input_forward_reg[2][0][22] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][22] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][23]  ( .D(
        \next_input_forward_reg[2][0][23] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][23] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][24]  ( .D(
        \next_input_forward_reg[2][0][24] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][24] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][25]  ( .D(
        \next_input_forward_reg[2][0][25] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][25] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][26]  ( .D(
        \next_input_forward_reg[2][0][26] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][26] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][27]  ( .D(
        \next_input_forward_reg[2][0][27] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][27] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][28]  ( .D(
        \next_input_forward_reg[2][0][28] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][28] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][29]  ( .D(
        \next_input_forward_reg[2][0][29] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][29] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][30]  ( .D(
        \next_input_forward_reg[2][0][30] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][30] ) );
  DFCNQD1 \input_forward_reg_reg[2][0][31]  ( .D(
        \next_input_forward_reg[2][0][31] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][0][31] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][0]  ( .D(
        \next_input_forward_reg[2][1][0] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][0] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][1]  ( .D(
        \next_input_forward_reg[2][1][1] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][1] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][2]  ( .D(
        \next_input_forward_reg[2][1][2] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][2] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][3]  ( .D(
        \next_input_forward_reg[2][1][3] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][3] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][4]  ( .D(
        \next_input_forward_reg[2][1][4] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][4] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][5]  ( .D(
        \next_input_forward_reg[2][1][5] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][5] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][6]  ( .D(
        \next_input_forward_reg[2][1][6] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][6] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][7]  ( .D(
        \next_input_forward_reg[2][1][7] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][7] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][8]  ( .D(
        \next_input_forward_reg[2][1][8] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][8] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][9]  ( .D(
        \next_input_forward_reg[2][1][9] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][9] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][10]  ( .D(
        \next_input_forward_reg[2][1][10] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][10] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][11]  ( .D(
        \next_input_forward_reg[2][1][11] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][11] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][12]  ( .D(
        \next_input_forward_reg[2][1][12] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][12] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][13]  ( .D(
        \next_input_forward_reg[2][1][13] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][13] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][14]  ( .D(
        \next_input_forward_reg[2][1][14] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][14] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][15]  ( .D(
        \next_input_forward_reg[2][1][15] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][15] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][16]  ( .D(
        \next_input_forward_reg[2][1][16] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][16] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][17]  ( .D(
        \next_input_forward_reg[2][1][17] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][17] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][18]  ( .D(
        \next_input_forward_reg[2][1][18] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][18] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][19]  ( .D(
        \next_input_forward_reg[2][1][19] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][19] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][20]  ( .D(
        \next_input_forward_reg[2][1][20] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][20] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][21]  ( .D(
        \next_input_forward_reg[2][1][21] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][21] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][22]  ( .D(
        \next_input_forward_reg[2][1][22] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][22] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][23]  ( .D(
        \next_input_forward_reg[2][1][23] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][23] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][24]  ( .D(
        \next_input_forward_reg[2][1][24] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][24] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][25]  ( .D(
        \next_input_forward_reg[2][1][25] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][25] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][26]  ( .D(
        \next_input_forward_reg[2][1][26] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][26] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][27]  ( .D(
        \next_input_forward_reg[2][1][27] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][27] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][28]  ( .D(
        \next_input_forward_reg[2][1][28] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][28] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][29]  ( .D(
        \next_input_forward_reg[2][1][29] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][29] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][30]  ( .D(
        \next_input_forward_reg[2][1][30] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][30] ) );
  DFCNQD1 \input_forward_reg_reg[2][1][31]  ( .D(
        \next_input_forward_reg[2][1][31] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][1][31] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][0]  ( .D(
        \next_input_forward_reg[2][2][0] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][0] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][1]  ( .D(
        \next_input_forward_reg[2][2][1] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][1] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][2]  ( .D(
        \next_input_forward_reg[2][2][2] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][2] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][3]  ( .D(
        \next_input_forward_reg[2][2][3] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][3] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][4]  ( .D(
        \next_input_forward_reg[2][2][4] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][4] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][5]  ( .D(
        \next_input_forward_reg[2][2][5] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][5] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][6]  ( .D(
        \next_input_forward_reg[2][2][6] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][6] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][7]  ( .D(
        \next_input_forward_reg[2][2][7] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][7] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][8]  ( .D(
        \next_input_forward_reg[2][2][8] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][8] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][9]  ( .D(
        \next_input_forward_reg[2][2][9] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][9] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][10]  ( .D(
        \next_input_forward_reg[2][2][10] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][10] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][11]  ( .D(
        \next_input_forward_reg[2][2][11] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][11] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][12]  ( .D(
        \next_input_forward_reg[2][2][12] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][12] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][13]  ( .D(
        \next_input_forward_reg[2][2][13] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][13] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][14]  ( .D(
        \next_input_forward_reg[2][2][14] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][14] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][15]  ( .D(
        \next_input_forward_reg[2][2][15] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][15] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][16]  ( .D(
        \next_input_forward_reg[2][2][16] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][16] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][17]  ( .D(
        \next_input_forward_reg[2][2][17] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][17] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][18]  ( .D(
        \next_input_forward_reg[2][2][18] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][18] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][19]  ( .D(
        \next_input_forward_reg[2][2][19] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][19] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][20]  ( .D(
        \next_input_forward_reg[2][2][20] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][20] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][21]  ( .D(
        \next_input_forward_reg[2][2][21] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][21] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][22]  ( .D(
        \next_input_forward_reg[2][2][22] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][22] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][23]  ( .D(
        \next_input_forward_reg[2][2][23] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][23] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][24]  ( .D(
        \next_input_forward_reg[2][2][24] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][24] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][25]  ( .D(
        \next_input_forward_reg[2][2][25] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][25] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][26]  ( .D(
        \next_input_forward_reg[2][2][26] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][26] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][27]  ( .D(
        \next_input_forward_reg[2][2][27] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][27] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][28]  ( .D(
        \next_input_forward_reg[2][2][28] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][28] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][29]  ( .D(
        \next_input_forward_reg[2][2][29] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][29] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][30]  ( .D(
        \next_input_forward_reg[2][2][30] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][30] ) );
  DFCNQD1 \input_forward_reg_reg[2][2][31]  ( .D(
        \next_input_forward_reg[2][2][31] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[2][2][31] ) );
  DFCNQD1 \psums_reg[2][3][0]  ( .D(\next_psums[2][3][0] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][0] ) );
  DFCNQD1 \psums_reg[2][3][1]  ( .D(\next_psums[2][3][1] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][1] ) );
  DFCNQD1 \psums_reg[2][3][2]  ( .D(\next_psums[2][3][2] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][2] ) );
  DFCNQD1 \psums_reg[2][3][3]  ( .D(\next_psums[2][3][3] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][3] ) );
  DFCNQD1 \psums_reg[2][3][4]  ( .D(\next_psums[2][3][4] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][4] ) );
  DFCNQD1 \psums_reg[2][3][5]  ( .D(\next_psums[2][3][5] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][5] ) );
  DFCNQD1 \psums_reg[2][3][6]  ( .D(\next_psums[2][3][6] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][6] ) );
  DFCNQD1 \psums_reg[2][3][7]  ( .D(\next_psums[2][3][7] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][7] ) );
  DFCNQD1 \psums_reg[2][3][8]  ( .D(\next_psums[2][3][8] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][8] ) );
  DFCNQD1 \psums_reg[2][3][9]  ( .D(\next_psums[2][3][9] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][9] ) );
  DFCNQD1 \psums_reg[2][3][10]  ( .D(\next_psums[2][3][10] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][10] ) );
  DFCNQD1 \psums_reg[2][3][11]  ( .D(\next_psums[2][3][11] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][11] ) );
  DFCNQD1 \psums_reg[2][3][12]  ( .D(\next_psums[2][3][12] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][12] ) );
  DFCNQD1 \psums_reg[2][3][13]  ( .D(\next_psums[2][3][13] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][13] ) );
  DFCNQD1 \psums_reg[2][3][14]  ( .D(\next_psums[2][3][14] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][14] ) );
  DFCNQD1 \psums_reg[2][3][15]  ( .D(\next_psums[2][3][15] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][15] ) );
  DFCNQD1 \psums_reg[2][3][16]  ( .D(\next_psums[2][3][16] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][16] ) );
  DFCNQD1 \psums_reg[2][3][17]  ( .D(\next_psums[2][3][17] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][17] ) );
  DFCNQD1 \psums_reg[2][3][18]  ( .D(\next_psums[2][3][18] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][18] ) );
  DFCNQD1 \psums_reg[2][3][19]  ( .D(\next_psums[2][3][19] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][19] ) );
  DFCNQD1 \psums_reg[2][3][20]  ( .D(\next_psums[2][3][20] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][20] ) );
  DFCNQD1 \psums_reg[2][3][21]  ( .D(\next_psums[2][3][21] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][21] ) );
  DFCNQD1 \psums_reg[2][3][22]  ( .D(\next_psums[2][3][22] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][22] ) );
  DFCNQD1 \psums_reg[2][3][23]  ( .D(\next_psums[2][3][23] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][23] ) );
  DFCNQD1 \psums_reg[2][3][24]  ( .D(\next_psums[2][3][24] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][24] ) );
  DFCNQD1 \psums_reg[2][3][25]  ( .D(\next_psums[2][3][25] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][25] ) );
  DFCNQD1 \psums_reg[2][3][26]  ( .D(\next_psums[2][3][26] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][26] ) );
  DFCNQD1 \psums_reg[2][3][27]  ( .D(\next_psums[2][3][27] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][27] ) );
  DFCNQD1 \psums_reg[2][3][28]  ( .D(\next_psums[2][3][28] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][28] ) );
  DFCNQD1 \psums_reg[2][3][29]  ( .D(\next_psums[2][3][29] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][29] ) );
  DFCNQD1 \psums_reg[2][3][30]  ( .D(\next_psums[2][3][30] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][30] ) );
  DFCNQD1 \psums_reg[2][3][31]  ( .D(\next_psums[2][3][31] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][3][31] ) );
  DFCNQD1 \psums_reg[2][2][0]  ( .D(\next_psums[2][2][0] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][0] ) );
  DFCNQD1 \psums_reg[2][2][1]  ( .D(\next_psums[2][2][1] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][1] ) );
  DFCNQD1 \psums_reg[2][2][2]  ( .D(\next_psums[2][2][2] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][2] ) );
  DFCNQD1 \psums_reg[2][2][3]  ( .D(\next_psums[2][2][3] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][3] ) );
  DFCNQD1 \psums_reg[2][2][4]  ( .D(\next_psums[2][2][4] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][4] ) );
  DFCNQD1 \psums_reg[2][2][5]  ( .D(\next_psums[2][2][5] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][5] ) );
  DFCNQD1 \psums_reg[2][2][6]  ( .D(\next_psums[2][2][6] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][6] ) );
  DFCNQD1 \psums_reg[2][2][7]  ( .D(\next_psums[2][2][7] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][7] ) );
  DFCNQD1 \psums_reg[2][2][8]  ( .D(\next_psums[2][2][8] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][8] ) );
  DFCNQD1 \psums_reg[2][2][9]  ( .D(\next_psums[2][2][9] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][9] ) );
  DFCNQD1 \psums_reg[2][2][10]  ( .D(\next_psums[2][2][10] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][10] ) );
  DFCNQD1 \psums_reg[2][2][11]  ( .D(\next_psums[2][2][11] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][11] ) );
  DFCNQD1 \psums_reg[2][2][12]  ( .D(\next_psums[2][2][12] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][12] ) );
  DFCNQD1 \psums_reg[2][2][13]  ( .D(\next_psums[2][2][13] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][13] ) );
  DFCNQD1 \psums_reg[2][2][14]  ( .D(\next_psums[2][2][14] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][14] ) );
  DFCNQD1 \psums_reg[2][2][15]  ( .D(\next_psums[2][2][15] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][15] ) );
  DFCNQD1 \psums_reg[2][2][16]  ( .D(\next_psums[2][2][16] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][16] ) );
  DFCNQD1 \psums_reg[2][2][17]  ( .D(\next_psums[2][2][17] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][17] ) );
  DFCNQD1 \psums_reg[2][2][18]  ( .D(\next_psums[2][2][18] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][18] ) );
  DFCNQD1 \psums_reg[2][2][19]  ( .D(\next_psums[2][2][19] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][19] ) );
  DFCNQD1 \psums_reg[2][2][20]  ( .D(\next_psums[2][2][20] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][20] ) );
  DFCNQD1 \psums_reg[2][2][21]  ( .D(\next_psums[2][2][21] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][21] ) );
  DFCNQD1 \psums_reg[2][2][22]  ( .D(\next_psums[2][2][22] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][22] ) );
  DFCNQD1 \psums_reg[2][2][23]  ( .D(\next_psums[2][2][23] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][23] ) );
  DFCNQD1 \psums_reg[2][2][24]  ( .D(\next_psums[2][2][24] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][24] ) );
  DFCNQD1 \psums_reg[2][2][25]  ( .D(\next_psums[2][2][25] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][25] ) );
  DFCNQD1 \psums_reg[2][2][26]  ( .D(\next_psums[2][2][26] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][26] ) );
  DFCNQD1 \psums_reg[2][2][27]  ( .D(\next_psums[2][2][27] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][27] ) );
  DFCNQD1 \psums_reg[2][2][28]  ( .D(\next_psums[2][2][28] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][28] ) );
  DFCNQD1 \psums_reg[2][2][29]  ( .D(\next_psums[2][2][29] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][29] ) );
  DFCNQD1 \psums_reg[2][2][30]  ( .D(\next_psums[2][2][30] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][30] ) );
  DFCNQD1 \psums_reg[2][2][31]  ( .D(\next_psums[2][2][31] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][2][31] ) );
  DFCNQD1 \psums_reg[2][1][0]  ( .D(\next_psums[2][1][0] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][0] ) );
  DFCNQD1 \psums_reg[2][1][1]  ( .D(\next_psums[2][1][1] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][1] ) );
  DFCNQD1 \psums_reg[2][1][2]  ( .D(\next_psums[2][1][2] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][2] ) );
  DFCNQD1 \psums_reg[2][1][3]  ( .D(\next_psums[2][1][3] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][3] ) );
  DFCNQD1 \psums_reg[2][1][4]  ( .D(\next_psums[2][1][4] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][4] ) );
  DFCNQD1 \psums_reg[2][1][5]  ( .D(\next_psums[2][1][5] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][5] ) );
  DFCNQD1 \psums_reg[2][1][6]  ( .D(\next_psums[2][1][6] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][6] ) );
  DFCNQD1 \psums_reg[2][1][7]  ( .D(\next_psums[2][1][7] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][7] ) );
  DFCNQD1 \psums_reg[2][1][8]  ( .D(\next_psums[2][1][8] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][8] ) );
  DFCNQD1 \psums_reg[2][1][9]  ( .D(\next_psums[2][1][9] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][9] ) );
  DFCNQD1 \psums_reg[2][1][10]  ( .D(\next_psums[2][1][10] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][10] ) );
  DFCNQD1 \psums_reg[2][1][11]  ( .D(\next_psums[2][1][11] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][11] ) );
  DFCNQD1 \psums_reg[2][1][12]  ( .D(\next_psums[2][1][12] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][12] ) );
  DFCNQD1 \psums_reg[2][1][13]  ( .D(\next_psums[2][1][13] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][13] ) );
  DFCNQD1 \psums_reg[2][1][14]  ( .D(\next_psums[2][1][14] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][14] ) );
  DFCNQD1 \psums_reg[2][1][15]  ( .D(\next_psums[2][1][15] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][15] ) );
  DFCNQD1 \psums_reg[2][1][16]  ( .D(\next_psums[2][1][16] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][16] ) );
  DFCNQD1 \psums_reg[2][1][17]  ( .D(\next_psums[2][1][17] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][17] ) );
  DFCNQD1 \psums_reg[2][1][18]  ( .D(\next_psums[2][1][18] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][18] ) );
  DFCNQD1 \psums_reg[2][1][19]  ( .D(\next_psums[2][1][19] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][19] ) );
  DFCNQD1 \psums_reg[2][1][20]  ( .D(\next_psums[2][1][20] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][20] ) );
  DFCNQD1 \psums_reg[2][1][21]  ( .D(\next_psums[2][1][21] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][21] ) );
  DFCNQD1 \psums_reg[2][1][22]  ( .D(\next_psums[2][1][22] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][22] ) );
  DFCNQD1 \psums_reg[2][1][23]  ( .D(\next_psums[2][1][23] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][23] ) );
  DFCNQD1 \psums_reg[2][1][24]  ( .D(\next_psums[2][1][24] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][24] ) );
  DFCNQD1 \psums_reg[2][1][25]  ( .D(\next_psums[2][1][25] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][25] ) );
  DFCNQD1 \psums_reg[2][1][26]  ( .D(\next_psums[2][1][26] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][26] ) );
  DFCNQD1 \psums_reg[2][1][27]  ( .D(\next_psums[2][1][27] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][27] ) );
  DFCNQD1 \psums_reg[2][1][28]  ( .D(\next_psums[2][1][28] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][28] ) );
  DFCNQD1 \psums_reg[2][1][29]  ( .D(\next_psums[2][1][29] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][29] ) );
  DFCNQD1 \psums_reg[2][1][30]  ( .D(\next_psums[2][1][30] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][30] ) );
  DFCNQD1 \psums_reg[2][1][31]  ( .D(\next_psums[2][1][31] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][1][31] ) );
  DFCNQD1 \psums_reg[2][0][0]  ( .D(\next_psums[2][0][0] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][0] ) );
  DFCNQD1 \psums_reg[2][0][1]  ( .D(\next_psums[2][0][1] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][1] ) );
  DFCNQD1 \psums_reg[2][0][2]  ( .D(\next_psums[2][0][2] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][2] ) );
  DFCNQD1 \psums_reg[2][0][3]  ( .D(\next_psums[2][0][3] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][3] ) );
  DFCNQD1 \psums_reg[2][0][4]  ( .D(\next_psums[2][0][4] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][4] ) );
  DFCNQD1 \psums_reg[2][0][5]  ( .D(\next_psums[2][0][5] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][5] ) );
  DFCNQD1 \psums_reg[2][0][6]  ( .D(\next_psums[2][0][6] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][6] ) );
  DFCNQD1 \psums_reg[2][0][7]  ( .D(\next_psums[2][0][7] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][7] ) );
  DFCNQD1 \psums_reg[2][0][8]  ( .D(\next_psums[2][0][8] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][8] ) );
  DFCNQD1 \psums_reg[2][0][9]  ( .D(\next_psums[2][0][9] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][9] ) );
  DFCNQD1 \psums_reg[2][0][10]  ( .D(\next_psums[2][0][10] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][10] ) );
  DFCNQD1 \psums_reg[2][0][11]  ( .D(\next_psums[2][0][11] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][11] ) );
  DFCNQD1 \psums_reg[2][0][12]  ( .D(\next_psums[2][0][12] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][12] ) );
  DFCNQD1 \psums_reg[2][0][13]  ( .D(\next_psums[2][0][13] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][13] ) );
  DFCNQD1 \psums_reg[2][0][14]  ( .D(\next_psums[2][0][14] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][14] ) );
  DFCNQD1 \psums_reg[2][0][15]  ( .D(\next_psums[2][0][15] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][15] ) );
  DFCNQD1 \psums_reg[2][0][16]  ( .D(\next_psums[2][0][16] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][16] ) );
  DFCNQD1 \psums_reg[2][0][17]  ( .D(\next_psums[2][0][17] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][17] ) );
  DFCNQD1 \psums_reg[2][0][18]  ( .D(\next_psums[2][0][18] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][18] ) );
  DFCNQD1 \psums_reg[2][0][19]  ( .D(\next_psums[2][0][19] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][19] ) );
  DFCNQD1 \psums_reg[2][0][20]  ( .D(\next_psums[2][0][20] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][20] ) );
  DFCNQD1 \psums_reg[2][0][21]  ( .D(\next_psums[2][0][21] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][21] ) );
  DFCNQD1 \psums_reg[2][0][22]  ( .D(\next_psums[2][0][22] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][22] ) );
  DFCNQD1 \psums_reg[2][0][23]  ( .D(\next_psums[2][0][23] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][23] ) );
  DFCNQD1 \psums_reg[2][0][24]  ( .D(\next_psums[2][0][24] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][24] ) );
  DFCNQD1 \psums_reg[2][0][25]  ( .D(\next_psums[2][0][25] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][25] ) );
  DFCNQD1 \psums_reg[2][0][26]  ( .D(\next_psums[2][0][26] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][26] ) );
  DFCNQD1 \psums_reg[2][0][27]  ( .D(\next_psums[2][0][27] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][27] ) );
  DFCNQD1 \psums_reg[2][0][28]  ( .D(\next_psums[2][0][28] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][28] ) );
  DFCNQD1 \psums_reg[2][0][29]  ( .D(\next_psums[2][0][29] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][29] ) );
  DFCNQD1 \psums_reg[2][0][30]  ( .D(\next_psums[2][0][30] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][30] ) );
  DFCNQD1 \psums_reg[2][0][31]  ( .D(\next_psums[2][0][31] ), .CP(clk), .CDN(
        nRST), .Q(\psums[2][0][31] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][0]  ( .D(
        \next_input_forward_reg[3][0][0] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][0] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][1]  ( .D(
        \next_input_forward_reg[3][0][1] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][1] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][2]  ( .D(
        \next_input_forward_reg[3][0][2] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][2] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][3]  ( .D(
        \next_input_forward_reg[3][0][3] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][3] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][4]  ( .D(
        \next_input_forward_reg[3][0][4] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][4] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][5]  ( .D(
        \next_input_forward_reg[3][0][5] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][5] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][6]  ( .D(
        \next_input_forward_reg[3][0][6] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][6] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][7]  ( .D(
        \next_input_forward_reg[3][0][7] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][7] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][8]  ( .D(
        \next_input_forward_reg[3][0][8] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][8] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][9]  ( .D(
        \next_input_forward_reg[3][0][9] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][9] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][10]  ( .D(
        \next_input_forward_reg[3][0][10] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][10] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][11]  ( .D(
        \next_input_forward_reg[3][0][11] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][11] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][12]  ( .D(
        \next_input_forward_reg[3][0][12] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][12] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][13]  ( .D(
        \next_input_forward_reg[3][0][13] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][13] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][14]  ( .D(
        \next_input_forward_reg[3][0][14] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][14] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][15]  ( .D(
        \next_input_forward_reg[3][0][15] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][15] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][16]  ( .D(
        \next_input_forward_reg[3][0][16] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][16] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][17]  ( .D(
        \next_input_forward_reg[3][0][17] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][17] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][18]  ( .D(
        \next_input_forward_reg[3][0][18] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][18] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][19]  ( .D(
        \next_input_forward_reg[3][0][19] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][19] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][20]  ( .D(
        \next_input_forward_reg[3][0][20] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][20] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][21]  ( .D(
        \next_input_forward_reg[3][0][21] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][21] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][22]  ( .D(
        \next_input_forward_reg[3][0][22] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][22] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][23]  ( .D(
        \next_input_forward_reg[3][0][23] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][23] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][24]  ( .D(
        \next_input_forward_reg[3][0][24] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][24] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][25]  ( .D(
        \next_input_forward_reg[3][0][25] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][25] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][26]  ( .D(
        \next_input_forward_reg[3][0][26] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][26] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][27]  ( .D(
        \next_input_forward_reg[3][0][27] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][27] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][28]  ( .D(
        \next_input_forward_reg[3][0][28] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][28] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][29]  ( .D(
        \next_input_forward_reg[3][0][29] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][29] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][30]  ( .D(
        \next_input_forward_reg[3][0][30] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][30] ) );
  DFCNQD1 \input_forward_reg_reg[3][0][31]  ( .D(
        \next_input_forward_reg[3][0][31] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][0][31] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][0]  ( .D(
        \next_input_forward_reg[3][1][0] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][0] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][1]  ( .D(
        \next_input_forward_reg[3][1][1] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][1] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][2]  ( .D(
        \next_input_forward_reg[3][1][2] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][2] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][3]  ( .D(
        \next_input_forward_reg[3][1][3] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][3] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][4]  ( .D(
        \next_input_forward_reg[3][1][4] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][4] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][5]  ( .D(
        \next_input_forward_reg[3][1][5] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][5] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][6]  ( .D(
        \next_input_forward_reg[3][1][6] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][6] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][7]  ( .D(
        \next_input_forward_reg[3][1][7] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][7] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][8]  ( .D(
        \next_input_forward_reg[3][1][8] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][8] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][9]  ( .D(
        \next_input_forward_reg[3][1][9] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][9] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][10]  ( .D(
        \next_input_forward_reg[3][1][10] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][10] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][11]  ( .D(
        \next_input_forward_reg[3][1][11] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][11] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][12]  ( .D(
        \next_input_forward_reg[3][1][12] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][12] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][13]  ( .D(
        \next_input_forward_reg[3][1][13] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][13] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][14]  ( .D(
        \next_input_forward_reg[3][1][14] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][14] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][15]  ( .D(
        \next_input_forward_reg[3][1][15] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][15] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][16]  ( .D(
        \next_input_forward_reg[3][1][16] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][16] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][17]  ( .D(
        \next_input_forward_reg[3][1][17] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][17] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][18]  ( .D(
        \next_input_forward_reg[3][1][18] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][18] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][19]  ( .D(
        \next_input_forward_reg[3][1][19] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][19] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][20]  ( .D(
        \next_input_forward_reg[3][1][20] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][20] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][21]  ( .D(
        \next_input_forward_reg[3][1][21] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][21] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][22]  ( .D(
        \next_input_forward_reg[3][1][22] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][22] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][23]  ( .D(
        \next_input_forward_reg[3][1][23] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][23] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][24]  ( .D(
        \next_input_forward_reg[3][1][24] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][24] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][25]  ( .D(
        \next_input_forward_reg[3][1][25] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][25] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][26]  ( .D(
        \next_input_forward_reg[3][1][26] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][26] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][27]  ( .D(
        \next_input_forward_reg[3][1][27] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][27] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][28]  ( .D(
        \next_input_forward_reg[3][1][28] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][28] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][29]  ( .D(
        \next_input_forward_reg[3][1][29] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][29] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][30]  ( .D(
        \next_input_forward_reg[3][1][30] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][30] ) );
  DFCNQD1 \input_forward_reg_reg[3][1][31]  ( .D(
        \next_input_forward_reg[3][1][31] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][1][31] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][0]  ( .D(
        \next_input_forward_reg[3][2][0] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][0] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][1]  ( .D(
        \next_input_forward_reg[3][2][1] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][1] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][2]  ( .D(
        \next_input_forward_reg[3][2][2] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][2] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][3]  ( .D(
        \next_input_forward_reg[3][2][3] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][3] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][4]  ( .D(
        \next_input_forward_reg[3][2][4] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][4] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][5]  ( .D(
        \next_input_forward_reg[3][2][5] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][5] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][6]  ( .D(
        \next_input_forward_reg[3][2][6] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][6] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][7]  ( .D(
        \next_input_forward_reg[3][2][7] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][7] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][8]  ( .D(
        \next_input_forward_reg[3][2][8] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][8] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][9]  ( .D(
        \next_input_forward_reg[3][2][9] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][9] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][10]  ( .D(
        \next_input_forward_reg[3][2][10] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][10] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][11]  ( .D(
        \next_input_forward_reg[3][2][11] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][11] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][12]  ( .D(
        \next_input_forward_reg[3][2][12] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][12] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][13]  ( .D(
        \next_input_forward_reg[3][2][13] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][13] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][14]  ( .D(
        \next_input_forward_reg[3][2][14] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][14] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][15]  ( .D(
        \next_input_forward_reg[3][2][15] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][15] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][16]  ( .D(
        \next_input_forward_reg[3][2][16] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][16] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][17]  ( .D(
        \next_input_forward_reg[3][2][17] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][17] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][18]  ( .D(
        \next_input_forward_reg[3][2][18] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][18] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][19]  ( .D(
        \next_input_forward_reg[3][2][19] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][19] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][20]  ( .D(
        \next_input_forward_reg[3][2][20] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][20] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][21]  ( .D(
        \next_input_forward_reg[3][2][21] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][21] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][22]  ( .D(
        \next_input_forward_reg[3][2][22] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][22] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][23]  ( .D(
        \next_input_forward_reg[3][2][23] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][23] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][24]  ( .D(
        \next_input_forward_reg[3][2][24] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][24] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][25]  ( .D(
        \next_input_forward_reg[3][2][25] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][25] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][26]  ( .D(
        \next_input_forward_reg[3][2][26] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][26] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][27]  ( .D(
        \next_input_forward_reg[3][2][27] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][27] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][28]  ( .D(
        \next_input_forward_reg[3][2][28] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][28] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][29]  ( .D(
        \next_input_forward_reg[3][2][29] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][29] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][30]  ( .D(
        \next_input_forward_reg[3][2][30] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][30] ) );
  DFCNQD1 \input_forward_reg_reg[3][2][31]  ( .D(
        \next_input_forward_reg[3][2][31] ), .CP(clk), .CDN(nRST), .Q(
        \input_forward_reg[3][2][31] ) );
  DFCNQD1 \psums_reg[3][3][0]  ( .D(\next_psums[3][3][0] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][0] ) );
  DFCNQD1 \psums_reg[3][3][1]  ( .D(\next_psums[3][3][1] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][1] ) );
  DFCNQD1 \psums_reg[3][3][2]  ( .D(\next_psums[3][3][2] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][2] ) );
  DFCNQD1 \psums_reg[3][3][3]  ( .D(\next_psums[3][3][3] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][3] ) );
  DFCNQD1 \psums_reg[3][3][4]  ( .D(\next_psums[3][3][4] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][4] ) );
  DFCNQD1 \psums_reg[3][3][5]  ( .D(\next_psums[3][3][5] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][5] ) );
  DFCNQD1 \psums_reg[3][3][6]  ( .D(\next_psums[3][3][6] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][6] ) );
  DFCNQD1 \psums_reg[3][3][7]  ( .D(\next_psums[3][3][7] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][7] ) );
  DFCNQD1 \psums_reg[3][3][8]  ( .D(\next_psums[3][3][8] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][8] ) );
  DFCNQD1 \psums_reg[3][3][9]  ( .D(\next_psums[3][3][9] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][9] ) );
  DFCNQD1 \psums_reg[3][3][10]  ( .D(\next_psums[3][3][10] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][10] ) );
  DFCNQD1 \psums_reg[3][3][11]  ( .D(\next_psums[3][3][11] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][11] ) );
  DFCNQD1 \psums_reg[3][3][12]  ( .D(\next_psums[3][3][12] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][12] ) );
  DFCNQD1 \psums_reg[3][3][13]  ( .D(\next_psums[3][3][13] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][13] ) );
  DFCNQD1 \psums_reg[3][3][14]  ( .D(\next_psums[3][3][14] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][14] ) );
  DFCNQD1 \psums_reg[3][3][15]  ( .D(\next_psums[3][3][15] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][15] ) );
  DFCNQD1 \psums_reg[3][3][16]  ( .D(\next_psums[3][3][16] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][16] ) );
  DFCNQD1 \psums_reg[3][3][17]  ( .D(\next_psums[3][3][17] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][17] ) );
  DFCNQD1 \psums_reg[3][3][18]  ( .D(\next_psums[3][3][18] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][18] ) );
  DFCNQD1 \psums_reg[3][3][19]  ( .D(\next_psums[3][3][19] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][19] ) );
  DFCNQD1 \psums_reg[3][3][20]  ( .D(\next_psums[3][3][20] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][20] ) );
  DFCNQD1 \psums_reg[3][3][21]  ( .D(\next_psums[3][3][21] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][21] ) );
  DFCNQD1 \psums_reg[3][3][22]  ( .D(\next_psums[3][3][22] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][22] ) );
  DFCNQD1 \psums_reg[3][3][23]  ( .D(\next_psums[3][3][23] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][23] ) );
  DFCNQD1 \psums_reg[3][3][24]  ( .D(\next_psums[3][3][24] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][24] ) );
  DFCNQD1 \psums_reg[3][3][25]  ( .D(\next_psums[3][3][25] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][25] ) );
  DFCNQD1 \psums_reg[3][3][26]  ( .D(\next_psums[3][3][26] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][26] ) );
  DFCNQD1 \psums_reg[3][3][27]  ( .D(\next_psums[3][3][27] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][27] ) );
  DFCNQD1 \psums_reg[3][3][28]  ( .D(\next_psums[3][3][28] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][28] ) );
  DFCNQD1 \psums_reg[3][3][29]  ( .D(\next_psums[3][3][29] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][29] ) );
  DFCNQD1 \psums_reg[3][3][30]  ( .D(\next_psums[3][3][30] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][30] ) );
  DFCNQD1 \psums_reg[3][3][31]  ( .D(\next_psums[3][3][31] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][3][31] ) );
  DFCNQD1 \psums_reg[3][2][0]  ( .D(\next_psums[3][2][0] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][0] ) );
  DFCNQD1 \psums_reg[3][2][1]  ( .D(\next_psums[3][2][1] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][1] ) );
  DFCNQD1 \psums_reg[3][2][2]  ( .D(\next_psums[3][2][2] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][2] ) );
  DFCNQD1 \psums_reg[3][2][3]  ( .D(\next_psums[3][2][3] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][3] ) );
  DFCNQD1 \psums_reg[3][2][4]  ( .D(\next_psums[3][2][4] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][4] ) );
  DFCNQD1 \psums_reg[3][2][5]  ( .D(\next_psums[3][2][5] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][5] ) );
  DFCNQD1 \psums_reg[3][2][6]  ( .D(\next_psums[3][2][6] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][6] ) );
  DFCNQD1 \psums_reg[3][2][7]  ( .D(\next_psums[3][2][7] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][7] ) );
  DFCNQD1 \psums_reg[3][2][8]  ( .D(\next_psums[3][2][8] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][8] ) );
  DFCNQD1 \psums_reg[3][2][9]  ( .D(\next_psums[3][2][9] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][9] ) );
  DFCNQD1 \psums_reg[3][2][10]  ( .D(\next_psums[3][2][10] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][10] ) );
  DFCNQD1 \psums_reg[3][2][11]  ( .D(\next_psums[3][2][11] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][11] ) );
  DFCNQD1 \psums_reg[3][2][12]  ( .D(\next_psums[3][2][12] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][12] ) );
  DFCNQD1 \psums_reg[3][2][13]  ( .D(\next_psums[3][2][13] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][13] ) );
  DFCNQD1 \psums_reg[3][2][14]  ( .D(\next_psums[3][2][14] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][14] ) );
  DFCNQD1 \psums_reg[3][2][15]  ( .D(\next_psums[3][2][15] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][15] ) );
  DFCNQD1 \psums_reg[3][2][16]  ( .D(\next_psums[3][2][16] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][16] ) );
  DFCNQD1 \psums_reg[3][2][17]  ( .D(\next_psums[3][2][17] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][17] ) );
  DFCNQD1 \psums_reg[3][2][18]  ( .D(\next_psums[3][2][18] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][18] ) );
  DFCNQD1 \psums_reg[3][2][19]  ( .D(\next_psums[3][2][19] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][19] ) );
  DFCNQD1 \psums_reg[3][2][20]  ( .D(\next_psums[3][2][20] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][20] ) );
  DFCNQD1 \psums_reg[3][2][21]  ( .D(\next_psums[3][2][21] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][21] ) );
  DFCNQD1 \psums_reg[3][2][22]  ( .D(\next_psums[3][2][22] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][22] ) );
  DFCNQD1 \psums_reg[3][2][23]  ( .D(\next_psums[3][2][23] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][23] ) );
  DFCNQD1 \psums_reg[3][2][24]  ( .D(\next_psums[3][2][24] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][24] ) );
  DFCNQD1 \psums_reg[3][2][25]  ( .D(\next_psums[3][2][25] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][25] ) );
  DFCNQD1 \psums_reg[3][2][26]  ( .D(\next_psums[3][2][26] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][26] ) );
  DFCNQD1 \psums_reg[3][2][27]  ( .D(\next_psums[3][2][27] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][27] ) );
  DFCNQD1 \psums_reg[3][2][28]  ( .D(\next_psums[3][2][28] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][28] ) );
  DFCNQD1 \psums_reg[3][2][29]  ( .D(\next_psums[3][2][29] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][29] ) );
  DFCNQD1 \psums_reg[3][2][30]  ( .D(\next_psums[3][2][30] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][30] ) );
  DFCNQD1 \psums_reg[3][2][31]  ( .D(\next_psums[3][2][31] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][2][31] ) );
  DFCNQD1 \psums_reg[3][1][0]  ( .D(\next_psums[3][1][0] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][0] ) );
  DFCNQD1 \psums_reg[3][1][1]  ( .D(\next_psums[3][1][1] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][1] ) );
  DFCNQD1 \psums_reg[3][1][2]  ( .D(\next_psums[3][1][2] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][2] ) );
  DFCNQD1 \psums_reg[3][1][3]  ( .D(\next_psums[3][1][3] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][3] ) );
  DFCNQD1 \psums_reg[3][1][4]  ( .D(\next_psums[3][1][4] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][4] ) );
  DFCNQD1 \psums_reg[3][1][5]  ( .D(\next_psums[3][1][5] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][5] ) );
  DFCNQD1 \psums_reg[3][1][6]  ( .D(\next_psums[3][1][6] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][6] ) );
  DFCNQD1 \psums_reg[3][1][7]  ( .D(\next_psums[3][1][7] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][7] ) );
  DFCNQD1 \psums_reg[3][1][8]  ( .D(\next_psums[3][1][8] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][8] ) );
  DFCNQD1 \psums_reg[3][1][9]  ( .D(\next_psums[3][1][9] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][9] ) );
  DFCNQD1 \psums_reg[3][1][10]  ( .D(\next_psums[3][1][10] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][10] ) );
  DFCNQD1 \psums_reg[3][1][11]  ( .D(\next_psums[3][1][11] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][11] ) );
  DFCNQD1 \psums_reg[3][1][12]  ( .D(\next_psums[3][1][12] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][12] ) );
  DFCNQD1 \psums_reg[3][1][13]  ( .D(\next_psums[3][1][13] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][13] ) );
  DFCNQD1 \psums_reg[3][1][14]  ( .D(\next_psums[3][1][14] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][14] ) );
  DFCNQD1 \psums_reg[3][1][15]  ( .D(\next_psums[3][1][15] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][15] ) );
  DFCNQD1 \psums_reg[3][1][16]  ( .D(\next_psums[3][1][16] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][16] ) );
  DFCNQD1 \psums_reg[3][1][17]  ( .D(\next_psums[3][1][17] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][17] ) );
  DFCNQD1 \psums_reg[3][1][18]  ( .D(\next_psums[3][1][18] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][18] ) );
  DFCNQD1 \psums_reg[3][1][19]  ( .D(\next_psums[3][1][19] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][19] ) );
  DFCNQD1 \psums_reg[3][1][20]  ( .D(\next_psums[3][1][20] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][20] ) );
  DFCNQD1 \psums_reg[3][1][21]  ( .D(\next_psums[3][1][21] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][21] ) );
  DFCNQD1 \psums_reg[3][1][22]  ( .D(\next_psums[3][1][22] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][22] ) );
  DFCNQD1 \psums_reg[3][1][23]  ( .D(\next_psums[3][1][23] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][23] ) );
  DFCNQD1 \psums_reg[3][1][24]  ( .D(\next_psums[3][1][24] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][24] ) );
  DFCNQD1 \psums_reg[3][1][25]  ( .D(\next_psums[3][1][25] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][25] ) );
  DFCNQD1 \psums_reg[3][1][26]  ( .D(\next_psums[3][1][26] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][26] ) );
  DFCNQD1 \psums_reg[3][1][27]  ( .D(\next_psums[3][1][27] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][27] ) );
  DFCNQD1 \psums_reg[3][1][28]  ( .D(\next_psums[3][1][28] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][28] ) );
  DFCNQD1 \psums_reg[3][1][29]  ( .D(\next_psums[3][1][29] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][29] ) );
  DFCNQD1 \psums_reg[3][1][30]  ( .D(\next_psums[3][1][30] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][30] ) );
  DFCNQD1 \psums_reg[3][1][31]  ( .D(\next_psums[3][1][31] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][1][31] ) );
  DFCNQD1 \psums_reg[3][0][0]  ( .D(\next_psums[3][0][0] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][0] ) );
  DFCNQD1 \psums_reg[3][0][1]  ( .D(\next_psums[3][0][1] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][1] ) );
  DFCNQD1 \psums_reg[3][0][2]  ( .D(\next_psums[3][0][2] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][2] ) );
  DFCNQD1 \psums_reg[3][0][3]  ( .D(\next_psums[3][0][3] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][3] ) );
  DFCNQD1 \psums_reg[3][0][4]  ( .D(\next_psums[3][0][4] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][4] ) );
  DFCNQD1 \psums_reg[3][0][5]  ( .D(\next_psums[3][0][5] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][5] ) );
  DFCNQD1 \psums_reg[3][0][6]  ( .D(\next_psums[3][0][6] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][6] ) );
  DFCNQD1 \psums_reg[3][0][7]  ( .D(\next_psums[3][0][7] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][7] ) );
  DFCNQD1 \psums_reg[3][0][8]  ( .D(\next_psums[3][0][8] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][8] ) );
  DFCNQD1 \psums_reg[3][0][9]  ( .D(\next_psums[3][0][9] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][9] ) );
  DFCNQD1 \psums_reg[3][0][10]  ( .D(\next_psums[3][0][10] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][10] ) );
  DFCNQD1 \psums_reg[3][0][11]  ( .D(\next_psums[3][0][11] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][11] ) );
  DFCNQD1 \psums_reg[3][0][12]  ( .D(\next_psums[3][0][12] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][12] ) );
  DFCNQD1 \psums_reg[3][0][13]  ( .D(\next_psums[3][0][13] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][13] ) );
  DFCNQD1 \psums_reg[3][0][14]  ( .D(\next_psums[3][0][14] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][14] ) );
  DFCNQD1 \psums_reg[3][0][15]  ( .D(\next_psums[3][0][15] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][15] ) );
  DFCNQD1 \psums_reg[3][0][16]  ( .D(\next_psums[3][0][16] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][16] ) );
  DFCNQD1 \psums_reg[3][0][17]  ( .D(\next_psums[3][0][17] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][17] ) );
  DFCNQD1 \psums_reg[3][0][18]  ( .D(\next_psums[3][0][18] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][18] ) );
  DFCNQD1 \psums_reg[3][0][19]  ( .D(\next_psums[3][0][19] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][19] ) );
  DFCNQD1 \psums_reg[3][0][20]  ( .D(\next_psums[3][0][20] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][20] ) );
  DFCNQD1 \psums_reg[3][0][21]  ( .D(\next_psums[3][0][21] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][21] ) );
  DFCNQD1 \psums_reg[3][0][22]  ( .D(\next_psums[3][0][22] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][22] ) );
  DFCNQD1 \psums_reg[3][0][23]  ( .D(\next_psums[3][0][23] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][23] ) );
  DFCNQD1 \psums_reg[3][0][24]  ( .D(\next_psums[3][0][24] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][24] ) );
  DFCNQD1 \psums_reg[3][0][25]  ( .D(\next_psums[3][0][25] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][25] ) );
  DFCNQD1 \psums_reg[3][0][26]  ( .D(\next_psums[3][0][26] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][26] ) );
  DFCNQD1 \psums_reg[3][0][27]  ( .D(\next_psums[3][0][27] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][27] ) );
  DFCNQD1 \psums_reg[3][0][28]  ( .D(\next_psums[3][0][28] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][28] ) );
  DFCNQD1 \psums_reg[3][0][29]  ( .D(\next_psums[3][0][29] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][29] ) );
  DFCNQD1 \psums_reg[3][0][30]  ( .D(\next_psums[3][0][30] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][30] ) );
  DFCNQD1 \psums_reg[3][0][31]  ( .D(\next_psums[3][0][31] ), .CP(clk), .CDN(
        nRST), .Q(\psums[3][0][31] ) );
  WBUF_ARRAY_SIZE4_DATA_W32_15 \genblk1[0].genblk1[0].WBUFs  ( .clk(clk), 
        .nRST(nRST), .WBUF_wr_en(\WBUF_wr_en[0][0] ), .WBUF_data_in(data_in), 
        .WBUF_data_out({\WBUF_data_out[0][0][31] , \WBUF_data_out[0][0][30] , 
        \WBUF_data_out[0][0][29] , \WBUF_data_out[0][0][28] , 
        \WBUF_data_out[0][0][27] , \WBUF_data_out[0][0][26] , 
        \WBUF_data_out[0][0][25] , \WBUF_data_out[0][0][24] , 
        \WBUF_data_out[0][0][23] , \WBUF_data_out[0][0][22] , 
        \WBUF_data_out[0][0][21] , \WBUF_data_out[0][0][20] , 
        \WBUF_data_out[0][0][19] , \WBUF_data_out[0][0][18] , 
        \WBUF_data_out[0][0][17] , \WBUF_data_out[0][0][16] , 
        \WBUF_data_out[0][0][15] , \WBUF_data_out[0][0][14] , 
        \WBUF_data_out[0][0][13] , \WBUF_data_out[0][0][12] , 
        \WBUF_data_out[0][0][11] , \WBUF_data_out[0][0][10] , 
        \WBUF_data_out[0][0][9] , \WBUF_data_out[0][0][8] , 
        \WBUF_data_out[0][0][7] , \WBUF_data_out[0][0][6] , 
        \WBUF_data_out[0][0][5] , \WBUF_data_out[0][0][4] , 
        \WBUF_data_out[0][0][3] , \WBUF_data_out[0][0][2] , 
        \WBUF_data_out[0][0][1] , \WBUF_data_out[0][0][0] }) );
  w_mux_15 \genblk1[0].genblk1[0].wmux  ( .clk(clk), .nRST(nRST), 
        .input_bitwidth(input_bitwidth), .rd_en(\weight_rd_en[0][0] ), 
        .data_in({\WBUF_data_out[0][0][31] , \WBUF_data_out[0][0][30] , 
        \WBUF_data_out[0][0][29] , \WBUF_data_out[0][0][28] , 
        \WBUF_data_out[0][0][27] , \WBUF_data_out[0][0][26] , 
        \WBUF_data_out[0][0][25] , \WBUF_data_out[0][0][24] , 
        \WBUF_data_out[0][0][23] , \WBUF_data_out[0][0][22] , 
        \WBUF_data_out[0][0][21] , \WBUF_data_out[0][0][20] , 
        \WBUF_data_out[0][0][19] , \WBUF_data_out[0][0][18] , 
        \WBUF_data_out[0][0][17] , \WBUF_data_out[0][0][16] , 
        \WBUF_data_out[0][0][15] , \WBUF_data_out[0][0][14] , 
        \WBUF_data_out[0][0][13] , \WBUF_data_out[0][0][12] , 
        \WBUF_data_out[0][0][11] , \WBUF_data_out[0][0][10] , 
        \WBUF_data_out[0][0][9] , \WBUF_data_out[0][0][8] , 
        \WBUF_data_out[0][0][7] , \WBUF_data_out[0][0][6] , 
        \WBUF_data_out[0][0][5] , \WBUF_data_out[0][0][4] , 
        \WBUF_data_out[0][0][3] , \WBUF_data_out[0][0][2] , 
        \WBUF_data_out[0][0][1] , \WBUF_data_out[0][0][0] }), .data_out({
        \weight_mux_outs[0][0][31] , \weight_mux_outs[0][0][30] , 
        \weight_mux_outs[0][0][29] , \weight_mux_outs[0][0][28] , 
        \weight_mux_outs[0][0][27] , \weight_mux_outs[0][0][26] , 
        \weight_mux_outs[0][0][25] , \weight_mux_outs[0][0][24] , 
        \weight_mux_outs[0][0][23] , \weight_mux_outs[0][0][22] , 
        \weight_mux_outs[0][0][21] , \weight_mux_outs[0][0][20] , 
        \weight_mux_outs[0][0][19] , \weight_mux_outs[0][0][18] , 
        \weight_mux_outs[0][0][17] , \weight_mux_outs[0][0][16] , 
        \weight_mux_outs[0][0][15] , \weight_mux_outs[0][0][14] , 
        \weight_mux_outs[0][0][13] , \weight_mux_outs[0][0][12] , 
        \weight_mux_outs[0][0][11] , \weight_mux_outs[0][0][10] , 
        \weight_mux_outs[0][0][9] , \weight_mux_outs[0][0][8] , 
        \weight_mux_outs[0][0][7] , \weight_mux_outs[0][0][6] , 
        \weight_mux_outs[0][0][5] , \weight_mux_outs[0][0][4] , 
        \weight_mux_outs[0][0][3] , \weight_mux_outs[0][0][2] , 
        \weight_mux_outs[0][0][1] , \weight_mux_outs[0][0][0] }) );
  IBUF_ARRAY_SIZE4_DATA_W32_3 \genblk1[0].genblk1[0].genblk1.IBUFs  ( .clk(clk), .nRST(nRST), .IBUF_wr_en(IBUF_wr_en[0]), .IBUF_data_in(data_in), 
        .IBUF_data_out({\IBUF_data_out[0][31] , \IBUF_data_out[0][30] , 
        \IBUF_data_out[0][29] , \IBUF_data_out[0][28] , \IBUF_data_out[0][27] , 
        \IBUF_data_out[0][26] , \IBUF_data_out[0][25] , \IBUF_data_out[0][24] , 
        \IBUF_data_out[0][23] , \IBUF_data_out[0][22] , \IBUF_data_out[0][21] , 
        \IBUF_data_out[0][20] , \IBUF_data_out[0][19] , \IBUF_data_out[0][18] , 
        \IBUF_data_out[0][17] , \IBUF_data_out[0][16] , \IBUF_data_out[0][15] , 
        \IBUF_data_out[0][14] , \IBUF_data_out[0][13] , \IBUF_data_out[0][12] , 
        \IBUF_data_out[0][11] , \IBUF_data_out[0][10] , \IBUF_data_out[0][9] , 
        \IBUF_data_out[0][8] , \IBUF_data_out[0][7] , \IBUF_data_out[0][6] , 
        \IBUF_data_out[0][5] , \IBUF_data_out[0][4] , \IBUF_data_out[0][3] , 
        \IBUF_data_out[0][2] , \IBUF_data_out[0][1] , \IBUF_data_out[0][0] })
         );
  in_mux_3 \genblk1[0].genblk1[0].genblk1.imux  ( .clk(clk), .nRST(nRST), 
        .weight_bitwidth(weight_bitwidth), .rd_en(input_rd_en[0]), .data_in({
        \IBUF_data_out[0][31] , \IBUF_data_out[0][30] , \IBUF_data_out[0][29] , 
        \IBUF_data_out[0][28] , \IBUF_data_out[0][27] , \IBUF_data_out[0][26] , 
        \IBUF_data_out[0][25] , \IBUF_data_out[0][24] , \IBUF_data_out[0][23] , 
        \IBUF_data_out[0][22] , \IBUF_data_out[0][21] , \IBUF_data_out[0][20] , 
        \IBUF_data_out[0][19] , \IBUF_data_out[0][18] , \IBUF_data_out[0][17] , 
        \IBUF_data_out[0][16] , \IBUF_data_out[0][15] , \IBUF_data_out[0][14] , 
        \IBUF_data_out[0][13] , \IBUF_data_out[0][12] , \IBUF_data_out[0][11] , 
        \IBUF_data_out[0][10] , \IBUF_data_out[0][9] , \IBUF_data_out[0][8] , 
        \IBUF_data_out[0][7] , \IBUF_data_out[0][6] , \IBUF_data_out[0][5] , 
        \IBUF_data_out[0][4] , \IBUF_data_out[0][3] , \IBUF_data_out[0][2] , 
        \IBUF_data_out[0][1] , \IBUF_data_out[0][0] }), .data_out({
        \input_mux_outs[0][31] , \input_mux_outs[0][30] , 
        \input_mux_outs[0][29] , \input_mux_outs[0][28] , 
        \input_mux_outs[0][27] , \input_mux_outs[0][26] , 
        \input_mux_outs[0][25] , \input_mux_outs[0][24] , 
        \input_mux_outs[0][23] , \input_mux_outs[0][22] , 
        \input_mux_outs[0][21] , \input_mux_outs[0][20] , 
        \input_mux_outs[0][19] , \input_mux_outs[0][18] , 
        \input_mux_outs[0][17] , \input_mux_outs[0][16] , 
        \input_mux_outs[0][15] , \input_mux_outs[0][14] , 
        \input_mux_outs[0][13] , \input_mux_outs[0][12] , 
        \input_mux_outs[0][11] , \input_mux_outs[0][10] , 
        \input_mux_outs[0][9] , \input_mux_outs[0][8] , \input_mux_outs[0][7] , 
        \input_mux_outs[0][6] , \input_mux_outs[0][5] , \input_mux_outs[0][4] , 
        \input_mux_outs[0][3] , \input_mux_outs[0][2] , \input_mux_outs[0][1] , 
        \input_mux_outs[0][0] }) );
  fusion_unit_15 \genblk1[0].genblk1[0].genblk1.genblk1.fu  ( .clk(clk), 
        .nRST(nRST), .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .input_sign({\input_sign[0][0][3] , 
        \input_sign[0][0][2] , \input_sign[0][0][1] , \input_sign[0][0][0] }), 
        .weight_sign({\weight_sign[0][0][3] , \weight_sign[0][0][2] , 
        \weight_sign[0][0][1] , \weight_sign[0][0][0] }), .input_forward({
        \input_mux_outs[0][31] , \input_mux_outs[0][30] , 
        \input_mux_outs[0][29] , \input_mux_outs[0][28] , 
        \input_mux_outs[0][27] , \input_mux_outs[0][26] , 
        \input_mux_outs[0][25] , \input_mux_outs[0][24] , 
        \input_mux_outs[0][23] , \input_mux_outs[0][22] , 
        \input_mux_outs[0][21] , \input_mux_outs[0][20] , 
        \input_mux_outs[0][19] , \input_mux_outs[0][18] , 
        \input_mux_outs[0][17] , \input_mux_outs[0][16] , 
        \input_mux_outs[0][15] , \input_mux_outs[0][14] , 
        \input_mux_outs[0][13] , \input_mux_outs[0][12] , 
        \input_mux_outs[0][11] , \input_mux_outs[0][10] , 
        \input_mux_outs[0][9] , \input_mux_outs[0][8] , \input_mux_outs[0][7] , 
        \input_mux_outs[0][6] , \input_mux_outs[0][5] , \input_mux_outs[0][4] , 
        \input_mux_outs[0][3] , \input_mux_outs[0][2] , \input_mux_outs[0][1] , 
        \input_mux_outs[0][0] }), .weight({\weight_mux_outs[0][0][31] , 
        \weight_mux_outs[0][0][30] , \weight_mux_outs[0][0][29] , 
        \weight_mux_outs[0][0][28] , \weight_mux_outs[0][0][27] , 
        \weight_mux_outs[0][0][26] , \weight_mux_outs[0][0][25] , 
        \weight_mux_outs[0][0][24] , \weight_mux_outs[0][0][23] , 
        \weight_mux_outs[0][0][22] , \weight_mux_outs[0][0][21] , 
        \weight_mux_outs[0][0][20] , \weight_mux_outs[0][0][19] , 
        \weight_mux_outs[0][0][18] , \weight_mux_outs[0][0][17] , 
        \weight_mux_outs[0][0][16] , \weight_mux_outs[0][0][15] , 
        \weight_mux_outs[0][0][14] , \weight_mux_outs[0][0][13] , 
        \weight_mux_outs[0][0][12] , \weight_mux_outs[0][0][11] , 
        \weight_mux_outs[0][0][10] , \weight_mux_outs[0][0][9] , 
        \weight_mux_outs[0][0][8] , \weight_mux_outs[0][0][7] , 
        \weight_mux_outs[0][0][6] , \weight_mux_outs[0][0][5] , 
        \weight_mux_outs[0][0][4] , \weight_mux_outs[0][0][3] , 
        \weight_mux_outs[0][0][2] , \weight_mux_outs[0][0][1] , 
        \weight_mux_outs[0][0][0] }), .psum_in({\*Logic0* , \*Logic0* , 
        \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , 
        \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , 
        \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , 
        \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , 
        \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* }), .psum({\next_psums[0][0][31] , \next_psums[0][0][30] , 
        \next_psums[0][0][29] , \next_psums[0][0][28] , \next_psums[0][0][27] , 
        \next_psums[0][0][26] , \next_psums[0][0][25] , \next_psums[0][0][24] , 
        \next_psums[0][0][23] , \next_psums[0][0][22] , \next_psums[0][0][21] , 
        \next_psums[0][0][20] , \next_psums[0][0][19] , \next_psums[0][0][18] , 
        \next_psums[0][0][17] , \next_psums[0][0][16] , \next_psums[0][0][15] , 
        \next_psums[0][0][14] , \next_psums[0][0][13] , \next_psums[0][0][12] , 
        \next_psums[0][0][11] , \next_psums[0][0][10] , \next_psums[0][0][9] , 
        \next_psums[0][0][8] , \next_psums[0][0][7] , \next_psums[0][0][6] , 
        \next_psums[0][0][5] , \next_psums[0][0][4] , \next_psums[0][0][3] , 
        \next_psums[0][0][2] , \next_psums[0][0][1] , \next_psums[0][0][0] }), 
        .input_to_right({\next_input_forward_reg[0][0][31] , 
        \next_input_forward_reg[0][0][30] , \next_input_forward_reg[0][0][29] , 
        \next_input_forward_reg[0][0][28] , \next_input_forward_reg[0][0][27] , 
        \next_input_forward_reg[0][0][26] , \next_input_forward_reg[0][0][25] , 
        \next_input_forward_reg[0][0][24] , \next_input_forward_reg[0][0][23] , 
        \next_input_forward_reg[0][0][22] , \next_input_forward_reg[0][0][21] , 
        \next_input_forward_reg[0][0][20] , \next_input_forward_reg[0][0][19] , 
        \next_input_forward_reg[0][0][18] , \next_input_forward_reg[0][0][17] , 
        \next_input_forward_reg[0][0][16] , \next_input_forward_reg[0][0][15] , 
        \next_input_forward_reg[0][0][14] , \next_input_forward_reg[0][0][13] , 
        \next_input_forward_reg[0][0][12] , \next_input_forward_reg[0][0][11] , 
        \next_input_forward_reg[0][0][10] , \next_input_forward_reg[0][0][9] , 
        \next_input_forward_reg[0][0][8] , \next_input_forward_reg[0][0][7] , 
        \next_input_forward_reg[0][0][6] , \next_input_forward_reg[0][0][5] , 
        \next_input_forward_reg[0][0][4] , \next_input_forward_reg[0][0][3] , 
        \next_input_forward_reg[0][0][2] , \next_input_forward_reg[0][0][1] , 
        \next_input_forward_reg[0][0][0] }) );
  WBUF_ARRAY_SIZE4_DATA_W32_14 \genblk1[0].genblk1[1].WBUFs  ( .clk(clk), 
        .nRST(nRST), .WBUF_wr_en(\WBUF_wr_en[0][1] ), .WBUF_data_in(data_in), 
        .WBUF_data_out({\WBUF_data_out[0][1][31] , \WBUF_data_out[0][1][30] , 
        \WBUF_data_out[0][1][29] , \WBUF_data_out[0][1][28] , 
        \WBUF_data_out[0][1][27] , \WBUF_data_out[0][1][26] , 
        \WBUF_data_out[0][1][25] , \WBUF_data_out[0][1][24] , 
        \WBUF_data_out[0][1][23] , \WBUF_data_out[0][1][22] , 
        \WBUF_data_out[0][1][21] , \WBUF_data_out[0][1][20] , 
        \WBUF_data_out[0][1][19] , \WBUF_data_out[0][1][18] , 
        \WBUF_data_out[0][1][17] , \WBUF_data_out[0][1][16] , 
        \WBUF_data_out[0][1][15] , \WBUF_data_out[0][1][14] , 
        \WBUF_data_out[0][1][13] , \WBUF_data_out[0][1][12] , 
        \WBUF_data_out[0][1][11] , \WBUF_data_out[0][1][10] , 
        \WBUF_data_out[0][1][9] , \WBUF_data_out[0][1][8] , 
        \WBUF_data_out[0][1][7] , \WBUF_data_out[0][1][6] , 
        \WBUF_data_out[0][1][5] , \WBUF_data_out[0][1][4] , 
        \WBUF_data_out[0][1][3] , \WBUF_data_out[0][1][2] , 
        \WBUF_data_out[0][1][1] , \WBUF_data_out[0][1][0] }) );
  w_mux_14 \genblk1[0].genblk1[1].wmux  ( .clk(clk), .nRST(nRST), 
        .input_bitwidth(input_bitwidth), .rd_en(\weight_rd_en[0][1] ), 
        .data_in({\WBUF_data_out[0][1][31] , \WBUF_data_out[0][1][30] , 
        \WBUF_data_out[0][1][29] , \WBUF_data_out[0][1][28] , 
        \WBUF_data_out[0][1][27] , \WBUF_data_out[0][1][26] , 
        \WBUF_data_out[0][1][25] , \WBUF_data_out[0][1][24] , 
        \WBUF_data_out[0][1][23] , \WBUF_data_out[0][1][22] , 
        \WBUF_data_out[0][1][21] , \WBUF_data_out[0][1][20] , 
        \WBUF_data_out[0][1][19] , \WBUF_data_out[0][1][18] , 
        \WBUF_data_out[0][1][17] , \WBUF_data_out[0][1][16] , 
        \WBUF_data_out[0][1][15] , \WBUF_data_out[0][1][14] , 
        \WBUF_data_out[0][1][13] , \WBUF_data_out[0][1][12] , 
        \WBUF_data_out[0][1][11] , \WBUF_data_out[0][1][10] , 
        \WBUF_data_out[0][1][9] , \WBUF_data_out[0][1][8] , 
        \WBUF_data_out[0][1][7] , \WBUF_data_out[0][1][6] , 
        \WBUF_data_out[0][1][5] , \WBUF_data_out[0][1][4] , 
        \WBUF_data_out[0][1][3] , \WBUF_data_out[0][1][2] , 
        \WBUF_data_out[0][1][1] , \WBUF_data_out[0][1][0] }), .data_out({
        \weight_mux_outs[0][1][31] , \weight_mux_outs[0][1][30] , 
        \weight_mux_outs[0][1][29] , \weight_mux_outs[0][1][28] , 
        \weight_mux_outs[0][1][27] , \weight_mux_outs[0][1][26] , 
        \weight_mux_outs[0][1][25] , \weight_mux_outs[0][1][24] , 
        \weight_mux_outs[0][1][23] , \weight_mux_outs[0][1][22] , 
        \weight_mux_outs[0][1][21] , \weight_mux_outs[0][1][20] , 
        \weight_mux_outs[0][1][19] , \weight_mux_outs[0][1][18] , 
        \weight_mux_outs[0][1][17] , \weight_mux_outs[0][1][16] , 
        \weight_mux_outs[0][1][15] , \weight_mux_outs[0][1][14] , 
        \weight_mux_outs[0][1][13] , \weight_mux_outs[0][1][12] , 
        \weight_mux_outs[0][1][11] , \weight_mux_outs[0][1][10] , 
        \weight_mux_outs[0][1][9] , \weight_mux_outs[0][1][8] , 
        \weight_mux_outs[0][1][7] , \weight_mux_outs[0][1][6] , 
        \weight_mux_outs[0][1][5] , \weight_mux_outs[0][1][4] , 
        \weight_mux_outs[0][1][3] , \weight_mux_outs[0][1][2] , 
        \weight_mux_outs[0][1][1] , \weight_mux_outs[0][1][0] }) );
  fusion_unit_14 \genblk1[0].genblk1[1].genblk1.genblk1.fu  ( .clk(clk), 
        .nRST(nRST), .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .input_sign({\input_sign[0][1][3] , 
        \input_sign[0][1][2] , \input_sign[0][1][1] , \input_sign[0][1][0] }), 
        .weight_sign({\weight_sign[0][1][3] , \weight_sign[0][1][2] , 
        \weight_sign[0][1][1] , \weight_sign[0][1][0] }), .input_forward({
        \input_forward_reg[0][0][31] , \input_forward_reg[0][0][30] , 
        \input_forward_reg[0][0][29] , \input_forward_reg[0][0][28] , 
        \input_forward_reg[0][0][27] , \input_forward_reg[0][0][26] , 
        \input_forward_reg[0][0][25] , \input_forward_reg[0][0][24] , 
        \input_forward_reg[0][0][23] , \input_forward_reg[0][0][22] , 
        \input_forward_reg[0][0][21] , \input_forward_reg[0][0][20] , 
        \input_forward_reg[0][0][19] , \input_forward_reg[0][0][18] , 
        \input_forward_reg[0][0][17] , \input_forward_reg[0][0][16] , 
        \input_forward_reg[0][0][15] , \input_forward_reg[0][0][14] , 
        \input_forward_reg[0][0][13] , \input_forward_reg[0][0][12] , 
        \input_forward_reg[0][0][11] , \input_forward_reg[0][0][10] , 
        \input_forward_reg[0][0][9] , \input_forward_reg[0][0][8] , 
        \input_forward_reg[0][0][7] , \input_forward_reg[0][0][6] , 
        \input_forward_reg[0][0][5] , \input_forward_reg[0][0][4] , 
        \input_forward_reg[0][0][3] , \input_forward_reg[0][0][2] , 
        \input_forward_reg[0][0][1] , \input_forward_reg[0][0][0] }), .weight(
        {\weight_mux_outs[0][1][31] , \weight_mux_outs[0][1][30] , 
        \weight_mux_outs[0][1][29] , \weight_mux_outs[0][1][28] , 
        \weight_mux_outs[0][1][27] , \weight_mux_outs[0][1][26] , 
        \weight_mux_outs[0][1][25] , \weight_mux_outs[0][1][24] , 
        \weight_mux_outs[0][1][23] , \weight_mux_outs[0][1][22] , 
        \weight_mux_outs[0][1][21] , \weight_mux_outs[0][1][20] , 
        \weight_mux_outs[0][1][19] , \weight_mux_outs[0][1][18] , 
        \weight_mux_outs[0][1][17] , \weight_mux_outs[0][1][16] , 
        \weight_mux_outs[0][1][15] , \weight_mux_outs[0][1][14] , 
        \weight_mux_outs[0][1][13] , \weight_mux_outs[0][1][12] , 
        \weight_mux_outs[0][1][11] , \weight_mux_outs[0][1][10] , 
        \weight_mux_outs[0][1][9] , \weight_mux_outs[0][1][8] , 
        \weight_mux_outs[0][1][7] , \weight_mux_outs[0][1][6] , 
        \weight_mux_outs[0][1][5] , \weight_mux_outs[0][1][4] , 
        \weight_mux_outs[0][1][3] , \weight_mux_outs[0][1][2] , 
        \weight_mux_outs[0][1][1] , \weight_mux_outs[0][1][0] }), .psum_in({
        \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , 
        \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , 
        \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , 
        \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , 
        \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , 
        \*Logic0* , \*Logic0* }), .psum({\next_psums[0][1][31] , 
        \next_psums[0][1][30] , \next_psums[0][1][29] , \next_psums[0][1][28] , 
        \next_psums[0][1][27] , \next_psums[0][1][26] , \next_psums[0][1][25] , 
        \next_psums[0][1][24] , \next_psums[0][1][23] , \next_psums[0][1][22] , 
        \next_psums[0][1][21] , \next_psums[0][1][20] , \next_psums[0][1][19] , 
        \next_psums[0][1][18] , \next_psums[0][1][17] , \next_psums[0][1][16] , 
        \next_psums[0][1][15] , \next_psums[0][1][14] , \next_psums[0][1][13] , 
        \next_psums[0][1][12] , \next_psums[0][1][11] , \next_psums[0][1][10] , 
        \next_psums[0][1][9] , \next_psums[0][1][8] , \next_psums[0][1][7] , 
        \next_psums[0][1][6] , \next_psums[0][1][5] , \next_psums[0][1][4] , 
        \next_psums[0][1][3] , \next_psums[0][1][2] , \next_psums[0][1][1] , 
        \next_psums[0][1][0] }), .input_to_right({
        \next_input_forward_reg[0][1][31] , \next_input_forward_reg[0][1][30] , 
        \next_input_forward_reg[0][1][29] , \next_input_forward_reg[0][1][28] , 
        \next_input_forward_reg[0][1][27] , \next_input_forward_reg[0][1][26] , 
        \next_input_forward_reg[0][1][25] , \next_input_forward_reg[0][1][24] , 
        \next_input_forward_reg[0][1][23] , \next_input_forward_reg[0][1][22] , 
        \next_input_forward_reg[0][1][21] , \next_input_forward_reg[0][1][20] , 
        \next_input_forward_reg[0][1][19] , \next_input_forward_reg[0][1][18] , 
        \next_input_forward_reg[0][1][17] , \next_input_forward_reg[0][1][16] , 
        \next_input_forward_reg[0][1][15] , \next_input_forward_reg[0][1][14] , 
        \next_input_forward_reg[0][1][13] , \next_input_forward_reg[0][1][12] , 
        \next_input_forward_reg[0][1][11] , \next_input_forward_reg[0][1][10] , 
        \next_input_forward_reg[0][1][9] , \next_input_forward_reg[0][1][8] , 
        \next_input_forward_reg[0][1][7] , \next_input_forward_reg[0][1][6] , 
        \next_input_forward_reg[0][1][5] , \next_input_forward_reg[0][1][4] , 
        \next_input_forward_reg[0][1][3] , \next_input_forward_reg[0][1][2] , 
        \next_input_forward_reg[0][1][1] , \next_input_forward_reg[0][1][0] })
         );
  WBUF_ARRAY_SIZE4_DATA_W32_13 \genblk1[0].genblk1[2].WBUFs  ( .clk(clk), 
        .nRST(nRST), .WBUF_wr_en(\WBUF_wr_en[0][2] ), .WBUF_data_in(data_in), 
        .WBUF_data_out({\WBUF_data_out[0][2][31] , \WBUF_data_out[0][2][30] , 
        \WBUF_data_out[0][2][29] , \WBUF_data_out[0][2][28] , 
        \WBUF_data_out[0][2][27] , \WBUF_data_out[0][2][26] , 
        \WBUF_data_out[0][2][25] , \WBUF_data_out[0][2][24] , 
        \WBUF_data_out[0][2][23] , \WBUF_data_out[0][2][22] , 
        \WBUF_data_out[0][2][21] , \WBUF_data_out[0][2][20] , 
        \WBUF_data_out[0][2][19] , \WBUF_data_out[0][2][18] , 
        \WBUF_data_out[0][2][17] , \WBUF_data_out[0][2][16] , 
        \WBUF_data_out[0][2][15] , \WBUF_data_out[0][2][14] , 
        \WBUF_data_out[0][2][13] , \WBUF_data_out[0][2][12] , 
        \WBUF_data_out[0][2][11] , \WBUF_data_out[0][2][10] , 
        \WBUF_data_out[0][2][9] , \WBUF_data_out[0][2][8] , 
        \WBUF_data_out[0][2][7] , \WBUF_data_out[0][2][6] , 
        \WBUF_data_out[0][2][5] , \WBUF_data_out[0][2][4] , 
        \WBUF_data_out[0][2][3] , \WBUF_data_out[0][2][2] , 
        \WBUF_data_out[0][2][1] , \WBUF_data_out[0][2][0] }) );
  w_mux_13 \genblk1[0].genblk1[2].wmux  ( .clk(clk), .nRST(nRST), 
        .input_bitwidth(input_bitwidth), .rd_en(\weight_rd_en[0][2] ), 
        .data_in({\WBUF_data_out[0][2][31] , \WBUF_data_out[0][2][30] , 
        \WBUF_data_out[0][2][29] , \WBUF_data_out[0][2][28] , 
        \WBUF_data_out[0][2][27] , \WBUF_data_out[0][2][26] , 
        \WBUF_data_out[0][2][25] , \WBUF_data_out[0][2][24] , 
        \WBUF_data_out[0][2][23] , \WBUF_data_out[0][2][22] , 
        \WBUF_data_out[0][2][21] , \WBUF_data_out[0][2][20] , 
        \WBUF_data_out[0][2][19] , \WBUF_data_out[0][2][18] , 
        \WBUF_data_out[0][2][17] , \WBUF_data_out[0][2][16] , 
        \WBUF_data_out[0][2][15] , \WBUF_data_out[0][2][14] , 
        \WBUF_data_out[0][2][13] , \WBUF_data_out[0][2][12] , 
        \WBUF_data_out[0][2][11] , \WBUF_data_out[0][2][10] , 
        \WBUF_data_out[0][2][9] , \WBUF_data_out[0][2][8] , 
        \WBUF_data_out[0][2][7] , \WBUF_data_out[0][2][6] , 
        \WBUF_data_out[0][2][5] , \WBUF_data_out[0][2][4] , 
        \WBUF_data_out[0][2][3] , \WBUF_data_out[0][2][2] , 
        \WBUF_data_out[0][2][1] , \WBUF_data_out[0][2][0] }), .data_out({
        \weight_mux_outs[0][2][31] , \weight_mux_outs[0][2][30] , 
        \weight_mux_outs[0][2][29] , \weight_mux_outs[0][2][28] , 
        \weight_mux_outs[0][2][27] , \weight_mux_outs[0][2][26] , 
        \weight_mux_outs[0][2][25] , \weight_mux_outs[0][2][24] , 
        \weight_mux_outs[0][2][23] , \weight_mux_outs[0][2][22] , 
        \weight_mux_outs[0][2][21] , \weight_mux_outs[0][2][20] , 
        \weight_mux_outs[0][2][19] , \weight_mux_outs[0][2][18] , 
        \weight_mux_outs[0][2][17] , \weight_mux_outs[0][2][16] , 
        \weight_mux_outs[0][2][15] , \weight_mux_outs[0][2][14] , 
        \weight_mux_outs[0][2][13] , \weight_mux_outs[0][2][12] , 
        \weight_mux_outs[0][2][11] , \weight_mux_outs[0][2][10] , 
        \weight_mux_outs[0][2][9] , \weight_mux_outs[0][2][8] , 
        \weight_mux_outs[0][2][7] , \weight_mux_outs[0][2][6] , 
        \weight_mux_outs[0][2][5] , \weight_mux_outs[0][2][4] , 
        \weight_mux_outs[0][2][3] , \weight_mux_outs[0][2][2] , 
        \weight_mux_outs[0][2][1] , \weight_mux_outs[0][2][0] }) );
  fusion_unit_13 \genblk1[0].genblk1[2].genblk1.genblk1.fu  ( .clk(clk), 
        .nRST(nRST), .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .input_sign({\input_sign[0][2][3] , 
        \input_sign[0][2][2] , \input_sign[0][2][1] , \input_sign[0][2][0] }), 
        .weight_sign({\weight_sign[0][2][3] , \weight_sign[0][2][2] , 
        \weight_sign[0][2][1] , \weight_sign[0][2][0] }), .input_forward({
        \input_forward_reg[0][1][31] , \input_forward_reg[0][1][30] , 
        \input_forward_reg[0][1][29] , \input_forward_reg[0][1][28] , 
        \input_forward_reg[0][1][27] , \input_forward_reg[0][1][26] , 
        \input_forward_reg[0][1][25] , \input_forward_reg[0][1][24] , 
        \input_forward_reg[0][1][23] , \input_forward_reg[0][1][22] , 
        \input_forward_reg[0][1][21] , \input_forward_reg[0][1][20] , 
        \input_forward_reg[0][1][19] , \input_forward_reg[0][1][18] , 
        \input_forward_reg[0][1][17] , \input_forward_reg[0][1][16] , 
        \input_forward_reg[0][1][15] , \input_forward_reg[0][1][14] , 
        \input_forward_reg[0][1][13] , \input_forward_reg[0][1][12] , 
        \input_forward_reg[0][1][11] , \input_forward_reg[0][1][10] , 
        \input_forward_reg[0][1][9] , \input_forward_reg[0][1][8] , 
        \input_forward_reg[0][1][7] , \input_forward_reg[0][1][6] , 
        \input_forward_reg[0][1][5] , \input_forward_reg[0][1][4] , 
        \input_forward_reg[0][1][3] , \input_forward_reg[0][1][2] , 
        \input_forward_reg[0][1][1] , \input_forward_reg[0][1][0] }), .weight(
        {\weight_mux_outs[0][2][31] , \weight_mux_outs[0][2][30] , 
        \weight_mux_outs[0][2][29] , \weight_mux_outs[0][2][28] , 
        \weight_mux_outs[0][2][27] , \weight_mux_outs[0][2][26] , 
        \weight_mux_outs[0][2][25] , \weight_mux_outs[0][2][24] , 
        \weight_mux_outs[0][2][23] , \weight_mux_outs[0][2][22] , 
        \weight_mux_outs[0][2][21] , \weight_mux_outs[0][2][20] , 
        \weight_mux_outs[0][2][19] , \weight_mux_outs[0][2][18] , 
        \weight_mux_outs[0][2][17] , \weight_mux_outs[0][2][16] , 
        \weight_mux_outs[0][2][15] , \weight_mux_outs[0][2][14] , 
        \weight_mux_outs[0][2][13] , \weight_mux_outs[0][2][12] , 
        \weight_mux_outs[0][2][11] , \weight_mux_outs[0][2][10] , 
        \weight_mux_outs[0][2][9] , \weight_mux_outs[0][2][8] , 
        \weight_mux_outs[0][2][7] , \weight_mux_outs[0][2][6] , 
        \weight_mux_outs[0][2][5] , \weight_mux_outs[0][2][4] , 
        \weight_mux_outs[0][2][3] , \weight_mux_outs[0][2][2] , 
        \weight_mux_outs[0][2][1] , \weight_mux_outs[0][2][0] }), .psum_in({
        \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , 
        \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , 
        \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , 
        \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , 
        \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , 
        \*Logic0* , \*Logic0* }), .psum({\next_psums[0][2][31] , 
        \next_psums[0][2][30] , \next_psums[0][2][29] , \next_psums[0][2][28] , 
        \next_psums[0][2][27] , \next_psums[0][2][26] , \next_psums[0][2][25] , 
        \next_psums[0][2][24] , \next_psums[0][2][23] , \next_psums[0][2][22] , 
        \next_psums[0][2][21] , \next_psums[0][2][20] , \next_psums[0][2][19] , 
        \next_psums[0][2][18] , \next_psums[0][2][17] , \next_psums[0][2][16] , 
        \next_psums[0][2][15] , \next_psums[0][2][14] , \next_psums[0][2][13] , 
        \next_psums[0][2][12] , \next_psums[0][2][11] , \next_psums[0][2][10] , 
        \next_psums[0][2][9] , \next_psums[0][2][8] , \next_psums[0][2][7] , 
        \next_psums[0][2][6] , \next_psums[0][2][5] , \next_psums[0][2][4] , 
        \next_psums[0][2][3] , \next_psums[0][2][2] , \next_psums[0][2][1] , 
        \next_psums[0][2][0] }), .input_to_right({
        \next_input_forward_reg[0][2][31] , \next_input_forward_reg[0][2][30] , 
        \next_input_forward_reg[0][2][29] , \next_input_forward_reg[0][2][28] , 
        \next_input_forward_reg[0][2][27] , \next_input_forward_reg[0][2][26] , 
        \next_input_forward_reg[0][2][25] , \next_input_forward_reg[0][2][24] , 
        \next_input_forward_reg[0][2][23] , \next_input_forward_reg[0][2][22] , 
        \next_input_forward_reg[0][2][21] , \next_input_forward_reg[0][2][20] , 
        \next_input_forward_reg[0][2][19] , \next_input_forward_reg[0][2][18] , 
        \next_input_forward_reg[0][2][17] , \next_input_forward_reg[0][2][16] , 
        \next_input_forward_reg[0][2][15] , \next_input_forward_reg[0][2][14] , 
        \next_input_forward_reg[0][2][13] , \next_input_forward_reg[0][2][12] , 
        \next_input_forward_reg[0][2][11] , \next_input_forward_reg[0][2][10] , 
        \next_input_forward_reg[0][2][9] , \next_input_forward_reg[0][2][8] , 
        \next_input_forward_reg[0][2][7] , \next_input_forward_reg[0][2][6] , 
        \next_input_forward_reg[0][2][5] , \next_input_forward_reg[0][2][4] , 
        \next_input_forward_reg[0][2][3] , \next_input_forward_reg[0][2][2] , 
        \next_input_forward_reg[0][2][1] , \next_input_forward_reg[0][2][0] })
         );
  WBUF_ARRAY_SIZE4_DATA_W32_12 \genblk1[0].genblk1[3].WBUFs  ( .clk(clk), 
        .nRST(nRST), .WBUF_wr_en(\WBUF_wr_en[0][3] ), .WBUF_data_in(data_in), 
        .WBUF_data_out({\WBUF_data_out[0][3][31] , \WBUF_data_out[0][3][30] , 
        \WBUF_data_out[0][3][29] , \WBUF_data_out[0][3][28] , 
        \WBUF_data_out[0][3][27] , \WBUF_data_out[0][3][26] , 
        \WBUF_data_out[0][3][25] , \WBUF_data_out[0][3][24] , 
        \WBUF_data_out[0][3][23] , \WBUF_data_out[0][3][22] , 
        \WBUF_data_out[0][3][21] , \WBUF_data_out[0][3][20] , 
        \WBUF_data_out[0][3][19] , \WBUF_data_out[0][3][18] , 
        \WBUF_data_out[0][3][17] , \WBUF_data_out[0][3][16] , 
        \WBUF_data_out[0][3][15] , \WBUF_data_out[0][3][14] , 
        \WBUF_data_out[0][3][13] , \WBUF_data_out[0][3][12] , 
        \WBUF_data_out[0][3][11] , \WBUF_data_out[0][3][10] , 
        \WBUF_data_out[0][3][9] , \WBUF_data_out[0][3][8] , 
        \WBUF_data_out[0][3][7] , \WBUF_data_out[0][3][6] , 
        \WBUF_data_out[0][3][5] , \WBUF_data_out[0][3][4] , 
        \WBUF_data_out[0][3][3] , \WBUF_data_out[0][3][2] , 
        \WBUF_data_out[0][3][1] , \WBUF_data_out[0][3][0] }) );
  w_mux_12 \genblk1[0].genblk1[3].wmux  ( .clk(clk), .nRST(nRST), 
        .input_bitwidth(input_bitwidth), .rd_en(\weight_rd_en[0][3] ), 
        .data_in({\WBUF_data_out[0][3][31] , \WBUF_data_out[0][3][30] , 
        \WBUF_data_out[0][3][29] , \WBUF_data_out[0][3][28] , 
        \WBUF_data_out[0][3][27] , \WBUF_data_out[0][3][26] , 
        \WBUF_data_out[0][3][25] , \WBUF_data_out[0][3][24] , 
        \WBUF_data_out[0][3][23] , \WBUF_data_out[0][3][22] , 
        \WBUF_data_out[0][3][21] , \WBUF_data_out[0][3][20] , 
        \WBUF_data_out[0][3][19] , \WBUF_data_out[0][3][18] , 
        \WBUF_data_out[0][3][17] , \WBUF_data_out[0][3][16] , 
        \WBUF_data_out[0][3][15] , \WBUF_data_out[0][3][14] , 
        \WBUF_data_out[0][3][13] , \WBUF_data_out[0][3][12] , 
        \WBUF_data_out[0][3][11] , \WBUF_data_out[0][3][10] , 
        \WBUF_data_out[0][3][9] , \WBUF_data_out[0][3][8] , 
        \WBUF_data_out[0][3][7] , \WBUF_data_out[0][3][6] , 
        \WBUF_data_out[0][3][5] , \WBUF_data_out[0][3][4] , 
        \WBUF_data_out[0][3][3] , \WBUF_data_out[0][3][2] , 
        \WBUF_data_out[0][3][1] , \WBUF_data_out[0][3][0] }), .data_out({
        \weight_mux_outs[0][3][31] , \weight_mux_outs[0][3][30] , 
        \weight_mux_outs[0][3][29] , \weight_mux_outs[0][3][28] , 
        \weight_mux_outs[0][3][27] , \weight_mux_outs[0][3][26] , 
        \weight_mux_outs[0][3][25] , \weight_mux_outs[0][3][24] , 
        \weight_mux_outs[0][3][23] , \weight_mux_outs[0][3][22] , 
        \weight_mux_outs[0][3][21] , \weight_mux_outs[0][3][20] , 
        \weight_mux_outs[0][3][19] , \weight_mux_outs[0][3][18] , 
        \weight_mux_outs[0][3][17] , \weight_mux_outs[0][3][16] , 
        \weight_mux_outs[0][3][15] , \weight_mux_outs[0][3][14] , 
        \weight_mux_outs[0][3][13] , \weight_mux_outs[0][3][12] , 
        \weight_mux_outs[0][3][11] , \weight_mux_outs[0][3][10] , 
        \weight_mux_outs[0][3][9] , \weight_mux_outs[0][3][8] , 
        \weight_mux_outs[0][3][7] , \weight_mux_outs[0][3][6] , 
        \weight_mux_outs[0][3][5] , \weight_mux_outs[0][3][4] , 
        \weight_mux_outs[0][3][3] , \weight_mux_outs[0][3][2] , 
        \weight_mux_outs[0][3][1] , \weight_mux_outs[0][3][0] }) );
  fusion_unit_12 \genblk1[0].genblk1[3].genblk1.genblk1.fu  ( .clk(clk), 
        .nRST(nRST), .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .input_sign({\input_sign[0][3][3] , 
        \input_sign[0][3][2] , \input_sign[0][3][1] , \input_sign[0][3][0] }), 
        .weight_sign({\weight_sign[0][3][3] , \weight_sign[0][3][2] , 
        \weight_sign[0][3][1] , \weight_sign[0][3][0] }), .input_forward({
        \input_forward_reg[0][2][31] , \input_forward_reg[0][2][30] , 
        \input_forward_reg[0][2][29] , \input_forward_reg[0][2][28] , 
        \input_forward_reg[0][2][27] , \input_forward_reg[0][2][26] , 
        \input_forward_reg[0][2][25] , \input_forward_reg[0][2][24] , 
        \input_forward_reg[0][2][23] , \input_forward_reg[0][2][22] , 
        \input_forward_reg[0][2][21] , \input_forward_reg[0][2][20] , 
        \input_forward_reg[0][2][19] , \input_forward_reg[0][2][18] , 
        \input_forward_reg[0][2][17] , \input_forward_reg[0][2][16] , 
        \input_forward_reg[0][2][15] , \input_forward_reg[0][2][14] , 
        \input_forward_reg[0][2][13] , \input_forward_reg[0][2][12] , 
        \input_forward_reg[0][2][11] , \input_forward_reg[0][2][10] , 
        \input_forward_reg[0][2][9] , \input_forward_reg[0][2][8] , 
        \input_forward_reg[0][2][7] , \input_forward_reg[0][2][6] , 
        \input_forward_reg[0][2][5] , \input_forward_reg[0][2][4] , 
        \input_forward_reg[0][2][3] , \input_forward_reg[0][2][2] , 
        \input_forward_reg[0][2][1] , \input_forward_reg[0][2][0] }), .weight(
        {\weight_mux_outs[0][3][31] , \weight_mux_outs[0][3][30] , 
        \weight_mux_outs[0][3][29] , \weight_mux_outs[0][3][28] , 
        \weight_mux_outs[0][3][27] , \weight_mux_outs[0][3][26] , 
        \weight_mux_outs[0][3][25] , \weight_mux_outs[0][3][24] , 
        \weight_mux_outs[0][3][23] , \weight_mux_outs[0][3][22] , 
        \weight_mux_outs[0][3][21] , \weight_mux_outs[0][3][20] , 
        \weight_mux_outs[0][3][19] , \weight_mux_outs[0][3][18] , 
        \weight_mux_outs[0][3][17] , \weight_mux_outs[0][3][16] , 
        \weight_mux_outs[0][3][15] , \weight_mux_outs[0][3][14] , 
        \weight_mux_outs[0][3][13] , \weight_mux_outs[0][3][12] , 
        \weight_mux_outs[0][3][11] , \weight_mux_outs[0][3][10] , 
        \weight_mux_outs[0][3][9] , \weight_mux_outs[0][3][8] , 
        \weight_mux_outs[0][3][7] , \weight_mux_outs[0][3][6] , 
        \weight_mux_outs[0][3][5] , \weight_mux_outs[0][3][4] , 
        \weight_mux_outs[0][3][3] , \weight_mux_outs[0][3][2] , 
        \weight_mux_outs[0][3][1] , \weight_mux_outs[0][3][0] }), .psum_in({
        \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , 
        \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , 
        \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , 
        \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , 
        \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , \*Logic0* , 
        \*Logic0* , \*Logic0* }), .psum({\next_psums[0][3][31] , 
        \next_psums[0][3][30] , \next_psums[0][3][29] , \next_psums[0][3][28] , 
        \next_psums[0][3][27] , \next_psums[0][3][26] , \next_psums[0][3][25] , 
        \next_psums[0][3][24] , \next_psums[0][3][23] , \next_psums[0][3][22] , 
        \next_psums[0][3][21] , \next_psums[0][3][20] , \next_psums[0][3][19] , 
        \next_psums[0][3][18] , \next_psums[0][3][17] , \next_psums[0][3][16] , 
        \next_psums[0][3][15] , \next_psums[0][3][14] , \next_psums[0][3][13] , 
        \next_psums[0][3][12] , \next_psums[0][3][11] , \next_psums[0][3][10] , 
        \next_psums[0][3][9] , \next_psums[0][3][8] , \next_psums[0][3][7] , 
        \next_psums[0][3][6] , \next_psums[0][3][5] , \next_psums[0][3][4] , 
        \next_psums[0][3][3] , \next_psums[0][3][2] , \next_psums[0][3][1] , 
        \next_psums[0][3][0] }) );
  WBUF_ARRAY_SIZE4_DATA_W32_11 \genblk1[1].genblk1[0].WBUFs  ( .clk(clk), 
        .nRST(nRST), .WBUF_wr_en(\WBUF_wr_en[1][0] ), .WBUF_data_in(data_in), 
        .WBUF_data_out({\WBUF_data_out[1][0][31] , \WBUF_data_out[1][0][30] , 
        \WBUF_data_out[1][0][29] , \WBUF_data_out[1][0][28] , 
        \WBUF_data_out[1][0][27] , \WBUF_data_out[1][0][26] , 
        \WBUF_data_out[1][0][25] , \WBUF_data_out[1][0][24] , 
        \WBUF_data_out[1][0][23] , \WBUF_data_out[1][0][22] , 
        \WBUF_data_out[1][0][21] , \WBUF_data_out[1][0][20] , 
        \WBUF_data_out[1][0][19] , \WBUF_data_out[1][0][18] , 
        \WBUF_data_out[1][0][17] , \WBUF_data_out[1][0][16] , 
        \WBUF_data_out[1][0][15] , \WBUF_data_out[1][0][14] , 
        \WBUF_data_out[1][0][13] , \WBUF_data_out[1][0][12] , 
        \WBUF_data_out[1][0][11] , \WBUF_data_out[1][0][10] , 
        \WBUF_data_out[1][0][9] , \WBUF_data_out[1][0][8] , 
        \WBUF_data_out[1][0][7] , \WBUF_data_out[1][0][6] , 
        \WBUF_data_out[1][0][5] , \WBUF_data_out[1][0][4] , 
        \WBUF_data_out[1][0][3] , \WBUF_data_out[1][0][2] , 
        \WBUF_data_out[1][0][1] , \WBUF_data_out[1][0][0] }) );
  w_mux_11 \genblk1[1].genblk1[0].wmux  ( .clk(clk), .nRST(nRST), 
        .input_bitwidth(input_bitwidth), .rd_en(\weight_rd_en[1][0] ), 
        .data_in({\WBUF_data_out[1][0][31] , \WBUF_data_out[1][0][30] , 
        \WBUF_data_out[1][0][29] , \WBUF_data_out[1][0][28] , 
        \WBUF_data_out[1][0][27] , \WBUF_data_out[1][0][26] , 
        \WBUF_data_out[1][0][25] , \WBUF_data_out[1][0][24] , 
        \WBUF_data_out[1][0][23] , \WBUF_data_out[1][0][22] , 
        \WBUF_data_out[1][0][21] , \WBUF_data_out[1][0][20] , 
        \WBUF_data_out[1][0][19] , \WBUF_data_out[1][0][18] , 
        \WBUF_data_out[1][0][17] , \WBUF_data_out[1][0][16] , 
        \WBUF_data_out[1][0][15] , \WBUF_data_out[1][0][14] , 
        \WBUF_data_out[1][0][13] , \WBUF_data_out[1][0][12] , 
        \WBUF_data_out[1][0][11] , \WBUF_data_out[1][0][10] , 
        \WBUF_data_out[1][0][9] , \WBUF_data_out[1][0][8] , 
        \WBUF_data_out[1][0][7] , \WBUF_data_out[1][0][6] , 
        \WBUF_data_out[1][0][5] , \WBUF_data_out[1][0][4] , 
        \WBUF_data_out[1][0][3] , \WBUF_data_out[1][0][2] , 
        \WBUF_data_out[1][0][1] , \WBUF_data_out[1][0][0] }), .data_out({
        \weight_mux_outs[1][0][31] , \weight_mux_outs[1][0][30] , 
        \weight_mux_outs[1][0][29] , \weight_mux_outs[1][0][28] , 
        \weight_mux_outs[1][0][27] , \weight_mux_outs[1][0][26] , 
        \weight_mux_outs[1][0][25] , \weight_mux_outs[1][0][24] , 
        \weight_mux_outs[1][0][23] , \weight_mux_outs[1][0][22] , 
        \weight_mux_outs[1][0][21] , \weight_mux_outs[1][0][20] , 
        \weight_mux_outs[1][0][19] , \weight_mux_outs[1][0][18] , 
        \weight_mux_outs[1][0][17] , \weight_mux_outs[1][0][16] , 
        \weight_mux_outs[1][0][15] , \weight_mux_outs[1][0][14] , 
        \weight_mux_outs[1][0][13] , \weight_mux_outs[1][0][12] , 
        \weight_mux_outs[1][0][11] , \weight_mux_outs[1][0][10] , 
        \weight_mux_outs[1][0][9] , \weight_mux_outs[1][0][8] , 
        \weight_mux_outs[1][0][7] , \weight_mux_outs[1][0][6] , 
        \weight_mux_outs[1][0][5] , \weight_mux_outs[1][0][4] , 
        \weight_mux_outs[1][0][3] , \weight_mux_outs[1][0][2] , 
        \weight_mux_outs[1][0][1] , \weight_mux_outs[1][0][0] }) );
  IBUF_ARRAY_SIZE4_DATA_W32_2 \genblk1[1].genblk1[0].genblk1.IBUFs  ( .clk(clk), .nRST(nRST), .IBUF_wr_en(IBUF_wr_en[1]), .IBUF_data_in(data_in), 
        .IBUF_data_out({\IBUF_data_out[1][31] , \IBUF_data_out[1][30] , 
        \IBUF_data_out[1][29] , \IBUF_data_out[1][28] , \IBUF_data_out[1][27] , 
        \IBUF_data_out[1][26] , \IBUF_data_out[1][25] , \IBUF_data_out[1][24] , 
        \IBUF_data_out[1][23] , \IBUF_data_out[1][22] , \IBUF_data_out[1][21] , 
        \IBUF_data_out[1][20] , \IBUF_data_out[1][19] , \IBUF_data_out[1][18] , 
        \IBUF_data_out[1][17] , \IBUF_data_out[1][16] , \IBUF_data_out[1][15] , 
        \IBUF_data_out[1][14] , \IBUF_data_out[1][13] , \IBUF_data_out[1][12] , 
        \IBUF_data_out[1][11] , \IBUF_data_out[1][10] , \IBUF_data_out[1][9] , 
        \IBUF_data_out[1][8] , \IBUF_data_out[1][7] , \IBUF_data_out[1][6] , 
        \IBUF_data_out[1][5] , \IBUF_data_out[1][4] , \IBUF_data_out[1][3] , 
        \IBUF_data_out[1][2] , \IBUF_data_out[1][1] , \IBUF_data_out[1][0] })
         );
  in_mux_2 \genblk1[1].genblk1[0].genblk1.imux  ( .clk(clk), .nRST(nRST), 
        .weight_bitwidth(weight_bitwidth), .rd_en(input_rd_en[1]), .data_in({
        \IBUF_data_out[1][31] , \IBUF_data_out[1][30] , \IBUF_data_out[1][29] , 
        \IBUF_data_out[1][28] , \IBUF_data_out[1][27] , \IBUF_data_out[1][26] , 
        \IBUF_data_out[1][25] , \IBUF_data_out[1][24] , \IBUF_data_out[1][23] , 
        \IBUF_data_out[1][22] , \IBUF_data_out[1][21] , \IBUF_data_out[1][20] , 
        \IBUF_data_out[1][19] , \IBUF_data_out[1][18] , \IBUF_data_out[1][17] , 
        \IBUF_data_out[1][16] , \IBUF_data_out[1][15] , \IBUF_data_out[1][14] , 
        \IBUF_data_out[1][13] , \IBUF_data_out[1][12] , \IBUF_data_out[1][11] , 
        \IBUF_data_out[1][10] , \IBUF_data_out[1][9] , \IBUF_data_out[1][8] , 
        \IBUF_data_out[1][7] , \IBUF_data_out[1][6] , \IBUF_data_out[1][5] , 
        \IBUF_data_out[1][4] , \IBUF_data_out[1][3] , \IBUF_data_out[1][2] , 
        \IBUF_data_out[1][1] , \IBUF_data_out[1][0] }), .data_out({
        \input_mux_outs[1][31] , \input_mux_outs[1][30] , 
        \input_mux_outs[1][29] , \input_mux_outs[1][28] , 
        \input_mux_outs[1][27] , \input_mux_outs[1][26] , 
        \input_mux_outs[1][25] , \input_mux_outs[1][24] , 
        \input_mux_outs[1][23] , \input_mux_outs[1][22] , 
        \input_mux_outs[1][21] , \input_mux_outs[1][20] , 
        \input_mux_outs[1][19] , \input_mux_outs[1][18] , 
        \input_mux_outs[1][17] , \input_mux_outs[1][16] , 
        \input_mux_outs[1][15] , \input_mux_outs[1][14] , 
        \input_mux_outs[1][13] , \input_mux_outs[1][12] , 
        \input_mux_outs[1][11] , \input_mux_outs[1][10] , 
        \input_mux_outs[1][9] , \input_mux_outs[1][8] , \input_mux_outs[1][7] , 
        \input_mux_outs[1][6] , \input_mux_outs[1][5] , \input_mux_outs[1][4] , 
        \input_mux_outs[1][3] , \input_mux_outs[1][2] , \input_mux_outs[1][1] , 
        \input_mux_outs[1][0] }) );
  fusion_unit_11 \genblk1[1].genblk1[0].genblk1.genblk1.fu  ( .clk(clk), 
        .nRST(nRST), .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .input_sign({\input_sign[1][0][3] , 
        \input_sign[1][0][2] , \input_sign[1][0][1] , \input_sign[1][0][0] }), 
        .weight_sign({\weight_sign[1][0][3] , \weight_sign[1][0][2] , 
        \weight_sign[1][0][1] , \weight_sign[1][0][0] }), .input_forward({
        \input_mux_outs[1][31] , \input_mux_outs[1][30] , 
        \input_mux_outs[1][29] , \input_mux_outs[1][28] , 
        \input_mux_outs[1][27] , \input_mux_outs[1][26] , 
        \input_mux_outs[1][25] , \input_mux_outs[1][24] , 
        \input_mux_outs[1][23] , \input_mux_outs[1][22] , 
        \input_mux_outs[1][21] , \input_mux_outs[1][20] , 
        \input_mux_outs[1][19] , \input_mux_outs[1][18] , 
        \input_mux_outs[1][17] , \input_mux_outs[1][16] , 
        \input_mux_outs[1][15] , \input_mux_outs[1][14] , 
        \input_mux_outs[1][13] , \input_mux_outs[1][12] , 
        \input_mux_outs[1][11] , \input_mux_outs[1][10] , 
        \input_mux_outs[1][9] , \input_mux_outs[1][8] , \input_mux_outs[1][7] , 
        \input_mux_outs[1][6] , \input_mux_outs[1][5] , \input_mux_outs[1][4] , 
        \input_mux_outs[1][3] , \input_mux_outs[1][2] , \input_mux_outs[1][1] , 
        \input_mux_outs[1][0] }), .weight({\weight_mux_outs[1][0][31] , 
        \weight_mux_outs[1][0][30] , \weight_mux_outs[1][0][29] , 
        \weight_mux_outs[1][0][28] , \weight_mux_outs[1][0][27] , 
        \weight_mux_outs[1][0][26] , \weight_mux_outs[1][0][25] , 
        \weight_mux_outs[1][0][24] , \weight_mux_outs[1][0][23] , 
        \weight_mux_outs[1][0][22] , \weight_mux_outs[1][0][21] , 
        \weight_mux_outs[1][0][20] , \weight_mux_outs[1][0][19] , 
        \weight_mux_outs[1][0][18] , \weight_mux_outs[1][0][17] , 
        \weight_mux_outs[1][0][16] , \weight_mux_outs[1][0][15] , 
        \weight_mux_outs[1][0][14] , \weight_mux_outs[1][0][13] , 
        \weight_mux_outs[1][0][12] , \weight_mux_outs[1][0][11] , 
        \weight_mux_outs[1][0][10] , \weight_mux_outs[1][0][9] , 
        \weight_mux_outs[1][0][8] , \weight_mux_outs[1][0][7] , 
        \weight_mux_outs[1][0][6] , \weight_mux_outs[1][0][5] , 
        \weight_mux_outs[1][0][4] , \weight_mux_outs[1][0][3] , 
        \weight_mux_outs[1][0][2] , \weight_mux_outs[1][0][1] , 
        \weight_mux_outs[1][0][0] }), .psum_in({\psums[0][0][31] , 
        \psums[0][0][30] , \psums[0][0][29] , \psums[0][0][28] , 
        \psums[0][0][27] , \psums[0][0][26] , \psums[0][0][25] , 
        \psums[0][0][24] , \psums[0][0][23] , \psums[0][0][22] , 
        \psums[0][0][21] , \psums[0][0][20] , \psums[0][0][19] , 
        \psums[0][0][18] , \psums[0][0][17] , \psums[0][0][16] , 
        \psums[0][0][15] , \psums[0][0][14] , \psums[0][0][13] , 
        \psums[0][0][12] , \psums[0][0][11] , \psums[0][0][10] , 
        \psums[0][0][9] , \psums[0][0][8] , \psums[0][0][7] , \psums[0][0][6] , 
        \psums[0][0][5] , \psums[0][0][4] , \psums[0][0][3] , \psums[0][0][2] , 
        \psums[0][0][1] , \psums[0][0][0] }), .psum({\next_psums[1][0][31] , 
        \next_psums[1][0][30] , \next_psums[1][0][29] , \next_psums[1][0][28] , 
        \next_psums[1][0][27] , \next_psums[1][0][26] , \next_psums[1][0][25] , 
        \next_psums[1][0][24] , \next_psums[1][0][23] , \next_psums[1][0][22] , 
        \next_psums[1][0][21] , \next_psums[1][0][20] , \next_psums[1][0][19] , 
        \next_psums[1][0][18] , \next_psums[1][0][17] , \next_psums[1][0][16] , 
        \next_psums[1][0][15] , \next_psums[1][0][14] , \next_psums[1][0][13] , 
        \next_psums[1][0][12] , \next_psums[1][0][11] , \next_psums[1][0][10] , 
        \next_psums[1][0][9] , \next_psums[1][0][8] , \next_psums[1][0][7] , 
        \next_psums[1][0][6] , \next_psums[1][0][5] , \next_psums[1][0][4] , 
        \next_psums[1][0][3] , \next_psums[1][0][2] , \next_psums[1][0][1] , 
        \next_psums[1][0][0] }), .input_to_right({
        \next_input_forward_reg[1][0][31] , \next_input_forward_reg[1][0][30] , 
        \next_input_forward_reg[1][0][29] , \next_input_forward_reg[1][0][28] , 
        \next_input_forward_reg[1][0][27] , \next_input_forward_reg[1][0][26] , 
        \next_input_forward_reg[1][0][25] , \next_input_forward_reg[1][0][24] , 
        \next_input_forward_reg[1][0][23] , \next_input_forward_reg[1][0][22] , 
        \next_input_forward_reg[1][0][21] , \next_input_forward_reg[1][0][20] , 
        \next_input_forward_reg[1][0][19] , \next_input_forward_reg[1][0][18] , 
        \next_input_forward_reg[1][0][17] , \next_input_forward_reg[1][0][16] , 
        \next_input_forward_reg[1][0][15] , \next_input_forward_reg[1][0][14] , 
        \next_input_forward_reg[1][0][13] , \next_input_forward_reg[1][0][12] , 
        \next_input_forward_reg[1][0][11] , \next_input_forward_reg[1][0][10] , 
        \next_input_forward_reg[1][0][9] , \next_input_forward_reg[1][0][8] , 
        \next_input_forward_reg[1][0][7] , \next_input_forward_reg[1][0][6] , 
        \next_input_forward_reg[1][0][5] , \next_input_forward_reg[1][0][4] , 
        \next_input_forward_reg[1][0][3] , \next_input_forward_reg[1][0][2] , 
        \next_input_forward_reg[1][0][1] , \next_input_forward_reg[1][0][0] })
         );
  WBUF_ARRAY_SIZE4_DATA_W32_10 \genblk1[1].genblk1[1].WBUFs  ( .clk(clk), 
        .nRST(nRST), .WBUF_wr_en(\WBUF_wr_en[1][1] ), .WBUF_data_in(data_in), 
        .WBUF_data_out({\WBUF_data_out[1][1][31] , \WBUF_data_out[1][1][30] , 
        \WBUF_data_out[1][1][29] , \WBUF_data_out[1][1][28] , 
        \WBUF_data_out[1][1][27] , \WBUF_data_out[1][1][26] , 
        \WBUF_data_out[1][1][25] , \WBUF_data_out[1][1][24] , 
        \WBUF_data_out[1][1][23] , \WBUF_data_out[1][1][22] , 
        \WBUF_data_out[1][1][21] , \WBUF_data_out[1][1][20] , 
        \WBUF_data_out[1][1][19] , \WBUF_data_out[1][1][18] , 
        \WBUF_data_out[1][1][17] , \WBUF_data_out[1][1][16] , 
        \WBUF_data_out[1][1][15] , \WBUF_data_out[1][1][14] , 
        \WBUF_data_out[1][1][13] , \WBUF_data_out[1][1][12] , 
        \WBUF_data_out[1][1][11] , \WBUF_data_out[1][1][10] , 
        \WBUF_data_out[1][1][9] , \WBUF_data_out[1][1][8] , 
        \WBUF_data_out[1][1][7] , \WBUF_data_out[1][1][6] , 
        \WBUF_data_out[1][1][5] , \WBUF_data_out[1][1][4] , 
        \WBUF_data_out[1][1][3] , \WBUF_data_out[1][1][2] , 
        \WBUF_data_out[1][1][1] , \WBUF_data_out[1][1][0] }) );
  w_mux_10 \genblk1[1].genblk1[1].wmux  ( .clk(clk), .nRST(nRST), 
        .input_bitwidth(input_bitwidth), .rd_en(\weight_rd_en[1][1] ), 
        .data_in({\WBUF_data_out[1][1][31] , \WBUF_data_out[1][1][30] , 
        \WBUF_data_out[1][1][29] , \WBUF_data_out[1][1][28] , 
        \WBUF_data_out[1][1][27] , \WBUF_data_out[1][1][26] , 
        \WBUF_data_out[1][1][25] , \WBUF_data_out[1][1][24] , 
        \WBUF_data_out[1][1][23] , \WBUF_data_out[1][1][22] , 
        \WBUF_data_out[1][1][21] , \WBUF_data_out[1][1][20] , 
        \WBUF_data_out[1][1][19] , \WBUF_data_out[1][1][18] , 
        \WBUF_data_out[1][1][17] , \WBUF_data_out[1][1][16] , 
        \WBUF_data_out[1][1][15] , \WBUF_data_out[1][1][14] , 
        \WBUF_data_out[1][1][13] , \WBUF_data_out[1][1][12] , 
        \WBUF_data_out[1][1][11] , \WBUF_data_out[1][1][10] , 
        \WBUF_data_out[1][1][9] , \WBUF_data_out[1][1][8] , 
        \WBUF_data_out[1][1][7] , \WBUF_data_out[1][1][6] , 
        \WBUF_data_out[1][1][5] , \WBUF_data_out[1][1][4] , 
        \WBUF_data_out[1][1][3] , \WBUF_data_out[1][1][2] , 
        \WBUF_data_out[1][1][1] , \WBUF_data_out[1][1][0] }), .data_out({
        \weight_mux_outs[1][1][31] , \weight_mux_outs[1][1][30] , 
        \weight_mux_outs[1][1][29] , \weight_mux_outs[1][1][28] , 
        \weight_mux_outs[1][1][27] , \weight_mux_outs[1][1][26] , 
        \weight_mux_outs[1][1][25] , \weight_mux_outs[1][1][24] , 
        \weight_mux_outs[1][1][23] , \weight_mux_outs[1][1][22] , 
        \weight_mux_outs[1][1][21] , \weight_mux_outs[1][1][20] , 
        \weight_mux_outs[1][1][19] , \weight_mux_outs[1][1][18] , 
        \weight_mux_outs[1][1][17] , \weight_mux_outs[1][1][16] , 
        \weight_mux_outs[1][1][15] , \weight_mux_outs[1][1][14] , 
        \weight_mux_outs[1][1][13] , \weight_mux_outs[1][1][12] , 
        \weight_mux_outs[1][1][11] , \weight_mux_outs[1][1][10] , 
        \weight_mux_outs[1][1][9] , \weight_mux_outs[1][1][8] , 
        \weight_mux_outs[1][1][7] , \weight_mux_outs[1][1][6] , 
        \weight_mux_outs[1][1][5] , \weight_mux_outs[1][1][4] , 
        \weight_mux_outs[1][1][3] , \weight_mux_outs[1][1][2] , 
        \weight_mux_outs[1][1][1] , \weight_mux_outs[1][1][0] }) );
  fusion_unit_10 \genblk1[1].genblk1[1].genblk1.genblk1.fu  ( .clk(clk), 
        .nRST(nRST), .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .input_sign({\input_sign[1][1][3] , 
        \input_sign[1][1][2] , \input_sign[1][1][1] , \input_sign[1][1][0] }), 
        .weight_sign({\weight_sign[1][1][3] , \weight_sign[1][1][2] , 
        \weight_sign[1][1][1] , \weight_sign[1][1][0] }), .input_forward({
        \input_forward_reg[1][0][31] , \input_forward_reg[1][0][30] , 
        \input_forward_reg[1][0][29] , \input_forward_reg[1][0][28] , 
        \input_forward_reg[1][0][27] , \input_forward_reg[1][0][26] , 
        \input_forward_reg[1][0][25] , \input_forward_reg[1][0][24] , 
        \input_forward_reg[1][0][23] , \input_forward_reg[1][0][22] , 
        \input_forward_reg[1][0][21] , \input_forward_reg[1][0][20] , 
        \input_forward_reg[1][0][19] , \input_forward_reg[1][0][18] , 
        \input_forward_reg[1][0][17] , \input_forward_reg[1][0][16] , 
        \input_forward_reg[1][0][15] , \input_forward_reg[1][0][14] , 
        \input_forward_reg[1][0][13] , \input_forward_reg[1][0][12] , 
        \input_forward_reg[1][0][11] , \input_forward_reg[1][0][10] , 
        \input_forward_reg[1][0][9] , \input_forward_reg[1][0][8] , 
        \input_forward_reg[1][0][7] , \input_forward_reg[1][0][6] , 
        \input_forward_reg[1][0][5] , \input_forward_reg[1][0][4] , 
        \input_forward_reg[1][0][3] , \input_forward_reg[1][0][2] , 
        \input_forward_reg[1][0][1] , \input_forward_reg[1][0][0] }), .weight(
        {\weight_mux_outs[1][1][31] , \weight_mux_outs[1][1][30] , 
        \weight_mux_outs[1][1][29] , \weight_mux_outs[1][1][28] , 
        \weight_mux_outs[1][1][27] , \weight_mux_outs[1][1][26] , 
        \weight_mux_outs[1][1][25] , \weight_mux_outs[1][1][24] , 
        \weight_mux_outs[1][1][23] , \weight_mux_outs[1][1][22] , 
        \weight_mux_outs[1][1][21] , \weight_mux_outs[1][1][20] , 
        \weight_mux_outs[1][1][19] , \weight_mux_outs[1][1][18] , 
        \weight_mux_outs[1][1][17] , \weight_mux_outs[1][1][16] , 
        \weight_mux_outs[1][1][15] , \weight_mux_outs[1][1][14] , 
        \weight_mux_outs[1][1][13] , \weight_mux_outs[1][1][12] , 
        \weight_mux_outs[1][1][11] , \weight_mux_outs[1][1][10] , 
        \weight_mux_outs[1][1][9] , \weight_mux_outs[1][1][8] , 
        \weight_mux_outs[1][1][7] , \weight_mux_outs[1][1][6] , 
        \weight_mux_outs[1][1][5] , \weight_mux_outs[1][1][4] , 
        \weight_mux_outs[1][1][3] , \weight_mux_outs[1][1][2] , 
        \weight_mux_outs[1][1][1] , \weight_mux_outs[1][1][0] }), .psum_in({
        \psums[0][1][31] , \psums[0][1][30] , \psums[0][1][29] , 
        \psums[0][1][28] , \psums[0][1][27] , \psums[0][1][26] , 
        \psums[0][1][25] , \psums[0][1][24] , \psums[0][1][23] , 
        \psums[0][1][22] , \psums[0][1][21] , \psums[0][1][20] , 
        \psums[0][1][19] , \psums[0][1][18] , \psums[0][1][17] , 
        \psums[0][1][16] , \psums[0][1][15] , \psums[0][1][14] , 
        \psums[0][1][13] , \psums[0][1][12] , \psums[0][1][11] , 
        \psums[0][1][10] , \psums[0][1][9] , \psums[0][1][8] , 
        \psums[0][1][7] , \psums[0][1][6] , \psums[0][1][5] , \psums[0][1][4] , 
        \psums[0][1][3] , \psums[0][1][2] , \psums[0][1][1] , \psums[0][1][0] }), .psum({\next_psums[1][1][31] , \next_psums[1][1][30] , 
        \next_psums[1][1][29] , \next_psums[1][1][28] , \next_psums[1][1][27] , 
        \next_psums[1][1][26] , \next_psums[1][1][25] , \next_psums[1][1][24] , 
        \next_psums[1][1][23] , \next_psums[1][1][22] , \next_psums[1][1][21] , 
        \next_psums[1][1][20] , \next_psums[1][1][19] , \next_psums[1][1][18] , 
        \next_psums[1][1][17] , \next_psums[1][1][16] , \next_psums[1][1][15] , 
        \next_psums[1][1][14] , \next_psums[1][1][13] , \next_psums[1][1][12] , 
        \next_psums[1][1][11] , \next_psums[1][1][10] , \next_psums[1][1][9] , 
        \next_psums[1][1][8] , \next_psums[1][1][7] , \next_psums[1][1][6] , 
        \next_psums[1][1][5] , \next_psums[1][1][4] , \next_psums[1][1][3] , 
        \next_psums[1][1][2] , \next_psums[1][1][1] , \next_psums[1][1][0] }), 
        .input_to_right({\next_input_forward_reg[1][1][31] , 
        \next_input_forward_reg[1][1][30] , \next_input_forward_reg[1][1][29] , 
        \next_input_forward_reg[1][1][28] , \next_input_forward_reg[1][1][27] , 
        \next_input_forward_reg[1][1][26] , \next_input_forward_reg[1][1][25] , 
        \next_input_forward_reg[1][1][24] , \next_input_forward_reg[1][1][23] , 
        \next_input_forward_reg[1][1][22] , \next_input_forward_reg[1][1][21] , 
        \next_input_forward_reg[1][1][20] , \next_input_forward_reg[1][1][19] , 
        \next_input_forward_reg[1][1][18] , \next_input_forward_reg[1][1][17] , 
        \next_input_forward_reg[1][1][16] , \next_input_forward_reg[1][1][15] , 
        \next_input_forward_reg[1][1][14] , \next_input_forward_reg[1][1][13] , 
        \next_input_forward_reg[1][1][12] , \next_input_forward_reg[1][1][11] , 
        \next_input_forward_reg[1][1][10] , \next_input_forward_reg[1][1][9] , 
        \next_input_forward_reg[1][1][8] , \next_input_forward_reg[1][1][7] , 
        \next_input_forward_reg[1][1][6] , \next_input_forward_reg[1][1][5] , 
        \next_input_forward_reg[1][1][4] , \next_input_forward_reg[1][1][3] , 
        \next_input_forward_reg[1][1][2] , \next_input_forward_reg[1][1][1] , 
        \next_input_forward_reg[1][1][0] }) );
  WBUF_ARRAY_SIZE4_DATA_W32_9 \genblk1[1].genblk1[2].WBUFs  ( .clk(clk), 
        .nRST(nRST), .WBUF_wr_en(\WBUF_wr_en[1][2] ), .WBUF_data_in(data_in), 
        .WBUF_data_out({\WBUF_data_out[1][2][31] , \WBUF_data_out[1][2][30] , 
        \WBUF_data_out[1][2][29] , \WBUF_data_out[1][2][28] , 
        \WBUF_data_out[1][2][27] , \WBUF_data_out[1][2][26] , 
        \WBUF_data_out[1][2][25] , \WBUF_data_out[1][2][24] , 
        \WBUF_data_out[1][2][23] , \WBUF_data_out[1][2][22] , 
        \WBUF_data_out[1][2][21] , \WBUF_data_out[1][2][20] , 
        \WBUF_data_out[1][2][19] , \WBUF_data_out[1][2][18] , 
        \WBUF_data_out[1][2][17] , \WBUF_data_out[1][2][16] , 
        \WBUF_data_out[1][2][15] , \WBUF_data_out[1][2][14] , 
        \WBUF_data_out[1][2][13] , \WBUF_data_out[1][2][12] , 
        \WBUF_data_out[1][2][11] , \WBUF_data_out[1][2][10] , 
        \WBUF_data_out[1][2][9] , \WBUF_data_out[1][2][8] , 
        \WBUF_data_out[1][2][7] , \WBUF_data_out[1][2][6] , 
        \WBUF_data_out[1][2][5] , \WBUF_data_out[1][2][4] , 
        \WBUF_data_out[1][2][3] , \WBUF_data_out[1][2][2] , 
        \WBUF_data_out[1][2][1] , \WBUF_data_out[1][2][0] }) );
  w_mux_9 \genblk1[1].genblk1[2].wmux  ( .clk(clk), .nRST(nRST), 
        .input_bitwidth(input_bitwidth), .rd_en(\weight_rd_en[1][2] ), 
        .data_in({\WBUF_data_out[1][2][31] , \WBUF_data_out[1][2][30] , 
        \WBUF_data_out[1][2][29] , \WBUF_data_out[1][2][28] , 
        \WBUF_data_out[1][2][27] , \WBUF_data_out[1][2][26] , 
        \WBUF_data_out[1][2][25] , \WBUF_data_out[1][2][24] , 
        \WBUF_data_out[1][2][23] , \WBUF_data_out[1][2][22] , 
        \WBUF_data_out[1][2][21] , \WBUF_data_out[1][2][20] , 
        \WBUF_data_out[1][2][19] , \WBUF_data_out[1][2][18] , 
        \WBUF_data_out[1][2][17] , \WBUF_data_out[1][2][16] , 
        \WBUF_data_out[1][2][15] , \WBUF_data_out[1][2][14] , 
        \WBUF_data_out[1][2][13] , \WBUF_data_out[1][2][12] , 
        \WBUF_data_out[1][2][11] , \WBUF_data_out[1][2][10] , 
        \WBUF_data_out[1][2][9] , \WBUF_data_out[1][2][8] , 
        \WBUF_data_out[1][2][7] , \WBUF_data_out[1][2][6] , 
        \WBUF_data_out[1][2][5] , \WBUF_data_out[1][2][4] , 
        \WBUF_data_out[1][2][3] , \WBUF_data_out[1][2][2] , 
        \WBUF_data_out[1][2][1] , \WBUF_data_out[1][2][0] }), .data_out({
        \weight_mux_outs[1][2][31] , \weight_mux_outs[1][2][30] , 
        \weight_mux_outs[1][2][29] , \weight_mux_outs[1][2][28] , 
        \weight_mux_outs[1][2][27] , \weight_mux_outs[1][2][26] , 
        \weight_mux_outs[1][2][25] , \weight_mux_outs[1][2][24] , 
        \weight_mux_outs[1][2][23] , \weight_mux_outs[1][2][22] , 
        \weight_mux_outs[1][2][21] , \weight_mux_outs[1][2][20] , 
        \weight_mux_outs[1][2][19] , \weight_mux_outs[1][2][18] , 
        \weight_mux_outs[1][2][17] , \weight_mux_outs[1][2][16] , 
        \weight_mux_outs[1][2][15] , \weight_mux_outs[1][2][14] , 
        \weight_mux_outs[1][2][13] , \weight_mux_outs[1][2][12] , 
        \weight_mux_outs[1][2][11] , \weight_mux_outs[1][2][10] , 
        \weight_mux_outs[1][2][9] , \weight_mux_outs[1][2][8] , 
        \weight_mux_outs[1][2][7] , \weight_mux_outs[1][2][6] , 
        \weight_mux_outs[1][2][5] , \weight_mux_outs[1][2][4] , 
        \weight_mux_outs[1][2][3] , \weight_mux_outs[1][2][2] , 
        \weight_mux_outs[1][2][1] , \weight_mux_outs[1][2][0] }) );
  fusion_unit_9 \genblk1[1].genblk1[2].genblk1.genblk1.fu  ( .clk(clk), .nRST(
        nRST), .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .input_sign({\input_sign[1][2][3] , 
        \input_sign[1][2][2] , \input_sign[1][2][1] , \input_sign[1][2][0] }), 
        .weight_sign({\weight_sign[1][2][3] , \weight_sign[1][2][2] , 
        \weight_sign[1][2][1] , \weight_sign[1][2][0] }), .input_forward({
        \input_forward_reg[1][1][31] , \input_forward_reg[1][1][30] , 
        \input_forward_reg[1][1][29] , \input_forward_reg[1][1][28] , 
        \input_forward_reg[1][1][27] , \input_forward_reg[1][1][26] , 
        \input_forward_reg[1][1][25] , \input_forward_reg[1][1][24] , 
        \input_forward_reg[1][1][23] , \input_forward_reg[1][1][22] , 
        \input_forward_reg[1][1][21] , \input_forward_reg[1][1][20] , 
        \input_forward_reg[1][1][19] , \input_forward_reg[1][1][18] , 
        \input_forward_reg[1][1][17] , \input_forward_reg[1][1][16] , 
        \input_forward_reg[1][1][15] , \input_forward_reg[1][1][14] , 
        \input_forward_reg[1][1][13] , \input_forward_reg[1][1][12] , 
        \input_forward_reg[1][1][11] , \input_forward_reg[1][1][10] , 
        \input_forward_reg[1][1][9] , \input_forward_reg[1][1][8] , 
        \input_forward_reg[1][1][7] , \input_forward_reg[1][1][6] , 
        \input_forward_reg[1][1][5] , \input_forward_reg[1][1][4] , 
        \input_forward_reg[1][1][3] , \input_forward_reg[1][1][2] , 
        \input_forward_reg[1][1][1] , \input_forward_reg[1][1][0] }), .weight(
        {\weight_mux_outs[1][2][31] , \weight_mux_outs[1][2][30] , 
        \weight_mux_outs[1][2][29] , \weight_mux_outs[1][2][28] , 
        \weight_mux_outs[1][2][27] , \weight_mux_outs[1][2][26] , 
        \weight_mux_outs[1][2][25] , \weight_mux_outs[1][2][24] , 
        \weight_mux_outs[1][2][23] , \weight_mux_outs[1][2][22] , 
        \weight_mux_outs[1][2][21] , \weight_mux_outs[1][2][20] , 
        \weight_mux_outs[1][2][19] , \weight_mux_outs[1][2][18] , 
        \weight_mux_outs[1][2][17] , \weight_mux_outs[1][2][16] , 
        \weight_mux_outs[1][2][15] , \weight_mux_outs[1][2][14] , 
        \weight_mux_outs[1][2][13] , \weight_mux_outs[1][2][12] , 
        \weight_mux_outs[1][2][11] , \weight_mux_outs[1][2][10] , 
        \weight_mux_outs[1][2][9] , \weight_mux_outs[1][2][8] , 
        \weight_mux_outs[1][2][7] , \weight_mux_outs[1][2][6] , 
        \weight_mux_outs[1][2][5] , \weight_mux_outs[1][2][4] , 
        \weight_mux_outs[1][2][3] , \weight_mux_outs[1][2][2] , 
        \weight_mux_outs[1][2][1] , \weight_mux_outs[1][2][0] }), .psum_in({
        \psums[0][2][31] , \psums[0][2][30] , \psums[0][2][29] , 
        \psums[0][2][28] , \psums[0][2][27] , \psums[0][2][26] , 
        \psums[0][2][25] , \psums[0][2][24] , \psums[0][2][23] , 
        \psums[0][2][22] , \psums[0][2][21] , \psums[0][2][20] , 
        \psums[0][2][19] , \psums[0][2][18] , \psums[0][2][17] , 
        \psums[0][2][16] , \psums[0][2][15] , \psums[0][2][14] , 
        \psums[0][2][13] , \psums[0][2][12] , \psums[0][2][11] , 
        \psums[0][2][10] , \psums[0][2][9] , \psums[0][2][8] , 
        \psums[0][2][7] , \psums[0][2][6] , \psums[0][2][5] , \psums[0][2][4] , 
        \psums[0][2][3] , \psums[0][2][2] , \psums[0][2][1] , \psums[0][2][0] }), .psum({\next_psums[1][2][31] , \next_psums[1][2][30] , 
        \next_psums[1][2][29] , \next_psums[1][2][28] , \next_psums[1][2][27] , 
        \next_psums[1][2][26] , \next_psums[1][2][25] , \next_psums[1][2][24] , 
        \next_psums[1][2][23] , \next_psums[1][2][22] , \next_psums[1][2][21] , 
        \next_psums[1][2][20] , \next_psums[1][2][19] , \next_psums[1][2][18] , 
        \next_psums[1][2][17] , \next_psums[1][2][16] , \next_psums[1][2][15] , 
        \next_psums[1][2][14] , \next_psums[1][2][13] , \next_psums[1][2][12] , 
        \next_psums[1][2][11] , \next_psums[1][2][10] , \next_psums[1][2][9] , 
        \next_psums[1][2][8] , \next_psums[1][2][7] , \next_psums[1][2][6] , 
        \next_psums[1][2][5] , \next_psums[1][2][4] , \next_psums[1][2][3] , 
        \next_psums[1][2][2] , \next_psums[1][2][1] , \next_psums[1][2][0] }), 
        .input_to_right({\next_input_forward_reg[1][2][31] , 
        \next_input_forward_reg[1][2][30] , \next_input_forward_reg[1][2][29] , 
        \next_input_forward_reg[1][2][28] , \next_input_forward_reg[1][2][27] , 
        \next_input_forward_reg[1][2][26] , \next_input_forward_reg[1][2][25] , 
        \next_input_forward_reg[1][2][24] , \next_input_forward_reg[1][2][23] , 
        \next_input_forward_reg[1][2][22] , \next_input_forward_reg[1][2][21] , 
        \next_input_forward_reg[1][2][20] , \next_input_forward_reg[1][2][19] , 
        \next_input_forward_reg[1][2][18] , \next_input_forward_reg[1][2][17] , 
        \next_input_forward_reg[1][2][16] , \next_input_forward_reg[1][2][15] , 
        \next_input_forward_reg[1][2][14] , \next_input_forward_reg[1][2][13] , 
        \next_input_forward_reg[1][2][12] , \next_input_forward_reg[1][2][11] , 
        \next_input_forward_reg[1][2][10] , \next_input_forward_reg[1][2][9] , 
        \next_input_forward_reg[1][2][8] , \next_input_forward_reg[1][2][7] , 
        \next_input_forward_reg[1][2][6] , \next_input_forward_reg[1][2][5] , 
        \next_input_forward_reg[1][2][4] , \next_input_forward_reg[1][2][3] , 
        \next_input_forward_reg[1][2][2] , \next_input_forward_reg[1][2][1] , 
        \next_input_forward_reg[1][2][0] }) );
  WBUF_ARRAY_SIZE4_DATA_W32_8 \genblk1[1].genblk1[3].WBUFs  ( .clk(clk), 
        .nRST(nRST), .WBUF_wr_en(\WBUF_wr_en[1][3] ), .WBUF_data_in(data_in), 
        .WBUF_data_out({\WBUF_data_out[1][3][31] , \WBUF_data_out[1][3][30] , 
        \WBUF_data_out[1][3][29] , \WBUF_data_out[1][3][28] , 
        \WBUF_data_out[1][3][27] , \WBUF_data_out[1][3][26] , 
        \WBUF_data_out[1][3][25] , \WBUF_data_out[1][3][24] , 
        \WBUF_data_out[1][3][23] , \WBUF_data_out[1][3][22] , 
        \WBUF_data_out[1][3][21] , \WBUF_data_out[1][3][20] , 
        \WBUF_data_out[1][3][19] , \WBUF_data_out[1][3][18] , 
        \WBUF_data_out[1][3][17] , \WBUF_data_out[1][3][16] , 
        \WBUF_data_out[1][3][15] , \WBUF_data_out[1][3][14] , 
        \WBUF_data_out[1][3][13] , \WBUF_data_out[1][3][12] , 
        \WBUF_data_out[1][3][11] , \WBUF_data_out[1][3][10] , 
        \WBUF_data_out[1][3][9] , \WBUF_data_out[1][3][8] , 
        \WBUF_data_out[1][3][7] , \WBUF_data_out[1][3][6] , 
        \WBUF_data_out[1][3][5] , \WBUF_data_out[1][3][4] , 
        \WBUF_data_out[1][3][3] , \WBUF_data_out[1][3][2] , 
        \WBUF_data_out[1][3][1] , \WBUF_data_out[1][3][0] }) );
  w_mux_8 \genblk1[1].genblk1[3].wmux  ( .clk(clk), .nRST(nRST), 
        .input_bitwidth(input_bitwidth), .rd_en(\weight_rd_en[1][3] ), 
        .data_in({\WBUF_data_out[1][3][31] , \WBUF_data_out[1][3][30] , 
        \WBUF_data_out[1][3][29] , \WBUF_data_out[1][3][28] , 
        \WBUF_data_out[1][3][27] , \WBUF_data_out[1][3][26] , 
        \WBUF_data_out[1][3][25] , \WBUF_data_out[1][3][24] , 
        \WBUF_data_out[1][3][23] , \WBUF_data_out[1][3][22] , 
        \WBUF_data_out[1][3][21] , \WBUF_data_out[1][3][20] , 
        \WBUF_data_out[1][3][19] , \WBUF_data_out[1][3][18] , 
        \WBUF_data_out[1][3][17] , \WBUF_data_out[1][3][16] , 
        \WBUF_data_out[1][3][15] , \WBUF_data_out[1][3][14] , 
        \WBUF_data_out[1][3][13] , \WBUF_data_out[1][3][12] , 
        \WBUF_data_out[1][3][11] , \WBUF_data_out[1][3][10] , 
        \WBUF_data_out[1][3][9] , \WBUF_data_out[1][3][8] , 
        \WBUF_data_out[1][3][7] , \WBUF_data_out[1][3][6] , 
        \WBUF_data_out[1][3][5] , \WBUF_data_out[1][3][4] , 
        \WBUF_data_out[1][3][3] , \WBUF_data_out[1][3][2] , 
        \WBUF_data_out[1][3][1] , \WBUF_data_out[1][3][0] }), .data_out({
        \weight_mux_outs[1][3][31] , \weight_mux_outs[1][3][30] , 
        \weight_mux_outs[1][3][29] , \weight_mux_outs[1][3][28] , 
        \weight_mux_outs[1][3][27] , \weight_mux_outs[1][3][26] , 
        \weight_mux_outs[1][3][25] , \weight_mux_outs[1][3][24] , 
        \weight_mux_outs[1][3][23] , \weight_mux_outs[1][3][22] , 
        \weight_mux_outs[1][3][21] , \weight_mux_outs[1][3][20] , 
        \weight_mux_outs[1][3][19] , \weight_mux_outs[1][3][18] , 
        \weight_mux_outs[1][3][17] , \weight_mux_outs[1][3][16] , 
        \weight_mux_outs[1][3][15] , \weight_mux_outs[1][3][14] , 
        \weight_mux_outs[1][3][13] , \weight_mux_outs[1][3][12] , 
        \weight_mux_outs[1][3][11] , \weight_mux_outs[1][3][10] , 
        \weight_mux_outs[1][3][9] , \weight_mux_outs[1][3][8] , 
        \weight_mux_outs[1][3][7] , \weight_mux_outs[1][3][6] , 
        \weight_mux_outs[1][3][5] , \weight_mux_outs[1][3][4] , 
        \weight_mux_outs[1][3][3] , \weight_mux_outs[1][3][2] , 
        \weight_mux_outs[1][3][1] , \weight_mux_outs[1][3][0] }) );
  fusion_unit_8 \genblk1[1].genblk1[3].genblk1.genblk1.fu  ( .clk(clk), .nRST(
        nRST), .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .input_sign({\input_sign[1][3][3] , 
        \input_sign[1][3][2] , \input_sign[1][3][1] , \input_sign[1][3][0] }), 
        .weight_sign({\weight_sign[1][3][3] , \weight_sign[1][3][2] , 
        \weight_sign[1][3][1] , \weight_sign[1][3][0] }), .input_forward({
        \input_forward_reg[1][2][31] , \input_forward_reg[1][2][30] , 
        \input_forward_reg[1][2][29] , \input_forward_reg[1][2][28] , 
        \input_forward_reg[1][2][27] , \input_forward_reg[1][2][26] , 
        \input_forward_reg[1][2][25] , \input_forward_reg[1][2][24] , 
        \input_forward_reg[1][2][23] , \input_forward_reg[1][2][22] , 
        \input_forward_reg[1][2][21] , \input_forward_reg[1][2][20] , 
        \input_forward_reg[1][2][19] , \input_forward_reg[1][2][18] , 
        \input_forward_reg[1][2][17] , \input_forward_reg[1][2][16] , 
        \input_forward_reg[1][2][15] , \input_forward_reg[1][2][14] , 
        \input_forward_reg[1][2][13] , \input_forward_reg[1][2][12] , 
        \input_forward_reg[1][2][11] , \input_forward_reg[1][2][10] , 
        \input_forward_reg[1][2][9] , \input_forward_reg[1][2][8] , 
        \input_forward_reg[1][2][7] , \input_forward_reg[1][2][6] , 
        \input_forward_reg[1][2][5] , \input_forward_reg[1][2][4] , 
        \input_forward_reg[1][2][3] , \input_forward_reg[1][2][2] , 
        \input_forward_reg[1][2][1] , \input_forward_reg[1][2][0] }), .weight(
        {\weight_mux_outs[1][3][31] , \weight_mux_outs[1][3][30] , 
        \weight_mux_outs[1][3][29] , \weight_mux_outs[1][3][28] , 
        \weight_mux_outs[1][3][27] , \weight_mux_outs[1][3][26] , 
        \weight_mux_outs[1][3][25] , \weight_mux_outs[1][3][24] , 
        \weight_mux_outs[1][3][23] , \weight_mux_outs[1][3][22] , 
        \weight_mux_outs[1][3][21] , \weight_mux_outs[1][3][20] , 
        \weight_mux_outs[1][3][19] , \weight_mux_outs[1][3][18] , 
        \weight_mux_outs[1][3][17] , \weight_mux_outs[1][3][16] , 
        \weight_mux_outs[1][3][15] , \weight_mux_outs[1][3][14] , 
        \weight_mux_outs[1][3][13] , \weight_mux_outs[1][3][12] , 
        \weight_mux_outs[1][3][11] , \weight_mux_outs[1][3][10] , 
        \weight_mux_outs[1][3][9] , \weight_mux_outs[1][3][8] , 
        \weight_mux_outs[1][3][7] , \weight_mux_outs[1][3][6] , 
        \weight_mux_outs[1][3][5] , \weight_mux_outs[1][3][4] , 
        \weight_mux_outs[1][3][3] , \weight_mux_outs[1][3][2] , 
        \weight_mux_outs[1][3][1] , \weight_mux_outs[1][3][0] }), .psum_in({
        \psums[0][3][31] , \psums[0][3][30] , \psums[0][3][29] , 
        \psums[0][3][28] , \psums[0][3][27] , \psums[0][3][26] , 
        \psums[0][3][25] , \psums[0][3][24] , \psums[0][3][23] , 
        \psums[0][3][22] , \psums[0][3][21] , \psums[0][3][20] , 
        \psums[0][3][19] , \psums[0][3][18] , \psums[0][3][17] , 
        \psums[0][3][16] , \psums[0][3][15] , \psums[0][3][14] , 
        \psums[0][3][13] , \psums[0][3][12] , \psums[0][3][11] , 
        \psums[0][3][10] , \psums[0][3][9] , \psums[0][3][8] , 
        \psums[0][3][7] , \psums[0][3][6] , \psums[0][3][5] , \psums[0][3][4] , 
        \psums[0][3][3] , \psums[0][3][2] , \psums[0][3][1] , \psums[0][3][0] }), .psum({\next_psums[1][3][31] , \next_psums[1][3][30] , 
        \next_psums[1][3][29] , \next_psums[1][3][28] , \next_psums[1][3][27] , 
        \next_psums[1][3][26] , \next_psums[1][3][25] , \next_psums[1][3][24] , 
        \next_psums[1][3][23] , \next_psums[1][3][22] , \next_psums[1][3][21] , 
        \next_psums[1][3][20] , \next_psums[1][3][19] , \next_psums[1][3][18] , 
        \next_psums[1][3][17] , \next_psums[1][3][16] , \next_psums[1][3][15] , 
        \next_psums[1][3][14] , \next_psums[1][3][13] , \next_psums[1][3][12] , 
        \next_psums[1][3][11] , \next_psums[1][3][10] , \next_psums[1][3][9] , 
        \next_psums[1][3][8] , \next_psums[1][3][7] , \next_psums[1][3][6] , 
        \next_psums[1][3][5] , \next_psums[1][3][4] , \next_psums[1][3][3] , 
        \next_psums[1][3][2] , \next_psums[1][3][1] , \next_psums[1][3][0] })
         );
  WBUF_ARRAY_SIZE4_DATA_W32_7 \genblk1[2].genblk1[0].WBUFs  ( .clk(clk), 
        .nRST(nRST), .WBUF_wr_en(\WBUF_wr_en[2][0] ), .WBUF_data_in(data_in), 
        .WBUF_data_out({\WBUF_data_out[2][0][31] , \WBUF_data_out[2][0][30] , 
        \WBUF_data_out[2][0][29] , \WBUF_data_out[2][0][28] , 
        \WBUF_data_out[2][0][27] , \WBUF_data_out[2][0][26] , 
        \WBUF_data_out[2][0][25] , \WBUF_data_out[2][0][24] , 
        \WBUF_data_out[2][0][23] , \WBUF_data_out[2][0][22] , 
        \WBUF_data_out[2][0][21] , \WBUF_data_out[2][0][20] , 
        \WBUF_data_out[2][0][19] , \WBUF_data_out[2][0][18] , 
        \WBUF_data_out[2][0][17] , \WBUF_data_out[2][0][16] , 
        \WBUF_data_out[2][0][15] , \WBUF_data_out[2][0][14] , 
        \WBUF_data_out[2][0][13] , \WBUF_data_out[2][0][12] , 
        \WBUF_data_out[2][0][11] , \WBUF_data_out[2][0][10] , 
        \WBUF_data_out[2][0][9] , \WBUF_data_out[2][0][8] , 
        \WBUF_data_out[2][0][7] , \WBUF_data_out[2][0][6] , 
        \WBUF_data_out[2][0][5] , \WBUF_data_out[2][0][4] , 
        \WBUF_data_out[2][0][3] , \WBUF_data_out[2][0][2] , 
        \WBUF_data_out[2][0][1] , \WBUF_data_out[2][0][0] }) );
  w_mux_7 \genblk1[2].genblk1[0].wmux  ( .clk(clk), .nRST(nRST), 
        .input_bitwidth(input_bitwidth), .rd_en(\weight_rd_en[2][0] ), 
        .data_in({\WBUF_data_out[2][0][31] , \WBUF_data_out[2][0][30] , 
        \WBUF_data_out[2][0][29] , \WBUF_data_out[2][0][28] , 
        \WBUF_data_out[2][0][27] , \WBUF_data_out[2][0][26] , 
        \WBUF_data_out[2][0][25] , \WBUF_data_out[2][0][24] , 
        \WBUF_data_out[2][0][23] , \WBUF_data_out[2][0][22] , 
        \WBUF_data_out[2][0][21] , \WBUF_data_out[2][0][20] , 
        \WBUF_data_out[2][0][19] , \WBUF_data_out[2][0][18] , 
        \WBUF_data_out[2][0][17] , \WBUF_data_out[2][0][16] , 
        \WBUF_data_out[2][0][15] , \WBUF_data_out[2][0][14] , 
        \WBUF_data_out[2][0][13] , \WBUF_data_out[2][0][12] , 
        \WBUF_data_out[2][0][11] , \WBUF_data_out[2][0][10] , 
        \WBUF_data_out[2][0][9] , \WBUF_data_out[2][0][8] , 
        \WBUF_data_out[2][0][7] , \WBUF_data_out[2][0][6] , 
        \WBUF_data_out[2][0][5] , \WBUF_data_out[2][0][4] , 
        \WBUF_data_out[2][0][3] , \WBUF_data_out[2][0][2] , 
        \WBUF_data_out[2][0][1] , \WBUF_data_out[2][0][0] }), .data_out({
        \weight_mux_outs[2][0][31] , \weight_mux_outs[2][0][30] , 
        \weight_mux_outs[2][0][29] , \weight_mux_outs[2][0][28] , 
        \weight_mux_outs[2][0][27] , \weight_mux_outs[2][0][26] , 
        \weight_mux_outs[2][0][25] , \weight_mux_outs[2][0][24] , 
        \weight_mux_outs[2][0][23] , \weight_mux_outs[2][0][22] , 
        \weight_mux_outs[2][0][21] , \weight_mux_outs[2][0][20] , 
        \weight_mux_outs[2][0][19] , \weight_mux_outs[2][0][18] , 
        \weight_mux_outs[2][0][17] , \weight_mux_outs[2][0][16] , 
        \weight_mux_outs[2][0][15] , \weight_mux_outs[2][0][14] , 
        \weight_mux_outs[2][0][13] , \weight_mux_outs[2][0][12] , 
        \weight_mux_outs[2][0][11] , \weight_mux_outs[2][0][10] , 
        \weight_mux_outs[2][0][9] , \weight_mux_outs[2][0][8] , 
        \weight_mux_outs[2][0][7] , \weight_mux_outs[2][0][6] , 
        \weight_mux_outs[2][0][5] , \weight_mux_outs[2][0][4] , 
        \weight_mux_outs[2][0][3] , \weight_mux_outs[2][0][2] , 
        \weight_mux_outs[2][0][1] , \weight_mux_outs[2][0][0] }) );
  IBUF_ARRAY_SIZE4_DATA_W32_1 \genblk1[2].genblk1[0].genblk1.IBUFs  ( .clk(clk), .nRST(nRST), .IBUF_wr_en(IBUF_wr_en[2]), .IBUF_data_in(data_in), 
        .IBUF_data_out({\IBUF_data_out[2][31] , \IBUF_data_out[2][30] , 
        \IBUF_data_out[2][29] , \IBUF_data_out[2][28] , \IBUF_data_out[2][27] , 
        \IBUF_data_out[2][26] , \IBUF_data_out[2][25] , \IBUF_data_out[2][24] , 
        \IBUF_data_out[2][23] , \IBUF_data_out[2][22] , \IBUF_data_out[2][21] , 
        \IBUF_data_out[2][20] , \IBUF_data_out[2][19] , \IBUF_data_out[2][18] , 
        \IBUF_data_out[2][17] , \IBUF_data_out[2][16] , \IBUF_data_out[2][15] , 
        \IBUF_data_out[2][14] , \IBUF_data_out[2][13] , \IBUF_data_out[2][12] , 
        \IBUF_data_out[2][11] , \IBUF_data_out[2][10] , \IBUF_data_out[2][9] , 
        \IBUF_data_out[2][8] , \IBUF_data_out[2][7] , \IBUF_data_out[2][6] , 
        \IBUF_data_out[2][5] , \IBUF_data_out[2][4] , \IBUF_data_out[2][3] , 
        \IBUF_data_out[2][2] , \IBUF_data_out[2][1] , \IBUF_data_out[2][0] })
         );
  in_mux_1 \genblk1[2].genblk1[0].genblk1.imux  ( .clk(clk), .nRST(nRST), 
        .weight_bitwidth(weight_bitwidth), .rd_en(input_rd_en[2]), .data_in({
        \IBUF_data_out[2][31] , \IBUF_data_out[2][30] , \IBUF_data_out[2][29] , 
        \IBUF_data_out[2][28] , \IBUF_data_out[2][27] , \IBUF_data_out[2][26] , 
        \IBUF_data_out[2][25] , \IBUF_data_out[2][24] , \IBUF_data_out[2][23] , 
        \IBUF_data_out[2][22] , \IBUF_data_out[2][21] , \IBUF_data_out[2][20] , 
        \IBUF_data_out[2][19] , \IBUF_data_out[2][18] , \IBUF_data_out[2][17] , 
        \IBUF_data_out[2][16] , \IBUF_data_out[2][15] , \IBUF_data_out[2][14] , 
        \IBUF_data_out[2][13] , \IBUF_data_out[2][12] , \IBUF_data_out[2][11] , 
        \IBUF_data_out[2][10] , \IBUF_data_out[2][9] , \IBUF_data_out[2][8] , 
        \IBUF_data_out[2][7] , \IBUF_data_out[2][6] , \IBUF_data_out[2][5] , 
        \IBUF_data_out[2][4] , \IBUF_data_out[2][3] , \IBUF_data_out[2][2] , 
        \IBUF_data_out[2][1] , \IBUF_data_out[2][0] }), .data_out({
        \input_mux_outs[2][31] , \input_mux_outs[2][30] , 
        \input_mux_outs[2][29] , \input_mux_outs[2][28] , 
        \input_mux_outs[2][27] , \input_mux_outs[2][26] , 
        \input_mux_outs[2][25] , \input_mux_outs[2][24] , 
        \input_mux_outs[2][23] , \input_mux_outs[2][22] , 
        \input_mux_outs[2][21] , \input_mux_outs[2][20] , 
        \input_mux_outs[2][19] , \input_mux_outs[2][18] , 
        \input_mux_outs[2][17] , \input_mux_outs[2][16] , 
        \input_mux_outs[2][15] , \input_mux_outs[2][14] , 
        \input_mux_outs[2][13] , \input_mux_outs[2][12] , 
        \input_mux_outs[2][11] , \input_mux_outs[2][10] , 
        \input_mux_outs[2][9] , \input_mux_outs[2][8] , \input_mux_outs[2][7] , 
        \input_mux_outs[2][6] , \input_mux_outs[2][5] , \input_mux_outs[2][4] , 
        \input_mux_outs[2][3] , \input_mux_outs[2][2] , \input_mux_outs[2][1] , 
        \input_mux_outs[2][0] }) );
  fusion_unit_7 \genblk1[2].genblk1[0].genblk1.genblk1.fu  ( .clk(clk), .nRST(
        nRST), .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .input_sign({\input_sign[2][0][3] , 
        \input_sign[2][0][2] , \input_sign[2][0][1] , \input_sign[2][0][0] }), 
        .weight_sign({\weight_sign[2][0][3] , \weight_sign[2][0][2] , 
        \weight_sign[2][0][1] , \weight_sign[2][0][0] }), .input_forward({
        \input_mux_outs[2][31] , \input_mux_outs[2][30] , 
        \input_mux_outs[2][29] , \input_mux_outs[2][28] , 
        \input_mux_outs[2][27] , \input_mux_outs[2][26] , 
        \input_mux_outs[2][25] , \input_mux_outs[2][24] , 
        \input_mux_outs[2][23] , \input_mux_outs[2][22] , 
        \input_mux_outs[2][21] , \input_mux_outs[2][20] , 
        \input_mux_outs[2][19] , \input_mux_outs[2][18] , 
        \input_mux_outs[2][17] , \input_mux_outs[2][16] , 
        \input_mux_outs[2][15] , \input_mux_outs[2][14] , 
        \input_mux_outs[2][13] , \input_mux_outs[2][12] , 
        \input_mux_outs[2][11] , \input_mux_outs[2][10] , 
        \input_mux_outs[2][9] , \input_mux_outs[2][8] , \input_mux_outs[2][7] , 
        \input_mux_outs[2][6] , \input_mux_outs[2][5] , \input_mux_outs[2][4] , 
        \input_mux_outs[2][3] , \input_mux_outs[2][2] , \input_mux_outs[2][1] , 
        \input_mux_outs[2][0] }), .weight({\weight_mux_outs[2][0][31] , 
        \weight_mux_outs[2][0][30] , \weight_mux_outs[2][0][29] , 
        \weight_mux_outs[2][0][28] , \weight_mux_outs[2][0][27] , 
        \weight_mux_outs[2][0][26] , \weight_mux_outs[2][0][25] , 
        \weight_mux_outs[2][0][24] , \weight_mux_outs[2][0][23] , 
        \weight_mux_outs[2][0][22] , \weight_mux_outs[2][0][21] , 
        \weight_mux_outs[2][0][20] , \weight_mux_outs[2][0][19] , 
        \weight_mux_outs[2][0][18] , \weight_mux_outs[2][0][17] , 
        \weight_mux_outs[2][0][16] , \weight_mux_outs[2][0][15] , 
        \weight_mux_outs[2][0][14] , \weight_mux_outs[2][0][13] , 
        \weight_mux_outs[2][0][12] , \weight_mux_outs[2][0][11] , 
        \weight_mux_outs[2][0][10] , \weight_mux_outs[2][0][9] , 
        \weight_mux_outs[2][0][8] , \weight_mux_outs[2][0][7] , 
        \weight_mux_outs[2][0][6] , \weight_mux_outs[2][0][5] , 
        \weight_mux_outs[2][0][4] , \weight_mux_outs[2][0][3] , 
        \weight_mux_outs[2][0][2] , \weight_mux_outs[2][0][1] , 
        \weight_mux_outs[2][0][0] }), .psum_in({\psums[1][0][31] , 
        \psums[1][0][30] , \psums[1][0][29] , \psums[1][0][28] , 
        \psums[1][0][27] , \psums[1][0][26] , \psums[1][0][25] , 
        \psums[1][0][24] , \psums[1][0][23] , \psums[1][0][22] , 
        \psums[1][0][21] , \psums[1][0][20] , \psums[1][0][19] , 
        \psums[1][0][18] , \psums[1][0][17] , \psums[1][0][16] , 
        \psums[1][0][15] , \psums[1][0][14] , \psums[1][0][13] , 
        \psums[1][0][12] , \psums[1][0][11] , \psums[1][0][10] , 
        \psums[1][0][9] , \psums[1][0][8] , \psums[1][0][7] , \psums[1][0][6] , 
        \psums[1][0][5] , \psums[1][0][4] , \psums[1][0][3] , \psums[1][0][2] , 
        \psums[1][0][1] , \psums[1][0][0] }), .psum({\next_psums[2][0][31] , 
        \next_psums[2][0][30] , \next_psums[2][0][29] , \next_psums[2][0][28] , 
        \next_psums[2][0][27] , \next_psums[2][0][26] , \next_psums[2][0][25] , 
        \next_psums[2][0][24] , \next_psums[2][0][23] , \next_psums[2][0][22] , 
        \next_psums[2][0][21] , \next_psums[2][0][20] , \next_psums[2][0][19] , 
        \next_psums[2][0][18] , \next_psums[2][0][17] , \next_psums[2][0][16] , 
        \next_psums[2][0][15] , \next_psums[2][0][14] , \next_psums[2][0][13] , 
        \next_psums[2][0][12] , \next_psums[2][0][11] , \next_psums[2][0][10] , 
        \next_psums[2][0][9] , \next_psums[2][0][8] , \next_psums[2][0][7] , 
        \next_psums[2][0][6] , \next_psums[2][0][5] , \next_psums[2][0][4] , 
        \next_psums[2][0][3] , \next_psums[2][0][2] , \next_psums[2][0][1] , 
        \next_psums[2][0][0] }), .input_to_right({
        \next_input_forward_reg[2][0][31] , \next_input_forward_reg[2][0][30] , 
        \next_input_forward_reg[2][0][29] , \next_input_forward_reg[2][0][28] , 
        \next_input_forward_reg[2][0][27] , \next_input_forward_reg[2][0][26] , 
        \next_input_forward_reg[2][0][25] , \next_input_forward_reg[2][0][24] , 
        \next_input_forward_reg[2][0][23] , \next_input_forward_reg[2][0][22] , 
        \next_input_forward_reg[2][0][21] , \next_input_forward_reg[2][0][20] , 
        \next_input_forward_reg[2][0][19] , \next_input_forward_reg[2][0][18] , 
        \next_input_forward_reg[2][0][17] , \next_input_forward_reg[2][0][16] , 
        \next_input_forward_reg[2][0][15] , \next_input_forward_reg[2][0][14] , 
        \next_input_forward_reg[2][0][13] , \next_input_forward_reg[2][0][12] , 
        \next_input_forward_reg[2][0][11] , \next_input_forward_reg[2][0][10] , 
        \next_input_forward_reg[2][0][9] , \next_input_forward_reg[2][0][8] , 
        \next_input_forward_reg[2][0][7] , \next_input_forward_reg[2][0][6] , 
        \next_input_forward_reg[2][0][5] , \next_input_forward_reg[2][0][4] , 
        \next_input_forward_reg[2][0][3] , \next_input_forward_reg[2][0][2] , 
        \next_input_forward_reg[2][0][1] , \next_input_forward_reg[2][0][0] })
         );
  WBUF_ARRAY_SIZE4_DATA_W32_6 \genblk1[2].genblk1[1].WBUFs  ( .clk(clk), 
        .nRST(nRST), .WBUF_wr_en(\WBUF_wr_en[2][1] ), .WBUF_data_in(data_in), 
        .WBUF_data_out({\WBUF_data_out[2][1][31] , \WBUF_data_out[2][1][30] , 
        \WBUF_data_out[2][1][29] , \WBUF_data_out[2][1][28] , 
        \WBUF_data_out[2][1][27] , \WBUF_data_out[2][1][26] , 
        \WBUF_data_out[2][1][25] , \WBUF_data_out[2][1][24] , 
        \WBUF_data_out[2][1][23] , \WBUF_data_out[2][1][22] , 
        \WBUF_data_out[2][1][21] , \WBUF_data_out[2][1][20] , 
        \WBUF_data_out[2][1][19] , \WBUF_data_out[2][1][18] , 
        \WBUF_data_out[2][1][17] , \WBUF_data_out[2][1][16] , 
        \WBUF_data_out[2][1][15] , \WBUF_data_out[2][1][14] , 
        \WBUF_data_out[2][1][13] , \WBUF_data_out[2][1][12] , 
        \WBUF_data_out[2][1][11] , \WBUF_data_out[2][1][10] , 
        \WBUF_data_out[2][1][9] , \WBUF_data_out[2][1][8] , 
        \WBUF_data_out[2][1][7] , \WBUF_data_out[2][1][6] , 
        \WBUF_data_out[2][1][5] , \WBUF_data_out[2][1][4] , 
        \WBUF_data_out[2][1][3] , \WBUF_data_out[2][1][2] , 
        \WBUF_data_out[2][1][1] , \WBUF_data_out[2][1][0] }) );
  w_mux_6 \genblk1[2].genblk1[1].wmux  ( .clk(clk), .nRST(nRST), 
        .input_bitwidth(input_bitwidth), .rd_en(\weight_rd_en[2][1] ), 
        .data_in({\WBUF_data_out[2][1][31] , \WBUF_data_out[2][1][30] , 
        \WBUF_data_out[2][1][29] , \WBUF_data_out[2][1][28] , 
        \WBUF_data_out[2][1][27] , \WBUF_data_out[2][1][26] , 
        \WBUF_data_out[2][1][25] , \WBUF_data_out[2][1][24] , 
        \WBUF_data_out[2][1][23] , \WBUF_data_out[2][1][22] , 
        \WBUF_data_out[2][1][21] , \WBUF_data_out[2][1][20] , 
        \WBUF_data_out[2][1][19] , \WBUF_data_out[2][1][18] , 
        \WBUF_data_out[2][1][17] , \WBUF_data_out[2][1][16] , 
        \WBUF_data_out[2][1][15] , \WBUF_data_out[2][1][14] , 
        \WBUF_data_out[2][1][13] , \WBUF_data_out[2][1][12] , 
        \WBUF_data_out[2][1][11] , \WBUF_data_out[2][1][10] , 
        \WBUF_data_out[2][1][9] , \WBUF_data_out[2][1][8] , 
        \WBUF_data_out[2][1][7] , \WBUF_data_out[2][1][6] , 
        \WBUF_data_out[2][1][5] , \WBUF_data_out[2][1][4] , 
        \WBUF_data_out[2][1][3] , \WBUF_data_out[2][1][2] , 
        \WBUF_data_out[2][1][1] , \WBUF_data_out[2][1][0] }), .data_out({
        \weight_mux_outs[2][1][31] , \weight_mux_outs[2][1][30] , 
        \weight_mux_outs[2][1][29] , \weight_mux_outs[2][1][28] , 
        \weight_mux_outs[2][1][27] , \weight_mux_outs[2][1][26] , 
        \weight_mux_outs[2][1][25] , \weight_mux_outs[2][1][24] , 
        \weight_mux_outs[2][1][23] , \weight_mux_outs[2][1][22] , 
        \weight_mux_outs[2][1][21] , \weight_mux_outs[2][1][20] , 
        \weight_mux_outs[2][1][19] , \weight_mux_outs[2][1][18] , 
        \weight_mux_outs[2][1][17] , \weight_mux_outs[2][1][16] , 
        \weight_mux_outs[2][1][15] , \weight_mux_outs[2][1][14] , 
        \weight_mux_outs[2][1][13] , \weight_mux_outs[2][1][12] , 
        \weight_mux_outs[2][1][11] , \weight_mux_outs[2][1][10] , 
        \weight_mux_outs[2][1][9] , \weight_mux_outs[2][1][8] , 
        \weight_mux_outs[2][1][7] , \weight_mux_outs[2][1][6] , 
        \weight_mux_outs[2][1][5] , \weight_mux_outs[2][1][4] , 
        \weight_mux_outs[2][1][3] , \weight_mux_outs[2][1][2] , 
        \weight_mux_outs[2][1][1] , \weight_mux_outs[2][1][0] }) );
  fusion_unit_6 \genblk1[2].genblk1[1].genblk1.genblk1.fu  ( .clk(clk), .nRST(
        nRST), .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .input_sign({\input_sign[2][1][3] , 
        \input_sign[2][1][2] , \input_sign[2][1][1] , \input_sign[2][1][0] }), 
        .weight_sign({\weight_sign[2][1][3] , \weight_sign[2][1][2] , 
        \weight_sign[2][1][1] , \weight_sign[2][1][0] }), .input_forward({
        \input_forward_reg[2][0][31] , \input_forward_reg[2][0][30] , 
        \input_forward_reg[2][0][29] , \input_forward_reg[2][0][28] , 
        \input_forward_reg[2][0][27] , \input_forward_reg[2][0][26] , 
        \input_forward_reg[2][0][25] , \input_forward_reg[2][0][24] , 
        \input_forward_reg[2][0][23] , \input_forward_reg[2][0][22] , 
        \input_forward_reg[2][0][21] , \input_forward_reg[2][0][20] , 
        \input_forward_reg[2][0][19] , \input_forward_reg[2][0][18] , 
        \input_forward_reg[2][0][17] , \input_forward_reg[2][0][16] , 
        \input_forward_reg[2][0][15] , \input_forward_reg[2][0][14] , 
        \input_forward_reg[2][0][13] , \input_forward_reg[2][0][12] , 
        \input_forward_reg[2][0][11] , \input_forward_reg[2][0][10] , 
        \input_forward_reg[2][0][9] , \input_forward_reg[2][0][8] , 
        \input_forward_reg[2][0][7] , \input_forward_reg[2][0][6] , 
        \input_forward_reg[2][0][5] , \input_forward_reg[2][0][4] , 
        \input_forward_reg[2][0][3] , \input_forward_reg[2][0][2] , 
        \input_forward_reg[2][0][1] , \input_forward_reg[2][0][0] }), .weight(
        {\weight_mux_outs[2][1][31] , \weight_mux_outs[2][1][30] , 
        \weight_mux_outs[2][1][29] , \weight_mux_outs[2][1][28] , 
        \weight_mux_outs[2][1][27] , \weight_mux_outs[2][1][26] , 
        \weight_mux_outs[2][1][25] , \weight_mux_outs[2][1][24] , 
        \weight_mux_outs[2][1][23] , \weight_mux_outs[2][1][22] , 
        \weight_mux_outs[2][1][21] , \weight_mux_outs[2][1][20] , 
        \weight_mux_outs[2][1][19] , \weight_mux_outs[2][1][18] , 
        \weight_mux_outs[2][1][17] , \weight_mux_outs[2][1][16] , 
        \weight_mux_outs[2][1][15] , \weight_mux_outs[2][1][14] , 
        \weight_mux_outs[2][1][13] , \weight_mux_outs[2][1][12] , 
        \weight_mux_outs[2][1][11] , \weight_mux_outs[2][1][10] , 
        \weight_mux_outs[2][1][9] , \weight_mux_outs[2][1][8] , 
        \weight_mux_outs[2][1][7] , \weight_mux_outs[2][1][6] , 
        \weight_mux_outs[2][1][5] , \weight_mux_outs[2][1][4] , 
        \weight_mux_outs[2][1][3] , \weight_mux_outs[2][1][2] , 
        \weight_mux_outs[2][1][1] , \weight_mux_outs[2][1][0] }), .psum_in({
        \psums[1][1][31] , \psums[1][1][30] , \psums[1][1][29] , 
        \psums[1][1][28] , \psums[1][1][27] , \psums[1][1][26] , 
        \psums[1][1][25] , \psums[1][1][24] , \psums[1][1][23] , 
        \psums[1][1][22] , \psums[1][1][21] , \psums[1][1][20] , 
        \psums[1][1][19] , \psums[1][1][18] , \psums[1][1][17] , 
        \psums[1][1][16] , \psums[1][1][15] , \psums[1][1][14] , 
        \psums[1][1][13] , \psums[1][1][12] , \psums[1][1][11] , 
        \psums[1][1][10] , \psums[1][1][9] , \psums[1][1][8] , 
        \psums[1][1][7] , \psums[1][1][6] , \psums[1][1][5] , \psums[1][1][4] , 
        \psums[1][1][3] , \psums[1][1][2] , \psums[1][1][1] , \psums[1][1][0] }), .psum({\next_psums[2][1][31] , \next_psums[2][1][30] , 
        \next_psums[2][1][29] , \next_psums[2][1][28] , \next_psums[2][1][27] , 
        \next_psums[2][1][26] , \next_psums[2][1][25] , \next_psums[2][1][24] , 
        \next_psums[2][1][23] , \next_psums[2][1][22] , \next_psums[2][1][21] , 
        \next_psums[2][1][20] , \next_psums[2][1][19] , \next_psums[2][1][18] , 
        \next_psums[2][1][17] , \next_psums[2][1][16] , \next_psums[2][1][15] , 
        \next_psums[2][1][14] , \next_psums[2][1][13] , \next_psums[2][1][12] , 
        \next_psums[2][1][11] , \next_psums[2][1][10] , \next_psums[2][1][9] , 
        \next_psums[2][1][8] , \next_psums[2][1][7] , \next_psums[2][1][6] , 
        \next_psums[2][1][5] , \next_psums[2][1][4] , \next_psums[2][1][3] , 
        \next_psums[2][1][2] , \next_psums[2][1][1] , \next_psums[2][1][0] }), 
        .input_to_right({\next_input_forward_reg[2][1][31] , 
        \next_input_forward_reg[2][1][30] , \next_input_forward_reg[2][1][29] , 
        \next_input_forward_reg[2][1][28] , \next_input_forward_reg[2][1][27] , 
        \next_input_forward_reg[2][1][26] , \next_input_forward_reg[2][1][25] , 
        \next_input_forward_reg[2][1][24] , \next_input_forward_reg[2][1][23] , 
        \next_input_forward_reg[2][1][22] , \next_input_forward_reg[2][1][21] , 
        \next_input_forward_reg[2][1][20] , \next_input_forward_reg[2][1][19] , 
        \next_input_forward_reg[2][1][18] , \next_input_forward_reg[2][1][17] , 
        \next_input_forward_reg[2][1][16] , \next_input_forward_reg[2][1][15] , 
        \next_input_forward_reg[2][1][14] , \next_input_forward_reg[2][1][13] , 
        \next_input_forward_reg[2][1][12] , \next_input_forward_reg[2][1][11] , 
        \next_input_forward_reg[2][1][10] , \next_input_forward_reg[2][1][9] , 
        \next_input_forward_reg[2][1][8] , \next_input_forward_reg[2][1][7] , 
        \next_input_forward_reg[2][1][6] , \next_input_forward_reg[2][1][5] , 
        \next_input_forward_reg[2][1][4] , \next_input_forward_reg[2][1][3] , 
        \next_input_forward_reg[2][1][2] , \next_input_forward_reg[2][1][1] , 
        \next_input_forward_reg[2][1][0] }) );
  WBUF_ARRAY_SIZE4_DATA_W32_5 \genblk1[2].genblk1[2].WBUFs  ( .clk(clk), 
        .nRST(nRST), .WBUF_wr_en(\WBUF_wr_en[2][2] ), .WBUF_data_in(data_in), 
        .WBUF_data_out({\WBUF_data_out[2][2][31] , \WBUF_data_out[2][2][30] , 
        \WBUF_data_out[2][2][29] , \WBUF_data_out[2][2][28] , 
        \WBUF_data_out[2][2][27] , \WBUF_data_out[2][2][26] , 
        \WBUF_data_out[2][2][25] , \WBUF_data_out[2][2][24] , 
        \WBUF_data_out[2][2][23] , \WBUF_data_out[2][2][22] , 
        \WBUF_data_out[2][2][21] , \WBUF_data_out[2][2][20] , 
        \WBUF_data_out[2][2][19] , \WBUF_data_out[2][2][18] , 
        \WBUF_data_out[2][2][17] , \WBUF_data_out[2][2][16] , 
        \WBUF_data_out[2][2][15] , \WBUF_data_out[2][2][14] , 
        \WBUF_data_out[2][2][13] , \WBUF_data_out[2][2][12] , 
        \WBUF_data_out[2][2][11] , \WBUF_data_out[2][2][10] , 
        \WBUF_data_out[2][2][9] , \WBUF_data_out[2][2][8] , 
        \WBUF_data_out[2][2][7] , \WBUF_data_out[2][2][6] , 
        \WBUF_data_out[2][2][5] , \WBUF_data_out[2][2][4] , 
        \WBUF_data_out[2][2][3] , \WBUF_data_out[2][2][2] , 
        \WBUF_data_out[2][2][1] , \WBUF_data_out[2][2][0] }) );
  w_mux_5 \genblk1[2].genblk1[2].wmux  ( .clk(clk), .nRST(nRST), 
        .input_bitwidth(input_bitwidth), .rd_en(\weight_rd_en[2][2] ), 
        .data_in({\WBUF_data_out[2][2][31] , \WBUF_data_out[2][2][30] , 
        \WBUF_data_out[2][2][29] , \WBUF_data_out[2][2][28] , 
        \WBUF_data_out[2][2][27] , \WBUF_data_out[2][2][26] , 
        \WBUF_data_out[2][2][25] , \WBUF_data_out[2][2][24] , 
        \WBUF_data_out[2][2][23] , \WBUF_data_out[2][2][22] , 
        \WBUF_data_out[2][2][21] , \WBUF_data_out[2][2][20] , 
        \WBUF_data_out[2][2][19] , \WBUF_data_out[2][2][18] , 
        \WBUF_data_out[2][2][17] , \WBUF_data_out[2][2][16] , 
        \WBUF_data_out[2][2][15] , \WBUF_data_out[2][2][14] , 
        \WBUF_data_out[2][2][13] , \WBUF_data_out[2][2][12] , 
        \WBUF_data_out[2][2][11] , \WBUF_data_out[2][2][10] , 
        \WBUF_data_out[2][2][9] , \WBUF_data_out[2][2][8] , 
        \WBUF_data_out[2][2][7] , \WBUF_data_out[2][2][6] , 
        \WBUF_data_out[2][2][5] , \WBUF_data_out[2][2][4] , 
        \WBUF_data_out[2][2][3] , \WBUF_data_out[2][2][2] , 
        \WBUF_data_out[2][2][1] , \WBUF_data_out[2][2][0] }), .data_out({
        \weight_mux_outs[2][2][31] , \weight_mux_outs[2][2][30] , 
        \weight_mux_outs[2][2][29] , \weight_mux_outs[2][2][28] , 
        \weight_mux_outs[2][2][27] , \weight_mux_outs[2][2][26] , 
        \weight_mux_outs[2][2][25] , \weight_mux_outs[2][2][24] , 
        \weight_mux_outs[2][2][23] , \weight_mux_outs[2][2][22] , 
        \weight_mux_outs[2][2][21] , \weight_mux_outs[2][2][20] , 
        \weight_mux_outs[2][2][19] , \weight_mux_outs[2][2][18] , 
        \weight_mux_outs[2][2][17] , \weight_mux_outs[2][2][16] , 
        \weight_mux_outs[2][2][15] , \weight_mux_outs[2][2][14] , 
        \weight_mux_outs[2][2][13] , \weight_mux_outs[2][2][12] , 
        \weight_mux_outs[2][2][11] , \weight_mux_outs[2][2][10] , 
        \weight_mux_outs[2][2][9] , \weight_mux_outs[2][2][8] , 
        \weight_mux_outs[2][2][7] , \weight_mux_outs[2][2][6] , 
        \weight_mux_outs[2][2][5] , \weight_mux_outs[2][2][4] , 
        \weight_mux_outs[2][2][3] , \weight_mux_outs[2][2][2] , 
        \weight_mux_outs[2][2][1] , \weight_mux_outs[2][2][0] }) );
  fusion_unit_5 \genblk1[2].genblk1[2].genblk1.genblk1.fu  ( .clk(clk), .nRST(
        nRST), .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .input_sign({\input_sign[2][2][3] , 
        \input_sign[2][2][2] , \input_sign[2][2][1] , \input_sign[2][2][0] }), 
        .weight_sign({\weight_sign[2][2][3] , \weight_sign[2][2][2] , 
        \weight_sign[2][2][1] , \weight_sign[2][2][0] }), .input_forward({
        \input_forward_reg[2][1][31] , \input_forward_reg[2][1][30] , 
        \input_forward_reg[2][1][29] , \input_forward_reg[2][1][28] , 
        \input_forward_reg[2][1][27] , \input_forward_reg[2][1][26] , 
        \input_forward_reg[2][1][25] , \input_forward_reg[2][1][24] , 
        \input_forward_reg[2][1][23] , \input_forward_reg[2][1][22] , 
        \input_forward_reg[2][1][21] , \input_forward_reg[2][1][20] , 
        \input_forward_reg[2][1][19] , \input_forward_reg[2][1][18] , 
        \input_forward_reg[2][1][17] , \input_forward_reg[2][1][16] , 
        \input_forward_reg[2][1][15] , \input_forward_reg[2][1][14] , 
        \input_forward_reg[2][1][13] , \input_forward_reg[2][1][12] , 
        \input_forward_reg[2][1][11] , \input_forward_reg[2][1][10] , 
        \input_forward_reg[2][1][9] , \input_forward_reg[2][1][8] , 
        \input_forward_reg[2][1][7] , \input_forward_reg[2][1][6] , 
        \input_forward_reg[2][1][5] , \input_forward_reg[2][1][4] , 
        \input_forward_reg[2][1][3] , \input_forward_reg[2][1][2] , 
        \input_forward_reg[2][1][1] , \input_forward_reg[2][1][0] }), .weight(
        {\weight_mux_outs[2][2][31] , \weight_mux_outs[2][2][30] , 
        \weight_mux_outs[2][2][29] , \weight_mux_outs[2][2][28] , 
        \weight_mux_outs[2][2][27] , \weight_mux_outs[2][2][26] , 
        \weight_mux_outs[2][2][25] , \weight_mux_outs[2][2][24] , 
        \weight_mux_outs[2][2][23] , \weight_mux_outs[2][2][22] , 
        \weight_mux_outs[2][2][21] , \weight_mux_outs[2][2][20] , 
        \weight_mux_outs[2][2][19] , \weight_mux_outs[2][2][18] , 
        \weight_mux_outs[2][2][17] , \weight_mux_outs[2][2][16] , 
        \weight_mux_outs[2][2][15] , \weight_mux_outs[2][2][14] , 
        \weight_mux_outs[2][2][13] , \weight_mux_outs[2][2][12] , 
        \weight_mux_outs[2][2][11] , \weight_mux_outs[2][2][10] , 
        \weight_mux_outs[2][2][9] , \weight_mux_outs[2][2][8] , 
        \weight_mux_outs[2][2][7] , \weight_mux_outs[2][2][6] , 
        \weight_mux_outs[2][2][5] , \weight_mux_outs[2][2][4] , 
        \weight_mux_outs[2][2][3] , \weight_mux_outs[2][2][2] , 
        \weight_mux_outs[2][2][1] , \weight_mux_outs[2][2][0] }), .psum_in({
        \psums[1][2][31] , \psums[1][2][30] , \psums[1][2][29] , 
        \psums[1][2][28] , \psums[1][2][27] , \psums[1][2][26] , 
        \psums[1][2][25] , \psums[1][2][24] , \psums[1][2][23] , 
        \psums[1][2][22] , \psums[1][2][21] , \psums[1][2][20] , 
        \psums[1][2][19] , \psums[1][2][18] , \psums[1][2][17] , 
        \psums[1][2][16] , \psums[1][2][15] , \psums[1][2][14] , 
        \psums[1][2][13] , \psums[1][2][12] , \psums[1][2][11] , 
        \psums[1][2][10] , \psums[1][2][9] , \psums[1][2][8] , 
        \psums[1][2][7] , \psums[1][2][6] , \psums[1][2][5] , \psums[1][2][4] , 
        \psums[1][2][3] , \psums[1][2][2] , \psums[1][2][1] , \psums[1][2][0] }), .psum({\next_psums[2][2][31] , \next_psums[2][2][30] , 
        \next_psums[2][2][29] , \next_psums[2][2][28] , \next_psums[2][2][27] , 
        \next_psums[2][2][26] , \next_psums[2][2][25] , \next_psums[2][2][24] , 
        \next_psums[2][2][23] , \next_psums[2][2][22] , \next_psums[2][2][21] , 
        \next_psums[2][2][20] , \next_psums[2][2][19] , \next_psums[2][2][18] , 
        \next_psums[2][2][17] , \next_psums[2][2][16] , \next_psums[2][2][15] , 
        \next_psums[2][2][14] , \next_psums[2][2][13] , \next_psums[2][2][12] , 
        \next_psums[2][2][11] , \next_psums[2][2][10] , \next_psums[2][2][9] , 
        \next_psums[2][2][8] , \next_psums[2][2][7] , \next_psums[2][2][6] , 
        \next_psums[2][2][5] , \next_psums[2][2][4] , \next_psums[2][2][3] , 
        \next_psums[2][2][2] , \next_psums[2][2][1] , \next_psums[2][2][0] }), 
        .input_to_right({\next_input_forward_reg[2][2][31] , 
        \next_input_forward_reg[2][2][30] , \next_input_forward_reg[2][2][29] , 
        \next_input_forward_reg[2][2][28] , \next_input_forward_reg[2][2][27] , 
        \next_input_forward_reg[2][2][26] , \next_input_forward_reg[2][2][25] , 
        \next_input_forward_reg[2][2][24] , \next_input_forward_reg[2][2][23] , 
        \next_input_forward_reg[2][2][22] , \next_input_forward_reg[2][2][21] , 
        \next_input_forward_reg[2][2][20] , \next_input_forward_reg[2][2][19] , 
        \next_input_forward_reg[2][2][18] , \next_input_forward_reg[2][2][17] , 
        \next_input_forward_reg[2][2][16] , \next_input_forward_reg[2][2][15] , 
        \next_input_forward_reg[2][2][14] , \next_input_forward_reg[2][2][13] , 
        \next_input_forward_reg[2][2][12] , \next_input_forward_reg[2][2][11] , 
        \next_input_forward_reg[2][2][10] , \next_input_forward_reg[2][2][9] , 
        \next_input_forward_reg[2][2][8] , \next_input_forward_reg[2][2][7] , 
        \next_input_forward_reg[2][2][6] , \next_input_forward_reg[2][2][5] , 
        \next_input_forward_reg[2][2][4] , \next_input_forward_reg[2][2][3] , 
        \next_input_forward_reg[2][2][2] , \next_input_forward_reg[2][2][1] , 
        \next_input_forward_reg[2][2][0] }) );
  WBUF_ARRAY_SIZE4_DATA_W32_4 \genblk1[2].genblk1[3].WBUFs  ( .clk(clk), 
        .nRST(nRST), .WBUF_wr_en(\WBUF_wr_en[2][3] ), .WBUF_data_in(data_in), 
        .WBUF_data_out({\WBUF_data_out[2][3][31] , \WBUF_data_out[2][3][30] , 
        \WBUF_data_out[2][3][29] , \WBUF_data_out[2][3][28] , 
        \WBUF_data_out[2][3][27] , \WBUF_data_out[2][3][26] , 
        \WBUF_data_out[2][3][25] , \WBUF_data_out[2][3][24] , 
        \WBUF_data_out[2][3][23] , \WBUF_data_out[2][3][22] , 
        \WBUF_data_out[2][3][21] , \WBUF_data_out[2][3][20] , 
        \WBUF_data_out[2][3][19] , \WBUF_data_out[2][3][18] , 
        \WBUF_data_out[2][3][17] , \WBUF_data_out[2][3][16] , 
        \WBUF_data_out[2][3][15] , \WBUF_data_out[2][3][14] , 
        \WBUF_data_out[2][3][13] , \WBUF_data_out[2][3][12] , 
        \WBUF_data_out[2][3][11] , \WBUF_data_out[2][3][10] , 
        \WBUF_data_out[2][3][9] , \WBUF_data_out[2][3][8] , 
        \WBUF_data_out[2][3][7] , \WBUF_data_out[2][3][6] , 
        \WBUF_data_out[2][3][5] , \WBUF_data_out[2][3][4] , 
        \WBUF_data_out[2][3][3] , \WBUF_data_out[2][3][2] , 
        \WBUF_data_out[2][3][1] , \WBUF_data_out[2][3][0] }) );
  w_mux_4 \genblk1[2].genblk1[3].wmux  ( .clk(clk), .nRST(nRST), 
        .input_bitwidth(input_bitwidth), .rd_en(\weight_rd_en[2][3] ), 
        .data_in({\WBUF_data_out[2][3][31] , \WBUF_data_out[2][3][30] , 
        \WBUF_data_out[2][3][29] , \WBUF_data_out[2][3][28] , 
        \WBUF_data_out[2][3][27] , \WBUF_data_out[2][3][26] , 
        \WBUF_data_out[2][3][25] , \WBUF_data_out[2][3][24] , 
        \WBUF_data_out[2][3][23] , \WBUF_data_out[2][3][22] , 
        \WBUF_data_out[2][3][21] , \WBUF_data_out[2][3][20] , 
        \WBUF_data_out[2][3][19] , \WBUF_data_out[2][3][18] , 
        \WBUF_data_out[2][3][17] , \WBUF_data_out[2][3][16] , 
        \WBUF_data_out[2][3][15] , \WBUF_data_out[2][3][14] , 
        \WBUF_data_out[2][3][13] , \WBUF_data_out[2][3][12] , 
        \WBUF_data_out[2][3][11] , \WBUF_data_out[2][3][10] , 
        \WBUF_data_out[2][3][9] , \WBUF_data_out[2][3][8] , 
        \WBUF_data_out[2][3][7] , \WBUF_data_out[2][3][6] , 
        \WBUF_data_out[2][3][5] , \WBUF_data_out[2][3][4] , 
        \WBUF_data_out[2][3][3] , \WBUF_data_out[2][3][2] , 
        \WBUF_data_out[2][3][1] , \WBUF_data_out[2][3][0] }), .data_out({
        \weight_mux_outs[2][3][31] , \weight_mux_outs[2][3][30] , 
        \weight_mux_outs[2][3][29] , \weight_mux_outs[2][3][28] , 
        \weight_mux_outs[2][3][27] , \weight_mux_outs[2][3][26] , 
        \weight_mux_outs[2][3][25] , \weight_mux_outs[2][3][24] , 
        \weight_mux_outs[2][3][23] , \weight_mux_outs[2][3][22] , 
        \weight_mux_outs[2][3][21] , \weight_mux_outs[2][3][20] , 
        \weight_mux_outs[2][3][19] , \weight_mux_outs[2][3][18] , 
        \weight_mux_outs[2][3][17] , \weight_mux_outs[2][3][16] , 
        \weight_mux_outs[2][3][15] , \weight_mux_outs[2][3][14] , 
        \weight_mux_outs[2][3][13] , \weight_mux_outs[2][3][12] , 
        \weight_mux_outs[2][3][11] , \weight_mux_outs[2][3][10] , 
        \weight_mux_outs[2][3][9] , \weight_mux_outs[2][3][8] , 
        \weight_mux_outs[2][3][7] , \weight_mux_outs[2][3][6] , 
        \weight_mux_outs[2][3][5] , \weight_mux_outs[2][3][4] , 
        \weight_mux_outs[2][3][3] , \weight_mux_outs[2][3][2] , 
        \weight_mux_outs[2][3][1] , \weight_mux_outs[2][3][0] }) );
  fusion_unit_4 \genblk1[2].genblk1[3].genblk1.genblk1.fu  ( .clk(clk), .nRST(
        nRST), .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .input_sign({\input_sign[2][3][3] , 
        \input_sign[2][3][2] , \input_sign[2][3][1] , \input_sign[2][3][0] }), 
        .weight_sign({\weight_sign[2][3][3] , \weight_sign[2][3][2] , 
        \weight_sign[2][3][1] , \weight_sign[2][3][0] }), .input_forward({
        \input_forward_reg[2][2][31] , \input_forward_reg[2][2][30] , 
        \input_forward_reg[2][2][29] , \input_forward_reg[2][2][28] , 
        \input_forward_reg[2][2][27] , \input_forward_reg[2][2][26] , 
        \input_forward_reg[2][2][25] , \input_forward_reg[2][2][24] , 
        \input_forward_reg[2][2][23] , \input_forward_reg[2][2][22] , 
        \input_forward_reg[2][2][21] , \input_forward_reg[2][2][20] , 
        \input_forward_reg[2][2][19] , \input_forward_reg[2][2][18] , 
        \input_forward_reg[2][2][17] , \input_forward_reg[2][2][16] , 
        \input_forward_reg[2][2][15] , \input_forward_reg[2][2][14] , 
        \input_forward_reg[2][2][13] , \input_forward_reg[2][2][12] , 
        \input_forward_reg[2][2][11] , \input_forward_reg[2][2][10] , 
        \input_forward_reg[2][2][9] , \input_forward_reg[2][2][8] , 
        \input_forward_reg[2][2][7] , \input_forward_reg[2][2][6] , 
        \input_forward_reg[2][2][5] , \input_forward_reg[2][2][4] , 
        \input_forward_reg[2][2][3] , \input_forward_reg[2][2][2] , 
        \input_forward_reg[2][2][1] , \input_forward_reg[2][2][0] }), .weight(
        {\weight_mux_outs[2][3][31] , \weight_mux_outs[2][3][30] , 
        \weight_mux_outs[2][3][29] , \weight_mux_outs[2][3][28] , 
        \weight_mux_outs[2][3][27] , \weight_mux_outs[2][3][26] , 
        \weight_mux_outs[2][3][25] , \weight_mux_outs[2][3][24] , 
        \weight_mux_outs[2][3][23] , \weight_mux_outs[2][3][22] , 
        \weight_mux_outs[2][3][21] , \weight_mux_outs[2][3][20] , 
        \weight_mux_outs[2][3][19] , \weight_mux_outs[2][3][18] , 
        \weight_mux_outs[2][3][17] , \weight_mux_outs[2][3][16] , 
        \weight_mux_outs[2][3][15] , \weight_mux_outs[2][3][14] , 
        \weight_mux_outs[2][3][13] , \weight_mux_outs[2][3][12] , 
        \weight_mux_outs[2][3][11] , \weight_mux_outs[2][3][10] , 
        \weight_mux_outs[2][3][9] , \weight_mux_outs[2][3][8] , 
        \weight_mux_outs[2][3][7] , \weight_mux_outs[2][3][6] , 
        \weight_mux_outs[2][3][5] , \weight_mux_outs[2][3][4] , 
        \weight_mux_outs[2][3][3] , \weight_mux_outs[2][3][2] , 
        \weight_mux_outs[2][3][1] , \weight_mux_outs[2][3][0] }), .psum_in({
        \psums[1][3][31] , \psums[1][3][30] , \psums[1][3][29] , 
        \psums[1][3][28] , \psums[1][3][27] , \psums[1][3][26] , 
        \psums[1][3][25] , \psums[1][3][24] , \psums[1][3][23] , 
        \psums[1][3][22] , \psums[1][3][21] , \psums[1][3][20] , 
        \psums[1][3][19] , \psums[1][3][18] , \psums[1][3][17] , 
        \psums[1][3][16] , \psums[1][3][15] , \psums[1][3][14] , 
        \psums[1][3][13] , \psums[1][3][12] , \psums[1][3][11] , 
        \psums[1][3][10] , \psums[1][3][9] , \psums[1][3][8] , 
        \psums[1][3][7] , \psums[1][3][6] , \psums[1][3][5] , \psums[1][3][4] , 
        \psums[1][3][3] , \psums[1][3][2] , \psums[1][3][1] , \psums[1][3][0] }), .psum({\next_psums[2][3][31] , \next_psums[2][3][30] , 
        \next_psums[2][3][29] , \next_psums[2][3][28] , \next_psums[2][3][27] , 
        \next_psums[2][3][26] , \next_psums[2][3][25] , \next_psums[2][3][24] , 
        \next_psums[2][3][23] , \next_psums[2][3][22] , \next_psums[2][3][21] , 
        \next_psums[2][3][20] , \next_psums[2][3][19] , \next_psums[2][3][18] , 
        \next_psums[2][3][17] , \next_psums[2][3][16] , \next_psums[2][3][15] , 
        \next_psums[2][3][14] , \next_psums[2][3][13] , \next_psums[2][3][12] , 
        \next_psums[2][3][11] , \next_psums[2][3][10] , \next_psums[2][3][9] , 
        \next_psums[2][3][8] , \next_psums[2][3][7] , \next_psums[2][3][6] , 
        \next_psums[2][3][5] , \next_psums[2][3][4] , \next_psums[2][3][3] , 
        \next_psums[2][3][2] , \next_psums[2][3][1] , \next_psums[2][3][0] })
         );
  WBUF_ARRAY_SIZE4_DATA_W32_3 \genblk1[3].genblk1[0].WBUFs  ( .clk(clk), 
        .nRST(nRST), .WBUF_wr_en(\WBUF_wr_en[3][0] ), .WBUF_data_in(data_in), 
        .WBUF_data_out({\WBUF_data_out[3][0][31] , \WBUF_data_out[3][0][30] , 
        \WBUF_data_out[3][0][29] , \WBUF_data_out[3][0][28] , 
        \WBUF_data_out[3][0][27] , \WBUF_data_out[3][0][26] , 
        \WBUF_data_out[3][0][25] , \WBUF_data_out[3][0][24] , 
        \WBUF_data_out[3][0][23] , \WBUF_data_out[3][0][22] , 
        \WBUF_data_out[3][0][21] , \WBUF_data_out[3][0][20] , 
        \WBUF_data_out[3][0][19] , \WBUF_data_out[3][0][18] , 
        \WBUF_data_out[3][0][17] , \WBUF_data_out[3][0][16] , 
        \WBUF_data_out[3][0][15] , \WBUF_data_out[3][0][14] , 
        \WBUF_data_out[3][0][13] , \WBUF_data_out[3][0][12] , 
        \WBUF_data_out[3][0][11] , \WBUF_data_out[3][0][10] , 
        \WBUF_data_out[3][0][9] , \WBUF_data_out[3][0][8] , 
        \WBUF_data_out[3][0][7] , \WBUF_data_out[3][0][6] , 
        \WBUF_data_out[3][0][5] , \WBUF_data_out[3][0][4] , 
        \WBUF_data_out[3][0][3] , \WBUF_data_out[3][0][2] , 
        \WBUF_data_out[3][0][1] , \WBUF_data_out[3][0][0] }) );
  w_mux_3 \genblk1[3].genblk1[0].wmux  ( .clk(clk), .nRST(nRST), 
        .input_bitwidth(input_bitwidth), .rd_en(\weight_rd_en[3][0] ), 
        .data_in({\WBUF_data_out[3][0][31] , \WBUF_data_out[3][0][30] , 
        \WBUF_data_out[3][0][29] , \WBUF_data_out[3][0][28] , 
        \WBUF_data_out[3][0][27] , \WBUF_data_out[3][0][26] , 
        \WBUF_data_out[3][0][25] , \WBUF_data_out[3][0][24] , 
        \WBUF_data_out[3][0][23] , \WBUF_data_out[3][0][22] , 
        \WBUF_data_out[3][0][21] , \WBUF_data_out[3][0][20] , 
        \WBUF_data_out[3][0][19] , \WBUF_data_out[3][0][18] , 
        \WBUF_data_out[3][0][17] , \WBUF_data_out[3][0][16] , 
        \WBUF_data_out[3][0][15] , \WBUF_data_out[3][0][14] , 
        \WBUF_data_out[3][0][13] , \WBUF_data_out[3][0][12] , 
        \WBUF_data_out[3][0][11] , \WBUF_data_out[3][0][10] , 
        \WBUF_data_out[3][0][9] , \WBUF_data_out[3][0][8] , 
        \WBUF_data_out[3][0][7] , \WBUF_data_out[3][0][6] , 
        \WBUF_data_out[3][0][5] , \WBUF_data_out[3][0][4] , 
        \WBUF_data_out[3][0][3] , \WBUF_data_out[3][0][2] , 
        \WBUF_data_out[3][0][1] , \WBUF_data_out[3][0][0] }), .data_out({
        \weight_mux_outs[3][0][31] , \weight_mux_outs[3][0][30] , 
        \weight_mux_outs[3][0][29] , \weight_mux_outs[3][0][28] , 
        \weight_mux_outs[3][0][27] , \weight_mux_outs[3][0][26] , 
        \weight_mux_outs[3][0][25] , \weight_mux_outs[3][0][24] , 
        \weight_mux_outs[3][0][23] , \weight_mux_outs[3][0][22] , 
        \weight_mux_outs[3][0][21] , \weight_mux_outs[3][0][20] , 
        \weight_mux_outs[3][0][19] , \weight_mux_outs[3][0][18] , 
        \weight_mux_outs[3][0][17] , \weight_mux_outs[3][0][16] , 
        \weight_mux_outs[3][0][15] , \weight_mux_outs[3][0][14] , 
        \weight_mux_outs[3][0][13] , \weight_mux_outs[3][0][12] , 
        \weight_mux_outs[3][0][11] , \weight_mux_outs[3][0][10] , 
        \weight_mux_outs[3][0][9] , \weight_mux_outs[3][0][8] , 
        \weight_mux_outs[3][0][7] , \weight_mux_outs[3][0][6] , 
        \weight_mux_outs[3][0][5] , \weight_mux_outs[3][0][4] , 
        \weight_mux_outs[3][0][3] , \weight_mux_outs[3][0][2] , 
        \weight_mux_outs[3][0][1] , \weight_mux_outs[3][0][0] }) );
  IBUF_ARRAY_SIZE4_DATA_W32_0 \genblk1[3].genblk1[0].genblk1.IBUFs  ( .clk(clk), .nRST(nRST), .IBUF_wr_en(IBUF_wr_en[3]), .IBUF_data_in(data_in), 
        .IBUF_data_out({\IBUF_data_out[3][31] , \IBUF_data_out[3][30] , 
        \IBUF_data_out[3][29] , \IBUF_data_out[3][28] , \IBUF_data_out[3][27] , 
        \IBUF_data_out[3][26] , \IBUF_data_out[3][25] , \IBUF_data_out[3][24] , 
        \IBUF_data_out[3][23] , \IBUF_data_out[3][22] , \IBUF_data_out[3][21] , 
        \IBUF_data_out[3][20] , \IBUF_data_out[3][19] , \IBUF_data_out[3][18] , 
        \IBUF_data_out[3][17] , \IBUF_data_out[3][16] , \IBUF_data_out[3][15] , 
        \IBUF_data_out[3][14] , \IBUF_data_out[3][13] , \IBUF_data_out[3][12] , 
        \IBUF_data_out[3][11] , \IBUF_data_out[3][10] , \IBUF_data_out[3][9] , 
        \IBUF_data_out[3][8] , \IBUF_data_out[3][7] , \IBUF_data_out[3][6] , 
        \IBUF_data_out[3][5] , \IBUF_data_out[3][4] , \IBUF_data_out[3][3] , 
        \IBUF_data_out[3][2] , \IBUF_data_out[3][1] , \IBUF_data_out[3][0] })
         );
  in_mux_0 \genblk1[3].genblk1[0].genblk1.imux  ( .clk(clk), .nRST(nRST), 
        .weight_bitwidth(weight_bitwidth), .rd_en(input_rd_en[3]), .data_in({
        \IBUF_data_out[3][31] , \IBUF_data_out[3][30] , \IBUF_data_out[3][29] , 
        \IBUF_data_out[3][28] , \IBUF_data_out[3][27] , \IBUF_data_out[3][26] , 
        \IBUF_data_out[3][25] , \IBUF_data_out[3][24] , \IBUF_data_out[3][23] , 
        \IBUF_data_out[3][22] , \IBUF_data_out[3][21] , \IBUF_data_out[3][20] , 
        \IBUF_data_out[3][19] , \IBUF_data_out[3][18] , \IBUF_data_out[3][17] , 
        \IBUF_data_out[3][16] , \IBUF_data_out[3][15] , \IBUF_data_out[3][14] , 
        \IBUF_data_out[3][13] , \IBUF_data_out[3][12] , \IBUF_data_out[3][11] , 
        \IBUF_data_out[3][10] , \IBUF_data_out[3][9] , \IBUF_data_out[3][8] , 
        \IBUF_data_out[3][7] , \IBUF_data_out[3][6] , \IBUF_data_out[3][5] , 
        \IBUF_data_out[3][4] , \IBUF_data_out[3][3] , \IBUF_data_out[3][2] , 
        \IBUF_data_out[3][1] , \IBUF_data_out[3][0] }), .data_out({
        \input_mux_outs[3][31] , \input_mux_outs[3][30] , 
        \input_mux_outs[3][29] , \input_mux_outs[3][28] , 
        \input_mux_outs[3][27] , \input_mux_outs[3][26] , 
        \input_mux_outs[3][25] , \input_mux_outs[3][24] , 
        \input_mux_outs[3][23] , \input_mux_outs[3][22] , 
        \input_mux_outs[3][21] , \input_mux_outs[3][20] , 
        \input_mux_outs[3][19] , \input_mux_outs[3][18] , 
        \input_mux_outs[3][17] , \input_mux_outs[3][16] , 
        \input_mux_outs[3][15] , \input_mux_outs[3][14] , 
        \input_mux_outs[3][13] , \input_mux_outs[3][12] , 
        \input_mux_outs[3][11] , \input_mux_outs[3][10] , 
        \input_mux_outs[3][9] , \input_mux_outs[3][8] , \input_mux_outs[3][7] , 
        \input_mux_outs[3][6] , \input_mux_outs[3][5] , \input_mux_outs[3][4] , 
        \input_mux_outs[3][3] , \input_mux_outs[3][2] , \input_mux_outs[3][1] , 
        \input_mux_outs[3][0] }) );
  fusion_unit_3 \genblk1[3].genblk1[0].genblk1.genblk1.fu  ( .clk(clk), .nRST(
        nRST), .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .input_sign({\input_sign[3][0][3] , 
        \input_sign[3][0][2] , \input_sign[3][0][1] , \input_sign[3][0][0] }), 
        .weight_sign({\weight_sign[3][0][3] , \weight_sign[3][0][2] , 
        \weight_sign[3][0][1] , \weight_sign[3][0][0] }), .input_forward({
        \input_mux_outs[3][31] , \input_mux_outs[3][30] , 
        \input_mux_outs[3][29] , \input_mux_outs[3][28] , 
        \input_mux_outs[3][27] , \input_mux_outs[3][26] , 
        \input_mux_outs[3][25] , \input_mux_outs[3][24] , 
        \input_mux_outs[3][23] , \input_mux_outs[3][22] , 
        \input_mux_outs[3][21] , \input_mux_outs[3][20] , 
        \input_mux_outs[3][19] , \input_mux_outs[3][18] , 
        \input_mux_outs[3][17] , \input_mux_outs[3][16] , 
        \input_mux_outs[3][15] , \input_mux_outs[3][14] , 
        \input_mux_outs[3][13] , \input_mux_outs[3][12] , 
        \input_mux_outs[3][11] , \input_mux_outs[3][10] , 
        \input_mux_outs[3][9] , \input_mux_outs[3][8] , \input_mux_outs[3][7] , 
        \input_mux_outs[3][6] , \input_mux_outs[3][5] , \input_mux_outs[3][4] , 
        \input_mux_outs[3][3] , \input_mux_outs[3][2] , \input_mux_outs[3][1] , 
        \input_mux_outs[3][0] }), .weight({\weight_mux_outs[3][0][31] , 
        \weight_mux_outs[3][0][30] , \weight_mux_outs[3][0][29] , 
        \weight_mux_outs[3][0][28] , \weight_mux_outs[3][0][27] , 
        \weight_mux_outs[3][0][26] , \weight_mux_outs[3][0][25] , 
        \weight_mux_outs[3][0][24] , \weight_mux_outs[3][0][23] , 
        \weight_mux_outs[3][0][22] , \weight_mux_outs[3][0][21] , 
        \weight_mux_outs[3][0][20] , \weight_mux_outs[3][0][19] , 
        \weight_mux_outs[3][0][18] , \weight_mux_outs[3][0][17] , 
        \weight_mux_outs[3][0][16] , \weight_mux_outs[3][0][15] , 
        \weight_mux_outs[3][0][14] , \weight_mux_outs[3][0][13] , 
        \weight_mux_outs[3][0][12] , \weight_mux_outs[3][0][11] , 
        \weight_mux_outs[3][0][10] , \weight_mux_outs[3][0][9] , 
        \weight_mux_outs[3][0][8] , \weight_mux_outs[3][0][7] , 
        \weight_mux_outs[3][0][6] , \weight_mux_outs[3][0][5] , 
        \weight_mux_outs[3][0][4] , \weight_mux_outs[3][0][3] , 
        \weight_mux_outs[3][0][2] , \weight_mux_outs[3][0][1] , 
        \weight_mux_outs[3][0][0] }), .psum_in({\psums[2][0][31] , 
        \psums[2][0][30] , \psums[2][0][29] , \psums[2][0][28] , 
        \psums[2][0][27] , \psums[2][0][26] , \psums[2][0][25] , 
        \psums[2][0][24] , \psums[2][0][23] , \psums[2][0][22] , 
        \psums[2][0][21] , \psums[2][0][20] , \psums[2][0][19] , 
        \psums[2][0][18] , \psums[2][0][17] , \psums[2][0][16] , 
        \psums[2][0][15] , \psums[2][0][14] , \psums[2][0][13] , 
        \psums[2][0][12] , \psums[2][0][11] , \psums[2][0][10] , 
        \psums[2][0][9] , \psums[2][0][8] , \psums[2][0][7] , \psums[2][0][6] , 
        \psums[2][0][5] , \psums[2][0][4] , \psums[2][0][3] , \psums[2][0][2] , 
        \psums[2][0][1] , \psums[2][0][0] }), .psum({\next_psums[3][0][31] , 
        \next_psums[3][0][30] , \next_psums[3][0][29] , \next_psums[3][0][28] , 
        \next_psums[3][0][27] , \next_psums[3][0][26] , \next_psums[3][0][25] , 
        \next_psums[3][0][24] , \next_psums[3][0][23] , \next_psums[3][0][22] , 
        \next_psums[3][0][21] , \next_psums[3][0][20] , \next_psums[3][0][19] , 
        \next_psums[3][0][18] , \next_psums[3][0][17] , \next_psums[3][0][16] , 
        \next_psums[3][0][15] , \next_psums[3][0][14] , \next_psums[3][0][13] , 
        \next_psums[3][0][12] , \next_psums[3][0][11] , \next_psums[3][0][10] , 
        \next_psums[3][0][9] , \next_psums[3][0][8] , \next_psums[3][0][7] , 
        \next_psums[3][0][6] , \next_psums[3][0][5] , \next_psums[3][0][4] , 
        \next_psums[3][0][3] , \next_psums[3][0][2] , \next_psums[3][0][1] , 
        \next_psums[3][0][0] }), .input_to_right({
        \next_input_forward_reg[3][0][31] , \next_input_forward_reg[3][0][30] , 
        \next_input_forward_reg[3][0][29] , \next_input_forward_reg[3][0][28] , 
        \next_input_forward_reg[3][0][27] , \next_input_forward_reg[3][0][26] , 
        \next_input_forward_reg[3][0][25] , \next_input_forward_reg[3][0][24] , 
        \next_input_forward_reg[3][0][23] , \next_input_forward_reg[3][0][22] , 
        \next_input_forward_reg[3][0][21] , \next_input_forward_reg[3][0][20] , 
        \next_input_forward_reg[3][0][19] , \next_input_forward_reg[3][0][18] , 
        \next_input_forward_reg[3][0][17] , \next_input_forward_reg[3][0][16] , 
        \next_input_forward_reg[3][0][15] , \next_input_forward_reg[3][0][14] , 
        \next_input_forward_reg[3][0][13] , \next_input_forward_reg[3][0][12] , 
        \next_input_forward_reg[3][0][11] , \next_input_forward_reg[3][0][10] , 
        \next_input_forward_reg[3][0][9] , \next_input_forward_reg[3][0][8] , 
        \next_input_forward_reg[3][0][7] , \next_input_forward_reg[3][0][6] , 
        \next_input_forward_reg[3][0][5] , \next_input_forward_reg[3][0][4] , 
        \next_input_forward_reg[3][0][3] , \next_input_forward_reg[3][0][2] , 
        \next_input_forward_reg[3][0][1] , \next_input_forward_reg[3][0][0] })
         );
  WBUF_ARRAY_SIZE4_DATA_W32_2 \genblk1[3].genblk1[1].WBUFs  ( .clk(clk), 
        .nRST(nRST), .WBUF_wr_en(\WBUF_wr_en[3][1] ), .WBUF_data_in(data_in), 
        .WBUF_data_out({\WBUF_data_out[3][1][31] , \WBUF_data_out[3][1][30] , 
        \WBUF_data_out[3][1][29] , \WBUF_data_out[3][1][28] , 
        \WBUF_data_out[3][1][27] , \WBUF_data_out[3][1][26] , 
        \WBUF_data_out[3][1][25] , \WBUF_data_out[3][1][24] , 
        \WBUF_data_out[3][1][23] , \WBUF_data_out[3][1][22] , 
        \WBUF_data_out[3][1][21] , \WBUF_data_out[3][1][20] , 
        \WBUF_data_out[3][1][19] , \WBUF_data_out[3][1][18] , 
        \WBUF_data_out[3][1][17] , \WBUF_data_out[3][1][16] , 
        \WBUF_data_out[3][1][15] , \WBUF_data_out[3][1][14] , 
        \WBUF_data_out[3][1][13] , \WBUF_data_out[3][1][12] , 
        \WBUF_data_out[3][1][11] , \WBUF_data_out[3][1][10] , 
        \WBUF_data_out[3][1][9] , \WBUF_data_out[3][1][8] , 
        \WBUF_data_out[3][1][7] , \WBUF_data_out[3][1][6] , 
        \WBUF_data_out[3][1][5] , \WBUF_data_out[3][1][4] , 
        \WBUF_data_out[3][1][3] , \WBUF_data_out[3][1][2] , 
        \WBUF_data_out[3][1][1] , \WBUF_data_out[3][1][0] }) );
  w_mux_2 \genblk1[3].genblk1[1].wmux  ( .clk(clk), .nRST(nRST), 
        .input_bitwidth(input_bitwidth), .rd_en(\weight_rd_en[3][1] ), 
        .data_in({\WBUF_data_out[3][1][31] , \WBUF_data_out[3][1][30] , 
        \WBUF_data_out[3][1][29] , \WBUF_data_out[3][1][28] , 
        \WBUF_data_out[3][1][27] , \WBUF_data_out[3][1][26] , 
        \WBUF_data_out[3][1][25] , \WBUF_data_out[3][1][24] , 
        \WBUF_data_out[3][1][23] , \WBUF_data_out[3][1][22] , 
        \WBUF_data_out[3][1][21] , \WBUF_data_out[3][1][20] , 
        \WBUF_data_out[3][1][19] , \WBUF_data_out[3][1][18] , 
        \WBUF_data_out[3][1][17] , \WBUF_data_out[3][1][16] , 
        \WBUF_data_out[3][1][15] , \WBUF_data_out[3][1][14] , 
        \WBUF_data_out[3][1][13] , \WBUF_data_out[3][1][12] , 
        \WBUF_data_out[3][1][11] , \WBUF_data_out[3][1][10] , 
        \WBUF_data_out[3][1][9] , \WBUF_data_out[3][1][8] , 
        \WBUF_data_out[3][1][7] , \WBUF_data_out[3][1][6] , 
        \WBUF_data_out[3][1][5] , \WBUF_data_out[3][1][4] , 
        \WBUF_data_out[3][1][3] , \WBUF_data_out[3][1][2] , 
        \WBUF_data_out[3][1][1] , \WBUF_data_out[3][1][0] }), .data_out({
        \weight_mux_outs[3][1][31] , \weight_mux_outs[3][1][30] , 
        \weight_mux_outs[3][1][29] , \weight_mux_outs[3][1][28] , 
        \weight_mux_outs[3][1][27] , \weight_mux_outs[3][1][26] , 
        \weight_mux_outs[3][1][25] , \weight_mux_outs[3][1][24] , 
        \weight_mux_outs[3][1][23] , \weight_mux_outs[3][1][22] , 
        \weight_mux_outs[3][1][21] , \weight_mux_outs[3][1][20] , 
        \weight_mux_outs[3][1][19] , \weight_mux_outs[3][1][18] , 
        \weight_mux_outs[3][1][17] , \weight_mux_outs[3][1][16] , 
        \weight_mux_outs[3][1][15] , \weight_mux_outs[3][1][14] , 
        \weight_mux_outs[3][1][13] , \weight_mux_outs[3][1][12] , 
        \weight_mux_outs[3][1][11] , \weight_mux_outs[3][1][10] , 
        \weight_mux_outs[3][1][9] , \weight_mux_outs[3][1][8] , 
        \weight_mux_outs[3][1][7] , \weight_mux_outs[3][1][6] , 
        \weight_mux_outs[3][1][5] , \weight_mux_outs[3][1][4] , 
        \weight_mux_outs[3][1][3] , \weight_mux_outs[3][1][2] , 
        \weight_mux_outs[3][1][1] , \weight_mux_outs[3][1][0] }) );
  fusion_unit_2 \genblk1[3].genblk1[1].genblk1.genblk1.fu  ( .clk(clk), .nRST(
        nRST), .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .input_sign({\input_sign[3][1][3] , 
        \input_sign[3][1][2] , \input_sign[3][1][1] , \input_sign[3][1][0] }), 
        .weight_sign({\weight_sign[3][1][3] , \weight_sign[3][1][2] , 
        \weight_sign[3][1][1] , \weight_sign[3][1][0] }), .input_forward({
        \input_forward_reg[3][0][31] , \input_forward_reg[3][0][30] , 
        \input_forward_reg[3][0][29] , \input_forward_reg[3][0][28] , 
        \input_forward_reg[3][0][27] , \input_forward_reg[3][0][26] , 
        \input_forward_reg[3][0][25] , \input_forward_reg[3][0][24] , 
        \input_forward_reg[3][0][23] , \input_forward_reg[3][0][22] , 
        \input_forward_reg[3][0][21] , \input_forward_reg[3][0][20] , 
        \input_forward_reg[3][0][19] , \input_forward_reg[3][0][18] , 
        \input_forward_reg[3][0][17] , \input_forward_reg[3][0][16] , 
        \input_forward_reg[3][0][15] , \input_forward_reg[3][0][14] , 
        \input_forward_reg[3][0][13] , \input_forward_reg[3][0][12] , 
        \input_forward_reg[3][0][11] , \input_forward_reg[3][0][10] , 
        \input_forward_reg[3][0][9] , \input_forward_reg[3][0][8] , 
        \input_forward_reg[3][0][7] , \input_forward_reg[3][0][6] , 
        \input_forward_reg[3][0][5] , \input_forward_reg[3][0][4] , 
        \input_forward_reg[3][0][3] , \input_forward_reg[3][0][2] , 
        \input_forward_reg[3][0][1] , \input_forward_reg[3][0][0] }), .weight(
        {\weight_mux_outs[3][1][31] , \weight_mux_outs[3][1][30] , 
        \weight_mux_outs[3][1][29] , \weight_mux_outs[3][1][28] , 
        \weight_mux_outs[3][1][27] , \weight_mux_outs[3][1][26] , 
        \weight_mux_outs[3][1][25] , \weight_mux_outs[3][1][24] , 
        \weight_mux_outs[3][1][23] , \weight_mux_outs[3][1][22] , 
        \weight_mux_outs[3][1][21] , \weight_mux_outs[3][1][20] , 
        \weight_mux_outs[3][1][19] , \weight_mux_outs[3][1][18] , 
        \weight_mux_outs[3][1][17] , \weight_mux_outs[3][1][16] , 
        \weight_mux_outs[3][1][15] , \weight_mux_outs[3][1][14] , 
        \weight_mux_outs[3][1][13] , \weight_mux_outs[3][1][12] , 
        \weight_mux_outs[3][1][11] , \weight_mux_outs[3][1][10] , 
        \weight_mux_outs[3][1][9] , \weight_mux_outs[3][1][8] , 
        \weight_mux_outs[3][1][7] , \weight_mux_outs[3][1][6] , 
        \weight_mux_outs[3][1][5] , \weight_mux_outs[3][1][4] , 
        \weight_mux_outs[3][1][3] , \weight_mux_outs[3][1][2] , 
        \weight_mux_outs[3][1][1] , \weight_mux_outs[3][1][0] }), .psum_in({
        \psums[2][1][31] , \psums[2][1][30] , \psums[2][1][29] , 
        \psums[2][1][28] , \psums[2][1][27] , \psums[2][1][26] , 
        \psums[2][1][25] , \psums[2][1][24] , \psums[2][1][23] , 
        \psums[2][1][22] , \psums[2][1][21] , \psums[2][1][20] , 
        \psums[2][1][19] , \psums[2][1][18] , \psums[2][1][17] , 
        \psums[2][1][16] , \psums[2][1][15] , \psums[2][1][14] , 
        \psums[2][1][13] , \psums[2][1][12] , \psums[2][1][11] , 
        \psums[2][1][10] , \psums[2][1][9] , \psums[2][1][8] , 
        \psums[2][1][7] , \psums[2][1][6] , \psums[2][1][5] , \psums[2][1][4] , 
        \psums[2][1][3] , \psums[2][1][2] , \psums[2][1][1] , \psums[2][1][0] }), .psum({\next_psums[3][1][31] , \next_psums[3][1][30] , 
        \next_psums[3][1][29] , \next_psums[3][1][28] , \next_psums[3][1][27] , 
        \next_psums[3][1][26] , \next_psums[3][1][25] , \next_psums[3][1][24] , 
        \next_psums[3][1][23] , \next_psums[3][1][22] , \next_psums[3][1][21] , 
        \next_psums[3][1][20] , \next_psums[3][1][19] , \next_psums[3][1][18] , 
        \next_psums[3][1][17] , \next_psums[3][1][16] , \next_psums[3][1][15] , 
        \next_psums[3][1][14] , \next_psums[3][1][13] , \next_psums[3][1][12] , 
        \next_psums[3][1][11] , \next_psums[3][1][10] , \next_psums[3][1][9] , 
        \next_psums[3][1][8] , \next_psums[3][1][7] , \next_psums[3][1][6] , 
        \next_psums[3][1][5] , \next_psums[3][1][4] , \next_psums[3][1][3] , 
        \next_psums[3][1][2] , \next_psums[3][1][1] , \next_psums[3][1][0] }), 
        .input_to_right({\next_input_forward_reg[3][1][31] , 
        \next_input_forward_reg[3][1][30] , \next_input_forward_reg[3][1][29] , 
        \next_input_forward_reg[3][1][28] , \next_input_forward_reg[3][1][27] , 
        \next_input_forward_reg[3][1][26] , \next_input_forward_reg[3][1][25] , 
        \next_input_forward_reg[3][1][24] , \next_input_forward_reg[3][1][23] , 
        \next_input_forward_reg[3][1][22] , \next_input_forward_reg[3][1][21] , 
        \next_input_forward_reg[3][1][20] , \next_input_forward_reg[3][1][19] , 
        \next_input_forward_reg[3][1][18] , \next_input_forward_reg[3][1][17] , 
        \next_input_forward_reg[3][1][16] , \next_input_forward_reg[3][1][15] , 
        \next_input_forward_reg[3][1][14] , \next_input_forward_reg[3][1][13] , 
        \next_input_forward_reg[3][1][12] , \next_input_forward_reg[3][1][11] , 
        \next_input_forward_reg[3][1][10] , \next_input_forward_reg[3][1][9] , 
        \next_input_forward_reg[3][1][8] , \next_input_forward_reg[3][1][7] , 
        \next_input_forward_reg[3][1][6] , \next_input_forward_reg[3][1][5] , 
        \next_input_forward_reg[3][1][4] , \next_input_forward_reg[3][1][3] , 
        \next_input_forward_reg[3][1][2] , \next_input_forward_reg[3][1][1] , 
        \next_input_forward_reg[3][1][0] }) );
  WBUF_ARRAY_SIZE4_DATA_W32_1 \genblk1[3].genblk1[2].WBUFs  ( .clk(clk), 
        .nRST(nRST), .WBUF_wr_en(\WBUF_wr_en[3][2] ), .WBUF_data_in(data_in), 
        .WBUF_data_out({\WBUF_data_out[3][2][31] , \WBUF_data_out[3][2][30] , 
        \WBUF_data_out[3][2][29] , \WBUF_data_out[3][2][28] , 
        \WBUF_data_out[3][2][27] , \WBUF_data_out[3][2][26] , 
        \WBUF_data_out[3][2][25] , \WBUF_data_out[3][2][24] , 
        \WBUF_data_out[3][2][23] , \WBUF_data_out[3][2][22] , 
        \WBUF_data_out[3][2][21] , \WBUF_data_out[3][2][20] , 
        \WBUF_data_out[3][2][19] , \WBUF_data_out[3][2][18] , 
        \WBUF_data_out[3][2][17] , \WBUF_data_out[3][2][16] , 
        \WBUF_data_out[3][2][15] , \WBUF_data_out[3][2][14] , 
        \WBUF_data_out[3][2][13] , \WBUF_data_out[3][2][12] , 
        \WBUF_data_out[3][2][11] , \WBUF_data_out[3][2][10] , 
        \WBUF_data_out[3][2][9] , \WBUF_data_out[3][2][8] , 
        \WBUF_data_out[3][2][7] , \WBUF_data_out[3][2][6] , 
        \WBUF_data_out[3][2][5] , \WBUF_data_out[3][2][4] , 
        \WBUF_data_out[3][2][3] , \WBUF_data_out[3][2][2] , 
        \WBUF_data_out[3][2][1] , \WBUF_data_out[3][2][0] }) );
  w_mux_1 \genblk1[3].genblk1[2].wmux  ( .clk(clk), .nRST(nRST), 
        .input_bitwidth(input_bitwidth), .rd_en(\weight_rd_en[3][2] ), 
        .data_in({\WBUF_data_out[3][2][31] , \WBUF_data_out[3][2][30] , 
        \WBUF_data_out[3][2][29] , \WBUF_data_out[3][2][28] , 
        \WBUF_data_out[3][2][27] , \WBUF_data_out[3][2][26] , 
        \WBUF_data_out[3][2][25] , \WBUF_data_out[3][2][24] , 
        \WBUF_data_out[3][2][23] , \WBUF_data_out[3][2][22] , 
        \WBUF_data_out[3][2][21] , \WBUF_data_out[3][2][20] , 
        \WBUF_data_out[3][2][19] , \WBUF_data_out[3][2][18] , 
        \WBUF_data_out[3][2][17] , \WBUF_data_out[3][2][16] , 
        \WBUF_data_out[3][2][15] , \WBUF_data_out[3][2][14] , 
        \WBUF_data_out[3][2][13] , \WBUF_data_out[3][2][12] , 
        \WBUF_data_out[3][2][11] , \WBUF_data_out[3][2][10] , 
        \WBUF_data_out[3][2][9] , \WBUF_data_out[3][2][8] , 
        \WBUF_data_out[3][2][7] , \WBUF_data_out[3][2][6] , 
        \WBUF_data_out[3][2][5] , \WBUF_data_out[3][2][4] , 
        \WBUF_data_out[3][2][3] , \WBUF_data_out[3][2][2] , 
        \WBUF_data_out[3][2][1] , \WBUF_data_out[3][2][0] }), .data_out({
        \weight_mux_outs[3][2][31] , \weight_mux_outs[3][2][30] , 
        \weight_mux_outs[3][2][29] , \weight_mux_outs[3][2][28] , 
        \weight_mux_outs[3][2][27] , \weight_mux_outs[3][2][26] , 
        \weight_mux_outs[3][2][25] , \weight_mux_outs[3][2][24] , 
        \weight_mux_outs[3][2][23] , \weight_mux_outs[3][2][22] , 
        \weight_mux_outs[3][2][21] , \weight_mux_outs[3][2][20] , 
        \weight_mux_outs[3][2][19] , \weight_mux_outs[3][2][18] , 
        \weight_mux_outs[3][2][17] , \weight_mux_outs[3][2][16] , 
        \weight_mux_outs[3][2][15] , \weight_mux_outs[3][2][14] , 
        \weight_mux_outs[3][2][13] , \weight_mux_outs[3][2][12] , 
        \weight_mux_outs[3][2][11] , \weight_mux_outs[3][2][10] , 
        \weight_mux_outs[3][2][9] , \weight_mux_outs[3][2][8] , 
        \weight_mux_outs[3][2][7] , \weight_mux_outs[3][2][6] , 
        \weight_mux_outs[3][2][5] , \weight_mux_outs[3][2][4] , 
        \weight_mux_outs[3][2][3] , \weight_mux_outs[3][2][2] , 
        \weight_mux_outs[3][2][1] , \weight_mux_outs[3][2][0] }) );
  fusion_unit_1 \genblk1[3].genblk1[2].genblk1.genblk1.fu  ( .clk(clk), .nRST(
        nRST), .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .input_sign({\input_sign[3][2][3] , 
        \input_sign[3][2][2] , \input_sign[3][2][1] , \input_sign[3][2][0] }), 
        .weight_sign({\weight_sign[3][2][3] , \weight_sign[3][2][2] , 
        \weight_sign[3][2][1] , \weight_sign[3][2][0] }), .input_forward({
        \input_forward_reg[3][1][31] , \input_forward_reg[3][1][30] , 
        \input_forward_reg[3][1][29] , \input_forward_reg[3][1][28] , 
        \input_forward_reg[3][1][27] , \input_forward_reg[3][1][26] , 
        \input_forward_reg[3][1][25] , \input_forward_reg[3][1][24] , 
        \input_forward_reg[3][1][23] , \input_forward_reg[3][1][22] , 
        \input_forward_reg[3][1][21] , \input_forward_reg[3][1][20] , 
        \input_forward_reg[3][1][19] , \input_forward_reg[3][1][18] , 
        \input_forward_reg[3][1][17] , \input_forward_reg[3][1][16] , 
        \input_forward_reg[3][1][15] , \input_forward_reg[3][1][14] , 
        \input_forward_reg[3][1][13] , \input_forward_reg[3][1][12] , 
        \input_forward_reg[3][1][11] , \input_forward_reg[3][1][10] , 
        \input_forward_reg[3][1][9] , \input_forward_reg[3][1][8] , 
        \input_forward_reg[3][1][7] , \input_forward_reg[3][1][6] , 
        \input_forward_reg[3][1][5] , \input_forward_reg[3][1][4] , 
        \input_forward_reg[3][1][3] , \input_forward_reg[3][1][2] , 
        \input_forward_reg[3][1][1] , \input_forward_reg[3][1][0] }), .weight(
        {\weight_mux_outs[3][2][31] , \weight_mux_outs[3][2][30] , 
        \weight_mux_outs[3][2][29] , \weight_mux_outs[3][2][28] , 
        \weight_mux_outs[3][2][27] , \weight_mux_outs[3][2][26] , 
        \weight_mux_outs[3][2][25] , \weight_mux_outs[3][2][24] , 
        \weight_mux_outs[3][2][23] , \weight_mux_outs[3][2][22] , 
        \weight_mux_outs[3][2][21] , \weight_mux_outs[3][2][20] , 
        \weight_mux_outs[3][2][19] , \weight_mux_outs[3][2][18] , 
        \weight_mux_outs[3][2][17] , \weight_mux_outs[3][2][16] , 
        \weight_mux_outs[3][2][15] , \weight_mux_outs[3][2][14] , 
        \weight_mux_outs[3][2][13] , \weight_mux_outs[3][2][12] , 
        \weight_mux_outs[3][2][11] , \weight_mux_outs[3][2][10] , 
        \weight_mux_outs[3][2][9] , \weight_mux_outs[3][2][8] , 
        \weight_mux_outs[3][2][7] , \weight_mux_outs[3][2][6] , 
        \weight_mux_outs[3][2][5] , \weight_mux_outs[3][2][4] , 
        \weight_mux_outs[3][2][3] , \weight_mux_outs[3][2][2] , 
        \weight_mux_outs[3][2][1] , \weight_mux_outs[3][2][0] }), .psum_in({
        \psums[2][2][31] , \psums[2][2][30] , \psums[2][2][29] , 
        \psums[2][2][28] , \psums[2][2][27] , \psums[2][2][26] , 
        \psums[2][2][25] , \psums[2][2][24] , \psums[2][2][23] , 
        \psums[2][2][22] , \psums[2][2][21] , \psums[2][2][20] , 
        \psums[2][2][19] , \psums[2][2][18] , \psums[2][2][17] , 
        \psums[2][2][16] , \psums[2][2][15] , \psums[2][2][14] , 
        \psums[2][2][13] , \psums[2][2][12] , \psums[2][2][11] , 
        \psums[2][2][10] , \psums[2][2][9] , \psums[2][2][8] , 
        \psums[2][2][7] , \psums[2][2][6] , \psums[2][2][5] , \psums[2][2][4] , 
        \psums[2][2][3] , \psums[2][2][2] , \psums[2][2][1] , \psums[2][2][0] }), .psum({\next_psums[3][2][31] , \next_psums[3][2][30] , 
        \next_psums[3][2][29] , \next_psums[3][2][28] , \next_psums[3][2][27] , 
        \next_psums[3][2][26] , \next_psums[3][2][25] , \next_psums[3][2][24] , 
        \next_psums[3][2][23] , \next_psums[3][2][22] , \next_psums[3][2][21] , 
        \next_psums[3][2][20] , \next_psums[3][2][19] , \next_psums[3][2][18] , 
        \next_psums[3][2][17] , \next_psums[3][2][16] , \next_psums[3][2][15] , 
        \next_psums[3][2][14] , \next_psums[3][2][13] , \next_psums[3][2][12] , 
        \next_psums[3][2][11] , \next_psums[3][2][10] , \next_psums[3][2][9] , 
        \next_psums[3][2][8] , \next_psums[3][2][7] , \next_psums[3][2][6] , 
        \next_psums[3][2][5] , \next_psums[3][2][4] , \next_psums[3][2][3] , 
        \next_psums[3][2][2] , \next_psums[3][2][1] , \next_psums[3][2][0] }), 
        .input_to_right({\next_input_forward_reg[3][2][31] , 
        \next_input_forward_reg[3][2][30] , \next_input_forward_reg[3][2][29] , 
        \next_input_forward_reg[3][2][28] , \next_input_forward_reg[3][2][27] , 
        \next_input_forward_reg[3][2][26] , \next_input_forward_reg[3][2][25] , 
        \next_input_forward_reg[3][2][24] , \next_input_forward_reg[3][2][23] , 
        \next_input_forward_reg[3][2][22] , \next_input_forward_reg[3][2][21] , 
        \next_input_forward_reg[3][2][20] , \next_input_forward_reg[3][2][19] , 
        \next_input_forward_reg[3][2][18] , \next_input_forward_reg[3][2][17] , 
        \next_input_forward_reg[3][2][16] , \next_input_forward_reg[3][2][15] , 
        \next_input_forward_reg[3][2][14] , \next_input_forward_reg[3][2][13] , 
        \next_input_forward_reg[3][2][12] , \next_input_forward_reg[3][2][11] , 
        \next_input_forward_reg[3][2][10] , \next_input_forward_reg[3][2][9] , 
        \next_input_forward_reg[3][2][8] , \next_input_forward_reg[3][2][7] , 
        \next_input_forward_reg[3][2][6] , \next_input_forward_reg[3][2][5] , 
        \next_input_forward_reg[3][2][4] , \next_input_forward_reg[3][2][3] , 
        \next_input_forward_reg[3][2][2] , \next_input_forward_reg[3][2][1] , 
        \next_input_forward_reg[3][2][0] }) );
  WBUF_ARRAY_SIZE4_DATA_W32_0 \genblk1[3].genblk1[3].WBUFs  ( .clk(clk), 
        .nRST(nRST), .WBUF_wr_en(\WBUF_wr_en[3][3] ), .WBUF_data_in(data_in), 
        .WBUF_data_out({\WBUF_data_out[3][3][31] , \WBUF_data_out[3][3][30] , 
        \WBUF_data_out[3][3][29] , \WBUF_data_out[3][3][28] , 
        \WBUF_data_out[3][3][27] , \WBUF_data_out[3][3][26] , 
        \WBUF_data_out[3][3][25] , \WBUF_data_out[3][3][24] , 
        \WBUF_data_out[3][3][23] , \WBUF_data_out[3][3][22] , 
        \WBUF_data_out[3][3][21] , \WBUF_data_out[3][3][20] , 
        \WBUF_data_out[3][3][19] , \WBUF_data_out[3][3][18] , 
        \WBUF_data_out[3][3][17] , \WBUF_data_out[3][3][16] , 
        \WBUF_data_out[3][3][15] , \WBUF_data_out[3][3][14] , 
        \WBUF_data_out[3][3][13] , \WBUF_data_out[3][3][12] , 
        \WBUF_data_out[3][3][11] , \WBUF_data_out[3][3][10] , 
        \WBUF_data_out[3][3][9] , \WBUF_data_out[3][3][8] , 
        \WBUF_data_out[3][3][7] , \WBUF_data_out[3][3][6] , 
        \WBUF_data_out[3][3][5] , \WBUF_data_out[3][3][4] , 
        \WBUF_data_out[3][3][3] , \WBUF_data_out[3][3][2] , 
        \WBUF_data_out[3][3][1] , \WBUF_data_out[3][3][0] }) );
  w_mux_0 \genblk1[3].genblk1[3].wmux  ( .clk(clk), .nRST(nRST), 
        .input_bitwidth(input_bitwidth), .rd_en(\weight_rd_en[3][3] ), 
        .data_in({\WBUF_data_out[3][3][31] , \WBUF_data_out[3][3][30] , 
        \WBUF_data_out[3][3][29] , \WBUF_data_out[3][3][28] , 
        \WBUF_data_out[3][3][27] , \WBUF_data_out[3][3][26] , 
        \WBUF_data_out[3][3][25] , \WBUF_data_out[3][3][24] , 
        \WBUF_data_out[3][3][23] , \WBUF_data_out[3][3][22] , 
        \WBUF_data_out[3][3][21] , \WBUF_data_out[3][3][20] , 
        \WBUF_data_out[3][3][19] , \WBUF_data_out[3][3][18] , 
        \WBUF_data_out[3][3][17] , \WBUF_data_out[3][3][16] , 
        \WBUF_data_out[3][3][15] , \WBUF_data_out[3][3][14] , 
        \WBUF_data_out[3][3][13] , \WBUF_data_out[3][3][12] , 
        \WBUF_data_out[3][3][11] , \WBUF_data_out[3][3][10] , 
        \WBUF_data_out[3][3][9] , \WBUF_data_out[3][3][8] , 
        \WBUF_data_out[3][3][7] , \WBUF_data_out[3][3][6] , 
        \WBUF_data_out[3][3][5] , \WBUF_data_out[3][3][4] , 
        \WBUF_data_out[3][3][3] , \WBUF_data_out[3][3][2] , 
        \WBUF_data_out[3][3][1] , \WBUF_data_out[3][3][0] }), .data_out({
        \weight_mux_outs[3][3][31] , \weight_mux_outs[3][3][30] , 
        \weight_mux_outs[3][3][29] , \weight_mux_outs[3][3][28] , 
        \weight_mux_outs[3][3][27] , \weight_mux_outs[3][3][26] , 
        \weight_mux_outs[3][3][25] , \weight_mux_outs[3][3][24] , 
        \weight_mux_outs[3][3][23] , \weight_mux_outs[3][3][22] , 
        \weight_mux_outs[3][3][21] , \weight_mux_outs[3][3][20] , 
        \weight_mux_outs[3][3][19] , \weight_mux_outs[3][3][18] , 
        \weight_mux_outs[3][3][17] , \weight_mux_outs[3][3][16] , 
        \weight_mux_outs[3][3][15] , \weight_mux_outs[3][3][14] , 
        \weight_mux_outs[3][3][13] , \weight_mux_outs[3][3][12] , 
        \weight_mux_outs[3][3][11] , \weight_mux_outs[3][3][10] , 
        \weight_mux_outs[3][3][9] , \weight_mux_outs[3][3][8] , 
        \weight_mux_outs[3][3][7] , \weight_mux_outs[3][3][6] , 
        \weight_mux_outs[3][3][5] , \weight_mux_outs[3][3][4] , 
        \weight_mux_outs[3][3][3] , \weight_mux_outs[3][3][2] , 
        \weight_mux_outs[3][3][1] , \weight_mux_outs[3][3][0] }) );
  fusion_unit_0 \genblk1[3].genblk1[3].genblk1.genblk1.fu  ( .clk(clk), .nRST(
        nRST), .input_bitwidth(input_bitwidth), .weight_bitwidth(
        weight_bitwidth), .input_sign({\input_sign[3][3][3] , 
        \input_sign[3][3][2] , \input_sign[3][3][1] , \input_sign[3][3][0] }), 
        .weight_sign({\weight_sign[3][3][3] , \weight_sign[3][3][2] , 
        \weight_sign[3][3][1] , \weight_sign[3][3][0] }), .input_forward({
        \input_forward_reg[3][2][31] , \input_forward_reg[3][2][30] , 
        \input_forward_reg[3][2][29] , \input_forward_reg[3][2][28] , 
        \input_forward_reg[3][2][27] , \input_forward_reg[3][2][26] , 
        \input_forward_reg[3][2][25] , \input_forward_reg[3][2][24] , 
        \input_forward_reg[3][2][23] , \input_forward_reg[3][2][22] , 
        \input_forward_reg[3][2][21] , \input_forward_reg[3][2][20] , 
        \input_forward_reg[3][2][19] , \input_forward_reg[3][2][18] , 
        \input_forward_reg[3][2][17] , \input_forward_reg[3][2][16] , 
        \input_forward_reg[3][2][15] , \input_forward_reg[3][2][14] , 
        \input_forward_reg[3][2][13] , \input_forward_reg[3][2][12] , 
        \input_forward_reg[3][2][11] , \input_forward_reg[3][2][10] , 
        \input_forward_reg[3][2][9] , \input_forward_reg[3][2][8] , 
        \input_forward_reg[3][2][7] , \input_forward_reg[3][2][6] , 
        \input_forward_reg[3][2][5] , \input_forward_reg[3][2][4] , 
        \input_forward_reg[3][2][3] , \input_forward_reg[3][2][2] , 
        \input_forward_reg[3][2][1] , \input_forward_reg[3][2][0] }), .weight(
        {\weight_mux_outs[3][3][31] , \weight_mux_outs[3][3][30] , 
        \weight_mux_outs[3][3][29] , \weight_mux_outs[3][3][28] , 
        \weight_mux_outs[3][3][27] , \weight_mux_outs[3][3][26] , 
        \weight_mux_outs[3][3][25] , \weight_mux_outs[3][3][24] , 
        \weight_mux_outs[3][3][23] , \weight_mux_outs[3][3][22] , 
        \weight_mux_outs[3][3][21] , \weight_mux_outs[3][3][20] , 
        \weight_mux_outs[3][3][19] , \weight_mux_outs[3][3][18] , 
        \weight_mux_outs[3][3][17] , \weight_mux_outs[3][3][16] , 
        \weight_mux_outs[3][3][15] , \weight_mux_outs[3][3][14] , 
        \weight_mux_outs[3][3][13] , \weight_mux_outs[3][3][12] , 
        \weight_mux_outs[3][3][11] , \weight_mux_outs[3][3][10] , 
        \weight_mux_outs[3][3][9] , \weight_mux_outs[3][3][8] , 
        \weight_mux_outs[3][3][7] , \weight_mux_outs[3][3][6] , 
        \weight_mux_outs[3][3][5] , \weight_mux_outs[3][3][4] , 
        \weight_mux_outs[3][3][3] , \weight_mux_outs[3][3][2] , 
        \weight_mux_outs[3][3][1] , \weight_mux_outs[3][3][0] }), .psum_in({
        \psums[2][3][31] , \psums[2][3][30] , \psums[2][3][29] , 
        \psums[2][3][28] , \psums[2][3][27] , \psums[2][3][26] , 
        \psums[2][3][25] , \psums[2][3][24] , \psums[2][3][23] , 
        \psums[2][3][22] , \psums[2][3][21] , \psums[2][3][20] , 
        \psums[2][3][19] , \psums[2][3][18] , \psums[2][3][17] , 
        \psums[2][3][16] , \psums[2][3][15] , \psums[2][3][14] , 
        \psums[2][3][13] , \psums[2][3][12] , \psums[2][3][11] , 
        \psums[2][3][10] , \psums[2][3][9] , \psums[2][3][8] , 
        \psums[2][3][7] , \psums[2][3][6] , \psums[2][3][5] , \psums[2][3][4] , 
        \psums[2][3][3] , \psums[2][3][2] , \psums[2][3][1] , \psums[2][3][0] }), .psum({\next_psums[3][3][31] , \next_psums[3][3][30] , 
        \next_psums[3][3][29] , \next_psums[3][3][28] , \next_psums[3][3][27] , 
        \next_psums[3][3][26] , \next_psums[3][3][25] , \next_psums[3][3][24] , 
        \next_psums[3][3][23] , \next_psums[3][3][22] , \next_psums[3][3][21] , 
        \next_psums[3][3][20] , \next_psums[3][3][19] , \next_psums[3][3][18] , 
        \next_psums[3][3][17] , \next_psums[3][3][16] , \next_psums[3][3][15] , 
        \next_psums[3][3][14] , \next_psums[3][3][13] , \next_psums[3][3][12] , 
        \next_psums[3][3][11] , \next_psums[3][3][10] , \next_psums[3][3][9] , 
        \next_psums[3][3][8] , \next_psums[3][3][7] , \next_psums[3][3][6] , 
        \next_psums[3][3][5] , \next_psums[3][3][4] , \next_psums[3][3][3] , 
        \next_psums[3][3][2] , \next_psums[3][3][1] , \next_psums[3][3][0] })
         );
  accumulator_3 \genblk2[0].acc  ( .clk(clk), .nRST(nRST), .clear(acc_clear[0]), .psum({\psums[3][0][31] , \psums[3][0][30] , \psums[3][0][29] , 
        \psums[3][0][28] , \psums[3][0][27] , \psums[3][0][26] , 
        \psums[3][0][25] , \psums[3][0][24] , \psums[3][0][23] , 
        \psums[3][0][22] , \psums[3][0][21] , \psums[3][0][20] , 
        \psums[3][0][19] , \psums[3][0][18] , \psums[3][0][17] , 
        \psums[3][0][16] , \psums[3][0][15] , \psums[3][0][14] , 
        \psums[3][0][13] , \psums[3][0][12] , \psums[3][0][11] , 
        \psums[3][0][10] , \psums[3][0][9] , \psums[3][0][8] , 
        \psums[3][0][7] , \psums[3][0][6] , \psums[3][0][5] , \psums[3][0][4] , 
        \psums[3][0][3] , \psums[3][0][2] , \psums[3][0][1] , \psums[3][0][0] }), .acc_sum({\OBUF[0][31] , \OBUF[0][30] , \OBUF[0][29] , \OBUF[0][28] , 
        \OBUF[0][27] , \OBUF[0][26] , \OBUF[0][25] , \OBUF[0][24] , 
        \OBUF[0][23] , \OBUF[0][22] , \OBUF[0][21] , \OBUF[0][20] , 
        \OBUF[0][19] , \OBUF[0][18] , \OBUF[0][17] , \OBUF[0][16] , 
        \OBUF[0][15] , \OBUF[0][14] , \OBUF[0][13] , \OBUF[0][12] , 
        \OBUF[0][11] , \OBUF[0][10] , \OBUF[0][9] , \OBUF[0][8] , \OBUF[0][7] , 
        \OBUF[0][6] , \OBUF[0][5] , \OBUF[0][4] , \OBUF[0][3] , \OBUF[0][2] , 
        \OBUF[0][1] , \OBUF[0][0] }) );
  accumulator_2 \genblk2[1].acc  ( .clk(clk), .nRST(nRST), .clear(acc_clear[1]), .psum({\psums[3][1][31] , \psums[3][1][30] , \psums[3][1][29] , 
        \psums[3][1][28] , \psums[3][1][27] , \psums[3][1][26] , 
        \psums[3][1][25] , \psums[3][1][24] , \psums[3][1][23] , 
        \psums[3][1][22] , \psums[3][1][21] , \psums[3][1][20] , 
        \psums[3][1][19] , \psums[3][1][18] , \psums[3][1][17] , 
        \psums[3][1][16] , \psums[3][1][15] , \psums[3][1][14] , 
        \psums[3][1][13] , \psums[3][1][12] , \psums[3][1][11] , 
        \psums[3][1][10] , \psums[3][1][9] , \psums[3][1][8] , 
        \psums[3][1][7] , \psums[3][1][6] , \psums[3][1][5] , \psums[3][1][4] , 
        \psums[3][1][3] , \psums[3][1][2] , \psums[3][1][1] , \psums[3][1][0] }), .acc_sum({\OBUF[1][31] , \OBUF[1][30] , \OBUF[1][29] , \OBUF[1][28] , 
        \OBUF[1][27] , \OBUF[1][26] , \OBUF[1][25] , \OBUF[1][24] , 
        \OBUF[1][23] , \OBUF[1][22] , \OBUF[1][21] , \OBUF[1][20] , 
        \OBUF[1][19] , \OBUF[1][18] , \OBUF[1][17] , \OBUF[1][16] , 
        \OBUF[1][15] , \OBUF[1][14] , \OBUF[1][13] , \OBUF[1][12] , 
        \OBUF[1][11] , \OBUF[1][10] , \OBUF[1][9] , \OBUF[1][8] , \OBUF[1][7] , 
        \OBUF[1][6] , \OBUF[1][5] , \OBUF[1][4] , \OBUF[1][3] , \OBUF[1][2] , 
        \OBUF[1][1] , \OBUF[1][0] }) );
  accumulator_1 \genblk2[2].acc  ( .clk(clk), .nRST(nRST), .clear(acc_clear[2]), .psum({\psums[3][2][31] , \psums[3][2][30] , \psums[3][2][29] , 
        \psums[3][2][28] , \psums[3][2][27] , \psums[3][2][26] , 
        \psums[3][2][25] , \psums[3][2][24] , \psums[3][2][23] , 
        \psums[3][2][22] , \psums[3][2][21] , \psums[3][2][20] , 
        \psums[3][2][19] , \psums[3][2][18] , \psums[3][2][17] , 
        \psums[3][2][16] , \psums[3][2][15] , \psums[3][2][14] , 
        \psums[3][2][13] , \psums[3][2][12] , \psums[3][2][11] , 
        \psums[3][2][10] , \psums[3][2][9] , \psums[3][2][8] , 
        \psums[3][2][7] , \psums[3][2][6] , \psums[3][2][5] , \psums[3][2][4] , 
        \psums[3][2][3] , \psums[3][2][2] , \psums[3][2][1] , \psums[3][2][0] }), .acc_sum({\OBUF[2][31] , \OBUF[2][30] , \OBUF[2][29] , \OBUF[2][28] , 
        \OBUF[2][27] , \OBUF[2][26] , \OBUF[2][25] , \OBUF[2][24] , 
        \OBUF[2][23] , \OBUF[2][22] , \OBUF[2][21] , \OBUF[2][20] , 
        \OBUF[2][19] , \OBUF[2][18] , \OBUF[2][17] , \OBUF[2][16] , 
        \OBUF[2][15] , \OBUF[2][14] , \OBUF[2][13] , \OBUF[2][12] , 
        \OBUF[2][11] , \OBUF[2][10] , \OBUF[2][9] , \OBUF[2][8] , \OBUF[2][7] , 
        \OBUF[2][6] , \OBUF[2][5] , \OBUF[2][4] , \OBUF[2][3] , \OBUF[2][2] , 
        \OBUF[2][1] , \OBUF[2][0] }) );
  accumulator_0 \genblk2[3].acc  ( .clk(clk), .nRST(nRST), .clear(acc_clear[3]), .psum({\psums[3][3][31] , \psums[3][3][30] , \psums[3][3][29] , 
        \psums[3][3][28] , \psums[3][3][27] , \psums[3][3][26] , 
        \psums[3][3][25] , \psums[3][3][24] , \psums[3][3][23] , 
        \psums[3][3][22] , \psums[3][3][21] , \psums[3][3][20] , 
        \psums[3][3][19] , \psums[3][3][18] , \psums[3][3][17] , 
        \psums[3][3][16] , \psums[3][3][15] , \psums[3][3][14] , 
        \psums[3][3][13] , \psums[3][3][12] , \psums[3][3][11] , 
        \psums[3][3][10] , \psums[3][3][9] , \psums[3][3][8] , 
        \psums[3][3][7] , \psums[3][3][6] , \psums[3][3][5] , \psums[3][3][4] , 
        \psums[3][3][3] , \psums[3][3][2] , \psums[3][3][1] , \psums[3][3][0] }), .acc_sum({\OBUF[3][31] , \OBUF[3][30] , \OBUF[3][29] , \OBUF[3][28] , 
        \OBUF[3][27] , \OBUF[3][26] , \OBUF[3][25] , \OBUF[3][24] , 
        \OBUF[3][23] , \OBUF[3][22] , \OBUF[3][21] , \OBUF[3][20] , 
        \OBUF[3][19] , \OBUF[3][18] , \OBUF[3][17] , \OBUF[3][16] , 
        \OBUF[3][15] , \OBUF[3][14] , \OBUF[3][13] , \OBUF[3][12] , 
        \OBUF[3][11] , \OBUF[3][10] , \OBUF[3][9] , \OBUF[3][8] , \OBUF[3][7] , 
        \OBUF[3][6] , \OBUF[3][5] , \OBUF[3][4] , \OBUF[3][3] , \OBUF[3][2] , 
        \OBUF[3][1] , \OBUF[3][0] }) );
  TIEL U3 ( .ZN(\*Logic0* ) );
endmodule

